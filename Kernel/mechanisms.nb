(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1206400,      31053]
NotebookOptionsPosition[   1136478,      29974]
NotebookOutlinePosition[   1136873,      29990]
CellTagsIndexPosition[   1136830,      29987]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mechanisms package and sub-packages", "Title",ExpressionUUID->"130b3787-7aa9-48f9-8ced-30b05119f93a"],

Cell["\<\
version 0.8
Christian Santangelo, Physics Department, Syracuse University
Copyright 2021\
\>", "Text",ExpressionUUID->"a287b323-0ec1-4bfc-ac7b-b122cce5f6f7"],

Cell[CellGroupData[{

Cell["Package organization", "Subsubsection",ExpressionUUID->"6d3b1798-1603-4e1f-a3fb-a831a45b5512"],

Cell[TextData[{
 StyleBox["mechanisms: ",
  FontWeight->"Bold"],
 "The mechanisms main package contains functions for manipulating and using \
mechanisms."
}], "Text",ExpressionUUID->"fd552589-5b13-4cba-8060-e04008711b7b"],

Cell[TextData[{
 StyleBox["geometry ",
  FontWeight->"Bold"],
 ": Mechanism geometry subpackage."
}], "Text",ExpressionUUID->"5b61e7c9-2ff5-4e08-9046-4fe654d2bc7d"],

Cell[TextData[{
 StyleBox["rigidity",
  FontWeight->"Bold"],
 ": This subpackage contains functions for basic rigidity of mechanisms and \
some functions for linkages"
}], "Text",ExpressionUUID->"47c99494-6580-4a80-9766-1a2595a00f8d"],

Cell[TextData[{
 StyleBox["origami",
  FontWeight->"Bold"],
 ": this sub package contains functions for handling origami specifically."
}], "Text",ExpressionUUID->"5b4fb190-7420-4fe6-b9ee-0710831e0b2a"],

Cell["\<\
These packages also use the Mathematica Developer package to take advantage \
of packed arrays when possible. A C compiler is recommended but not necessary.\
\>", "Text",ExpressionUUID->"e4ef7bb6-5622-4ec5-8d97-20b894f9d806"]
}, Open  ]],

Cell[CellGroupData[{

Cell["To do list and known bug list", "Subsubsection",ExpressionUUID->"5effce6f-d2fc-4343-8138-d788d00f2d13"],

Cell[TextData[{
 "Is there a better way to do minimization with compiled functions ",
 StyleBox["and",
  FontSlant->"Italic"],
 " specified constraints? The algorithms are slow and that means fixed joints \
are poorly handled with compiled functions. Unrestrained minimization is \
still faster with compiled functions."
}], "Text",ExpressionUUID->"01e0f39a-cdd3-4398-9885-4e9122d860da"],

Cell["\<\
The function overlappingVertices[] may sometimes fail if two vertices have \
exactly the same distance apart and those distances are within tolerance.\
\>", "Text",ExpressionUUID->"7e24a6a5-4355-4ea6-b4d0-8c0c5dce255e"],

Cell["\<\
\[OpenCurlyDoubleQuote]faceStiffness\[CloseCurlyDoubleQuote] property of \
faces does not really work and cannot be extracted by cellData[] right now.\
\>", "Text",ExpressionUUID->"b0da8786-151d-4068-a6a6-bf2a39ac060a"],

Cell["\<\
There are weird errors when you try to compute the foldAngle of an edge that \
isn\[CloseCurlyQuote]t a fold.\
\>", "Text",ExpressionUUID->"a7694424-f247-427e-a125-b114ca2d333b"],

Cell["\<\
Sometimes toGraphicsComplex[] produces something that should be a polyhedron \
but cannot be Canonicalized? I applied a fix that just cleans those up and \
hopes for the best.\
\>", "Text",ExpressionUUID->"3c29e79e-c97c-45d3-a1ea-174eedb8cf96"]
}, Open  ]],

Cell[CellGroupData[{

Cell["mechanisms: internal code for handling structures", "Chapter",ExpressionUUID->"1007bea5-8919-43d5-b2b7-1d591eacbee8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", 
   RowBox[{"\"\<mechanisms`\>\"", ",", 
    RowBox[{"{", "\"\<Developer`\>\"", "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$mechanismsVersion", "=", "0.8"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$mechanismsVersionText", "=", "\"\<mechanisms version 0.8\>\""}], 
  ";"}]}], "Code",ExpressionUUID->"79322a72-1ef5-40c5-8b71-24d04e2c58a5"],

Cell[CellGroupData[{

Cell["Usage", "Section",ExpressionUUID->"86495105-a446-474d-bbe6-03bd1334054f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$mechanismsVersion", "::", "usage"}], " ", "=", " ", 
   "\"\<$mechanismsVersion returns the version number of the package.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$mechanismsVersionText", "::", "usage"}], " ", "=", " ", 
   "\"\<$mechanismsVersionText returns the version number of the package as a \
string.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[5986]:=",ExpressionUUID->"83532984-f8e5-44f9-a21e-beb9bdc10ddf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rigidBar", "::", "usage"}], "=", 
   "\"\<rigidBar[ {v1, v2} ] is a rigid bar. Use defaultData[ rigidBar ] to \
see its associated data.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"spring", "::", "usage"}], "=", 
   "\"\<spring[ {v1, v2} ] is a spring allowing you to set an arbitrary \
force. Use defaultData[ spring ] to see its associated data.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"face", "::", "usage"}], "=", 
   "\"\<face[ {v1,v2,...} ] is a face. Use defaultData[ face ] to see its \
associated data.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fold", "::", "usage"}], "=", 
   "\"\<fold[ {v1,v2} ] is a fold with torsional spring controlling its \
angle. Use defaultData[ fold ] to see its associated data.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joint", "::", "usage"}], "=", 
   "\"\<joint[v1] is a joint. Use defaultData[ joint ] to see its associated \
data.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"angleJoint", "::", "usage"}], "=", 
   "\"\<angleJoint[v1] is a torsional joint. Use defaultData[ angleJoint ] to \
see its associated data.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"freeJoint", "::", "usage"}], "=", 
   "\"\<freeJoint[v1] is a free joint ( a joint[] with \\\"pinningStiffness\\\
\" equal to 0).\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pinnedJoint", "::", "usage"}], "=", 
    "\"\<pinnedJoint[v1] is a pinned joint ( a joint[] with \
\\\"pinningStiffness\\\" equal to Infinity).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultData", "::", "usage"}], "=", 
   "\"\<defaultData[ component ] returns the default data associated with a \
component.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[5988]:=",ExpressionUUID->"6058a131-dea1-48d0-a8b1-9755094b2f70"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mechanism", "::", "usage"}], " ", "=", " ", 
    "\"\<Keyword used to report some errors.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "::", "usage"}], " ", "=", " ", 
    "\"\<framework[ { {x1, y1}, ...}, {cell1[ {i1, i2, ..} ], ... } ] returns \
a linkage in 2D with vertices at {{x1, y1}, ..} and made from the specified \
cells.\nframework[ { {x1, y1, z1}, ...}, {cell1[ {i1, i2, ..} ], ... } ] \
returns a linkage in 3D with vertices at {{x1, y1}, ..} and made from the \
specified cells.\\n\nProperties:\\n\nCell properties can be specified by \
Property[ cell1[ {i1, ...} ], {property1 -> value1, ... } ].\nProperties that \
can be specified include MeshCellStyle, MeshCellLabel, MeshCellShapeFunction. \
Options[cell] will list additional properties that can be specified.\\n\n\
Options:\\n\nframework[] takes the same options as MeshRegion[] as well as an \
option \\\"overlapPrecision\\\" which determines how close vertices need to \
be in order to be mapped onto each other.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "::", "usage"}], "=", "\n", 
    "\"\<origami[ { {x1, y1}, ...}, {cell1[ {i1, i2, ..} ], ... } ] returns \
an origami in 3D (displayed in 2D) with vertices at {{x1, y1}, ..} and made \
from the specified cells.\norigami[ { {x1, y1, z1}, ...}, {cell1[ {i1, i2, \
..} ], ... } ] returns an origami in 3D with vertices at {{x1, y1}, ..} and \
made from the specified cells.\n\nProperties:\n\nCell properties can be \
specified by Property[ cell1[ {i1, ...} ], {property1 -> value1, ... } ].\n\
Properties that can be specified include MeshCellStyle, MeshCellLabel, \
MeshCellShapeFunction. Options[cell] will list additional properties that can \
be specified.\n\nOptions:\n\norigami[] takes the same options as MeshRegion[] \
as well as an option \\\"overlapPrecision\\\" which determines how close \
vertices need to be in order to be mapped onto each other.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismQ", "::", "usage"}], "=", 
   "\"\<mechanismQ[ m ] returns True if m is a mechanism.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[5997]:=",ExpressionUUID->"91875964-7201-4edd-b967-73869fbe7944"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"vertexPosition", "::", "usage"}], "=", 
   "\"\<vertexPosition[v, c] represents the position of vertex v along a \
particular component d, which is one of \\\"x\\\", \\\"y\\\", or \\\"z\\\" or \
All[d] where d is the dimension.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"vertexPosition", ",", 
    RowBox[{"{", 
     RowBox[{"NHoldAll", ",", "Constant"}], "}"}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vertexDisplacement", "::", "usage"}], "=", 
   "\"\<vertexDisplacement[v, c] represents the displacement of vertex v \
along a particular component d, which is one of \\\"x\\\", \\\"y\\\", or \
\\\"z\\\" or All[d] where d is the dimension.\>\""}], ";"}], "\n", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"vertexDisplacement", ",", 
   RowBox[{"{", 
    RowBox[{"NHoldAll", ",", "Constant"}], "}"}]}], "]"}]}], "Code",
 CellLabel->
  "In[6001]:=",ExpressionUUID->"7445fe50-3c2c-4866-8fe2-7eea17dc51c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"addLabel", "::", "usage"}], "=", 
   "\"\<addLabel[ m, {vertex1 -> label1, ...} ] adds the requested labels to \
the vertices. \>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"removeLabel", "::", "usage"}], "=", 
   "\"\<removeLabel[ m , pattern ] removes labels where pattern is any \
pattern of the form label -> vertex\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mergeLabel", "::", "usage"}], "=", 
    "\"\<mergeLabel[ m ] merges the labels and keeps the most recent \
one.\>\""}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"cell", " ", "modifiers"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"selectCells", "::", "usage"}], "=", "\n", 
    "\"\<selectCells[ m, pattern ] selects a sub-mechanism with cell \
specification matching pattern.\nselectCells[m, pattern, data, f] selects a \
sub-mechanism with cells matching pattern and f evaluating True when applied \
to the data. Use dataForm[] to find data that is available for a given \
component.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deleteCells", "::", "usage"}], "=", 
    "\"\<deleteCells[ m, pattern ] deletes a sub-mechanism with cell \
specification matching pattern.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"addCells", "::", "usage"}], "=", 
    "\"\<addCells[ m, {cell1, cell2, ... } ] adds cells to a \
mechanism.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"highlightCells", "::", "usage"}], "=", 
    "\"\<highlightCells[m, pattern -> display properties] changes the display \
properties of cells that match a pattern.\nhighlightCells[m, head, \
{properties1, ...} ] applies a list of properties to each component of type \
head.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"changeCellData", "::", "usage"}], "=", 
    "\"\<changeCellData[m, pattern, {data1 -> newData,...}] changes the \
specified data on any cells that match a pattern.\nchangeCellData[m, head, \
datatype, data ] replaces the data of type datatype on components of type \
head with the data.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"splitEdge", "::", "usage"}], "=", 
    "\"\<splitEdge[ m, edge, label -> position ] adds a vertex to an edge and \
places the vertex at position with a label.\>\""}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"vertex", " ", "modifiers"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"placeVertices", "::", "usage"}], "=", 
    "\"\<placeVertices[m, {v1 -> new position 1, ...} ] moves vertices to new \
positions.\nplaceVertices[m, { pos1, pos2, ... } ] replaces all vertex \
positions by a list of new positions.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displaceVertices", "::", "usage"}], "=", 
    "\"\<displaceVertices[m, {v1 -> displacement 1, ...} ] displaces vertices \
by a displacement.\ndisplaceVertices[m, { disp1, disp2, ... } ] displaces all \
vertices by a list of displacements.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deleteVertices", "::", "usage"}], "=", 
    "\"\<deleteVertices[ m, {v1, ...} ] deletes a list of vertices and all \
cells associated with those vertices.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mapCells", "::", "usage"}], "=", 
    "\"\<mapCells[m, f] applies a map f to a mechanism.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"addVertex", "::", "usage"}], "=", 
    "\"\<addVertex[m, face, label -> position] adds a vertex to a face at a \
specified position.\nThe new vertex does not have to be on the face.\>\""}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"mechanism", " ", "modifiers"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinMechanism", "::", "usage"}], "=", 
   "\"\<joinMechanism[ m1, m2, ... ] joins a list of mechanisms of the same \
type together.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6005]:=",ExpressionUUID->"1541dce7-e5b5-40a8-8bd4-290f6eff1d3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"constrainedComponents", "::", "usage"}], "=", 
    "\"\<constrainedComponents[m] returns the constrained components of a \
mechanism.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentData", "::", "usage"}], " ", "=", " ", 
   "\"\<componentData[ m, data, pattern ]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"matchFromData", "::", "usage"}], " ", "=", " ", 
   "\"\<matchFromData[ m, data -> patt ] returns all components whose data \
matches the pattern.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"selectFromData", "::", "usage"}], " ", "=", " ", 
    "\"\<selectFromData[ m, data, f ] returns all components such that f \
applied to specified data returns True.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mechanismPositions", "::", "usage"}], "=", "\n", 
    "\"\<mechanismPositions[ \
\!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\"Italic\\\"]\) ] returns the \
coordinates of the vertices of \!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\
\"Italic\\\"]\).\nmechanismPositions[ \
\!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\"Italic\\\"]\) -> \
\!\(\*StyleBox[\\\"positions\\\",FontSlant->\\\"Italic\\\"]\) ] returns a new \
mechanism with coordinates given by \
\!\(\*StyleBox[\\\"positions\\\",FontSlant->\\\"Italic\\\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismComponents", "::", "usage"}], "=", 
   "\"\<mechanismComponents[ m ] lists all mechanism components in a \
mechanism m.\nmechanismComponents[ m, pattern ] lists mechanism components in \
a mechanism m that match a pattern.\nmechanismComponents[ m, pattern -> { \
dataType1 -> data1, ...} ] returns a mechanism in which components matching \
pattern have had their data replaced.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6020]:=",ExpressionUUID->"9273de87-effd-4686-9b2e-608fcb430619"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tesselateMechanism", "::", "usage"}], "=", "\n", 
   "\"\<tesselateMechanism[mechanism, primitive vector, n1 ], \
tesselateMechanism[mechanism, {vector 1, vector 2}, {n1, n2}],  \
tesselateMechanism[mechanism, {vector 1, vector 2, vector 3}, {n1, n2, n3}] \
tesselates a mechanism using a set of 2D or 3D primitive vectors as an n1, n1 \
x n2 or n1 x n2 x n3 celled mechanism.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[6026]:=",ExpressionUUID->"186f7969-7d96-47c8-96e9-fa6761c66af2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"meshCells", "::", "usage"}], "=", 
   "\"\<meshCells[ m ] returns the mesh cells producing a particular \
mechanism.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[6027]:=",ExpressionUUID->"1e4167c3-01ad-404a-90d1-cf374df1ec7c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"listFaces", "::", "usage"}], "=", 
   "\"\<listFaces[ m ] returns a list of faces in the mechanism.\nlistFaces[ \
m , {face1, face2, ...} ] returns an index with the location the specific \
face would appear in a list of all faces.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"listEdges", "::", "usage"}], "=", 
   "\"\<listEdges[ m ] returns a list of edges in the mechanism.\nlistEdges[ \
m , {edge1, edge2, ...} ] returns an index with the location the specific \
edge would appear in a list of all edges.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"listVertices", "::", "usage"}], "=", 
   "\"\<listVertices[ m ] returns a list of vertices in the mechanism.\>\""}],
   ";"}]}], "Code",
 CellLabel->
  "In[6028]:=",ExpressionUUID->"e4d10adb-f929-4d10-82bc-4b12de09613d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"componentDisplayStyle", "::", "usage"}], "=", 
   "\"\<componentDisplayStyle[ s ] list the style directives for a particular \
component.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[6031]:=",ExpressionUUID->"8a5b3047-fa4b-4ede-b897-9e13bbea5c78"]
}, Closed]],

Cell[CellGroupData[{

Cell["global data and patterns", "Section",ExpressionUUID->"cfa1c0f4-94af-49a0-98cd-e435294e26f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellLabel->
  "In[6032]:=",ExpressionUUID->"06fc029e-a0bb-4bdb-9997-a62c8c544d33"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$meshRegionProperties", "=", 
    RowBox[{"{", 
     RowBox[{
     "MeshCellStyle", ",", "MeshCellLabel", ",", "MeshCellShapeFunction"}], 
     "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPattern", " ", "=", " ", 
    RowBox[{"_framework", "|", "_origami"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"coordinatePattern2D", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"_", ",", " ", "_"}], "}"}], ".."}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coordinatePattern3D", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"_", ",", " ", "_", ",", " ", "_"}], "}"}], ".."}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coordinatePattern", " ", "=", " ", 
    RowBox[{"coordinatePattern2D", " ", "|", " ", "coordinatePattern3D"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"mechanismQ", "[", " ", "mechanismPattern", " ", "]"}], ":=", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"mechanismQ", "[", "_", "]"}], ":=", "False"}]}], "Code",
 CellLabel->
  "In[6033]:=",ExpressionUUID->"dc607867-c94e-46c7-a9ad-2c0f7a10f245"],

Cell[CellGroupData[{

Cell["defaultData[], componentDisplayStyle[]", "Subsection",ExpressionUUID->"5cf74a85-b4c1-4085-b474-db69e3569d24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "default", " ", "data", " ", "in", " ", "all", " ", "cell", " ", "types"}],
    " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "rigidBar", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<length\>\"", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
       RowBox[{"\"\<stiffness\>\"", " ", "\[Rule]", " ", "Infinity"}]}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "spring", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<length\>\"", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
       RowBox[{"\"\<stiffness\>\"", " ", "\[Rule]", " ", "Infinity"}], ",", 
       " ", 
       RowBox[{"\"\<strain\>\"", " ", "\[Rule]", " ", "\"\<linear\>\""}]}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "face", "]"}], " ", "=", " ", 
     RowBox[{"{", " ", 
      RowBox[{"\"\<faceStiffness\>\"", " ", "\[Rule]", " ", "Infinity"}], " ",
       "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "fold", "]"}], " ", "=", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
       "\"\<torsionalStiffness\>\"", " ", "\[Rule]", " ", "Infinity"}], ",", 
       " ", 
       RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "Automatic"}]}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "joint", "]"}], " ", "=", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"\"\<pinningStiffness\>\"", " ", "\[Rule]", " ", "Infinity"}], 
       ",", " ", 
       RowBox[{"\"\<constraint\>\"", " ", "\[Rule]", " ", "Automatic"}]}], 
      " ", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "angleJoint", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<angleStiffness\>\"", " ", "\[Rule]", " ", "Infinity"}], 
       ",", " ", 
       RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "Automatic"}]}], " ", 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "_", "]"}], " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}]}]}]], "Code",
 CellLabel->
  "In[6040]:=",ExpressionUUID->"f5ce23c9-dd88-49e3-8ce9-d15ea2f4a0f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", "\t", 
   RowBox[{
   "This", " ", "is", " ", "the", " ", "default", " ", "style", " ", 
    "information", " ", "that", " ", "gets", " ", "stored", " ", "in", " ", 
    "the", " ", "mechanism", " ", 
    RowBox[{"structure", ".", "\n", "\t", "see"}], " ", 
    RowBox[{"addMeshRegion", "[", "]"}], " ", "or", " ", 
    RowBox[{"mechanisms`graphics`defaultGraphicsPrimitive", "[", "]"}], " ", 
    "to", " ", "see", " ", "how", " ", "Automatic", " ", "will", " ", "be", 
    " ", 
    RowBox[{"interpreted", "."}]}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"componentDisplayStyle", "[", "rigidBar", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<style\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", " ", "Black", 
          ",", " ", 
          RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}], ",", " ", 
       RowBox[{"\"\<label\>\"", " ", "\[Rule]", " ", "None"}], ",", " ", 
       RowBox[{"\"\<shape\>\"", " ", "\[Rule]", " ", "Automatic"}]}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"componentDisplayStyle", "[", "spring", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<style\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", " ", 
          RowBox[{"Thickness", "[", "0.007", "]"}]}], "}"}]}], ",", 
       RowBox[{"\"\<label\>\"", " ", "\[Rule]", " ", "None"}], ",", " ", 
       RowBox[{"\"\<shape\>\"", " ", "\[Rule]", " ", "Automatic"}]}], " ", 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"componentDisplayStyle", "[", "joint", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<style\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Black", ",", " ", 
          RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", " ", 
       RowBox[{"\"\<label\>\"", " ", "\[Rule]", " ", "None"}], ",", " ", 
       RowBox[{"\"\<shape\>\"", " ", "\[Rule]", " ", "Automatic"}]}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"componentDisplayStyle", "[", "face", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<style\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"GrayLevel", "[", "0.85", "]"}], "}"}]}], ",", " ", 
       RowBox[{"\"\<label\>\"", "\[Rule]", "None"}], ",", " ", 
       RowBox[{"\"\<shape\>\"", " ", "\[Rule]", " ", "Automatic"}]}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"componentDisplayStyle", "[", "Polygon", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<style\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"{", 
           RowBox[{"0.68", ",", "0.77", ",", "0.92"}], "}"}], "]"}], "}"}]}], 
       ",", " ", 
       RowBox[{"\"\<label\>\"", "\[Rule]", "None"}], ",", " ", 
       RowBox[{"\"\<shape\>\"", " ", "\[Rule]", " ", "Automatic"}]}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"componentDisplayStyle", "[", "_", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<style\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", "}"}]}], ",", " ", 
       RowBox[{"\"\<label\>\"", "\[Rule]", "None"}], ",", " ", 
       RowBox[{"\"\<shape\>\"", " ", "\[Rule]", " ", "Automatic"}]}], "}"}]}],
     ";"}]}]}]], "Code",
 CellLabel->
  "In[6047]:=",ExpressionUUID->"e1f4995f-8f7d-4b00-976f-472aab646d03"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["functions to manipulate cells", "Section",ExpressionUUID->"32abf7e8-c1c3-4c59-b203-2f531969c22b"],

Cell[CellGroupData[{

Cell["generic patterns", "Subsection",ExpressionUUID->"6a6ee04e-2c60-4f5a-b37a-5e10a53bec4e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"labelPattern", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Rule", "[", 
      RowBox[{"_", ",", " ", "_Integer"}], "]"}], "..."}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"$mechanismComponents", "=", 
   RowBox[{"{", 
    RowBox[{
    "rigidBar", ",", "spring", ",", "fold", ",", "face", ",", "joint", ",", 
     "angleJoint"}], "}"}]}], ";"}]}], "Code",
 CellLabel->
  "In[6053]:=",ExpressionUUID->"bdd8b560-ee02-4e7f-8bd0-e33588051856"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
compressCells[], packComponentCells[], unpackComponentCells[], \
compressDisplayCells[]\
\>", "Subsection",ExpressionUUID->"3a62cea0-f038-4adb-a593-ac467d6f5691"],

Cell["\<\
Functions for unpacking cells and for packing and compressing cells.

Unpacked cells have the format { cellType , indices,  data, display rules } \
and each cell is individually stored.\
\>", "Text",ExpressionUUID->"8d04be23-411e-432c-bfe4-e1647b5aaadf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unpackedCellPattern", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"_Symbol", ",", " ", "_", ",", " ", "_", ",", " ", "_"}], " ", 
    "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[6055]:=",ExpressionUUID->"022feccc-d73c-4d71-afbc-a207e971c81e"],

Cell["\<\
Packed cells have the form {cellType[ {indices1, indices2, ...},  {data type \
1, data type 2,...}  , {cell1 display, cell2 display,...} ] ... } with all \
cells of a certain type stored together.\
\>", "Text",ExpressionUUID->"75640f95-d395-4c2e-81a3-afdc486d3894"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "lists", " ", "of", " ", "cells", " ", "in", " ", "either", " ", "packed", 
    " ", "or", " ", "unpacked", " ", "form"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"packedCellPattern", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"_Symbol", "[", " ", 
       RowBox[{"_", " ", ",", " ", "_List", ",", " ", "_List"}], " ", "]"}], 
      "..."}], "}"}]}], ";"}]}]], "Code",
 CellLabel->
  "In[6056]:=",ExpressionUUID->"e944af2f-9d8c-4fa3-bcad-637d078b0c80"],

Cell["\<\
The data is grouped together into lists of each data type stored in the \
following order.\
\>", "Text",ExpressionUUID->"f15bb337-74f4-455e-b915-8ac882564f6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "data", " ", "that", " ", "will", " ", "be", " ", "stored", " ", "for", 
    " ", "each", " ", "of", " ", "these", " ", "components", " ", "and", " ", 
    "in", " ", "what", " ", "order"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"dataForm", "[", "rigidBar", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"\"\<length\>\"", ",", "\"\<stiffness\>\""}], "}"}]}], "\n", 
   RowBox[{
    RowBox[{"dataForm", "[", "spring", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<length\>\"", ",", "\"\<stiffness\>\"", ",", "\"\<strain\>\""}], 
     "}"}]}], "\n", 
   RowBox[{
    RowBox[{"dataForm", "[", "face", "]"}], ":=", 
    RowBox[{"{", "\"\<faceStiffness\>\"", "}"}]}], "\n", 
   RowBox[{
    RowBox[{"dataForm", "[", "fold", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"\"\<torsionalStiffness\>\"", ",", "\"\<angle\>\""}], "}"}]}], 
   "\n", 
   RowBox[{
    RowBox[{"dataForm", "[", "joint", "]"}], ":=", 
    RowBox[{"{", " ", 
     RowBox[{"\"\<pinningStiffness\>\"", ",", " ", "\"\<constraint\>\""}], 
     " ", "}"}]}], "\n", 
   RowBox[{
    RowBox[{"dataForm", "[", "angleJoint", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<angleStiffness\>\"", ",", " ", "\"\<angle\>\""}], " ", 
     "}"}]}], "\n", 
   RowBox[{
    RowBox[{"dataForm", "[", "_", "]"}], ":=", 
    RowBox[{"{", "}"}]}]}]}]], "Code",
 CellLabel->
  "In[6057]:=",ExpressionUUID->"27abfe07-3333-4d75-99de-2470311256dd"],

Cell[CellGroupData[{

Cell["packComponentCells[]", "Subsubsection",ExpressionUUID->"fda6f661-73bc-46fe-be37-a4b3cb886af7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"packComponentCells", "[", " ", 
    RowBox[{"data", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"unpackedCellPattern", "..."}], "}"}]}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{
     RowBox[{"deleteDuplicateCells", "[", 
      RowBox[{"packGroupedComponentCells", "[", "#", "]"}], "]"}], "&"}], " ",
     "/@", " ", 
    RowBox[{"GatherBy", "[", " ", 
     RowBox[{"data", ",", " ", "First"}], " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"packGroupedComponentCells", "[", " ", 
   RowBox[{"data", " ", ":", " ", 
    RowBox[{"{", 
     RowBox[{"unpackedCellPattern", "..."}], "}"}]}], " ", "]"}], " ", ":=", 
  "\n", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
     "heads", ",", " ", "indices", ",", " ", "groupedData", ",", " ", 
      "unpackedData", ",", " ", "displayData"}], " ", "}"}], ",", "\n", "\t", 
    
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "heads", ",", " ", "indices", ",", " ", "groupedData", ",", " ", 
        "displayData"}], "}"}], " ", "=", " ", 
      RowBox[{"Transpose", "[", " ", "data", " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"heads", " ", "=", " ", 
      RowBox[{"First", "[", "heads", "]"}]}], ";", "\n", "\t", 
     RowBox[{"unpackedData", " ", "=", " ", 
      RowBox[{"ReplaceAll", "[", " ", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", " ", 
         RowBox[{
          RowBox[{"dataForm", "[", "heads", "]"}], " ", ",", "  ", 
          "groupedData"}], " ", "]"}], " ", ",", " ", 
        RowBox[{"defaultData", "[", "heads", "]"}]}], " ", "]"}]}], ";", "\n",
      "\n", "\t", 
     RowBox[{"compressCells", "[", " ", 
      RowBox[{"heads", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"ToPackedArray", "[", " ", "indices", " ", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"ToPackedArray", " ", "/@", " ", 
         RowBox[{"Transpose", "[", " ", "unpackedData", " ", "]"}]}], ",", 
        "\n", "\t\t", 
        RowBox[{"compressDisplayCells", "[", 
         RowBox[{"heads", ",", " ", "displayData"}], "]"}]}], "\n", "\t", 
       "]"}], "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6064]:=",ExpressionUUID->"ebd339af-0b19-4dba-9be4-fdea3199aaf7"]
}, Closed]],

Cell[CellGroupData[{

Cell["unpackComponentCells[]", "Subsubsection",ExpressionUUID->"aba4fc63-3ce6-43e8-8941-92720f4fb43e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"unpackComponentCells", "[", " ", 
   RowBox[{"{", "}"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unpackComponentCells", "[", " ", 
    RowBox[{"cells", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_Symbol", "[", 
        RowBox[{"_", ",", "_", ",", "_"}], "]"}], ".."}], "}"}]}], " ", "]"}],
    " ", ":=", " ", 
   RowBox[{"Flatten", "[", " ", 
    RowBox[{
     RowBox[{"unpackComponentCells", " ", "/@", " ", "cells"}], ",", " ", 
     "1"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"unpackComponentCells", "[", " ", 
   RowBox[{"head_Symbol", "[", " ", 
    RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", "]"}],
    " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Transpose", "[", " ", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"ConstantArray", "[", " ", 
      RowBox[{"head", ",", " ", 
       RowBox[{"Length", "[", "indices", "]"}]}], " ", "]"}], ",", " ", "\n", 
     "\t\t", "indices", " ", ",", " ", "\n", "\t\t", 
     RowBox[{"Thread", " ", "/@", " ", 
      RowBox[{"Thread", "[", " ", 
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"dataForm", "[", "head", "]"}], ",", " ", 
          RowBox[{"Length", "[", "indices", "]"}]}], " ", "]"}], " ", 
        "\[Rule]", " ", 
        RowBox[{"Transpose", "[", "data", "]"}]}], " ", "]"}]}], ",", " ", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"$meshRegionProperties", " ", "\[Rule]", " ", "#"}], " ", 
        "]"}], "&"}], " ", "/@", " ", "display"}]}], "\n", "\t", "}"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6066]:=",ExpressionUUID->"e60888f0-96b1-4856-a58b-14732cbca0c6"]
}, Closed]],

Cell[CellGroupData[{

Cell["compressCells[]", "Subsubsection",ExpressionUUID->"ad11b15b-e272-4c4c-84c2-283593cd31f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", "\t", 
   RowBox[{
    RowBox[{"compressCells", "[", "]"}], " ", "takes", " ", "a", " ", "set", 
    " ", "of", " ", "cells", " ", "of", " ", "the", " ", "form", " ", 
    RowBox[{"cellType", "[", " ", 
     RowBox[{"indices", ",", " ", "data", ",", " ", 
      RowBox[{"display", " ", "properties"}]}], " ", "]"}], " ", "and", " ", 
    "puts", " ", "the", " ", "data", " ", "into", " ", "a", " ", "more", " ", 
    "compact", " ", 
    RowBox[{"form", "."}]}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"compressCells", "[", " ", 
     RowBox[{"h_", "[", " ", 
      RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", 
      "]"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"h", "[", " ", "\n", "\t", 
     RowBox[{
      RowBox[{"ToPackedArray", "[", " ", "indices", " ", "]"}], ",", " ", 
      "\n", "\t", 
      RowBox[{"compressCellData", "[", " ", 
       RowBox[{"h", ",", " ", "indices", ",", " ", "data"}], " ", "]"}], ",", 
      "\n", "\t", "display"}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "how", " ", "to", " ", "store", " ", "data", " ", "in", " ", "a", " ", 
     "mechanism", " ", "in", " ", "a", " ", "compact", " ", "way"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"compressCellData", "[", " ", 
     RowBox[{"rigidBar", ",", " ", "indices_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"length_", ",", " ", "stiffness_"}], "}"}]}], " ", "]"}], " ", 
    ":=", "\n", "\t", 
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"SparseArray", "[", " ", 
       RowBox[{
        RowBox[{"length", " ", "/.", " ", 
         RowBox[{"Automatic", " ", "\[Rule]", " ", "\"\<Automatic\>\""}]}], 
        ",", " ", 
        RowBox[{"Length", "[", "indices", "]"}], ",", " ", 
        "\"\<Automatic\>\""}], " ", "]"}], ",", "\n", "\t\t", 
      RowBox[{"SparseArray", "[", " ", 
       RowBox[{"stiffness", ",", " ", 
        RowBox[{"Length", "[", "indices", "]"}], ",", " ", "Infinity"}], " ", 
       "]"}]}], "\n", "\t", "}"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"compressCellData", "[", " ", 
     RowBox[{"spring", ",", " ", "indices_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"length_", ",", " ", "stiffness_", ",", " ", "strain_"}], 
       "}"}]}], " ", "]"}], " ", ":=", "\n", "\t", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"SparseArray", "[", " ", 
       RowBox[{
        RowBox[{"length", " ", "/.", " ", 
         RowBox[{"Automatic", " ", "\[Rule]", " ", "\"\<Automatic\>\""}]}], 
        ",", " ", 
        RowBox[{"Length", "[", "indices", "]"}], ",", " ", 
        "\"\<Automatic\>\""}], " ", "]"}], ",", "\n", "\t", 
      RowBox[{"SparseArray", "[", " ", 
       RowBox[{"stiffness", ",", " ", 
        RowBox[{"Length", "[", "indices", "]"}], ",", " ", "Infinity"}], " ", 
       "]"}], ",", "\n", "\t", 
      RowBox[{"SparseArray", "[", " ", 
       RowBox[{"strain", ",", " ", 
        RowBox[{"Length", "[", "indices", "]"}], ",", " ", "\"\<linear\>\""}],
        " ", "]"}]}], "\n", "\t", "}"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"compressCellData", "[", " ", 
     RowBox[{"fold", ",", " ", "indices_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"torsionalStiffness_", ",", " ", "angle_"}], "}"}]}], " ", 
     "]"}], " ", ":=", "\n", "\t", 
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"SparseArray", "[", " ", 
       RowBox[{"torsionalStiffness", ",", " ", 
        RowBox[{"Length", "[", "indices", "]"}], ",", " ", "Infinity"}], " ", 
       "]"}], ",", "\n", "\t\t", 
      RowBox[{"SparseArray", "[", " ", 
       RowBox[{
        RowBox[{"angle", " ", "/.", " ", 
         RowBox[{"Automatic", " ", "\[Rule]", " ", "\"\<Automatic\>\""}]}], 
        ",", " ", 
        RowBox[{"Length", "[", "indices", "]"}], ",", " ", 
        "\"\<Automatic\>\""}], " ", "]"}]}], "\n", "\t", "}"}]}], "\n", "\n", 
   
   RowBox[{
    RowBox[{"compressCellData", "[", " ", 
     RowBox[{"face", " ", ",", " ", "indices_", ",", " ", 
      RowBox[{"{", "stiffness_", "}"}]}], " ", "]"}], " ", ":=", "\n", "\t", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{"SparseArray", "[", " ", 
      RowBox[{"stiffness", " ", ",", " ", 
       RowBox[{"Length", "[", "indices", "]"}], ",", " ", "Infinity"}], " ", 
      "]"}], "\n", "\t", "}"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"compressCellData", "[", " ", 
     RowBox[{"joint", " ", ",", " ", "indices_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"stiffness_", ",", " ", "constraint_"}], "}"}]}], " ", "]"}], 
    " ", ":=", "\n", "\t", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"SparseArray", "[", " ", 
       RowBox[{"stiffness", " ", ",", " ", 
        RowBox[{"Length", "[", "indices", "]"}], ",", " ", "Infinity"}], " ", 
       "]"}], ",", "\n", "\t", 
      RowBox[{"SparseArray", "[", " ", 
       RowBox[{
        RowBox[{"constraint", " ", "/.", " ", 
         RowBox[{"Automatic", " ", "\[Rule]", " ", "\"\<Automatic\>\""}]}], 
        ",", " ", 
        RowBox[{"Length", "[", "indices", "]"}], ",", " ", 
        "\"\<Automatic\>\""}], " ", "]"}]}], "\n", "\t", "}"}]}], "\n", "\n", 
   
   RowBox[{
    RowBox[{"compressCellData", "[", " ", 
     RowBox[{"angleJoint", " ", ",", " ", "indices_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"stiffness_", ",", " ", "angle_"}], "}"}]}], " ", "]"}], " ", ":=",
     "\n", "\t", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"SparseArray", "[", " ", 
       RowBox[{"stiffness", " ", ",", " ", 
        RowBox[{"Length", "[", "indices", "]"}], ",", " ", "Infinity"}], " ", 
       "]"}], ",", "\n", "\t", 
      RowBox[{"SparseArray", "[", " ", 
       RowBox[{
        RowBox[{"angle", " ", "/.", " ", 
         RowBox[{"Automatic", " ", "\[Rule]", " ", "\"\<Automatic\>\""}]}], 
        ",", " ", 
        RowBox[{"Length", "[", "indices", "]"}], ",", " ", 
        "\"\<Automatic\>\""}], " ", "]"}]}], "\n", "\t", "}"}]}], "\n", "\n", 
   
   RowBox[{
    RowBox[{"compressCellData", "[", " ", 
     RowBox[{"_", ",", " ", "_", ",", " ", "data_"}], " ", "]"}], " ", ":=", 
    " ", "data"}]}]}]], "Code",
 CellLabel->
  "In[6069]:=",ExpressionUUID->"f3037e78-242f-4ef4-8cf8-1e4845b0d8f1"]
}, Closed]],

Cell[CellGroupData[{

Cell["compressDisplayCells[]", "Subsubsection",ExpressionUUID->"fe9593fb-9d46-4790-81fa-64eb8f36438e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$displayProperties", " ", "=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{"$meshRegionProperties", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
       "\"\<style\>\"", ",", " ", "\"\<shape\>\"", ",", " ", 
        "\"\<label\>\""}], " ", "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"blankMeshRules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MeshCellStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", "}"}]}], ",", " ", 
     RowBox[{"MeshCellLabel", " ", "\[Rule]", " ", 
      RowBox[{"Missing", "[", "]"}]}], ",", " ", 
     RowBox[{"MeshCellShapeFunction", " ", "\[Rule]", " ", 
      RowBox[{"Missing", "[", "]"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"blankDisplayRules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<style\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", "}"}]}], ",", " ", 
     RowBox[{"\"\<label\>\"", " ", "\[Rule]", " ", 
      RowBox[{"Missing", "[", "]"}]}], ",", " ", 
     RowBox[{"\"\<shape\>\"", " ", "\[Rule]", " ", 
      RowBox[{"Missing", "[", "]"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cleanupDisplayFunction", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "}"}], "]"}], ",", " ", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
      RowBox[{"#", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}]}], ";"}]}], "Code",
 CellLabel->
  "In[6077]:=",ExpressionUUID->"d0d9de9b-10e4-483e-9ac8-37c0d9460b6a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"compressDisplayCells", "[", " ", 
    RowBox[{"head_", ",", " ", 
     RowBox[{"ruleList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "___Rule", "}"}], "..."}], "}"}]}]}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{
    RowBox[{
     RowBox[{"compressDisplayCell", "[", 
      RowBox[{"head", ",", "#"}], "]"}], "&"}], " ", "/@", " ", 
    "ruleList"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"compressDisplayCell", "[", " ", 
   RowBox[{"head_", ",", " ", 
    RowBox[{"ruleSpec", " ", ":", " ", 
     RowBox[{"_Rule", "|", 
      RowBox[{"{", "___Rule", "}"}]}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"meshDisplayData", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "MeshCellStyle", "}"}], ",", " ", "MeshCellLabel", 
           ",", " ", "MeshCellShapeFunction"}], "}"}], " ", "/.", " ", 
         "ruleSpec"}], " ", "/.", " ", "blankMeshRules"}]}], ",", "\n", "\t", 
      
      RowBox[{"cellDisplayData", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\"\<style\>\"", "}"}], ",", "\"\<label\>\"", ",", 
           "\"\<shape\>\""}], "}"}], " ", "/.", " ", "ruleSpec"}], " ", "/.", 
        " ", "blankDisplayRules"}]}], ",", "\n", "\t", 
      RowBox[{"defaultDisplayData", " ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "\"\<style\>\"", "}"}], ",", "\"\<label\>\"", ",", 
          "\"\<shape\>\""}], "}"}], " ", "/.", " ", 
        RowBox[{"componentDisplayStyle", "[", "head", "]"}]}]}]}], "\n", 
     "}"}], ",", "\n", "\t", 
    RowBox[{"joinDisplayCells", "[", " ", 
     RowBox[{"cleanupDisplayFunction", " ", "/@", " ", 
      RowBox[{"{", 
       RowBox[{
       "meshDisplayData", ",", " ", "defaultDisplayData", ",", " ", 
        "cellDisplayData"}], "}"}]}], " ", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6081]:=",ExpressionUUID->"196af4ee-3c4d-4a8c-aea6-a3666286ecf2"]
}, Closed]],

Cell[CellGroupData[{

Cell["joinDisplayCells[]", "Subsubsection",ExpressionUUID->"e4a12696-50f0-4df8-96ad-7441d5db9633"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"joinDisplayCells", "[", " ", "data_", " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"test", " ", "=", " ", 
       RowBox[{"Transpose", " ", "@", " ", "data"}]}], " ", "}"}], ",", "\n", 
     "\t", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Last", " ", "/@", " ", 
        RowBox[{"GatherBy", "[", " ", 
         RowBox[{
          RowBox[{"Flatten", " ", "@", " ", 
           RowBox[{"test", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], " ", ",", " ", "directiveQ"}], 
         "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"Last", " ", "@", " ", 
        RowBox[{"DeleteMissing", "[", 
         RowBox[{"test", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"Last", " ", "@", " ", 
        RowBox[{"DeleteMissing", "[", 
         RowBox[{"test", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], "\n", "\t", "}"}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"directiveQ", "[", " ", 
   RowBox[{"_", "?", "ColorQ"}], " ", "]"}], " ", ":=", " ", 
  "\"\<color\>\""}], "\n", 
 RowBox[{
  RowBox[{"directiveQ", "[", " ", "x_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"Head", "[", "x", "]"}]}]}], "Code",
 CellLabel->
  "In[6083]:=",ExpressionUUID->"465be40e-9f76-4b1b-9734-e762bad5ddca"]
}, Closed]],

Cell[CellGroupData[{

Cell["expandDisplayCells[] - not used", "Subsubsection",ExpressionUUID->"5c626c82-ded5-48ce-a2bb-b2f39430000f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"expandDisplayCell", "[", " ", 
   RowBox[{"{", 
    RowBox[{"style_", ",", " ", "label_", ",", " ", "shape_"}], "}"}], " ", 
   "]"}], " ", ":=", " ", "\n", "\t", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{
    RowBox[{"MeshCellStyle", " ", "\[Rule]", " ", "style"}], ",", "\n", "\t", 
    
    RowBox[{"MeshCellLabel", " ", "\[Rule]", " ", "label"}], ",", "\n", "\t", 
    
    RowBox[{"MeshCellShapeFunction", " ", "\[Rule]", " ", "shape"}]}], "\n", 
   "\t", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"expandDisplayCells", "[", " ", "displayDataList_", " ", "]"}], " ",
   ":=", " ", 
  RowBox[{"expandDisplayCell", " ", "/@", " ", "displayDataList"}]}]}], "Code",\

 CellLabel->
  "In[6086]:=",ExpressionUUID->"41987400-ea7c-4197-8020-a38f577992f0"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["componentPattern[], cellPattern[]", "Subsection",ExpressionUUID->"732c18fc-515b-4842-b168-c8f2ecbbfe56"],

Cell["\<\
Functions to take user specified cell patterns and expand them properly to \
catch every instance.\
\>", "Text",ExpressionUUID->"ce7524de-e1a1-4a7a-bd48-392ed7009d2d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"componentPattern", "[", "x_Blank", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "_", ",", " ", "_"}], " ", "}"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "x", "]"}], " ", "\[Equal]", " ", "0"}]}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"componentPattern", "[", "x_Blank", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "_", ",", "_"}], "}"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"componentPattern", "[", "r_Alternatives", "]"}], " ", ":=", " ", 
  RowBox[{"Map", "[", " ", 
   RowBox[{"componentPattern", " ", ",", "  ", "r"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"componentPattern", "[", 
   RowBox[{"h_", "[", "r_Alternatives", "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"componentPattern", "[", " ", 
   RowBox[{"Map", "[", " ", 
    RowBox[{"h", " ", ",", " ", "r"}], " ", "]"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"componentPattern", "[", 
   RowBox[{"h_", "[", "n_List", "]"}], "]"}], ":=", " ", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"numbers", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "n", "]"}], "]"}]}], " ", "}"}], " ", ",", " ", 
    
    RowBox[{"{", 
     RowBox[{"h", " ", ",", " ", 
      RowBox[{"Alternatives", " ", "@@", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RotateRight", "[", 
           RowBox[{"n", ",", "#"}], "]"}], "&"}], " ", ",", " ", "numbers"}], 
        " ", "]"}]}], ",", " ", "_"}], " ", "}"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"componentPattern", "[", 
   RowBox[{"h_", "[", 
    RowBox[{"n", " ", ":", " ", 
     RowBox[{"Except", "[", 
      RowBox[{"_Alternatives", "|", "_List"}], "]"}]}], "]"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"{", 
   RowBox[{"h", ",", " ", "n", ",", " ", "_"}], "}"}]}]}], "Code",
 CellLabel->
  "In[6088]:=",ExpressionUUID->"0bf45db9-7619-45bc-b186-38923d0a0307"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellPattern", "[", " ", "r_Alternatives", " ", "]"}], " ", ":=", 
  " ", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"groupedByHead", " ", "=", " ", 
      RowBox[{"GatherBy", "[", " ", 
       RowBox[{
        RowBox[{"List", "@@", "r"}], ",", " ", "Head"}], " ", "]"}]}], " ", 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", " ", 
       RowBox[{"indexPattern", " ", "/@", " ", 
        RowBox[{"Alternatives", " ", "@@", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], " ", "]"}], "&"}], 
     " ", "/@", " ", "groupedByHead"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"cellPattern", "[", " ", "x_Blank", " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"_", "[", "_", "]"}], "}"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "x", "]"}], "\[Equal]", "0"}]}]}], "\n", 
 RowBox[{
  RowBox[{"cellPattern", "[", " ", "x_Blank", " ", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", " ", "_", " ", "]"}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellPattern", "[", " ", 
    RowBox[{"head_", "[", " ", "ind_", " ", "]"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"head", "[", " ", 
     RowBox[{"indexPattern", "[", "ind", "]"}], " ", "]"}], "}"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"indexPattern", "[", " ", "x_Blank", " ", "]"}], " ", ":=", " ", 
  "x"}], "\n", 
 RowBox[{
  RowBox[{"indexPattern", "[", " ", "r_Alternatives", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"indexPattern", " ", "/@", " ", "r"}]}], "\n", 
 RowBox[{
  RowBox[{"indexPattern", "[", " ", "n_List", " ", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"numbers", " ", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "n", "]"}], "]"}]}], " ", "}"}], ",", " ", 
    RowBox[{"Alternatives", " ", "@@", " ", 
     RowBox[{"Map", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"RotateRight", "[", 
         RowBox[{"n", ",", "#"}], "]"}], "&"}], ",", " ", "numbers"}], " ", 
      "]"}]}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"indexPattern", "[", " ", 
   RowBox[{"n", " ", ":", " ", 
    RowBox[{"Except", "[", 
     RowBox[{"_Alternatives", "|", "_List"}], "]"}]}], " ", "]"}], " ", ":=", 
  " ", "n"}]}], "Code",
 CellLabel->
  "In[6094]:=",ExpressionUUID->"ec426106-5275-44e5-a09e-d44cc50595d8"]
}, Closed]],

Cell[CellGroupData[{

Cell["deleteDuplicateCells[]", "Subsection",ExpressionUUID->"e2629fb7-9d1d-43f3-bf65-3eef685b1359"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"deleteDuplicateCells", "[", " ", 
    RowBox[{"cells", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"unpackedCellPattern", "..."}], "}"}]}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"DeleteDuplicatesBy", "[", " ", 
    RowBox[{"cells", ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"Sort", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "}"}], "&"}]}], 
    " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"deleteDuplicateCells", "[", " ", 
   RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"deleteDuplicateCells", " ", "/@", " ", "cells"}]}], "\n", 
 RowBox[{
  RowBox[{"deleteDuplicateCells", "[", " ", 
   RowBox[{"head_", "[", " ", 
    RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", "]"}],
    " ", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{"indexList", " ", "=", " ", 
      RowBox[{
       RowBox[{"DeleteDuplicatesBy", "[", " ", 
        RowBox[{
         RowBox[{"Transpose", "[", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"Range", "[", " ", 
             RowBox[{"Length", "[", "indices", "]"}], " ", "]"}], ",", " ", 
            "indices"}], " ", "}"}], " ", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Sort", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"Last", "[", "#", "]"}], "}"}], "]"}], "]"}], "&"}]}], 
        " ", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], " ", "\n", "}"}], ",", 
    "\n", "\t", 
    RowBox[{"head", "[", " ", 
     RowBox[{
      RowBox[{"indices", "[", 
       RowBox[{"[", " ", "indexList", " ", "]"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", " ", "indexList", " ", "]"}], "]"}], "&"}], " ", "/@", 
       " ", "data"}], ",", " ", 
      RowBox[{"display", "[", 
       RowBox[{"[", " ", "indexList", " ", "]"}], "]"}]}], " ", "]"}]}], "\n",
    "]"}]}]}], "Code",
 CellLabel->
  "In[6102]:=",ExpressionUUID->"234639ac-ea1e-4bb7-a2eb-b8edc3acb6eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["deleteDegenerateCells[]", "Subsection",ExpressionUUID->"31a2a4ca-20a8-4cbc-b01c-74d8e07dc5cb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"deleteDegenerateCells", "[", " ", 
    RowBox[{"cells", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"unpackedCellPattern", "..."}], "}"}]}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Select", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"DeleteDuplicatesBy", "[", 
      RowBox[{"cells", ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Sort", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "}"}], "]"}], "]"}]}], "}"}], 
        "&"}]}], " ", "]"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"DuplicateFreeQ", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "}"}], "]"}], "]"}], "&"}]}], "\n", 
    "\t", "]"}]}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"deleteDegenerateCells", "[", " ", 
   RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"deleteDegenerateCells", " ", "/@", " ", "cells"}]}], "\n", 
 RowBox[{
  RowBox[{"deleteDegenerateCells", "[", " ", 
   RowBox[{"head_", "[", " ", 
    RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", "]"}],
    " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"id", " ", "=", " ", 
      RowBox[{"Pick", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "indices", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"DuplicateFreeQ", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "#", "}"}], "]"}], "]"}], "&"}], " ", "/@", " ", 
         "indices"}]}], "]"}]}], " ", "}"}], ",", "\n", "\t", 
    RowBox[{"head", "[", " ", 
     RowBox[{
      RowBox[{"indices", "[", 
       RowBox[{"[", "id", "]"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "id", "]"}], "]"}], "&"}], "/@", "data"}], ",", " ", 
      RowBox[{"display", "[", 
       RowBox[{"[", " ", "id", " ", "]"}], "]"}]}], " ", "]"}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6105]:=",ExpressionUUID->"0a895eca-c68c-4041-b86b-8579247034b0"]
}, Closed]],

Cell[CellGroupData[{

Cell["sortCells[], orderCells[]", "Subsection",ExpressionUUID->"530c0200-8cec-4ba0-ac9d-8bb8ee2048af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sortCells", "[", " ", 
   RowBox[{
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", 
     "]"}], ",", " ", 
    RowBox[{"sortingFunction_", " ", ":", " ", "Identity"}]}], " ", "]"}], ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"order", " ", "=", " ", 
      RowBox[{"OrderingBy", "[", " ", 
       RowBox[{"indices", ",", " ", "sortingFunction"}], " ", "]"}]}], " ", 
     "}"}], ",", "\n", "\t", 
    RowBox[{"head", "[", " ", 
     RowBox[{
      RowBox[{"indices", "[", 
       RowBox[{"[", " ", "order", " ", "]"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", " ", "order", " ", "]"}], "]"}], "&"}], " ", "/@", " ", 
       "data"}], ",", " ", 
      RowBox[{"display", "[", 
       RowBox[{"[", " ", "order", " ", "]"}], "]"}]}], " ", "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[6108]:=",ExpressionUUID->"3dcbb299-d60d-4ccd-b0a6-8765b702245a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"orderCells", "[", " ", 
   RowBox[{
    RowBox[{"head_", "[", 
     RowBox[{"indices_", ",", "data_", ",", "display_"}], "]"}], ",", " ", 
    RowBox[{"ordering", " ", ":", " ", 
     RowBox[{"{", "___Integer", "}"}]}]}], " ", "]"}], " ", ":=", "\n", "\t", 
  
  RowBox[{"head", "[", " ", 
   RowBox[{
    RowBox[{"indices", "[", 
     RowBox[{"[", " ", "ordering", " ", "]"}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", " ", "ordering", " ", "]"}], "]"}], "&"}], " ", "/@", " ",
      "data"}], ",", " ", 
    RowBox[{"display", "[", 
     RowBox[{"[", " ", "ordering", " ", "]"}], "]"}]}], " ", "]"}]}]], "Code",\

 CellLabel->
  "In[6109]:=",ExpressionUUID->"102c4a3c-1dcf-48e5-af1a-6ac1cb37098a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
replaceCellIndices[], replaceRepeatedCellIndices[], replaceCellData[]\
\>", "Subsection",ExpressionUUID->"df7a1f65-a32e-49cc-8c27-29579d1205e6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"replaceCellIndices", "[", " ", 
    RowBox[{
     RowBox[{"{", "}"}], ",", " ", "rules_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceCellIndices", "[", " ", 
    RowBox[{
     RowBox[{"cells", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"unpackedCellPattern", ".."}], "}"}]}], ",", " ", "rules_"}], 
    " ", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"flipCells", " ", "=", " ", 
       RowBox[{"Transpose", "[", " ", "cells", " ", "]"}]}], "}"}], ",", "\n",
      "\t", 
     RowBox[{"Transpose", "[", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"flipCells", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"ReplaceAll", "[", " ", 
         RowBox[{
          RowBox[{"flipCells", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", " ", "rules"}], " ", "]"}], 
        ",", " ", 
        RowBox[{"flipCells", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{"flipCells", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], " ", "}"}], " ", "]"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"replaceCellIndices", "[", " ", 
   RowBox[{
    RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
    "rules_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Map", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"replaceCellIndices", "[", 
      RowBox[{"#", ",", " ", "rules"}], "]"}], "&"}], ",", " ", "cells"}], 
   " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceCellIndices", "[", " ", 
    RowBox[{
     RowBox[{"head_", "[", 
      RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", 
      "]"}], ",", " ", "rules_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"head", "[", " ", 
    RowBox[{
     RowBox[{"ReplaceAll", "[", 
      RowBox[{"indices", ",", " ", "rules"}], "]"}], ",", " ", "data", ",", 
     " ", "display"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceRepeatedCellIndices", "[", " ", 
    RowBox[{
     RowBox[{"{", "}"}], ",", " ", "rules_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceRepeatedCellIndices", "[", " ", 
    RowBox[{
     RowBox[{"cells", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"unpackedCellPattern", ".."}], "}"}]}], ",", " ", "rules_"}], 
    " ", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"flipCells", " ", "=", " ", 
       RowBox[{"Transpose", "[", " ", "cells", " ", "]"}]}], "}"}], ",", "\n",
      "\t", 
     RowBox[{"Transpose", "[", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"flipCells", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"ReplaceRepeated", "[", " ", 
         RowBox[{
          RowBox[{"flipCells", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", " ", "rules"}], " ", "]"}], 
        ",", " ", 
        RowBox[{"flipCells", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{"flipCells", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], " ", "}"}], " ", "]"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"replaceRepeatedCellIndices", "[", " ", 
   RowBox[{
    RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
    "rules_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Map", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"replaceCellIndices", "[", 
      RowBox[{"#", ",", " ", "rules"}], "]"}], "&"}], ",", " ", "cells"}], 
   " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"replaceRepeatedCellIndices", "[", " ", 
   RowBox[{
    RowBox[{"head_", "[", 
     RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", "]"}]
     , ",", " ", "rules_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"head", "[", " ", 
   RowBox[{
    RowBox[{"ReplaceRepeated", "[", 
     RowBox[{"indices", ",", " ", "rules"}], "]"}], ",", " ", "data", ",", 
    " ", "display"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6110]:=",ExpressionUUID->"2553df87-0843-40e9-9b50-dcbdea5eaf4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"replaceCellData", "[", " ", 
    RowBox[{
     RowBox[{"{", "}"}], ",", " ", "rules_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceCellData", "[", " ", 
    RowBox[{
     RowBox[{"cells", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"unpackedCellPattern", ".."}], "}"}]}], ",", " ", "rules_"}], 
    " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"flipCells", " ", "=", " ", 
       RowBox[{"Transpose", "[", " ", "cells", " ", "]"}]}], "}"}], ",", "\n",
      "\t", 
     RowBox[{"Transpose", "[", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"flipCells", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"flipCells", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"ReplaceAll", "[", " ", 
         RowBox[{
          RowBox[{"flipCells", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", " ", "rules"}], " ", "]"}], 
        ",", " ", 
        RowBox[{"flippedCells", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], " ", "}"}], " ", "]"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceCellData", "[", " ", 
    RowBox[{
     RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
     "rules_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"replaceCellData", "[", 
      RowBox[{"#", ",", "rules"}], "]"}], "&"}], " ", "/@", " ", "cells"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceCellData", "[", " ", 
    RowBox[{
     RowBox[{"head_", "[", 
      RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], "]"}], 
     ",", " ", "rule_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"head", "[", 
    RowBox[{"indices", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"replaceElement", "[", 
        RowBox[{"#", " ", ",", " ", "rule"}], "]"}], "&"}], " ", "/@", " ", 
      "data"}], ",", " ", "display"}], " ", "]"}]}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"from", ":", " ", "https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
        "questions"}], "/", "13790"}], "/", "using"}], "-", "replaceall", "-",
      "on", "-", "sparsearray"}]}], "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceElement", "[", 
    RowBox[{"s_SparseArray", ",", " ", "rule_"}], "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "    ", 
      RowBox[{
       RowBox[{"elem", " ", "=", " ", 
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          RowBox[{"s", "[", "\"\<NonzeroValues\>\"", "]"}], ",", " ", 
          "rule"}], "]"}]}], ",", "\n", "    ", 
       RowBox[{"def", " ", "=", " ", 
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          RowBox[{"s", "[", "\"\<Background\>\"", "]"}], ",", " ", "rule"}], 
         "]"}]}]}], "\n", "    ", "}"}], ",", "\n", "\n", "    ", 
     RowBox[{"Replace", "[", "\n", "        ", 
      RowBox[{"s", ",", "\n", "        ", 
       RowBox[{
        RowBox[{
         RowBox[{"Verbatim", "[", "SparseArray", "]"}], "[", 
         RowBox[{"a__", ",", " ", "_", ",", " ", 
          RowBox[{"{", 
           RowBox[{"b__", ",", " ", "_"}], "}"}]}], "]"}], " ", ":>", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"a", ",", " ", "def", ",", " ", 
          RowBox[{"{", 
           RowBox[{"b", ",", " ", "elem"}], "}"}]}], "]"}]}]}], "\n", "    ", 
      "]"}]}], "\n", "]"}]}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{"if", " ", "the", " ", "data", " ", 
    RowBox[{"isn", "'"}], "t", " ", "a", " ", "SparseArray"}], "\n", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"replaceElement", "[", " ", 
   RowBox[{"s_", ",", " ", "rule_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"ReplaceAll", "[", " ", 
   RowBox[{"s", ",", " ", "rule"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6118]:=",ExpressionUUID->"c9202516-8006-40a6-bb3c-8907e6d4a898"]
}, Closed]],

Cell[CellGroupData[{

Cell["identifyComponents[], selectComponents[], matchComponents[]", \
"Subsection",ExpressionUUID->"b47f0046-da3c-4283-8228-29f1a5615f84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"identifyComponents", "[", " ", 
    RowBox[{"pattern_", ",", " ", 
     RowBox[{"head_", "[", " ", 
      RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", 
      "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"validPatterns", " ", "=", " ", 
       RowBox[{"matchingPattern", "[", " ", 
        RowBox[{"pattern", ",", " ", "head"}], " ", "]"}]}], " ", "}"}], ",", 
     "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "validPatterns", "]"}], " ", "\[Equal]", " ", 
        "0"}], ",", "\n", "\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Cases", "[", " ", 
         RowBox[{
          RowBox[{"Transpose", "[", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "[", "indices", "]"}], "]"}], ",", " ", 
             "indices"}], "}"}], " ", "]"}], ",", " ", 
          RowBox[{"{", " ", 
           RowBox[{"_", " ", ",", " ", 
            RowBox[{"validPatterns", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], " ", "}"}]}], " ", 
         "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n",
     "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"matchingPattern", "[", " ", 
   RowBox[{"patternList_", ",", " ", "head_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Pick", "[", " ", 
   RowBox[{"patternList", ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"MatchQ", "[", " ", 
       RowBox[{"head", ",", " ", 
        RowBox[{"Head", "[", "#", "]"}]}], " ", "]"}], "&"}], " ", "/@", " ", 
     "patternList"}]}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6124]:=",ExpressionUUID->"0ff05a13-c239-4798-89ca-6d3f02a331ca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"selectComponents", "[", " ", 
    RowBox[{
    "headSpec_", ",", " ", "dataSpec_", ",", " ", "dataSelector_", ",", " ", 
     RowBox[{"head_", "[", 
      RowBox[{"indices_", ",", "data_", ",", "display_"}], "]"}]}], " ", 
    "]"}], " ", ":=", "\n", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{"MatchQ", "[", " ", 
      RowBox[{"head", ",", " ", "headSpec"}], " ", "]"}], ",", "\n", "\t", 
     RowBox[{"With", "[", " ", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"dataLocation", " ", "=", " ", 
         RowBox[{"FirstPosition", "[", " ", 
          RowBox[{
           RowBox[{"dataForm", "[", "head", "]"}], ",", " ", "dataSpec"}], 
          " ", "]"}]}], " ", "}"}], ",", "\n", "\t\t", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"MissingQ", "[", "dataLocation", "]"}], ",", "\n", "\t\t\t", 
         
         RowBox[{"{", "}"}], ",", "\n", "\t\t\t", 
         RowBox[{"selectIndices", "[", " ", 
          RowBox[{"dataSelector", ",", " ", "indices", ",", " ", 
           RowBox[{"data", "[", 
            RowBox[{"[", " ", 
             RowBox[{"dataLocation", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], "]"}]}], " ", 
          "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
     
     RowBox[{"{", "}"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"selectIndices", "[", " ", 
    RowBox[{"dataSelector_", ",", " ", "indices_", ",", " ", "data_List"}], 
    " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"Select", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Transpose", "[", " ", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "indices", "]"}], "]"}], ",", " ", 
        RowBox[{"data", " ", "/.", " ", 
         RowBox[{"\"\<Automatic\>\"", " ", "\[Rule]", " ", "Automatic"}]}]}], 
       " ", "]"}], ",", " ", "\n", "\t\t", 
      RowBox[{
       RowBox[{"dataSelector", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], "&"}]}], " ", "\n", "\t", 
     "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"selectIndices", "[", " ", 
   RowBox[{
   "dataSelector_", ",", " ", "indices_", ",", " ", "data_SparseArray"}], " ",
    "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"specifiedIndices", " ", "=", " ", 
       RowBox[{"Flatten", "[", " ", 
        RowBox[{"data", "[", "\"\<NonzeroPositions\>\"", "]"}], " ", "]"}]}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{"Join", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Select", "[", " ", 
         RowBox[{
          RowBox[{"Transpose", "[", " ", 
           RowBox[{"{", 
            RowBox[{"specifiedIndices", ",", " ", 
             RowBox[{
              RowBox[{"data", "[", "\"\<NonzeroValues\>\"", "]"}], " ", "/.", 
              " ", 
              RowBox[{
              "\"\<Automatic\>\"", " ", "\[Rule]", " ", "Automatic"}]}]}], 
            " ", "}"}], " ", "]"}], ",", " ", 
          RowBox[{
           RowBox[{"dataSelector", "[", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "]"}], "&"}]}], " ", "]"}], 
        "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"TrueQ", "[", 
          RowBox[{"dataSelector", "[", " ", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Background\>\"", "]"}], " ", "/.", " ", 
            
            RowBox[{"\"\<Automatic\>\"", " ", "\[Rule]", " ", "Automatic"}]}],
            " ", "]"}], "]"}], ",", " ", 
         RowBox[{"Complement", "[", " ", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "indices", "]"}], "]"}], ",", " ", 
           "specifiedIndices"}], " ", "]"}], ",", " ", 
         RowBox[{"{", "}"}]}], "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}], " ",
    "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"Dimensions", "[", "data", "]"}], "]"}], "\[Equal]", 
    "1"}]}]}]}], "Code",
 CellLabel->
  "In[6126]:=",ExpressionUUID->"1f00d229-04f4-4a9f-9953-92a56ddcdcb8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"matchComponents", "[", " ", 
    RowBox[{
    "headSpec_", ",", " ", "dataSpec_", ",", " ", "dataSelector_", ",", " ", 
     RowBox[{"head_", "[", 
      RowBox[{"indices_", ",", "data_", ",", "display_"}], "]"}]}], " ", 
    "]"}], " ", ":=", "\n", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{"MatchQ", "[", " ", 
      RowBox[{"head", ",", " ", "headSpec"}], " ", "]"}], ",", "\n", "\t", 
     RowBox[{"With", "[", " ", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"dataLocation", " ", "=", " ", 
         RowBox[{"FirstPosition", "[", " ", 
          RowBox[{
           RowBox[{"dataForm", "[", "head", "]"}], ",", " ", "dataSpec"}], 
          " ", "]"}]}], " ", "}"}], ",", "\n", "\t\t", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"MissingQ", "[", "dataLocation", "]"}], ",", "\n", "\t\t\t", 
         
         RowBox[{"{", "}"}], ",", "\n", "\t\t\t", 
         RowBox[{"matchIndices", "[", " ", 
          RowBox[{"dataSelector", ",", " ", "indices", ",", " ", 
           RowBox[{"data", "[", 
            RowBox[{"[", " ", 
             RowBox[{"First", "[", "dataLocation", "]"}], " ", "]"}], "]"}]}],
           " ", "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}], ",", "\n", 
     "\t", 
     RowBox[{"{", "}"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"matchIndices", "[", " ", 
   RowBox[{"dataSelector_", ",", " ", "indices_", ",", " ", "data_List"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Cases", "[", " ", 
    RowBox[{
     RowBox[{"Transpose", "[", " ", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "indices", "]"}], "]"}], ",", " ", 
       RowBox[{"data", " ", "/.", " ", 
        RowBox[{"\"\<Automatic\>\"", " ", "\[Rule]", " ", "Automatic"}]}]}], 
      " ", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"_", ",", " ", "dataSelector"}], "}"}]}], " ", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"matchIndices", "[", " ", 
   RowBox[{
   "dataSelector_", ",", " ", "indices_", ",", " ", "data_SparseArray"}], " ",
    "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"specifiedIndices", " ", "=", " ", 
       RowBox[{"Flatten", "[", " ", 
        RowBox[{"data", "[", "\"\<NonzeroPositions\>\"", "]"}], " ", "]"}]}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{"Join", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Cases", "[", " ", 
         RowBox[{
          RowBox[{"Transpose", "[", " ", 
           RowBox[{"{", 
            RowBox[{"specifiedIndices", ",", " ", 
             RowBox[{
              RowBox[{"data", "[", "\"\<NonzeroValues\>\"", "]"}], " ", "/.", 
              " ", 
              RowBox[{
              "\"\<Automatic\>\"", " ", "\[Rule]", " ", "Automatic"}]}]}], 
            "}"}], " ", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"_", ",", "dataSelector"}], "}"}]}], " ", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MatchQ", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "[", "\"\<Background\>\"", "]"}], " ", "/.", " ", 
            
            RowBox[{"\"\<Automatic\>\"", " ", "\[Rule]", " ", "Automatic"}]}],
            ",", " ", "dataSelector"}], " ", "]"}], ",", " ", 
         RowBox[{"Complement", "[", " ", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "indices", "]"}], "]"}], ",", " ", 
           "specifiedIndices"}], " ", "]"}], ",", " ", 
         RowBox[{"{", "}"}]}], "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}], " ",
    "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"Dimensions", "[", "data", "]"}], "]"}], "\[Equal]", 
    "1"}]}]}]}], "Code",
 CellLabel->
  "In[6129]:=",ExpressionUUID->"6db92788-a167-4c04-a0c8-42d1ff845760"]
}, Closed]],

Cell[CellGroupData[{

Cell["removeCells[], takeCells[]", "Subsection",ExpressionUUID->"5de5a8d3-e193-443c-8f31-f2cec7f5741d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"removeCells", "[", " ", 
   RowBox[{
    RowBox[{"deletedCells", " ", ":", " ", 
     RowBox[{"{", "___Integer", "}"}]}], ",", " ", 
    RowBox[{"head_", "[", 
     RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], "]"}]}], 
   " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"remainingCells", " ", "=", " ", 
      RowBox[{"Complement", "[", " ", 
       RowBox[{
        RowBox[{"Range", "[", " ", 
         RowBox[{"Length", "[", "indices", "]"}], " ", "]"}], " ", ",", " ", 
        "deletedCells"}], " ", "]"}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "remainingCells", "]"}], " ", "\[Equal]", " ", 
       "0"}], ",", "\n", "\t\t", 
      RowBox[{"{", "}"}], ",", "\n", "\t\t", 
      RowBox[{"head", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"indices", "[", 
         RowBox[{"[", "remainingCells", "]"}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "remainingCells"}], "]"}], "]"}], ",", 
        "\n", "\t\t\t", 
        RowBox[{"display", "[", 
         RowBox[{"[", "remainingCells", "]"}], "]"}]}], "\n", "\t\t", "]"}]}],
      "\n", "\t", "]"}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6132]:=",ExpressionUUID->"ebd6d1da-3b12-4f71-801c-7e96aa50437e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"takeCells", "[", " ", 
   RowBox[{
    RowBox[{"remainingCells", " ", ":", " ", 
     RowBox[{"{", "___Integer", "}"}]}], ",", " ", 
    RowBox[{"head_", "[", 
     RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], "]"}]}], 
   " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "remainingCells", "]"}], " ", "\[Equal]", " ", 
     "0"}], ",", "\n", "\t\t", 
    RowBox[{"{", "}"}], ",", "\n", "\t\t", 
    RowBox[{"head", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"indices", "[", 
       RowBox[{"[", "remainingCells", "]"}], "]"}], ",", "\n", "\t\t\t", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "remainingCells"}], "]"}], "]"}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"display", "[", 
       RowBox[{"[", "remainingCells", "]"}], "]"}]}], "\n", "\t\t", "]"}]}], 
   "\n", "\t", "]"}]}]], "Code",
 CellLabel->
  "In[6133]:=",ExpressionUUID->"0b9eb7cd-cd75-419c-b2e5-5ecb30e634b7"]
}, Closed]],

Cell[CellGroupData[{

Cell["mergeCells[]", "Subsection",ExpressionUUID->"4273560f-e54b-4adb-9bee-6b091dbf1483"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mergeCellGroup", "[", " ", 
    RowBox[{"cells", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_Symbol", "[", " ", 
        RowBox[{"_", ",", "_", ",", "_"}], "]"}], ".."}], "}"}]}], " ", "]"}],
    " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"indices", ",", " ", "data", ",", " ", "display"}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"indices", ",", " ", "data", ",", " ", "display"}], "}"}], 
       " ", "=", " ", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"List", " ", "@@@", " ", "cells"}], " ", "]"}]}], ";", "\n", 
      "\n", "\t", 
      RowBox[{
       RowBox[{"Head", "[", 
        RowBox[{"cells", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Flatten", "[", " ", 
         RowBox[{"indices", ",", " ", "1"}], " ", "]"}], ",", "\n", "\t\t", 
        RowBox[{"MapThread", "[", " ", 
         RowBox[{"Join", ",", " ", "data"}], " ", "]"}], ",", "\n", "\t\t", 
        RowBox[{"Flatten", "[", 
         RowBox[{"display", ",", "1"}], "]"}]}], "\n", "\t", "]"}]}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"mergeCells", "[", " ", 
   RowBox[{"cells", " ", ":", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_Symbol", "[", 
        RowBox[{"_", ",", "_", ",", "_"}], "]"}], "..."}], "}"}], ".."}]}], 
   " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"combined", " ", "=", " ", 
      RowBox[{"GatherBy", "[", " ", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", "cells", "}"}], ",", "1"}], "]"}], ",", " ", "Head"}], 
       " ", "]"}]}], " ", "}"}], ",", "\n", "\t", 
    RowBox[{"mergeCellGroup", "/@", " ", "combined"}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6134]:=",ExpressionUUID->"1eb45753-deab-496b-bd81-ec8edaa850d6"]
}, Closed]],

Cell[CellGroupData[{

Cell["changeCellDisplay[], changeCellDisplayFromList[]", "Subsection",ExpressionUUID->"4f1a2276-83b8-453b-a0ab-cc4833ce2963"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"this", " ", "is", " ", "the", " ", "same", " ", "as", " ", 
    RowBox[{"compressDisplayCells", "[", "]"}], " ", "but", " ", "without", 
    " ", "the", " ", "default", " ", "display", " ", "settings"}], "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{"parseDisplayCell", "[", " ", 
    RowBox[{"head_", ",", " ", 
     RowBox[{"ruleSpec", " ", ":", " ", 
      RowBox[{"_Rule", "|", 
       RowBox[{"{", "___Rule", "}"}]}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"meshDisplayData", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "MeshCellStyle", "}"}], ",", " ", "MeshCellLabel", 
            ",", " ", "MeshCellShapeFunction"}], "}"}], " ", "/.", " ", 
          "ruleSpec"}], " ", "/.", " ", "blankMeshRules"}]}], ",", "\n", "\t", 
       RowBox[{"cellDisplayData", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "\"\<style\>\"", "}"}], ",", "\"\<label\>\"", ",", 
            "\"\<shape\>\""}], "}"}], " ", "/.", " ", "ruleSpec"}], " ", "/.",
          " ", "blankDisplayRules"}]}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{"cleanupDisplayFunction", " ", "/@", " ", 
      RowBox[{"{", 
       RowBox[{"meshDisplayData", ",", " ", "cellDisplayData"}], "}"}]}]}], 
    "\n", "]"}]}]}]], "Code",
 CellLabel->
  "In[6136]:=",ExpressionUUID->"b0af7283-f46a-4f8d-96a5-243d87017bd0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"changeCellDisplay", "[", " ", 
   RowBox[{
    RowBox[{"cells", " ", ":", " ", 
     RowBox[{"{", "___Integer", "}"}]}], ",", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", 
     "]"}], ",", " ", 
    RowBox[{"ruleSpec", " ", ":", " ", 
     RowBox[{
      RowBox[{"{", "___Rule", "}"}], "|", "_Rule"}]}]}], " ", "]"}], " ", ":=",
   "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"everythingElse", " ", "=", " ", 
       RowBox[{"Complement", "[", " ", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "indices", "]"}], "]"}], ",", " ", "cells"}],
         " ", "]"}]}], ",", "\n", 
      RowBox[{"newData", " ", "=", " ", 
       RowBox[{"parseDisplayCell", "[", 
        RowBox[{"head", ",", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "ruleSpec", "}"}], "]"}]}], "]"}]}]}], "\n", "}"}], 
    ",", "\n", "\t", 
    RowBox[{"orderCells", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"head", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Join", "[", " ", 
         RowBox[{
          RowBox[{"indices", "[", 
           RowBox[{"[", " ", "everythingElse", "]"}], "]"}], ",", " ", 
          RowBox[{"indices", "[", 
           RowBox[{"[", " ", "cells", " ", "]"}], "]"}]}], " ", "]"}], ",", 
        "\n", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", " ", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "everythingElse", "]"}], "]"}], ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "cells", "]"}], "]"}]}], " ", "]"}], "&"}], " ", "/@",
          " ", "data"}], ",", "\n", "\t\t\t", 
        RowBox[{"Join", "[", " ", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"display", "[", 
           RowBox[{"[", "everythingElse", "]"}], "]"}], ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"joinDisplayCells", "[", " ", 
             RowBox[{"Join", "[", " ", 
              RowBox[{
               RowBox[{"{", " ", "#", " ", "}"}], ",", " ", "newData"}], " ", 
              "]"}], " ", "]"}], "&"}], " ", "/@", " ", 
           RowBox[{"display", "[", 
            RowBox[{"[", "cells", "]"}], "]"}]}]}], "\n", "\t\t\t", "]"}]}], 
       "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
      RowBox[{"Ordering", "[", " ", 
       RowBox[{"Flatten", "[", " ", 
        RowBox[{"{", 
         RowBox[{"everythingElse", ",", " ", "cells"}], "}"}], " ", "]"}], 
       " ", "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6137]:=",ExpressionUUID->"07c56442-9200-48cd-877a-3ca14a40d794"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"changeCellDisplayFromList", "[", " ", 
    RowBox[{
     RowBox[{"head_", "[", " ", 
      RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", 
      "]"}], ",", " ", "head_", ",", " ", "newDisplay_"}], " ", "]"}], " ", ":=",
    "\n", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "newDisplay", "]"}], " ", "\[Equal]", " ", 
      RowBox[{"Length", "[", "indices", "]"}]}], ",", "\n", "\t", 
     RowBox[{"head", "[", "\n", "\t\t", 
      RowBox[{"indices", ",", "\n", "\t\t", "data", ",", "\n", "\t\t", 
       RowBox[{"Map", "[", " ", 
        RowBox[{"joinDisplayCells", ",", " ", 
         RowBox[{"Transpose", " ", "@", " ", 
          RowBox[{"{", " ", 
           RowBox[{"display", ",", " ", "newDisplay"}], " ", "}"}]}]}], " ", 
        "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"mechanism", "::", "bdispl"}], ",", "head"}], "]"}], ";", 
      "\n", "\t", 
      RowBox[{"head", "[", 
       RowBox[{"indices", ",", "data", ",", "display"}], "]"}]}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeCellDisplayFromList", "[", " ", 
    RowBox[{
     RowBox[{"head_", "[", " ", 
      RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", 
      "]"}], ",", " ", "differentHead_", ",", " ", "newDisplay_"}], " ", 
    "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"head", "[", 
    RowBox[{"indices", ",", "data", ",", "display"}], "]"}]}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "bdispl"}], "=", 
   "\"\<The list of display directives is not the same length as the number \
of components of type `1`.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6138]:=",ExpressionUUID->"96accb3a-7d2d-432b-a697-4dc8df23471d"]
}, Closed]],

Cell[CellGroupData[{

Cell["changeDataInCell[], changeDataFromList[]", "Subsection",ExpressionUUID->"3b9c09ba-98e2-48b6-b4f9-47bddd498ea3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"changeDataInCell", "[", " ", 
    RowBox[{
     RowBox[{"cells", " ", ":", " ", 
      RowBox[{"{", "___Integer", "}"}]}], ",", " ", 
     RowBox[{"head_", "[", " ", 
      RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", 
      "]"}], ",", " ", 
     RowBox[{"ruleSpec_", " ", ":", " ", 
      RowBox[{
       RowBox[{"{", "___Rule", "}"}], "|", "_Rule"}]}]}], " ", "]"}], " ", ":=",
    "\n", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"newData", " ", "=", " ", 
        RowBox[{"Replace", "[", " ", 
         RowBox[{
          RowBox[{"Replace", "[", " ", 
           RowBox[{
            RowBox[{"dataForm", "[", "head", "]"}], ",", " ", "ruleSpec", ",",
             " ", 
            RowBox[{"{", "1", "}"}]}], " ", "]"}], ",", " ", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"dataForm", "[", "head", "]"}], " ", "\[Rule]", " ", 
            "\"\<nothing\>\""}], " ", "]"}], " ", ",", " ", 
          RowBox[{"{", "1", "}"}]}], " ", "]"}]}], ",", "\n", "\t", 
       RowBox[{"everythingElse", " ", "=", " ", 
        RowBox[{"Complement", "[", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "indices", "]"}], "]"}], ",", " ", 
          "cells"}], " ", "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{"orderCells", "[", 
      RowBox[{
       RowBox[{"compressCells", " ", "@", " ", 
        RowBox[{"head", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Join", "[", " ", 
           RowBox[{
            RowBox[{"indices", "[", 
             RowBox[{"[", "everythingElse", "]"}], "]"}], ",", " ", 
            RowBox[{"indices", "[", 
             RowBox[{"[", "cells", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{"MapThread", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"changeData", "[", " ", 
              RowBox[{
              "everythingElse", ",", " ", "cells", ",", " ", "#1", ",", " ", 
               "#2"}], " ", "]"}], "&"}], ",", " ", 
            RowBox[{"{", " ", 
             RowBox[{"newData", ",", " ", "data"}], " ", "}"}]}], " ", "]"}], 
          ",", "\n", "\t\t", 
          RowBox[{"Join", "[", " ", 
           RowBox[{
            RowBox[{"display", "[", 
             RowBox[{"[", "everythingElse", "]"}], "]"}], ",", " ", 
            RowBox[{"display", "[", 
             RowBox[{"[", "cells", "]"}], "]"}]}], " ", "]"}]}], "\n", "\t", 
         "]"}]}], ",", "\n", "\t", 
       RowBox[{"Ordering", "[", 
        RowBox[{"Flatten", "[", " ", 
         RowBox[{"{", 
          RowBox[{"everythingElse", ",", " ", "cells"}], "}"}], " ", "]"}], 
        "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"changeData", "[", " ", 
   RowBox[{
   "everythingElse_", ",", " ", "cells_", ",", " ", "func_", ",", " ", 
    "data_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Join", "[", " ", 
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"[", " ", "everythingElse", " ", "]"}], "]"}], ",", " ", 
    RowBox[{"ConstantArray", "[", " ", 
     RowBox[{"func", ",", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"data", "[", 
        RowBox[{"[", "cells", "]"}], "]"}], "]"}]}], " ", "]"}]}], "  ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"changeData", "[", " ", 
   RowBox[{
   "everythingElse_", ",", " ", "cells_", ",", " ", "\"\<nothing\>\"", " ", 
    ",", " ", "data_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Join", "[", " ", 
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"[", " ", "everythingElse", " ", "]"}], "]"}], " ", ",", " ", 
    RowBox[{"data", "[", 
     RowBox[{"[", "cells", "]"}], "]"}]}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6141]:=",ExpressionUUID->"8fb05295-5368-4801-8f75-90c91dd21d9d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"changeDataFromList", "[", " ", 
   RowBox[{
    RowBox[{"head_", "[", 
     RowBox[{"indices_", ",", "data_", ",", "display_"}], "]"}], ",", " ", 
    "head_", ",", " ", "dataType_", ",", " ", "newData_"}], " ", "]"}], ":=", 
  "\n", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"place", " ", "=", " ", 
       RowBox[{
        RowBox[{"PositionIndex", "[", 
         RowBox[{"dataForm", "[", "head", "]"}], "]"}], "[", " ", "dataType", 
        " ", "]"}]}], " ", "}"}], ",", " ", "\n", "\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "place", "]"}], "===", "Missing"}], ",", "\n", 
       "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"mechanism", "::", "bdtype"}], ",", " ", 
          RowBox[{"dataForm", "[", "head", "]"}], ",", " ", "head"}], "]"}], 
        ";", "\n", "\t\t", 
        RowBox[{"head", "[", 
         RowBox[{"indices", ",", "data", ",", "display"}], "]"}]}], ",", "\n",
        "\t\t", 
       RowBox[{"compressCells", " ", "@", " ", 
        RowBox[{"head", "[", " ", 
         RowBox[{"indices", ",", " ", 
          RowBox[{"ReplacePart", "[", " ", 
           RowBox[{"data", ",", " ", 
            RowBox[{
             RowBox[{"place", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
             "newData"}]}], "]"}], ",", " ", "display"}], " ", "]"}]}]}], 
      "\n", "\t", "]"}]}], "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "newData", "]"}], " ", "\[Equal]", " ", 
    RowBox[{"Length", "[", "indices", "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"changeDataFromList", "[", " ", 
   RowBox[{
    RowBox[{"head_", "[", 
     RowBox[{"indices_", ",", "data_", ",", "display_"}], "]"}], ",", " ", 
    "head_", ",", " ", "dataType_", ",", " ", "newData_"}], " ", "]"}], " ", ":=",
   "\n", "\t", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"mechanism", "::", "bdl"}], ",", " ", "head"}], "]"}], ";", " ", 
    RowBox[{"head", "[", 
     RowBox[{"indices", ",", " ", "data", ",", " ", "display"}], "]"}]}], 
   ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeDataFromList", "[", " ", 
    RowBox[{
     RowBox[{"head_", "[", 
      RowBox[{"indices_", ",", "data_", ",", "display_"}], "]"}], ",", " ", 
     "differentHead_", ",", " ", "dataType_", ",", " ", "newData_"}], " ", 
    "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"head", "[", 
    RowBox[{"indices", ",", "data", ",", "display"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "bdl"}], " ", "=", " ", 
   "\"\<The list of data is not the same length as the number of components \
of type `1`.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "bdtype"}], " ", "=", " ", 
   "\"\<The data type is not one of `1` for `2`.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6144]:=",ExpressionUUID->"bfb78ab0-7e13-41d2-9c85-b8b58449795e"]
}, Closed]],

Cell[CellGroupData[{

Cell["mapComponents[]", "Subsection",ExpressionUUID->"d37ea0da-1dee-450b-b972-925398878608"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mapComponents", "[", " ", 
   RowBox[{"f_", ",", " ", 
    RowBox[{"cells", " ", ":", " ", 
     RowBox[{"head_Symbol", "[", " ", 
      RowBox[{"_", ",", " ", "_", ",", " ", "_"}], " ", "]"}]}]}], " ", "]"}],
   " ", ":=", " ", 
  RowBox[{"packComponentCells", "[", " ", 
   RowBox[{"f", " ", "/@", " ", 
    RowBox[{"unpackComponentCells", "[", " ", "cells", " ", "]"}]}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"mapComponents", "[", " ", 
   RowBox[{"f_", ",", " ", 
    RowBox[{"cells", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_Symbol", "[", 
        RowBox[{"_", ",", "_", ",", "_"}], "]"}], "..."}], "}"}]}]}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"packComponentCells", "[", " ", 
   RowBox[{"f", " ", "/@", " ", 
    RowBox[{"unpackComponentCells", "[", " ", "cells", " ", "]"}]}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6149]:=",ExpressionUUID->"b8d9c7eb-bb3b-4146-ae25-dfe39c4117d6"]
}, Closed]],

Cell[CellGroupData[{

Cell["parseCells[]", "Subsection",ExpressionUUID->"eadd1bf6-0132-4bb4-8f59-3c816e0f837e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"distributePropertyRules", " ", "=", " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Property", "[", " ", 
        RowBox[{"h_List", " ", ",", " ", "properties_"}], " ", "]"}], " ", 
       "\[RuleDelayed]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Property", "[", 
           RowBox[{"#", ",", " ", "properties"}], "]"}], "&"}], " ", "/@", 
         " ", "h"}], ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Property", "[", " ", 
        RowBox[{
         RowBox[{"Property", "[", " ", 
          RowBox[{
           RowBox[{"h_Symbol", "[", "i_", "]"}], ",", " ", "properties1_"}], 
          " ", "]"}], ",", " ", "properties2_"}], " ", "]"}], " ", 
       "\[RuleDelayed]", " ", 
       RowBox[{"Property", "[", " ", 
        RowBox[{
         RowBox[{"h", "[", "i", "]"}], ",", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"properties1", ",", "properties2"}], "}"}], "]"}]}], " ", 
        "]"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Property", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"h", " ", ":", " ", 
            RowBox[{
            "rigidBar", "|", "fold", "|", "Line", "|", "Polygon", "|", 
             "angleJoint", "|", "spring"}]}], ")"}], "[", " ", 
          RowBox[{"i_", "?", "MatrixQ"}], " ", "]"}], " ", ",", " ", 
         "properties_"}], " ", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Property", "[", " ", 
           RowBox[{
            RowBox[{"h", "[", "#", "]"}], ",", " ", "properties"}], "]"}], 
          " ", "&"}], " ", "/@", " ", "i"}], ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Property", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"h", " ", ":", " ", 
            RowBox[{
            "Point", "|", "joint", "|", "freeJoint", "|", "pinnedJoint"}]}], 
           ")"}], "[", " ", 
          RowBox[{"i_", "?", "VectorQ"}], " ", "]"}], " ", ",", " ", 
         "properties_"}], " ", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Property", "[", " ", 
           RowBox[{
            RowBox[{"h", "[", "#", "]"}], ",", " ", "properties"}], "]"}], 
          "&"}], " ", "/@", " ", "i"}], ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Property", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"h", " ", ":", " ", 
            RowBox[{"Except", "[", "Property", "]"}]}], ")"}], "[", 
          RowBox[{"i_", ",", " ", "properties1_"}], "]"}], ",", " ", 
         "properties2_"}], " ", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"Property", "[", " ", 
        RowBox[{
         RowBox[{"h", "[", "i", "]"}], ",", " ", 
         RowBox[{"Flatten", "[", " ", 
          RowBox[{"{", 
           RowBox[{"properties1", ",", "properties2"}], "}"}], " ", "]"}]}], 
        " ", "]"}]}]}], "\n", "}"}]}], " ", ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expansionRules", " ", "=", " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Property", "[", " ", 
        RowBox[{
         RowBox[{"face", "[", " ", "i_", " ", "]"}], ",", " ", 
         "properties_"}], " ", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Property", "[", " ", 
          RowBox[{
           RowBox[{"face", "[", "i", "]"}], ",", " ", "properties"}], " ", 
          "]"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Property", "[", " ", 
            RowBox[{
             RowBox[{"rigidBar", "[", "#", "]"}], ",", " ", "properties"}], 
            " ", "]"}], " ", "&"}], " ", "/@", " ", 
          RowBox[{"Partition", "[", " ", 
           RowBox[{"i", ",", " ", "2", ",", " ", "1", ",", " ", "1"}], " ", 
           "]"}]}]}], "\n", "\t", "}"}]}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"Property", "[", " ", 
        RowBox[{
         RowBox[{"fold", "[", " ", "i_", " ", "]"}], ",", " ", 
         "properties_"}], " ", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Property", "[", " ", 
          RowBox[{
           RowBox[{"fold", "[", "i", "]"}], ",", " ", "properties"}], " ", 
          "]"}], ",", "\n", "\t\t", 
         RowBox[{"Property", "[", " ", 
          RowBox[{
           RowBox[{"rigidBar", "[", "i", "]"}], ",", " ", "properties"}], " ",
           "]"}]}], "\n", "\t", "}"}]}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"Property", "[", " ", 
        RowBox[{
         RowBox[{"freeJoint", "[", "i_", "]"}], ",", " ", "properties_"}], 
        " ", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"Property", "[", " ", 
        RowBox[{
         RowBox[{"joint", "[", "i", "]"}], ",", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<pinningStiffness\>\"", "\[Rule]", "0"}], ",", 
            "properties"}], "}"}], "]"}]}], " ", "]"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Property", "[", " ", 
        RowBox[{
         RowBox[{"pinnedJoint", "[", "i_", "]"}], ",", " ", "properties_"}], 
        " ", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"Property", "[", " ", 
        RowBox[{
         RowBox[{"joint", "[", "i", "]"}], ",", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<pinningStiffness\>\"", "\[Rule]", "Infinity"}], ",", 
            "properties", ",", 
            RowBox[{"\"\<shape\>\"", "\[Rule]", 
             RowBox[{"mechanisms`graphics`pinnedJointShape", "[", "]"}]}]}], 
           "}"}], "]"}]}], " ", "]"}]}]}], "\n", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"interpretComponentCellsRule", " ", "=", " ", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Property", "[", " ", 
       RowBox[{
        RowBox[{"Point", "[", " ", 
         RowBox[{"label_", " ", "\[Rule]", " ", "pos_"}], " ", "]"}], ",", 
        " ", "properties_"}], " ", "]"}], " ", "\[RuleDelayed]", " ", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{"Point", ",", " ", "\n", "\t\t", 
        RowBox[{"label", " ", "\[Rule]", " ", "pos"}], ",", " ", "\n", "\t\t", 
        RowBox[{"{", "}"}], ",", "\n", "\t\t", 
        RowBox[{"FilterRules", "[", " ", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "properties", "}"}], "]"}], ",", " ", 
          "$displayProperties"}], "]"}]}], "\n", "\t", "}"}]}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"Property", "[", " ", 
       RowBox[{
        RowBox[{"joint", "[", " ", 
         RowBox[{"label_", " ", "\[Rule]", " ", "pos_"}], " ", "]"}], ",", 
        " ", "properties_"}], " ", "]"}], " ", "\[RuleDelayed]", " ", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{"joint", ",", " ", "\n", "\t\t", 
        RowBox[{"label", " ", "\[Rule]", " ", "pos"}], ",", "\n", "\t\t", 
        RowBox[{"FilterRules", "[", " ", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "properties", "}"}], "]"}], ",", " ", 
          RowBox[{"Except", "[", "$displayProperties", "]"}]}], "]"}], ",", 
        " ", "\n", "\t\t", 
        RowBox[{"FilterRules", "[", " ", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "properties", "}"}], "]"}], ",", " ", 
          "$displayProperties"}], "]"}]}], "\n", "\t", "}"}]}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"Property", "[", " ", 
       RowBox[{
        RowBox[{"h_", "[", " ", 
         RowBox[{"i", " ", ":", " ", 
          RowBox[{"Except", "[", "_Rule", "]"}]}], " ", "]"}], ",", " ", 
        "properties_"}], " ", "]"}], " ", "\[RuleDelayed]", " ", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{"h", ",", " ", "\n", "\t\t", "i", ",", " ", "\n", "\t\t", 
        RowBox[{"FilterRules", "[", " ", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "properties", "}"}], "]"}], ",", " ", 
          RowBox[{"Except", "[", "$displayProperties", "]"}]}], "]"}], ",", 
        " ", "\n", "\t\t", 
        RowBox[{"FilterRules", "[", " ", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "properties", "}"}], "]"}], ",", " ", 
          "$displayProperties"}], "]"}]}], "\n", "\t", "}"}]}]}], "\n", 
    "}"}]}], ";"}]}], "Code",
 CellLabel->
  "In[6151]:=",ExpressionUUID->"fac8421b-0907-4aa8-8985-486ee81d1798"],

Cell[BoxData[
 RowBox[{
  RowBox[{"parseCells", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "coordinates_", ",", " ", "componentCells_", ",", " ", "labels_"}], 
     "}"}], ",", " ", "cellList_"}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "expandedCells", ",", "newComponentCells", ",", " ", "newDisplayCells", 
      ",", " ", "newVertices", ",", " ", "newCoordinates", ",", " ", 
      "newLabels"}], "}"}], ",", "\n", "\t", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"the", " ", "first", " ", "pass", " ", "distributes", " ", 
       RowBox[{"Property", "[", "]"}], " ", "tags"}], ",", " ", 
      RowBox[{"expands", " ", "cells"}], ",", " ", 
      RowBox[{
      "and", " ", "flattens", " ", "the", " ", "list", " ", "of", " ", 
       "cells"}]}], "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"expandedCells", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"ReplaceAll", "[", " ", 
        RowBox[{
         RowBox[{"Flatten", "[", " ", 
          RowBox[{"ReplaceRepeated", "[", " ", 
           RowBox[{
            RowBox[{"Property", "[", " ", 
             RowBox[{
              RowBox[{"{", "cellList", "}"}], ",", " ", 
              RowBox[{"{", "}"}]}], " ", "]"}], ",", " ", 
            "distributePropertyRules"}], "]"}], " ", "]"}], ",", " ", 
         "expansionRules"}], " ", "]"}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "turn", " ", "specified", " ", "cells", " ", "into", " ", "the", " ", 
       "unpackedCell", " ", 
       RowBox[{"structure", ".", " ", "Note"}], " ", "that", " ", "indices", 
       " ", "may", " ", "not", " ", "be", " ", "in", " ", "the", " ", 
       "correct", " ", "form", " ", "because", " ", "of", " ", "labels"}], 
      "*)"}], "\n", "\t", 
     RowBox[{"newComponentCells", " ", "=", " ", 
      RowBox[{"Replace", "[", " ", 
       RowBox[{
       "expandedCells", ",", " ", "interpretComponentCellsRule", ",", " ", 
        RowBox[{"{", "1", "}"}]}], " ", "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "extract", " ", "any", " ", "new", " ", "coordinates", " ", "that", " ",
        "were", " ", "specified", " ", "by", " ", 
       RowBox[{"Point", "[", "]"}], " ", "or", " ", 
       RowBox[{"joint", "[", "]"}]}], "*)"}], "\n", "\t", 
     RowBox[{"newVertices", " ", "=", " ", 
      RowBox[{"Cases", "[", " ", 
       RowBox[{"newComponentCells", ",", " ", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"Point", ",", " ", "_Rule", ",", " ", "_", ",", " ", "_"}], 
          " ", "}"}], "|", 
         RowBox[{"{", " ", 
          RowBox[{"joint", ",", " ", "_Rule", ",", " ", "_", ",", " ", "_"}], 
          " ", "}"}]}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"newCoordinates", " ", "=", " ", 
      RowBox[{"Join", "[", " ", 
       RowBox[{"coordinates", ",", " ", 
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "newVertices", "]"}], " ", ">", " ", "0"}], 
          ",", " ", 
          RowBox[{"Last", " ", "/@", " ", 
           RowBox[{
            RowBox[{"Transpose", "[", " ", "newVertices", " ", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
          RowBox[{"{", "}"}]}], " ", "]"}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"newLabels", " ", "=", " ", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "newVertices", "]"}], " ", ">", " ", "0"}], 
        ",", " ", 
        RowBox[{"Rule", " ", "@@@", " ", 
         RowBox[{"Transpose", "[", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"newVertices", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}], ",", " ", 
            RowBox[{"Range", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "coordinates", "]"}], "+", "1"}], ",", 
              " ", 
              RowBox[{
               RowBox[{"Length", "[", "coordinates", "]"}], "+", 
               RowBox[{"Length", "[", "newVertices", "]"}]}]}], " ", "]"}]}], 
           "}"}], " ", "]"}]}], ",", " ", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"(*", 
       RowBox[{"list", " ", "of", " ", "all", " ", "coordinates"}], "*)"}], 
      "\n", "\t\t", 
      RowBox[{
       RowBox[{"PadRight", "[", " ", "newCoordinates", " ", "]"}], ",", "\n", 
       "\t\t", "\n", "\t\t", 
       RowBox[{"(*", 
        RowBox[{
        "list", " ", "of", " ", "cells", " ", "that", " ", "were", " ", 
         "created"}], "*)"}], "\n", "\t\t", 
       RowBox[{"packComponentCells", "[", " ", 
        RowBox[{"replaceCellIndices", "[", " ", 
         RowBox[{
          RowBox[{"Join", "[", " ", 
           RowBox[{"componentCells", ",", " ", 
            RowBox[{"Join", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", " ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], " ", "}"}], "&"}], " ", "/@",
                " ", "newVertices"}], ",", " ", 
              RowBox[{"DeleteCases", "[", " ", 
               RowBox[{"newComponentCells", ",", " ", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Point", ",", "_Rule", ",", "_", ",", "_"}], "}"}], 
                 "|", 
                 RowBox[{"{", 
                  RowBox[{"joint", ",", "_Rule", ",", "_", ",", "_"}], 
                  "}"}]}]}], " ", "]"}]}], " ", "]"}]}], " ", "]"}], ",", " ", 
          RowBox[{"Join", "[", " ", 
           RowBox[{"labels", ",", " ", "newLabels"}], " ", "]"}]}], " ", 
         "]"}], "  ", "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
       RowBox[{"(*", 
        RowBox[{
        "list", " ", "of", " ", "all", " ", "labels", " ", "that", " ", "can",
          " ", "be", " ", "used", " ", "to", " ", "refer", " ", "to", " ", 
         "coordinates"}], "*)"}], "\n", "\t\t", 
       RowBox[{"Join", "[", 
        RowBox[{"labels", ",", " ", "newLabels"}], "]"}]}], "\n", "\t", 
      "}"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6154]:=",ExpressionUUID->"8adeae4f-37d5-4438-a96f-9fdde2cba2b1"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["functions for creating mechanisms", "Section",ExpressionUUID->"65c5c4a8-5b60-4f27-b9e3-a8f1d4521cff"],

Cell[CellGroupData[{

Cell["defaultJoints[]", "Subsection",ExpressionUUID->"5f09f453-d6f6-45f0-b27a-ac57613fc848"],

Cell[BoxData[
 RowBox[{
  RowBox[{"defaultJoints", "[", 
   RowBox[{"coords_", ",", "cells_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"num", "=", 
      RowBox[{"Length", "[", "coords", "]"}]}], "}"}], ",", 
    RowBox[{"mergeCells", "@", 
     RowBox[{"Join", "[", "\n", "\t", 
      RowBox[{"cells", ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"compressCells", "@", 
         RowBox[{"joint", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Range", "[", "num", "]"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ConstantArray", "[", 
              RowBox[{"0", ",", "num"}], "]"}], ",", " ", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{"\"\<Automatic\>\"", ",", "num"}], "]"}]}], "}"}], ",", 
           "\n", "\t\t", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<style\>\"", ",", "\"\<label\>\"", ",", "\"\<shape\>\""}], 
               "}"}], "/.", 
              RowBox[{"componentDisplayStyle", "[", "joint", "]"}]}], ",", 
             " ", "num"}], "]"}]}], "\n", "\t", "]"}]}], "}"}]}], "\n", 
      "]"}]}]}], "]"}]}]], "Code",
 CellLabel->
  "In[6155]:=",ExpressionUUID->"1fd74222-6d18-4923-824c-6b8623c238a1"]
}, Closed]],

Cell[CellGroupData[{

Cell["removeOverlappingCoordinates[]", "Subsection",ExpressionUUID->"3a62305e-7798-4811-a242-8c9fc5e4aa41"],

Cell[BoxData[
 RowBox[{
  RowBox[{"removeOverlappingCoordinates", "[", " ", 
   RowBox[{
    RowBox[{"head_", "[", 
     RowBox[{
     "coordinateList_", ",", " ", "mr_", ",", " ", "cells_", ",", " ", 
      "labels_"}], "]"}], ",", " ", 
    RowBox[{"precision", " ", ":", " ", 
     RowBox[{"_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericQ", "[", 
          RowBox[{"N", "[", "#", "]"}], "]"}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"N", "[", "#", "]"}], ">", "0"}]}], " ", "&"}], ")"}]}], 
     " ", ":", " ", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "12"}], ")"}]}]}]}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"numberedVertices", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"Range", " ", "@", " ", 
           RowBox[{"Length", " ", "@", " ", "coordinateList"}]}], ",", " ", 
          "coordinateList"}], " ", "}"}], "]"}]}], ",", "\n", "\t", 
      "gatheredVertices", ",", "rules"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"gatheredVertices", "=", 
      RowBox[{"GatherBy", "[", "\n", "\t\t", 
       RowBox[{"numberedVertices", ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
         "they", " ", "are", " ", "the", " ", "same", " ", "if", " ", "they", 
          " ", "are", " ", "the", " ", "same", " ", "within", " ", "the", " ",
           "specified", " ", 
          RowBox[{"precision", "."}]}], "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"Rationalize", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", "precision"}], 
          "]"}], "&"}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
     RowBox[{"rules", "=", 
      RowBox[{"Dispatch", " ", "@", " ", 
       RowBox[{"Flatten", "[", " ", 
        RowBox[{"(*", 
         RowBox[{
         "two", " ", "levels", " ", "to", " ", "thread", " ", "through"}], 
         "*)"}], "\n", "\t\t", 
        RowBox[{"Thread", " ", "/@", " ", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"gatheredVertices", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], " ", 
           "\[Rule]", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "gatheredVertices", "]"}], "]"}]}], " ", 
          "]"}]}], "\n", "\t", "]"}]}]}], ";", "\n", "\n", "\t", 
     RowBox[{"head", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "&"}], " ", "/@", " ", 
        "gatheredVertices"}], ",", "\n", "\t\t", "mr", ",", "\n", "\t\t", 
       RowBox[{"deleteDuplicateCells", " ", "/@", " ", 
        RowBox[{"replaceCellIndices", "[", 
         RowBox[{"cells", ",", "rules"}], "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"replaceRules", "[", " ", 
        RowBox[{"labels", ",", " ", "rules", ",", " ", "2"}], " ", "]"}]}], 
      "\n", "\t", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6156]:=",ExpressionUUID->"bbfddab8-6ea8-4120-8eb4-f3216479642f"]
}, Closed]],

Cell[CellGroupData[{

Cell["deleteDegenerateCellsFromMechanism[]", "Subsection",ExpressionUUID->"fbf41453-ce16-449c-a7d8-392e16ddcde9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deleteDegenerateCellsFromMechanism", "[", " ", 
   RowBox[{"head_", "[", 
    RowBox[{
    "coordinates_", ",", " ", "mr_", ",", " ", "cells_", ",", " ", 
     "labels_"}], "]"}], " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"head", "[", " ", 
   RowBox[{"coordinates", ",", " ", "mr", ",", " ", 
    RowBox[{"deleteDegenerateCells", "[", "cells", "]"}], ",", " ", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Reverse", "[", "labels", "]"}], "]"}]}], " ", "]"}]}]], "Code",
 CellLabel->
  "In[6157]:=",ExpressionUUID->"c5fa8e38-81f1-4e35-952b-a5bead4479e6"]
}, Closed]],

Cell[CellGroupData[{

Cell["replaceRules[]", "Subsection",ExpressionUUID->"c0a0b487-7f74-48f4-a1f1-dd679b5bc71d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"replaceRules", "[", " ", 
    RowBox[{
     RowBox[{"{", "}"}], ",", " ", "appliedRules__"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceRules", "[", " ", 
    RowBox[{"rules_", ",", " ", "appliedRules_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"replaceRules", "[", " ", 
    RowBox[{"rules", ",", " ", "appliedRules", ",", " ", "1"}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceRules", "[", " ", 
    RowBox[{
     RowBox[{"rules", " ", ":", " ", 
      RowBox[{"{", "__Rule", "}"}]}], ",", " ", "appliedRules_", ",", " ", 
     "1"}], " ", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"flippedRules", " ", "=", " ", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"List", " ", "@@@", " ", "rules"}], " ", "]"}]}], " ", "}"}], 
     ",", "\n", "\t", 
     RowBox[{"Rule", " ", "@@@", " ", 
      RowBox[{"Transpose", "[", " ", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"Replace", "[", " ", 
          RowBox[{
           RowBox[{"flippedRules", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "appliedRules", 
           ",", " ", 
           RowBox[{"{", "1", "}"}]}], " ", "]"}], ",", " ", 
         RowBox[{"flippedRules", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", "}"}], " ", "]"}]}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"replaceRules", "[", " ", 
   RowBox[{
    RowBox[{"rules", " ", ":", " ", 
     RowBox[{"{", "__Rule", "}"}]}], ",", " ", "appliedRules_", ",", " ", 
    "2"}], " ", "]"}], " ", ":=", " ", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"flippedRules", " ", "=", " ", 
      RowBox[{"Transpose", "[", " ", 
       RowBox[{"List", " ", "@@@", " ", "rules"}], " ", "]"}]}], " ", "}"}], 
    ",", "\n", "\t", 
    RowBox[{"Rule", " ", "@@@", " ", 
     RowBox[{"Transpose", "[", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"flippedRules", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"Replace", "[", " ", 
         RowBox[{
          RowBox[{"flippedRules", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", ",", " ", "appliedRules", ",",
           " ", 
          RowBox[{"{", "1", "}"}]}], " ", "]"}]}], " ", "}"}], " ", "]"}]}]}],
    "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6158]:=",ExpressionUUID->"731da110-bc83-4f8d-b712-4e7c00d0e5ef"]
}, Closed]],

Cell[CellGroupData[{

Cell["toMeshRegion[], addMeshRegion[]", "Subsection",ExpressionUUID->"50aaa118-7aeb-4322-877d-ed8c6a7663fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "addMeshRegion", "]"}], " ", "=", " ", 
   RowBox[{"Options", "[", "MeshRegion", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{"head_", "[", " ", 
     RowBox[{"coordinates_", ",", " ", "oldMesh_", ",", " ", 
      RowBox[{"cells", " ", ":", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_Symbol", "[", 
          RowBox[{"_", ",", "_", ",", "_"}], "]"}], "..."}], "}"}]}], ",", 
      " ", "labels_"}], " ", "]"}], ",", " ", 
    RowBox[{"dim", " ", ":", " ", 
     RowBox[{"_", "?", "dimSpecQ"}]}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", "\t", 
  RowBox[{"head", "[", "\n", "\t\t", 
   RowBox[{"coordinates", ",", "\n", "\t\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"coordinateQ", "[", " ", "coordinates", " ", "]"}], " ", "&&", 
       " ", 
       RowBox[{"MatrixQ", "[", " ", 
        RowBox[{"coordinates", ",", " ", "NumericQ"}], " ", "]"}]}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"toMeshRegion", "[", " ", 
       RowBox[{
        RowBox[{"head", "[", " ", 
         RowBox[{"coordinates", ",", " ", 
          RowBox[{"{", "}"}], ",", " ", "cells", ",", " ", "labels"}], " ", 
         "]"}], " ", ",", " ", "dim", ",", " ", "opt"}], " ", "]"}], ",", 
      "\n", "\t\t\t", "oldMesh"}], "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
    "cells", ",", "\n", "\t\t", "labels"}], "\n", "\t", "]"}]}]}], "Code",
 CellLabel->
  "In[6162]:=",ExpressionUUID->"2d410e1a-3b13-4969-8633-a57c72f640aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "toMeshRegion", "]"}], " ", "=", " ", 
    RowBox[{"Options", "[", "MeshRegion", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toMeshRegion", "[", " ", 
    RowBox[{
     RowBox[{"o", " ", ":", " ", "mechanismPattern"}], ",", " ", 
     RowBox[{"pos_", "?", "MatrixQ"}], ",", " ", "d__"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"toMeshRegion", "[", " ", 
    RowBox[{
     RowBox[{"ReplacePart", "[", 
      RowBox[{"o", ",", " ", 
       RowBox[{"1", "\[Rule]", "pos"}]}], "]"}], ",", " ", "d"}], " ", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toMeshRegion", "[", " ", 
    RowBox[{
     RowBox[{"framework", "[", " ", 
      RowBox[{"coordinates_", ",", " ", "_", ",", " ", 
       RowBox[{"cells", " ", ":", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"_Symbol", "[", 
           RowBox[{"_", ",", "_", ",", "_"}], "]"}], "..."}], "}"}]}], ",", 
       " ", "labels_"}], " ", "]"}], ",", " ", 
     RowBox[{"dim", " ", ":", " ", 
      RowBox[{"_", "?", "dimSpecQ"}]}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"d", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"dim", "===", "Automatic"}], ",", " ", 
          RowBox[{"Last", "[", 
           RowBox[{"Dimensions", "[", "coordinates", "]"}], "]"}], ",", " ", 
          "dim"}], " ", "]"}]}], " ", "}"}], ",", "\n", "\t", 
      RowBox[{"Quiet", "[", " ", 
       RowBox[{
        RowBox[{"MeshRegion", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"PadRight", "[", " ", 
           RowBox[{"coordinates", ",", " ", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Length", "[", "coordinates", "]"}], ",", " ", "d"}], 
             " ", "}"}]}], " ", "]"}], ",", "\n", "\t\t", 
          RowBox[{"meshRegionCells", "[", " ", 
           RowBox[{"framework", ",", " ", "coordinates", ",", " ", "cells"}], 
           " ", "]"}], ",", "\n", "\t\t", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Method", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<CoplanarityTolerance\>\"", "->", "100"}], "}"}]}],
              ",", " ", "opt"}], "}"}], "]"}]}], "\n", "\t", "]"}], ",", " ", 
        
        RowBox[{"MeshRegion", "::", "dupcell"}]}], "]"}]}], "\n", "]"}], " ", 
    "/;", " ", 
    RowBox[{
     RowBox[{"coordinateQ", "[", " ", "coordinates", " ", "]"}], " ", "&&", 
     " ", 
     RowBox[{"MatrixQ", "[", " ", 
      RowBox[{"coordinates", ",", " ", "NumericQ"}], " ", "]"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toMeshRegion", "[", " ", 
    RowBox[{
     RowBox[{"origami", "[", " ", 
      RowBox[{"coordinates_", ",", " ", "_", ",", " ", 
       RowBox[{"cells", " ", ":", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"_Symbol", "[", 
           RowBox[{"_", ",", "_", ",", "_"}], "]"}], "..."}], "}"}]}], ",", 
       " ", "labels_"}], " ", "]"}], ",", " ", 
     RowBox[{"dim", " ", ":", " ", 
      RowBox[{"_", "?", "dimSpecQ"}]}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", "\n", "\t", 
       RowBox[{"d", " ", "=", " ", 
        RowBox[{"Which", "[", " ", "\n", "\t\t", 
         RowBox[{
          RowBox[{"dim", " ", "===", " ", "Automatic"}], ",", "\n", "\t\t\t", 
          
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"coordinates", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", ".", " ", 
              RowBox[{"coordinates", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}]}], " ", "<", " ", 
             RowBox[{"10", "^", 
              RowBox[{"(", 
               RowBox[{"-", "12"}], ")"}]}]}], ",", " ", "2", ",", " ", "3"}],
            " ", "]"}], ",", "\n", "\t\t", "True", ",", " ", "dim"}], "\n", 
         "\t", "]"}]}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{"Quiet", "[", " ", 
       RowBox[{
        RowBox[{"MeshRegion", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"PadRight", "[", " ", 
           RowBox[{"coordinates", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "coordinates", "]"}], ",", " ", "d"}], 
             " ", "}"}]}], " ", "]"}], ",", "\n", "\t\t", 
          RowBox[{"meshRegionCells", "[", " ", 
           RowBox[{"origami", ",", " ", "coordinates", ",", "cells"}], " ", 
           "]"}], ",", "\n", "\t\t", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Method", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<CoplanarityTolerance\>\"", "->", "100"}], "}"}]}],
              ",", " ", "opt"}], "}"}], "]"}]}], "\n", "\t", "]"}], ",", " ", 
        
        RowBox[{"MeshRegion", "::", "dupcell"}]}], " ", "]"}]}], "\n", "]"}], 
    " ", "/;", " ", 
    RowBox[{
     RowBox[{"coordinateQ", "[", " ", "coordinates", " ", "]"}], " ", "&&", 
     " ", 
     RowBox[{"MatrixQ", "[", " ", 
      RowBox[{"coordinates", ",", " ", "NumericQ"}], " ", "]"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "coord"}], " ", "=", " ", 
   "\"\<Coordinates are not valid 2D or 3D coordinates.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coordinateQ", "[", " ", 
   RowBox[{"coord", " ", ":", " ", "coordinatePattern"}], " ", "]"}], " ", ":=",
   " ", "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coordinateQ", "[", " ", "_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"mechanism", "::", "coord"}], "]"}], ";", " ", "False"}], 
    ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "dim"}], " ", "=", " ", 
   "\"\<Dimension specification `1` is not 2 or 3 or Automatic.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"dimSpecQ", "[", " ", 
   RowBox[{"2", "|", "3", "|", "Automatic"}], " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"dimSpecQ", "[", " ", "dim_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", " ", 
     RowBox[{
      RowBox[{"mechanism", "::", "dim"}], ",", " ", "dim"}], " ", "]"}], ";", 
    " ", "False"}], ")"}]}]}], "Code",
 CellLabel->
  "In[6164]:=",ExpressionUUID->"0d89744f-504c-4c93-bb5d-2c78c8866bf1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meshRegionCells", "[", " ", 
    RowBox[{"head_", ",", " ", "coordinates_", ",", " ", "cells_"}], " ", 
    "]"}], " ", ":=", " ", 
   RowBox[{"Join", "[", " ", "\n", "\t", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"toDisplayCells", "[", "head", "]"}], " ", "/@", " ", 
       "cells"}], "]"}], ",", " ", "\n", "\t", 
     RowBox[{"Point", "/@", " ", 
      RowBox[{"Range", "[", " ", 
       RowBox[{"Length", "[", "coordinates", "]"}], " ", "]"}]}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"toDisplayCells", "[", "mechanismHead_", "]"}], "[", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", 
     "]"}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dir", " ", "=", " ", 
       RowBox[{"meshDirective", "[", "head", "]"}]}], "}"}], ",", "\n", "\t", 
     
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{"dir", " ", "=!=", " ", "None"}], ",", "\n", "\t", 
       RowBox[{"MapThread", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Property", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"dir", "[", "#1", "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"displayStyle", "[", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", "head", ",", " ", 
                 "mechanismHead"}], "]"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"displayLabel", "[", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", " ", "head", ",", " ", 
                 "mechanismHead"}], "]"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"displayShape", "[", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", " ", "head", ",", " ", 
                 "mechanismHead"}], "]"}]}], "\n", "\t\t\t", "}"}], "]"}]}], 
           "\n", "\t\t", "]"}], "&"}], ",", "\n", "\t\t", 
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{"indices", ",", "\n", "\t\t\t", "display"}], "\n", "\t\t", 
          "}"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
       RowBox[{"{", "}"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"meshDirective", "[", "rigidBar", "]"}], " ", ":=", " ", 
  "Line"}], "\n", 
 RowBox[{
  RowBox[{"meshDirective", "[", "spring", "]"}], " ", ":=", " ", 
  "Line"}], "\n", 
 RowBox[{
  RowBox[{"meshDirective", "[", "joint", "]"}], " ", ":=", " ", 
  "Point"}], "\n", 
 RowBox[{
  RowBox[{"meshDirective", "[", "face", "]"}], " ", ":=", " ", 
  "Polygon"}], "\n", 
 RowBox[{
  RowBox[{"meshDirective", "[", 
   RowBox[{"dir", " ", ":", " ", 
    RowBox[{"Polygon", "|", "Line", "|", "Point"}]}], "]"}], " ", ":=", " ", 
  "dir"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"meshDirective", "[", "_", "]"}], " ", ":=", " ", "None"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"displayStyle", "[", " ", 
   RowBox[{
    RowBox[{"{", "}"}], ",", " ", "rigidBar", ",", " ", "_"}], " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{"MeshCellStyle", " ", "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", " ", "Black", ",", 
     " ", 
     RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}]}], "\n", 
 RowBox[{
  RowBox[{"displayStyle", "[", " ", 
   RowBox[{
    RowBox[{"{", "}"}], ",", " ", "spring", ",", " ", "_"}], " ", "]"}], " ", 
  ":=", " ", 
  RowBox[{"MeshCellStyle", " ", "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", " ", "Gray", ",", 
     " ", 
     RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}]}], "\n", 
 RowBox[{
  RowBox[{"displayStyle", "[", " ", 
   RowBox[{
    RowBox[{"{", "}"}], ",", " ", "joint", ",", " ", "_"}], "]"}], ":=", " ", 
  
  RowBox[{"MeshCellStyle", " ", "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{"Black", ",", " ", 
     RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}]}], "\n", 
 RowBox[{
  RowBox[{"displayStyle", "[", " ", 
   RowBox[{
    RowBox[{"{", "}"}], ",", " ", "face", " ", ",", " ", "_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"MeshCellStyle", " ", "\[Rule]", " ", 
   RowBox[{"GrayLevel", "[", "0.8", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"displayStyle", "[", " ", 
   RowBox[{
    RowBox[{"{", "}"}], " ", ",", " ", "_", ",", " ", "_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayStyle", "[", " ", 
    RowBox[{"style_List", ",", " ", "head_", " ", ",", " ", "_"}], " ", "]"}],
    " ", ":=", " ", 
   RowBox[{"MeshCellStyle", " ", "\[Rule]", " ", "style"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displayLabel", "[", " ", 
   RowBox[{"None", ",", " ", "_", " ", ",", " ", "_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"displayLabel", "[", " ", 
   RowBox[{"label_Text", ",", " ", "_", " ", ",", " ", "_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"MeshCellLabel", " ", "\[Rule]", " ", 
   RowBox[{"label", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayLabel", "[", " ", 
    RowBox[{"label_", ",", " ", "_", " ", ",", " ", "_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"MeshCellLabel", " ", "\[Rule]", " ", "label"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displayShape", "[", " ", 
   RowBox[{"None", ",", " ", "_", " ", ",", " ", "_"}], "]"}], " ", ":=", " ", 
  RowBox[{"MeshCellShapeFunction", " ", "\[Rule]", " ", "None"}]}], "\n", 
 RowBox[{
  RowBox[{"displayShape", "[", " ", 
   RowBox[{"Automatic", ",", " ", "spring", " ", ",", "_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"MeshCellShapeFunction", " ", "\[Rule]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"mechanisms`graphics`springShape", "[", "]"}], "[", 
      RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"displayShape", "[", " ", 
   RowBox[{"Automatic", ",", " ", "rigidBar", " ", ",", " ", "framework"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"MeshCellShapeFunction", " ", "\[Rule]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"mechanisms`graphics`rigidBarShape", "[", "]"}], "[", 
      RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"displayShape", "[", " ", 
   RowBox[{"Automatic", ",", " ", "rigidBar", " ", ",", " ", "origami"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"MeshCellShapeFunction", " ", "\[Rule]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"mechanisms`graphics`rigidBarShape", "[", 
       RowBox[{"\"\<width\>\"", " ", "\[Rule]", " ", "0.01"}], "]"}], "[", 
      RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"displayShape", "[", " ", 
   RowBox[{"Automatic", ",", " ", "face", " ", ",", " ", "_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"MeshCellShapeFunction", " ", "\[Rule]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"mechanisms`graphics`faceShape", "[", "]"}], "[", 
      RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"displayShape", "[", " ", 
   RowBox[{"Automatic", ",", " ", "joint", " ", ",", " ", "framework"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"MeshCellShapeFunction", " ", "\[Rule]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"mechanisms`graphics`jointShape", "[", "]"}], "[", 
      RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"displayShape", "[", " ", 
   RowBox[{"Automatic", ",", " ", "joint", " ", ",", " ", "origami"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"displayShape", "[", " ", 
   RowBox[{"Automatic", ",", " ", "_", " ", ",", " ", "_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"displayShape", "[", " ", 
   RowBox[{"shape_Function", ",", " ", "_", " ", ",", " ", "_"}], " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{"MeshCellShapeFunction", " ", "\[Rule]", " ", "shape"}]}], "\n", 
 RowBox[{
  RowBox[{"displayShape", "[", " ", 
   RowBox[{"shape_", ",", " ", "_", " ", ",", " ", "_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"MeshCellShapeFunction", " ", "\[Rule]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"shape", "[", 
      RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ")"}]}]}]}], "Code",\

 CellLabel->
  "In[6174]:=",ExpressionUUID->"517ca84f-1b48-4167-8dd8-f29e4a199c54"]
}, Closed]],

Cell[CellGroupData[{

Cell["framework[]", "Subsection",ExpressionUUID->"770f6e84-4aa1-4881-9af0-1dcf176096a2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Format", "[", 
    RowBox[{
     RowBox[{"f", " ", ":", " ", 
      RowBox[{"framework", "[", " ", 
       RowBox[{
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MatrixQ", "[", 
            RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
        "mr_", ",", " ", "packedCellPattern", ",", " ", "labelPattern"}], " ",
        "]"}]}], " ", ",", " ", "StandardForm"}], " ", "]"}], " ", ":=", " ", 
   "\n", "\t", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{"MeshRegionQ", "[", "mr", "]"}], ",", " ", "mr", ",", " ", 
     RowBox[{"toMeshRegion", "[", 
      RowBox[{"f", ",", " ", "Automatic"}], " ", "]"}]}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"framework", ",", 
   RowBox[{"{", "NHoldAll", "}"}]}], "]"}]}], "Code",
 CellLabel->
  "In[6201]:=",ExpressionUUID->"b367c3d5-d8eb-4e11-af07-dd6aca45cd64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "framework", "]"}], " ", "=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<overlapPrecision\>\"", " ", "\[Rule]", " ", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "12"}], ")"}]}]}], " ", ",", " ", 
       RowBox[{"Options", "[", "MeshRegion", "]"}]}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"coordinates", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"__", "?", "VectorQ"}], "}"}]}], ",", " ", 
     RowBox[{"cells", " ", ":", " ", 
      RowBox[{"Except", "[", " ", "packedCellPattern", " ", "]"}]}], " ", ",",
      " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"meshOptions", " ", "=", " ", 
         RowBox[{"FilterRules", "[", " ", 
          RowBox[{
           RowBox[{"{", "opt", "}"}], ",", " ", 
           RowBox[{"Options", "[", "MeshRegion", "]"}]}], " ", "]"}]}], ",", 
        "\n", 
        RowBox[{"newCoordinates", " ", "=", " ", 
         RowBox[{"PadRight", "[", "coordinates", "]"}]}], ",", "\n", 
        "parsedCoordinates", ",", " ", "parsedCells", ",", " ", 
        "parsedLabels"}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "parsedCoordinates", ",", " ", "parsedCells", ",", " ", 
          "parsedLabels"}], "}"}], " ", "=", " ", 
        RowBox[{"parseCells", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"newCoordinates", ",", " ", 
            RowBox[{"{", "}"}], ",", " ", 
            RowBox[{"{", "}"}]}], " ", "}"}], ",", " ", 
          RowBox[{"{", "cells", "}"}]}], " ", "]"}]}], ";", "\n", "\n", "\t", 
       
       RowBox[{"addMeshRegion", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"deleteDegenerateCellsFromMechanism", "[", "\n", "\t\t\t", 
          RowBox[{"removeOverlappingCoordinates", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"framework", "[", " ", 
             RowBox[{"parsedCoordinates", ",", " ", 
              RowBox[{"{", "}"}], ",", " ", 
              RowBox[{"defaultJoints", "[", 
               RowBox[{"parsedCoordinates", ",", "parsedCells"}], "]"}], ",", 
              " ", "parsedLabels"}], " ", "]"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}]}], 
           "\n", "\t\t\t", "]"}], "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
         "Automatic", ",", "\n", "\t\t", "meshOptions"}], "\n", "\t", 
        "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"frameworkPrecisionQ", "[", " ", 
     RowBox[{"OptionValue", "[", " ", "\"\<overlapPrecision\>\"", " ", "]"}], 
     " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"f", " ", ":", " ", 
      RowBox[{"framework", "[", " ", 
       RowBox[{
        RowBox[{"_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
        "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}]}], " ", 
     ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"meshOptions", " ", "=", " ", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "opt", "}"}], ",", " ", 
         RowBox[{"Options", "[", "MeshRegion", "]"}]}], " ", "]"}]}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"addMeshRegion", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"deleteDegenerateCellsFromMechanism", "[", " ", 
        RowBox[{"removeOverlappingCoordinates", "[", " ", 
         RowBox[{"f", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}]}], 
         " ", "]"}], " ", "]"}], ",", "\n", "\t\t", "Automatic", ",", "\n", 
       "\t\t", "meshOptions"}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "precision"}], " ", "=", " ", 
   "\"\<Precision `1` must be a positive, nonzero number.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"frameworkPrecisionQ", "[", " ", 
   RowBox[{"prec_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
       RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], " ", "]"}], " ", ":=", 
  " ", "True"}], "\n", 
 RowBox[{
  RowBox[{"frameworkPrecisionQ", "[", " ", "prec_", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"mechanism", "::", "precision"}], ",", " ", "prec"}], "]"}], 
    ";", " ", "False"}], ")"}]}]}], "Code",
 CellLabel->
  "In[6203]:=",ExpressionUUID->"77a841d3-eaaf-4cec-a64e-ba0e1f59f1b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
      RowBox[{"mr", " ", ":", " ", 
       RowBox[{"_MeshRegion", "|", 
        RowBox[{"{", "}"}]}]}], " ", ",", " ", "packedCellPattern", ",", " ", 
      "labelPattern"}], " ", "]"}], "[", "\"\<Methods\>\"", "]"}], " ", ":=", 
   " ", "\n", "\t", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
    "\"\<type\>\"", ",", "\n", "\t", "\"\<positions\>\"", ",", " ", "\n", 
     "\t", "\"\<mesh\>\"", ",", " ", "\n", "\t", "\"\<components\>\"", ",", 
     " ", "\n", "\t", "\"\<labels\>\"", ",", "\n", "\t", 
     "\"\<labeledVertices\>\"", ",", " ", "\n", "\t", 
     "\"\<EmbeddingDimension\>\"", ",", " ", "\n", "\t", 
     "\"\<DisplayDimension\>\"", ",", "\n", "\t", "\"\<VertexNumber\>\"", ",",
      "\n", "\t", "\"\<edges\>\"", ",", "\n", "\t", "\"\<faces\>\""}], "\n", 
    "\t", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<type\>\"", "]"}], " ", ":=", " ", "framework"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<positions\>\"", "]"}], " ", ":=", " ", "coordinates"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "mr_MeshRegion", ",",
      " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
   "\"\<mesh\>\"", "]"}], " ", ":=", " ", "mr"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
      RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
    "\"\<mesh\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"toMeshRegion", "[", " ", 
    RowBox[{
     RowBox[{"framework", "[", " ", 
      RowBox[{"coordinates", ",", " ", 
       RowBox[{"{", "}"}], ",", " ", "cells", ",", " ", "labels"}], " ", 
      "]"}], ",", " ", "Automatic"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
      "labelPattern"}], " ", "]"}], "[", "\"\<components\>\"", "]"}], " ", ":=",
    " ", "cells"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
     "packedCellPattern", ",", " ", 
     RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
   "\"\<labels\>\"", "]"}], " ", ":=", " ", "labels"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", 
      RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
    "\"\<labeledVertices\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Thread", "[", " ", 
    RowBox[{"\"\<label\>\"", " ", "\[Rule]", " ", 
     RowBox[{"ReplacePart", "[", " ", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"None", " ", ",", " ", 
         RowBox[{"Length", "[", "coordinates", "]"}]}], "]"}], ",", " ", 
       RowBox[{"Reverse", "/@", "labels"}]}], "]"}]}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<EmbeddingDimension\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"Dimensions", "[", "coordinates", "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "mr_MeshRegion", ",",
      " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
   "\"\<DisplayDimension\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"Last", "[", 
   RowBox[{"Dimensions", "[", 
    RowBox[{"MeshCoordinates", "[", "mr", "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
      RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
    "\"\<DisplayDimension\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"Dimensions", "[", 
     RowBox[{"MeshCoordinates", "[", "coordinates", "]"}], "]"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<VertexNumber\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Length", "[", "coordinates", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
     "labelPattern"}], " ", "]"}], "[", "\"\<edges\>\"", "]"}], " ", ":=", 
  " ", 
  RowBox[{"DeleteDuplicatesBy", "[", " ", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Select", "[", " ", 
       RowBox[{
        RowBox[{"cells", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"MatrixQ", "[", "#", "]"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"Dimensions", "[", "#", "]"}], "]"}], "\[Equal]", "2"}]}],
          " ", "&"}]}], " ", "]"}], ",", "1"}], "]"}], ",", " ", "Sort"}], 
   " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "m_MeshRegion", ",",
       " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<edges\>\"", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"MeshCells", "[", 
     RowBox[{"m", ",", "1"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
     RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
   "\"\<faces\>\"", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"MeshCells", "[", " ", 
    RowBox[{
     RowBox[{"toMeshRegion", "[", " ", 
      RowBox[{
       RowBox[{"framework", "[", " ", 
        RowBox[{"coordinates", ",", " ", 
         RowBox[{"{", "}"}], ",", " ", "cells", ",", " ", "labels"}], " ", 
        "]"}], ",", " ", "Automatic"}], " ", "]"}], " ", ",", "2"}], "]"}], 
   "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "m_MeshRegion", ",", 
     " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
   "\"\<faces\>\"", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"MeshCells", "[", 
    RowBox[{"m", ",", "2"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "Code",
 CellLabel->
  "In[6209]:=",ExpressionUUID->"271ee591-97c5-48b0-9a63-744c8a95ef8b"]
}, Closed]],

Cell[CellGroupData[{

Cell["origami[]", "Subsection",ExpressionUUID->"ab454d33-6f2f-4fae-b957-bc3f25e232d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Format", "[", 
    RowBox[{
     RowBox[{"f", " ", ":", " ", 
      RowBox[{"origami", "[", " ", 
       RowBox[{
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MatrixQ", "[", 
            RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
        "mr_", ",", " ", "packedCellPattern", ",", " ", "labelPattern"}], " ",
        "]"}]}], " ", ",", " ", "StandardForm"}], " ", "]"}], " ", ":=", "\n",
    "\t", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{"MeshRegionQ", "[", "mr", "]"}], ",", " ", "mr", ",", " ", 
     RowBox[{"toMeshRegion", "[", 
      RowBox[{"f", ",", " ", "Automatic"}], " ", "]"}]}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"origami", ",", 
   RowBox[{"{", "NHoldAll", "}"}]}], "]"}]}], "Code",
 CellLabel->
  "In[6225]:=",ExpressionUUID->"7aa32004-142e-4398-b75b-5f4e9b58bc92"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "origami", "]"}], " ", "=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<overlapPrecision\>\"", " ", "\[Rule]", " ", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "12"}], ")"}]}]}], " ", ",", " ", 
       RowBox[{"Options", "[", "MeshRegion", "]"}]}], "}"}], "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "\n", "This"}], " ", "is", " ", "a", " ", "kludge", " ", 
    "to", " ", 
    RowBox[{"fix", " ", "?", "origami"}], " ", "which", " ", "returns", " ", 
    "an", " ", "error", " ", "from", " ", "PadRight", " ", "otherwise", " ", 
    "for", " ", "reasons", " ", "that", " ", "are", " ", "not", " ", 
    "entirely", " ", 
    RowBox[{"clear", "."}]}], "\n", "***)"}]}], "\n", 
 RowBox[{
  RowBox[{"mypad", "[", " ", 
   RowBox[{"c_", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n1_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ",", " ", "n2_"}], "}"}]}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{"PadRight", "[", 
   RowBox[{"c", ",", " ", 
    RowBox[{"{", 
     RowBox[{"n1", ",", "n2"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mypad", "[", " ", 
    RowBox[{"c_", ",", " ", "_"}], " ", "]"}], " ", ":=", " ", "c"}], "\n", 
  RowBox[{"(*", "*****)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"coordinates", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"__", "?", "VectorQ"}], "}"}]}], ",", " ", 
     RowBox[{"cells", " ", ":", " ", 
      RowBox[{"Except", "[", " ", "packedCellPattern", " ", "]"}]}], " ", ",",
      " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"meshOptions", " ", "=", " ", 
         RowBox[{"FilterRules", "[", " ", 
          RowBox[{
           RowBox[{"{", "opt", "}"}], ",", " ", 
           RowBox[{"Options", "[", "MeshRegion", "]"}]}], " ", "]"}]}], ",", 
        "\n", 
        RowBox[{"newCoordinates", " ", "=", " ", 
         RowBox[{"PadRight", "[", "coordinates", "]"}]}], ",", "\n", 
        "parsedCoordinates", ",", " ", "parsedCells", ",", " ", 
        "parsedLabels"}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "parsedCoordinates", ",", " ", "parsedCells", ",", " ", 
          "parsedLabels"}], "}"}], " ", "=", " ", 
        RowBox[{"parseCells", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"newCoordinates", ",", " ", 
            RowBox[{"{", "}"}], ",", " ", 
            RowBox[{"{", "}"}]}], " ", "}"}], ",", " ", 
          RowBox[{"{", "cells", "}"}]}], " ", "]"}]}], ";", "\n", "\n", "\t", 
       
       RowBox[{"addMeshRegion", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"deleteDegenerateCellsFromMechanism", "[", "\n", "\t\t\t", 
          RowBox[{"removeOverlappingCoordinates", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"origami", "[", " ", 
             RowBox[{
              RowBox[{"mypad", "[", " ", 
               RowBox[{"parsedCoordinates", " ", ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Length", "[", "parsedCoordinates", "]"}], " ", ",",
                   " ", "3"}], "}"}]}], " ", "]"}], ",", " ", 
              RowBox[{"{", "}"}], ",", " ", 
              RowBox[{"defaultJoints", "[", 
               RowBox[{"parsedCoordinates", ",", "parsedCells"}], "]"}], ",", 
              " ", "parsedLabels"}], " ", "]"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}]}], 
           "\n", "\t\t\t", "]"}], "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
         "Automatic", ",", "\n", "\t\t", "meshOptions"}], "\n", "\t", 
        "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"frameworkPrecisionQ", "[", " ", 
     RowBox[{"OptionValue", "[", " ", "\"\<overlapPrecision\>\"", " ", "]"}], 
     " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"origami", "[", " ", 
   RowBox[{
    RowBox[{"f", " ", ":", " ", 
     RowBox[{"origami", "[", 
      RowBox[{
       RowBox[{"_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
       "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}]}], " ", 
    ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"meshOptions", " ", "=", " ", 
      RowBox[{"FilterRules", "[", 
       RowBox[{
        RowBox[{"{", "opt", "}"}], ",", " ", 
        RowBox[{"Options", "[", "MeshRegion", "]"}]}], " ", "]"}]}], "}"}], 
    ",", "\n", "\t", 
    RowBox[{"addMeshRegion", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"deleteDegenerateCellsFromMechanism", "[", " ", 
       RowBox[{"removeOverlappingCoordinates", "[", " ", 
        RowBox[{"f", ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}]}], " ",
         "]"}], " ", "]"}], ",", "\n", "\t\t", "Automatic", ",", "\n", "\t\t",
       "meshOptions"}], "\n", "\t", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6227]:=",ExpressionUUID->"bddf89f6-b517-416e-b7e7-6e4fe168a0c1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
      RowBox[{"mr", " ", ":", " ", 
       RowBox[{"_MeshRegion", "|", 
        RowBox[{"{", "}"}]}]}], ",", " ", "packedCellPattern", ",", " ", 
      "labelPattern"}], " ", "]"}], "[", "\"\<Methods\>\"", "]"}], " ", ":=", 
   " ", "\n", "\t", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
    "\"\<type\>\"", ",", "\n", "\t", "\"\<positions\>\"", ",", " ", "\n", 
     "\t", "\"\<mesh\>\"", ",", " ", "\n", "\t", "\"\<components\>\"", ",", 
     " ", "\n", "\t", "\"\<labels\>\"", ",", " ", "\"\<labeledVertices\>\"", 
     ",", "\n", "\t", "\"\<EmbeddingDimension\>\"", ",", " ", "\n", "\t", 
     "\"\<DisplayDimension\>\"", ",", "\n", "\t", "\"\<VertexNumber\>\"", ",",
      "\n", "\t", "\"\<edges\>\"", ",", "\n", "\t", "\"\<faces\>\""}], "\n", 
    "\t", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<type\>\"", "]"}], " ", ":=", " ", "origami"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<positions\>\"", "]"}], " ", ":=", " ", "coordinates"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "mr_MeshRegion", ",",
      " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
   "\"\<mesh\>\"", "]"}], " ", ":=", " ", "mr"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
      RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
    "\"\<mesh\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"toMeshRegion", "[", " ", 
    RowBox[{
     RowBox[{"origami", "[", " ", 
      RowBox[{"coordinates", ",", " ", 
       RowBox[{"{", "}"}], ",", " ", "cells", ",", " ", "labels"}], " ", 
      "]"}], ",", " ", "Automatic"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
      "labelPattern"}], " ", "]"}], "[", "\"\<components\>\"", "]"}], " ", ":=",
    " ", "cells"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
     "packedCellPattern", ",", " ", 
     RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
   "\"\<labels\>\"", "]"}], " ", ":=", " ", "labels"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", 
      RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
    "\"\<labeledVertices\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Thread", "[", " ", 
    RowBox[{"\"\<label\>\"", " ", "\[Rule]", " ", 
     RowBox[{"ReplacePart", "[", " ", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"None", " ", ",", " ", 
         RowBox[{"Length", "[", "coordinates", "]"}]}], "]"}], ",", " ", 
       RowBox[{"Reverse", "/@", "labels"}]}], "]"}]}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<EmbeddingDimension\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"Dimensions", "[", "coordinates", "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "mr_MeshRegion", ",",
      " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
   "\"\<DisplayDimension\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"Last", "[", 
   RowBox[{"Dimensions", "[", 
    RowBox[{"MeshCoordinates", "[", "mr", "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
      RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
    "\"\<DisplayDimension\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"Dimensions", "[", " ", 
     RowBox[{"MeshCoordinates", "[", " ", 
      RowBox[{"toMeshRegion", "[", " ", 
       RowBox[{
        RowBox[{"origami", "[", 
         RowBox[{"coordinates", ",", 
          RowBox[{"{", "}"}], ",", "cells", ",", "labels"}], "]"}], ",", " ", 
        "Automatic"}], " ", "]"}], " ", "]"}], " ", "]"}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<VertexNumber\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Length", "[", "coordinates", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
     "labelPattern"}], " ", "]"}], "[", "\"\<edges\>\"", "]"}], " ", ":=", 
  " ", 
  RowBox[{"DeleteDuplicatesBy", "[", " ", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Select", "[", " ", 
       RowBox[{
        RowBox[{"cells", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"MatrixQ", "[", "#", "]"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"Dimensions", "[", "#", "]"}], "]"}], "\[Equal]", "2"}]}],
          " ", "&"}]}], " ", "]"}], ",", "1"}], "]"}], ",", " ", "Sort"}], 
   " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "m_MeshRegion", ",",
       " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<edges\>\"", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"MeshCells", "[", 
     RowBox[{"m", ",", "1"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
     RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
   "\"\<faces\>\"", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"MeshCells", "[", " ", 
    RowBox[{
     RowBox[{"toMeshRegion", "[", " ", 
      RowBox[{
       RowBox[{"origami", "[", " ", 
        RowBox[{"coordinates", ",", " ", 
         RowBox[{"{", "}"}], ",", " ", "cells", ",", " ", "labels"}], " ", 
        "]"}], ",", " ", "Automatic"}], " ", "]"}], " ", ",", "2"}], "]"}], 
   "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "m_MeshRegion", ",", 
     " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
   "\"\<faces\>\"", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"MeshCells", "[", 
    RowBox[{"m", ",", "2"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "Code",
 CellLabel->
  "In[6232]:=",ExpressionUUID->"e8717162-81c3-408e-ac1b-17b556cd74ba"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["functions to manipulate mechanisms", "Section",ExpressionUUID->"090ed141-5b45-4288-b0a6-e72427c2adbf"],

Cell[CellGroupData[{

Cell["addLabel[], removeLabel[], mergeLabel[]", "Subsection",ExpressionUUID->"412267ca-b4cd-4402-8196-31c933c269a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"addLabel", "[", " ", 
     RowBox[{"requestedLabels", " ", ":", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Rule", "[", 
          RowBox[{"_", ",", "_"}], "]"}], "..."}], "}"}], "|", 
       RowBox[{"Rule", "[", 
        RowBox[{"_", ",", "_"}], "]"}]}]}], " ", "]"}], "[", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], "]"}], " ", ":=", " ", 
   "\n", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"vertices", ",", " ", "newLabels", ",", " ", 
       RowBox[{"labelRules", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "requestedLabels", "}"}], "]"}]}]}], "\n", "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vertices", ",", " ", "newLabels"}], "}"}], " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"List", " ", "@@@", " ", "labelRules"}], "]"}]}], ";", "\n", 
      "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"Head", "[", "m", "]"}], "[", " ", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"m", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"m", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{"Join", "[", " ", 
         RowBox[{
          RowBox[{"Thread", "[", " ", 
           RowBox[{"newLabels", " ", "\[Rule]", " ", 
            RowBox[{"(", 
             RowBox[{"vertices", " ", "/.", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "]"}], " ", ",", 
          " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}]}], " ", "]"}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"addLabel", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "labels_"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"addLabel", "[", " ", "labels", " ", "]"}], " ", "@", " ", 
   "m"}]}]}], "Code",
 CellLabel->
  "In[6248]:=",ExpressionUUID->"c5ef4898-ae43-4630-a76b-a197f145e229"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"removeLabel", "[", " ", "pattern_", " ", "]"}], "[", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Head", "[", "m", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"m", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
    RowBox[{"m", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
    RowBox[{"m", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
    RowBox[{"DeleteCases", "[", " ", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", " ", "pattern"}], " ", "]"}]}], 
   " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"removeLabel", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "pattern_"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"removeLabel", "[", "pattern", "]"}], " ", "@", " ", 
   "m"}]}]}], "Code",
 CellLabel->
  "In[6250]:=",ExpressionUUID->"7769768c-b235-4342-a445-0a19391ae513"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mergeLabel", "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"Head", "[", "m", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"m", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
    RowBox[{"m", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
    RowBox[{"m", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
    RowBox[{"Reverse", " ", "/@", " ", 
     RowBox[{"Normal", "@", 
      RowBox[{"Merge", "[", " ", 
       RowBox[{
        RowBox[{"Reverse", "/@", 
         RowBox[{"m", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], " ", ",", " ", "First"}], 
       "]"}]}]}]}], " ", "]"}]}]], "Code",
 CellLabel->
  "In[6252]:=",ExpressionUUID->"d16c86aa-a6dd-47d8-88f1-defaf9598ff8"]
}, Closed]],

Cell[CellGroupData[{

Cell["selectCells[]", "Subsection",ExpressionUUID->"f48760e0-20ae-4bdb-9fec-8e23ae133fad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"selectCells", "[", " ", "patt_", " ", "]"}], "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"pattern", " ", "=", " ", 
       RowBox[{"cellPattern", "[", " ", "patt", " ", "]"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"m", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"takeCells", "[", " ", 
           RowBox[{
            RowBox[{"identifyComponents", "[", " ", 
             RowBox[{"pattern", ",", " ", "#"}], "]"}], ",", " ", "#"}], " ", 
           "]"}], "&"}], " ", "/@", " ", 
         RowBox[{"m", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"m", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"selectCells", "[", " ", 
    RowBox[{"patt_", ",", " ", "dataSpec_", ",", " ", "f_"}], " ", "]"}], "[", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"pattern", " ", "=", " ", 
      RowBox[{"cellPattern", "[", " ", "patt", " ", "]"}]}], " ", "}"}], ",", 
    "\n", "\t", 
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"cells", " ", "=", " ", 
        RowBox[{"Flatten", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"takeCells", "[", " ", 
            RowBox[{
             RowBox[{"identifyComponents", "[", " ", 
              RowBox[{"pattern", " ", ",", " ", "#"}], " ", "]"}], ",", " ", 
             "#"}], " ", "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}], " ", "}"}], ",", 
      "\n", "\t\t", 
      RowBox[{"With", "[", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"remainingCells", " ", "=", " ", 
          RowBox[{"Flatten", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"takeCells", "[", " ", 
              RowBox[{
               RowBox[{"selectComponents", "[", " ", 
                RowBox[{
                 RowBox[{"Head", "[", "#", "]"}], ",", " ", "dataSpec", ",", 
                 " ", "f", ",", " ", "#"}], " ", "]"}], " ", ",", " ", "#"}], 
              " ", "]"}], "&"}], " ", "/@", " ", "cells"}], " ", "]"}]}], 
         "}"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Head", "[", "m", "]"}], "[", " ", 
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"{", "}"}], ",", " ", "remainingCells", ",", " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}]}], "\n", "\t\t", 
       "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6253]:=",ExpressionUUID->"abbe108b-1bdd-4ca3-a30c-eb279fb340b4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"selectCells", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "patt_"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"selectCells", "[", "patt", "]"}], "[", "m", "]"}], ",", " ", 
    "Automatic"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"selectCells", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "patt_", ",", 
    " ", "dataSpec_", ",", " ", "f_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"selectCells", "[", 
      RowBox[{"patt", ",", " ", "dataSpec", ",", " ", "f"}], "]"}], "[", "m", 
     "]"}], ",", " ", "Automatic"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6255]:=",ExpressionUUID->"64bb5b47-556a-4e46-8b4d-f51ef1d8a346"]
}, Closed]],

Cell[CellGroupData[{

Cell["changeCellData[]", "Subsection",ExpressionUUID->"901ddd13-737f-4e91-b19e-1ed99e5bece8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"changeCellData", "[", " ", 
    RowBox[{"Rule", "[", 
     RowBox[{"patt_", " ", ",", " ", 
      RowBox[{"dataSpec", " ", ":", " ", 
       RowBox[{
        RowBox[{"{", "___Rule", "}"}], "|", "_Rule"}]}]}], "]"}], " ", "]"}], 
   "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pattern", " ", "=", " ", 
       RowBox[{"cellPattern", "[", "patt", "]"}]}], ",", " ", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "dataSpec", "}"}], "]"}]}]}], " ", "}"}], ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"m", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"changeDataInCell", "[", " ", 
         RowBox[{
          RowBox[{"identifyComponents", "[", " ", 
           RowBox[{"pattern", ",", " ", "#"}], " ", "]"}], ",", " ", "#", " ",
           ",", " ", "data"}], "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"m", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"changeCellData", "[", " ", 
     RowBox[{"ruleList", " ", ":", " ", 
      RowBox[{"{", "__Rule", "}"}]}], " ", "]"}], "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"changeCellData", "[", "#2", "]"}], "@", "#1"}], "&"}], ",", 
     " ", "m", ",", " ", "ruleList"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeCellData", "[", " ", 
    RowBox[{"dataHead_", ",", " ", "dataType_", ",", " ", "dataList_List"}], 
    " ", "]"}], "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  "\n", "\t", 
  RowBox[{
   RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"m", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
    RowBox[{"m", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"changeDataFromList", "[", " ", 
       RowBox[{
       "#", ",", " ", "dataHead", ",", " ", "dataType", ",", " ", 
        "dataList"}], " ", "]"}], " ", "&"}], " ", "/@", " ", 
     RowBox[{"m", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ",", "\n", "\t\t", 
    RowBox[{"m", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}]}], "Code",
 CellLabel->
  "In[6257]:=",ExpressionUUID->"70f625df-561a-4796-a043-b09f24c338ff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"changeCellData", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
    RowBox[{"ruleList", " ", ":", " ", 
     RowBox[{
      RowBox[{"{", "___Rule", "}"}], "|", "_Rule"}]}]}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{
   RowBox[{"changeCellData", "[", "ruleList", "]"}], "[", "m", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"changeCellData", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "dataHead_", 
    ",", " ", "dataType_", ",", " ", "dataList_"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"changeCellData", "[", " ", 
    RowBox[{"dataHead", ",", " ", "dataType", ",", " ", "dataList"}], " ", 
    "]"}], "[", "m", "]"}]}]}], "Code",
 CellLabel->
  "In[6260]:=",ExpressionUUID->"125d59ca-1967-4382-af1c-7ee3973c19c1"]
}, Closed]],

Cell[CellGroupData[{

Cell["highlightCells[]", "Subsection",ExpressionUUID->"bd42c6b1-50f7-4423-910c-2a3f51c02179"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"highlightCells", "[", " ", 
    RowBox[{"Rule", "[", 
     RowBox[{"patt_", ",", " ", 
      RowBox[{"displaySpec", " ", ":", " ", 
       RowBox[{
        RowBox[{"{", "___Rule", "}"}], "|", "_Rule"}]}]}], " ", "]"}], " ", 
    "]"}], "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pattern", " ", "=", " ", 
       RowBox[{"cellPattern", "[", "patt", "]"}]}], ",", " ", 
      RowBox[{"display", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "displaySpec", "}"}], "]"}]}]}], " ", "}"}], ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"{", "}"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"changeCellDisplay", "[", " ", 
         RowBox[{
          RowBox[{"identifyComponents", "[", " ", 
           RowBox[{"pattern", ",", " ", "#"}], " ", "]"}], ",", " ", "#", ",",
           " ", "display"}], " ", "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"m", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"highlightCells", "[", " ", 
     RowBox[{"ruleList", " ", ":", " ", 
      RowBox[{"{", "___Rule", "}"}]}], " ", "]"}], "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Fold", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"highlightCells", "[", "#2", "]"}], "@", "#1"}], "&"}], ",", 
     " ", "m", ",", " ", "ruleList"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"highlightRulePattern", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", "___Rule", "}"}], "|", "_Rule"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"highlightCells", "[", " ", 
    RowBox[{"componentHead_", ",", " ", 
     RowBox[{"displayRules", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"highlightRulePattern", ".."}], "}"}]}]}], " ", "]"}], "[", 
   " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"cellDisplays", " ", "=", " ", 
      RowBox[{"compressDisplayCells", "[", " ", 
       RowBox[{"componentHead", ",", " ", 
        RowBox[{"Flatten", " ", "/@", " ", 
         RowBox[{"List", " ", "/@", " ", "displayRules"}]}]}], " ", "]"}]}], 
     " ", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\n", "\t\t", 
      RowBox[{"{", "}"}], ",", " ", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"changeCellDisplayFromList", "[", " ", 
         RowBox[{
         "#", " ", ",", " ", "componentHead", ",", " ", "cellDisplays"}], " ",
          "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", "\n", "\t\t", 
      RowBox[{"m", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6262]:=",ExpressionUUID->"44fd9c00-60de-4699-902e-26ccee16983e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"highlightCells", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
    RowBox[{"ruleList", " ", ":", " ", 
     RowBox[{
      RowBox[{"{", "___Rule", "}"}], "|", "_Rule"}]}]}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"highlightCells", "[", " ", "ruleList", " ", "]"}], "[", "m", 
     "]"}], ",", " ", "Automatic"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"highlightCells", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
    "componentHead_", ",", " ", "displayList_"}], " ", "]"}], " ", ":=", " ", 
  
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"highlightCells", "[", " ", 
      RowBox[{"componentHead", ",", " ", "displayList"}], "]"}], "[", "m", 
     "]"}], ",", " ", "Automatic"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6266]:=",ExpressionUUID->"37afab49-8fac-4645-8358-cb2bfeee5c7f"]
}, Closed]],

Cell[CellGroupData[{

Cell["spitEdge[]", "Subsection",ExpressionUUID->"5fcbe626-6c14-44c5-bab9-9d2d729d4048"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"existingEdgeQ", "[", " ", 
    RowBox[{"m_", ",", " ", "edgeSpec_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"MemberQ", "[", " ", 
    RowBox[{
     RowBox[{"m", "[", "\"\<edges\>\"", "]"}], ",", " ", 
     RowBox[{"edgeSpec", "|", 
      RowBox[{"Reverse", "[", "edgeSpec", "]"}]}]}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"splitEdge", "[", " ", 
     RowBox[{
      RowBox[{"edgeSpec", " ", ":", " ", 
       RowBox[{"{", 
        RowBox[{"_", ",", "_"}], "}"}]}], ",", " ", 
      RowBox[{"label_", " ", "\[Rule]", " ", 
       RowBox[{"pos_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"VectorQ", "[", 
           RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}]}], " ", 
     "]"}], "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"edge", " ", "=", " ", 
        RowBox[{"edgeSpec", " ", "/.", " ", 
         RowBox[{"m", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], " ", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"addCells", "[", " ", 
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Point", "[", " ", 
            RowBox[{"label", " ", "\[Rule]", " ", "pos"}], " ", "]"}], ",", 
           "\n", "\t\t\t", 
           RowBox[{"rigidBar", "[", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"edge", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", " ", "label"}], "}"}], 
            " ", "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"rigidBar", "[", " ", 
            RowBox[{"{", 
             RowBox[{"label", ",", " ", 
              RowBox[{"edge", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], " ", "]"}]}], "\n", 
          "\t\t", "}"}], " ", "]"}], " ", "@", " ", 
        RowBox[{
         RowBox[{"deleteCells", "[", " ", 
          RowBox[{"_", "[", "edge", "]"}], " ", "]"}], " ", "@", " ", "m"}]}],
        "  ", "/;", " ", 
       RowBox[{"existingEdgeQ", "[", 
        RowBox[{"m", ",", " ", "edge"}], " ", "]"}]}]}], "\n", "]"}], " ", "/;",
     " ", 
    RowBox[{
     RowBox[{"Length", "[", "pos", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"splitEdge", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "edgeSpec_", 
    ",", " ", 
    RowBox[{"label_", " ", "\[Rule]", " ", "pos_"}]}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"splitEdge", "[", " ", 
      RowBox[{"edgeSpec", ",", " ", 
       RowBox[{"label", " ", "\[Rule]", " ", "pos"}]}], " ", "]"}], "[", "m", 
     "]"}], " ", ",", " ", "Automatic"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6268]:=",ExpressionUUID->"a6ffe01d-8df3-4581-a8a3-67e15d54ebde"]
}, Closed]],

Cell[CellGroupData[{

Cell["addVertex[]", "Subsection",ExpressionUUID->"7a538fa5-fa9c-4a14-a6d0-515b6a2afe6a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"existingFaceQ", "[", " ", 
    RowBox[{"m_", ",", " ", "faceSpec_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"MemberQ", "[", " ", 
    RowBox[{
     RowBox[{"Sort", " ", "/@", " ", 
      RowBox[{"m", "[", "\"\<faces\>\"", "]"}]}], ",", " ", 
     RowBox[{"Sort", "[", "faceSpec", "]"}]}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"addVertex", "[", " ", 
     RowBox[{
      RowBox[{"faceSpec", " ", ":", " ", 
       RowBox[{"{", "__", "}"}]}], ",", " ", 
      RowBox[{"Rule", "[", 
       RowBox[{"label_", " ", ",", " ", 
        RowBox[{"posSpec_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"VectorQ", "[", 
            RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], " ", 
       "]"}]}], " ", "]"}], "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"faces", " ", "=", " ", 
        RowBox[{"faceSpec", " ", "/.", " ", 
         RowBox[{"m", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], ",", " ", 
       RowBox[{"pos", " ", "=", " ", 
        RowBox[{"PadRight", "[", 
         RowBox[{"posSpec", ",", " ", 
          RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], " ", 
         "]"}]}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"(", "\n", "\t\t", 
       RowBox[{
        RowBox[{"addCells", "[", 
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Point", "[", " ", 
            RowBox[{"label", " ", "\[Rule]", " ", "pos"}], " ", "]"}], ",", 
           "\n", "\t\t\t", 
           RowBox[{"Map", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"face", "[", 
               RowBox[{"{", 
                RowBox[{"label", ",", " ", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "&"}], ",", 
             " ", 
             RowBox[{"Partition", "[", 
              RowBox[{"faces", ",", "2", ",", "1", ",", "1"}], "]"}]}], " ", 
            "]"}]}], "\n", "\t\t", "}"}], "\n", "\t\t", "]"}], " ", "@", " ", 
        
        RowBox[{
         RowBox[{"deleteCells", "[", " ", 
          RowBox[{"_", "[", "faceSpec", "]"}], " ", "]"}], " ", "@", " ", 
         "m"}]}], " ", "\n", "\t", ")"}], " ", "/;", " ", 
      RowBox[{"existingFaceQ", "[", 
       RowBox[{"m", ",", " ", "faces"}], "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"addVertex", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "faceSpec_", 
    ",", " ", 
    RowBox[{"label_", " ", "\[Rule]", " ", "posSpec_"}]}], " ", "]"}], " ", ":=",
   "\n", "\t", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"addVertex", "[", " ", 
      RowBox[{"faceSpec", ",", " ", 
       RowBox[{"label", " ", "\[Rule]", " ", "posSpec"}]}], " ", "]"}], "[", 
     "m", "]"}], " ", ",", " ", "Automatic"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6271]:=",ExpressionUUID->"c65134ac-4cdf-46d0-bd2a-6159fae14e73"]
}, Closed]],

Cell[CellGroupData[{

Cell["deleteCells[]", "Subsection",ExpressionUUID->"7c158d78-4fa5-4987-8d54-d4f45a2f6c7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"deleteCells", "[", " ", "patt_", " ", "]"}], "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"pattern", " ", "=", " ", 
      RowBox[{"cellPattern", "[", " ", "patt", " ", "]"}]}], "}"}], ",", "\n",
     "\t", 
    RowBox[{
     RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"{", "}"}], ",", "\n", "\t\t", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"removeCells", "[", " ", 
          RowBox[{
           RowBox[{"identifyComponents", "[", " ", 
            RowBox[{"pattern", ",", " ", "#"}], "]"}], ",", " ", "#"}], " ", 
          "]"}], "&"}], " ", "/@", " ", 
        RowBox[{"m", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"m", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[6274]:=",ExpressionUUID->"32f57e85-ddf8-44d8-919a-9bb69ab25708"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deleteCells", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "patt_"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"deleteCells", "[", "patt", "]"}], "[", "m", "]"}], ",", " ", 
    "Automatic"}], " ", "]"}]}]], "Code",
 CellLabel->
  "In[6275]:=",ExpressionUUID->"c0315f13-2705-44fb-a3d4-f24325b79ef7"]
}, Closed]],

Cell[CellGroupData[{

Cell["addCells[]", "Subsection",ExpressionUUID->"3aff73a6-10d2-421c-a3eb-3899330f45fd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "addCells", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<overlapPrecision\>\"", " ", "\[Rule]", " ", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "12"}], ")"}]}]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"addCells", "[", " ", 
    RowBox[{"cells_", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  "\n", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"newMech", " ", "=", " ", 
       RowBox[{"parseCells", "[", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"m", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{"{", "}"}], ",", " ", 
           RowBox[{"m", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", " ", "cells"}], " ",
         "]"}]}], " ", "}"}], ",", "\n", "\t\t", 
     RowBox[{"deleteDegenerateCellsFromMechanism", "[", " ", 
      RowBox[{"removeOverlappingCoordinates", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"newMech", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
           RowBox[{"makePositionsIntoRules", "[", " ", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}]}], ",", "\n", 
          "\t\t\t\t", 
          RowBox[{"{", "}"}], ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"sortCells", "[", 
             RowBox[{"#", ",", "Identity"}], "]"}], "&"}], " ", "/@", " ", 
           RowBox[{"mergeCells", "[", " ", 
            RowBox[{
             RowBox[{"newMech", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}], ",", "\n", 
          "\t\t\t\t", 
          RowBox[{"newMech", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "\n", "\t\t\t", "]"}], ",", "\n",
         "\t\t\t", 
        RowBox[{
        "OptionValue", "[", " ", "\"\<overlapPrecision\>\"", " ", "]"}]}], 
       "\n", "\t\t", "]"}], "\n", "\t", "]"}]}], "\n", "]"}], " ", "/;", " ", 
   
   RowBox[{"frameworkPrecisionQ", "[", " ", 
    RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}], " ", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[6276]:=",ExpressionUUID->"95bfe1df-9c1b-4d36-a1b9-02340e19ec89"],

Cell[BoxData[
 RowBox[{
  RowBox[{"addCells", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "cells_", ",",
     " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"addCells", "[", 
      RowBox[{"cells", ",", " ", "opt"}], " ", "]"}], "[", "m", "]"}], ",", 
    " ", "Automatic"}], " ", "]"}]}]], "Code",
 CellLabel->
  "In[6278]:=",ExpressionUUID->"cde68282-69ce-49d3-b164-4a4070393ff2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makePositionsIntoRules", "[", "coordinates_", "]"}], " ", ":=", 
  " ", 
  RowBox[{"{", " ", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"vertexPosition", "[", 
      RowBox[{"n_Integer", ",", "\"\<x\>\""}], "]"}], " ", "\[RuleDelayed]", 
     " ", 
     RowBox[{"coordinates", "[", 
      RowBox[{"[", 
       RowBox[{"n", ",", "1"}], "]"}], "]"}]}], ",", " ", "\n", "\t", 
    RowBox[{
     RowBox[{"vertexPosition", "[", 
      RowBox[{"n_Integer", ",", "\"\<y\>\""}], "]"}], " ", "\[RuleDelayed]", 
     " ", 
     RowBox[{"coordinates", "[", 
      RowBox[{"[", 
       RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ",", " ", "\n", "\t", 
    RowBox[{
     RowBox[{"vertexPosition", "[", 
      RowBox[{"n_Integer", ",", "\"\<z\>\""}], "]"}], " ", "\[RuleDelayed]", 
     " ", 
     RowBox[{"coordinates", "[", 
      RowBox[{"[", 
       RowBox[{"n", ",", "3"}], "]"}], "]"}]}]}], "\n", "\t", "}"}]}]], "Code",\

 CellLabel->
  "In[6279]:=",ExpressionUUID->"39fbf181-116b-4086-9bf3-53d3e3e15741"]
}, Closed]],

Cell[CellGroupData[{

Cell["placeVertices[], displaceVertices[]", "Subsection",ExpressionUUID->"5c30eac8-b497-457e-83bc-5feee9c6f26e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"placeVertices", "[", " ", 
     RowBox[{"moveSpec", " ", ":", " ", 
      RowBox[{
       RowBox[{"{", "___Rule", "}"}], "|", "_Rule"}]}], " ", "]"}], "[", " ", 
    
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"vertexMoves", " ", "=", " ", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"List", " ", "@@@", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "moveSpec", "}"}], "]"}]}], " ", "]"}]}], " ", "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"newVertexPositions", "[", " ", 
        RowBox[{
         RowBox[{"m", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"vertexMoves", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", " ", 
         RowBox[{"vertexMoves", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"m", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"placeVertices", "[", " ", 
    RowBox[{"vertices_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], " ", "]"}], 
   "[", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Head", "[", "m", "]"}], "[", " ", 
    RowBox[{"vertices", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"m", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{"m", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "vertices", "]"}], " ", "\[Equal]", " ", 
    RowBox[{"Dimensions", "[", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"placeVertices", "[", " ", 
     RowBox[{"vertices_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], " ", "]"}], 
    "[", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "vertices", "]"}], " ", "\[NotEqual]", " ", 
        RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], ",", " ", 
       RowBox[{"Message", "[", 
        RowBox[{"placeVertices", "::", "num"}], "]"}]}], " ", "]"}], ";", 
     "\n", "\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Last", "[", 
         RowBox[{"Dimensions", "[", "vertices", "]"}], "]"}], " ", 
        "\[NotEqual]", " ", 
        RowBox[{"Last", "[", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}], "]"}]}], ",", 
       " ", 
       RowBox[{"Message", "[", " ", 
        RowBox[{"placeVertices", "::", "pos"}], " ", "]"}]}], " ", "]"}], ";",
      "\n", "\t", "m"}], "\n", ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"placeVertices", "::", "num"}], " ", "=", " ", 
   "\"\<Number of vertices is incorrect.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"placeVertices", "::", "vert"}], " ", "=", " ", 
   "\"\<Some vertices are not valid.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"placeVertices", "::", "pos"}], " ", "=", " ", 
    "\"\<All positions are not of the same dimension as coordinates.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"newVertexPositions", "[", " ", 
   RowBox[{"coordinates_", ",", " ", 
    RowBox[{"vertices_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"VectorQ", "[", 
        RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
    RowBox[{"pos_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", " ", "NumericQ"}], "]"}], "&"}], ")"}]}]}], " ", 
   "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"ReplacePart", "[", " ", 
    RowBox[{"coordinates", ",", " ", 
     RowBox[{"Thread", "[", " ", 
      RowBox[{"vertices", " ", "\[Rule]", " ", "pos"}], " ", "]"}]}], " ", 
    "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "coordinates", "]"}], " ", "\[Equal]", " ", 
    RowBox[{"Dimensions", "[", "pos", "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"newVertexPositions", "[", " ", 
   RowBox[{"coordinates_", ",", " ", "_", ",", " ", 
    RowBox[{"pos_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", " ", "NumericQ"}], "]"}], "&"}], ")"}]}]}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"placeVertices", "::", "vert"}], "]"}], ";", " ", 
    "coordinates"}], " ", ")"}]}], "\n", 
 RowBox[{
  RowBox[{"newVertexPositions", "[", " ", 
   RowBox[{"coordinates_", ",", " ", "_", " ", ",", " ", "_"}], " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"placeVertices", "::", "pos"}], "]"}], ";", " ", "coordinates"}],
    " ", ")"}]}]}], "Code",
 CellLabel->
  "In[6280]:=",ExpressionUUID->"3b0edd43-f179-414d-aa01-523bd36dc076"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displaceVertices", "[", " ", 
     RowBox[{"moveSpec", " ", ":", " ", 
      RowBox[{
       RowBox[{"{", "___Rule", "}"}], "|", "_Rule"}]}], " ", "]"}], "[", " ", 
    
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"vertexMoves", " ", "=", " ", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"List", " ", "@@@", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "moveSpec", "}"}], "]"}]}], " ", "]"}]}], " ", "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"moveVertexPositions", "[", " ", 
        RowBox[{
         RowBox[{"m", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"vertexMoves", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", " ", 
         RowBox[{"vertexMoves", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"m", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaceVertices", "[", " ", 
    RowBox[{"vertices_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], " ", "]"}], 
   "[", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"Head", "[", "m", "]"}], "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", "+", " ", 
      "vertices"}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"m", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{"m", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "vertices", "]"}], " ", "\[Equal]", " ", 
    RowBox[{"Dimensions", "[", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displaceVertices", "[", " ", 
     RowBox[{"vertices_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], " ", "]"}], 
    "[", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "vertices", "]"}], " ", "\[NotEqual]", " ", 
        RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], ",", " ", 
       RowBox[{"Message", "[", 
        RowBox[{"displaceVertices", "::", "num"}], "]"}]}], " ", "]"}], ";", 
     "\n", "\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Last", "[", 
         RowBox[{"Dimensions", "[", "vertices", "]"}], "]"}], " ", 
        "\[NotEqual]", " ", 
        RowBox[{"Last", "[", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}], "]"}]}], ",", 
       " ", 
       RowBox[{"Message", "[", " ", 
        RowBox[{"displaceVertices", "::", "pos"}], " ", "]"}]}], " ", "]"}], 
     ";", "\n", "\t", "m"}], "\n", ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaceVertices", "::", "num"}], " ", "=", " ", 
   "\"\<Number of vertices is incorrect.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaceVertices", "::", "vert"}], " ", "=", " ", 
   "\"\<Some vertices are not valid.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displaceVertices", "::", "pos"}], " ", "=", " ", 
    "\"\<All positions are not of the same dimension as coordinates.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"moveVertexPositions", "[", " ", 
   RowBox[{"coordinates_", ",", " ", 
    RowBox[{"vertices_", "?", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"VectorQ", "[", " ", 
        RowBox[{"#", ",", " ", "IntegerQ"}], " ", "]"}], " ", "&"}], " ", 
      ")"}]}], " ", ",", " ", 
    RowBox[{"pos_", "?", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"MatrixQ", "[", " ", 
        RowBox[{"#", ",", " ", "NumericQ"}], " ", "]"}], " ", "&"}], " ", 
      ")"}]}]}], " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"ReplacePart", "[", " ", 
    RowBox[{"coordinates", ",", " ", 
     RowBox[{"Thread", "[", " ", 
      RowBox[{"vertices", " ", "\[Rule]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"coordinates", "[", 
          RowBox[{"[", "vertices", "]"}], "]"}], " ", "+", " ", "pos"}], 
        ")"}]}], " ", "]"}]}], " ", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Last", "[", 
     RowBox[{"Dimensions", "[", "coordinates", "]"}], "]"}], " ", "\[Equal]", 
    " ", 
    RowBox[{"Last", "[", 
     RowBox[{"Dimensions", "[", "pos", "]"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"moveVertexPositions", "[", " ", 
   RowBox[{"coordinates_", ",", " ", "vertices_", ",", " ", "pos_"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"Not", "[", 
       RowBox[{"VectorQ", "[", 
        RowBox[{"vertices", ",", " ", "IntegerQ"}], " ", "]"}], "]"}], ",", 
      " ", 
      RowBox[{"Message", "[", " ", 
       RowBox[{"displaceVertices", "::", "vert"}], " ", "]"}]}], " ", "]"}], 
    ";", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"Not", "[", " ", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"pos", ",", " ", "NumericQ"}], "]"}], " ", "&&", " ", 
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"Dimensions", "[", "coordinates", "]"}], "]"}], " ", 
         "\[Equal]", " ", 
         RowBox[{"Last", "[", 
          RowBox[{"Dimensions", "[", "pos", "]"}], "]"}]}]}], " ", "]"}], ",",
       " ", 
      RowBox[{"Message", "[", " ", 
       RowBox[{"displaceVertices", "::", "pos"}], " ", "]"}]}], " ", "]"}], 
    ";", "\n", "\t", "coordinates"}], "\n", ")"}]}]}], "Code",
 CellLabel->
  "In[6289]:=",ExpressionUUID->"dc6fae3e-0250-465d-b252-f2807af8cf17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"placeVertices", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "moveSpec_"}],
    " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"placeVertices", "[", "moveSpec", "]"}], "[", "m", "]"}], ",", 
    " ", "Automatic"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"displaceVertices", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "moveSpec_"}],
    " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"displaceVertices", "[", "moveSpec", "]"}], "[", "m", "]"}], ",",
     " ", "Automatic"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6297]:=",ExpressionUUID->"e71eaeac-52c8-47a5-808b-97451c4d3a99"]
}, Closed]],

Cell[CellGroupData[{

Cell["deleteVertices[]", "Subsection",ExpressionUUID->"b8f26f8a-5bdb-43fa-a08b-35a62aaf9744"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"deleteVertices", "[", " ", 
    RowBox[{"vertices_", "?", "VectorQ"}], " ", "]"}], "[", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"pattern", " ", "=", " ", 
      RowBox[{"Alternatives", " ", "@@", " ", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"___", ",", "#", ",", "___"}], "}"}], "|", "#"}], "&"}], 
         " ", "/@", " ", "vertices"}], " ", ")"}]}]}], " ", "}"}], ",", "\n", 
    
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"remainingCells", " ", "=", " ", 
        RowBox[{"Flatten", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"removeCells", "[", " ", 
            RowBox[{
             RowBox[{"identifyComponents", "[", " ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Head", "[", "#", "]"}], "[", "pattern", "]"}], 
                "}"}], " ", ",", " ", "#"}], " ", "]"}], ",", " ", "#"}], " ",
             "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}], " ", "}"}], ",", 
      "\n", 
      RowBox[{"With", "[", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"remainingVertices", " ", "=", " ", 
          RowBox[{"Complement", "[", " ", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", 
              RowBox[{"m", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", " ", 
            RowBox[{"vertices", " ", "/.", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}]}], " ", "]"}]}], " ", "}"}], 
        ",", "\n", 
        RowBox[{"With", "[", " ", 
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{"remappingRules", " ", "=", " ", 
            RowBox[{"Thread", "[", " ", 
             RowBox[{"remainingVertices", " ", "\[Rule]", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"Length", "[", "remainingVertices", "]"}], "]"}]}], 
             "]"}]}], " ", "}"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"m", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "remainingVertices"}], "]"}], "]"}], ",",
             "\n", "\t\t", 
            RowBox[{"{", "}"}], ",", "\n", "\t\t", 
            RowBox[{"replaceCellIndices", "[", " ", 
             RowBox[{"remainingCells", ",", " ", "remappingRules"}], " ", 
             "]"}], ",", "\n", "\t\t", 
            RowBox[{"replaceRules", "[", " ", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", " ", "remappingRules", 
              ",", " ", "2"}], " ", "]"}]}], "\n", "\t", "]"}]}], "\n", 
         "]"}]}], "]"}]}], "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[6299]:=",ExpressionUUID->"ce93bed6-9de0-443b-9529-d0e43a83867e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deleteVertices", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "vertices_"}],
    " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"deleteVertices", "[", "vertices", "]"}], "[", "m", "]"}], ",", 
    " ", "Automatic"}], " ", "]"}]}]], "Code",
 CellLabel->
  "In[6300]:=",ExpressionUUID->"a153f66e-388f-4c66-aec7-7137116edbba"]
}, Closed]],

Cell[CellGroupData[{

Cell["mapCells[]", "Subsection",ExpressionUUID->"4b83baad-cf9c-4e33-a249-8b29b2e3b88f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mapCells", "::", "err"}], "=", 
    "\"\<Mapping function did not produce a viable mechanism.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mapCells", "[", " ", "f_", " ", "]"}], "[", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], "]"}], " ", ":=", "\n", 
   
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"newComponents", " ", "=", " ", 
       RowBox[{"mapComponents", "[", " ", 
        RowBox[{"f", ",", " ", 
         RowBox[{"m", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}], "\n", "}"}], ",", 
     "\n", "\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "newComponents", "]"}], " ", "=!=", " ", 
        "List"}], " ", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"mapCells", "::", "err"}], "]"}], ";", " ", "m"}], ",", "\n",
        "\t\t", 
       RowBox[{
        RowBox[{"Head", "[", "m", "]"}], "[", " ", 
        RowBox[{
         RowBox[{"m", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{"DeleteCases", "[", " ", 
          RowBox[{"newComponents", ",", " ", "_packComponentCells"}], " ", 
          "]"}], ",", " ", 
         RowBox[{"m", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}]}], "\n", "\t", "]"}]}],
     "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"mapCells", "[", " ", 
   RowBox[{"f_", ",", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}]}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"mapCells", "[", "f", "]"}], "[", "m", "]"}], ",", " ", 
    "Automatic"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6301]:=",ExpressionUUID->"fe916ab9-6145-4201-b3c5-46c8bd2c8e48"]
}, Closed]],

Cell[CellGroupData[{

Cell["joinMechanism[]", "Subsection",ExpressionUUID->"a36ef963-d8b7-466d-9028-89d0a83d022e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "joinMechanism", "]"}], " ", "=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<overlapPrecision\>\"", " ", "\[Rule]", " ", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "12"}], ")"}]}]}], ",", " ", 
       RowBox[{"Options", "[", "MeshRegion", "]"}]}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinMechanism", "[", " ", 
    RowBox[{
     RowBox[{"meshes", " ", ":", " ", 
      RowBox[{
       RowBox[{"__", "?", "mechanismQ"}], "|", 
       RowBox[{"{", 
        RowBox[{"__", "?", "mechanismQ"}], "}"}]}]}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", " ", 
       RowBox[{"m", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "meshes", "}"}], "]"}]}], ",", " ", 
       RowBox[{"meshOptions", " ", "=", " ", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"{", "opt", "}"}], ",", " ", 
          RowBox[{"Options", "[", "MeshRegion", "]"}]}], "]"}]}]}], " ", 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"num", " ", "=", " ", 
          RowBox[{"Drop", "[", " ", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "1", "}"}], ",", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "+", "1"}], "&"}], " ", "/@", " ", 
                 RowBox[{"Accumulate", "[", " ", 
                  RowBox[{"Length", " ", "/@", " ", 
                   RowBox[{"m", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], " ", "]"}]}]}],
                " ", "}"}], ",", " ", "1"}], " ", "]"}], ",", " ", 
            RowBox[{"-", "1"}]}], "]"}]}], " ", "}"}], ",", "\n", "\t\t", 
        RowBox[{"addMeshRegion", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"deleteDegenerateCellsFromMechanism", "[", "\n", "\t\t\t\t", 
           RowBox[{"removeOverlappingCoordinates", "[", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"m", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", "\n", 
              "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"m", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}],
                ",", "\n", "\t\t\t\t\t\t", 
               RowBox[{"{", "}"}], ",", "\n", "\t\t\t\t\t\t", 
               RowBox[{"mergeCells", " ", "@@", " ", 
                RowBox[{"MapThread", "[", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"replaceCellIndices", "[", 
                    RowBox[{"#1", ",", " ", 
                    RowBox[{"n_Integer", " ", "\[Rule]", " ", 
                    RowBox[{
                    "n", " ", "+", " ", "#2", " ", "-", " ", "1"}]}]}], "]"}],
                    "&"}], ",", " ", 
                  RowBox[{"{", " ", 
                   RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", " ", 
                    "num"}], " ", "}"}]}], "]"}]}], ",", "\n", "\t\t\t\t\t\t", 
               RowBox[{"Flatten", " ", "@", " ", 
                RowBox[{"MapThread", "[", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"replaceRules", "[", " ", 
                    RowBox[{"#1", ",", " ", 
                    RowBox[{"n_Integer", " ", "\[Rule]", " ", 
                    RowBox[{"n", " ", "+", " ", "#2", " ", "-", " ", "1"}]}], 
                    ",", " ", "2"}], " ", "]"}], "&"}], ",", " ", 
                  RowBox[{"{", " ", 
                   RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", " ", 
                    "num"}], " ", "}"}]}], " ", "]"}]}]}], "\n", "\t\t\t\t\t",
               "]"}], ",", "\n", "\t\t\t\t\t", 
             RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}]}], 
            "\n", "\t\t\t\t", "]"}], "\n", "\t\t\t", "]"}], ",", "\n", 
          "\t\t\t", "Automatic", ",", "\n", "\t\t\t", "meshOptions"}], "\n", 
         "\t\t", "]"}]}], "\n", "\t", "]"}], " ", "/;", " ", 
      RowBox[{
       RowBox[{"frameworkPrecisionQ", "[", " ", 
        RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}], " ", 
        "]"}], " ", "&&", " ", 
       RowBox[{"sameHeadsQ", "[", " ", "m", " ", "]"}]}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "comb"}], " ", "=", " ", 
   "\"\<Cannot combine mechanisms of different types.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sameHeadsQ", "[", " ", "expr_List", " ", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{"SameQ", "[", " ", 
     RowBox[{"Head", " ", "/@", " ", "expr"}], " ", "]"}], ",", " ", "True", 
    ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"mechanism", "::", "comb"}], "]"}], ";", " ", "False"}]}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6304]:=",ExpressionUUID->"0d644173-0919-476f-bf16-572cb8c77e51"]
}, Closed]],

Cell[CellGroupData[{

Cell["Map[]", "Subsection",ExpressionUUID->"3ab5e732-329f-4489-88fd-99e349e91f19"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"framework", " ", "/:", " ", 
   RowBox[{"Map", "[", " ", 
    RowBox[{"f_", ",", " ", 
     RowBox[{"m", " ", ":", " ", 
      RowBox[{"framework", "[", " ", 
       RowBox[{"coordinates_", ",", " ", "_", ",", " ", 
        RowBox[{"cells", " ", ":", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"_Symbol", "[", 
            RowBox[{"_", ",", "_", ",", "_"}], "]"}], "..."}], "}"}]}], ",", 
        " ", "labels_"}], " ", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"newCoordinates", " ", "=", " ", 
       RowBox[{"f", " ", "/@", " ", "coordinates"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"framework", "[", " ", 
       RowBox[{"newCoordinates", ",", " ", 
        RowBox[{"{", "}"}], ",", " ", "cells", ",", " ", "labels"}], " ", 
       "]"}], " ", "/;", " ", 
      RowBox[{"mapTestCoordinatesQ", "[", " ", 
       RowBox[{"newCoordinates", ",", " ", "coordinates"}], " ", "]"}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"origami", " ", "/:", " ", 
   RowBox[{"Map", "[", " ", 
    RowBox[{"f_", ",", " ", 
     RowBox[{"m", " ", ":", " ", 
      RowBox[{"origami", "[", " ", 
       RowBox[{"coordinates_", ",", " ", "_", ",", " ", 
        RowBox[{"cells", " ", ":", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"_Symbol", "[", 
            RowBox[{"_", ",", "_", ",", "_"}], "]"}], "..."}], "}"}]}], ",", 
        " ", "labels_"}], " ", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"newCoordinates", " ", "=", " ", 
       RowBox[{"f", " ", "/@", " ", "coordinates"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"origami", "[", " ", 
       RowBox[{"newCoordinates", ",", " ", 
        RowBox[{"{", "}"}], ",", " ", "cells", ",", " ", "labels"}], " ", 
       "]"}], " ", "/;", " ", 
      RowBox[{"mapTestCoordinatesQ", "[", " ", 
       RowBox[{"newCoordinates", ",", " ", "coordinates"}], " ", "]"}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "match"}], " ", "=", 
   "\"\<New coordinates are not numeric and of the same dimension as old \
coordinates.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mapTestCoordinatesQ", "[", " ", 
   RowBox[{"new_", ",", " ", "old_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixQ", "[", " ", 
      RowBox[{"new", ",", " ", "NumericQ"}], " ", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Dimensions", "[", "new", "]"}], " ", "\[Equal]", " ", 
      RowBox[{"Dimensions", "[", "old", "]"}]}]}], ",", " ", "True", ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"mechanism", "::", "match"}], "]"}], ";", " ", "False"}]}], " ",
    "]"}]}]}], "Code",
 CellLabel->
  "In[6308]:=",ExpressionUUID->"716f9373-6de2-4d61-b7b3-deac55ae485c"]
}, Closed]],

Cell[CellGroupData[{

Cell["tesselateMechanism[]", "Subsection",ExpressionUUID->"b687de83-cd96-4c03-a6c5-674f5c438ade"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "tesselateMechanism", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<overlapPrecision\>\"", "\[Rule]", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "6"}], ")"}]}]}], "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[6312]:=",ExpressionUUID->"76ffc6b0-1698-4435-a9f3-a8e4d85ac1ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tesselateMechanism", "::", "counter"}], "=", 
   "\"\<Number of cells must be positive integers corresponding to the number \
of basis elements.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tesselateMechanism", "::", "dim"}], "=", 
   "\"\<Basis must be `1` dimensional to match mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tesselateMechanism", "::", "num"}], "=", 
   "\"\<Basis must be numerical with vectors of the same dimension.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tesselateMechanism", "::", "basis"}], "=", 
    "\"\<Basis must be a list of `1` numerical vectors.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tesselationBasisQ", "[", " ", 
    RowBox[{"m_", ",", " ", "d_", ",", " ", "basis_"}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Not", "[", 
      RowBox[{"MatrixQ", "[", 
       RowBox[{"basis", ",", "NumericQ"}], "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", " ", 
       RowBox[{"tesselateMechanism", "::", "num"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Length", "[", "basis", "]"}], " ", "\[NotEqual]", " ", "d"}], 
     ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", " ", 
       RowBox[{
        RowBox[{"tesselateMechanism", "::", "basis"}], ",", " ", "d"}], " ", 
       "]"}], ";", " ", "False"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Last", "[", 
       RowBox[{"Dimensions", "[", "basis", "]"}], "]"}], " ", "\[NotEqual]", 
      " ", 
      RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", " ", 
       RowBox[{
        RowBox[{"tesselateMechanism", "::", "dim"}], ",", " ", 
        RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], " ", "]"}], 
      ";", " ", "False"}], ",", "\n", "\t", "True", ",", " ", "True"}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"tesselationCellCountsQ", "[", " ", 
   RowBox[{"n1__Integer", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], ")"}]}], " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"tesselationCellCountsQ", "[", " ", "__", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"tesselateMechanism", "::", "counter"}], "]"}], ";", " ", 
    "False"}], ")"}]}]}], "Code",
 CellLabel->
  "In[6313]:=",ExpressionUUID->"ca5dc61d-eb9d-4c00-9924-201bee91a182"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"translateLabels", "[", " ", 
   RowBox[{"n_", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"translateLabels", "[", 
    RowBox[{"n_", ",", " ", 
     RowBox[{"ruleList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Rule", "[", " ", 
         RowBox[{"_", ",", " ", "_"}], " ", "]"}], ".."}], "}"}]}]}], " ", 
    "]"}], ":=", " ", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"labels", ",", " ", "indices"}], "}"}], " ", ",", "  ", "\n", 
     "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"labels", ",", " ", "indices"}], "}"}], " ", "=", " ", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"List", " ", "@@@", " ", "ruleList"}], " ", "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"Rule", " ", "@@@", " ", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"Through", "[", " ", 
           RowBox[{"labels", "[", "n", "]"}], " ", "]"}], " ", ",", " ", 
          "indices"}], " ", "}"}], " ", "]"}]}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"translateCoordinates", "[", " ", 
   RowBox[{"positions_", ",", " ", "translationVector_"}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"positions", " ", "+", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"translationVector", ",", " ", 
     RowBox[{"Length", "[", "positions", "]"}]}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[6320]:=",ExpressionUUID->"721a18ca-3636-47ac-8ec2-4481f8e47919"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tesselateMechanism", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "basis_", ",",
     " ", 
    RowBox[{"n1", " ", ":", " ", 
     RowBox[{"Except", "[", "_List", "]"}]}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", 
  RowBox[{
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], ",", "\n", "\t", 
       RowBox[{"unitCellIndices", " ", "=", " ", 
        RowBox[{"Range", "[", "n1", "]"}]}], ",", " ", "\n", "\t", 
       "newCoordinates", ",", " ", "translatedMechanisms"}], "\n", "}"}], ",",
      "\n", "\t", 
     RowBox[{
      RowBox[{"newCoordinates", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"translateCoordinates", "[", " ", 
          RowBox[{"positions", ",", " ", 
           RowBox[{"basis", " ", "#"}]}], " ", "]"}], "&"}], " ", "/@", " ", 
        "unitCellIndices"}]}], ";", "\n", "\t", 
      RowBox[{"translatedMechanisms", " ", "=", " ", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "m", "]"}], "[", " ", 
           RowBox[{"#1", ",", " ", 
            RowBox[{"{", "}"}], ",", " ", 
            RowBox[{"m", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
            RowBox[{"translateLabels", "[", 
             RowBox[{"#2", ",", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}]}], " ", "]"}], 
          "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"newCoordinates", ",", " ", "unitCellIndices"}], "}"}]}], 
        " ", "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"joinMechanism", "[", " ", 
       RowBox[{"translatedMechanisms", ",", " ", "opt"}], " ", "]"}]}]}], 
    "\n", "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"tesselationBasisQ", "[", 
     RowBox[{"m", ",", " ", "1", ",", " ", 
      RowBox[{"{", "basis", "}"}]}], "]"}], " ", "&&", " ", 
    RowBox[{"tesselationCellCountsQ", "[", 
     RowBox[{"n1", ",", "1"}], "]"}]}]}]}]], "Code",
 CellLabel->
  "In[6323]:=",ExpressionUUID->"52292cab-859e-4526-ad11-c2375d158cee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tesselateMechanism", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "basis_", ",",
     " ", 
    RowBox[{"{", 
     RowBox[{"n1_", ",", " ", "n2_"}], "}"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], ",", "\n", "\t", 
       RowBox[{"unitCellIndices", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Array", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"n1", ",", "n2"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
       ",", "\n", "\t", "newCoordinates", ",", " ", "translatedMechanisms"}], 
      "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"newCoordinates", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"translateCoordinates", "[", " ", 
          RowBox[{"positions", ",", " ", 
           RowBox[{"#", " ", ".", " ", "basis"}]}], " ", "]"}], "&"}], " ", "/@",
         " ", "unitCellIndices"}]}], ";", "\n", "\t", 
      RowBox[{"translatedMechanisms", " ", "=", " ", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "m", "]"}], "[", 
           RowBox[{"#1", ",", " ", 
            RowBox[{"{", "}"}], ",", " ", 
            RowBox[{"m", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
            RowBox[{"translateLabels", "[", 
             RowBox[{"#2", ",", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}]}], "]"}], "&"}], 
         ",", " ", 
         RowBox[{"{", 
          RowBox[{"newCoordinates", ",", " ", "unitCellIndices"}], "}"}]}], 
        " ", "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"joinMechanism", "[", " ", 
       RowBox[{"translatedMechanisms", ",", " ", "opt"}], " ", "]"}]}]}], 
    "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"tesselationBasisQ", "[", 
     RowBox[{"m", ",", " ", "2", ",", " ", "basis"}], "]"}], " ", "&&", " ", 
    RowBox[{"tesselationCellCountsQ", "[", 
     RowBox[{"n1", ",", "n2"}], "]"}]}]}]}]], "Code",
 CellLabel->
  "In[6324]:=",ExpressionUUID->"d24fd5c7-bb15-4547-9025-38b6386831cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tesselateMechanism", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "basis_", ",",
     " ", 
    RowBox[{"{", 
     RowBox[{"n1_", ",", " ", "n2_", ",", " ", "n3_"}], "}"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], ",", "\n", "\t", 
       RowBox[{"unitCellIndices", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Array", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2", ",", "#3"}], "}"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}], "]"}], ",", "2"}],
          "]"}]}], ",", "\n", "\t", "newCoordinates", ",", " ", 
       "translatedMechanisms"}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"newCoordinates", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"translateCoordinates", "[", " ", 
          RowBox[{"positions", ",", " ", 
           RowBox[{"#", " ", ".", " ", "basis"}]}], " ", "]"}], "&"}], " ", "/@",
         " ", "unitCellIndices"}]}], ";", "\n", "\t", 
      RowBox[{"translatedMechanisms", " ", "=", " ", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "m", "]"}], "[", 
           RowBox[{"#1", ",", " ", 
            RowBox[{"{", "}"}], ",", " ", 
            RowBox[{"m", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
            RowBox[{"translateLabels", "[", 
             RowBox[{"#2", ",", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}]}], "]"}], "&"}], 
         ",", " ", 
         RowBox[{"{", 
          RowBox[{"newCoordinates", ",", " ", "unitCellIndices"}], "}"}]}], 
        " ", "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"joinMechanism", "[", " ", 
       RowBox[{"translatedMechanisms", ",", " ", "opt"}], " ", "]"}]}]}], 
    "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"tesselationBasisQ", "[", 
     RowBox[{"m", ",", " ", "3", ",", " ", "basis"}], "]"}], " ", "&&", " ", 
    RowBox[{"tesselationCellCountsQ", "[", 
     RowBox[{"n1", ",", "n2", ",", "n3"}], "]"}]}]}]}]], "Code",
 CellLabel->
  "In[6325]:=",ExpressionUUID->"2cf05f30-ea55-4528-b268-4f693ccc6344"]
}, Closed]],

Cell[CellGroupData[{

Cell["ReplaceAll[]", "Subsection",ExpressionUUID->"0fa84328-818f-4aa0-9af0-dd5dc45722ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"replaceElement", "[", " ", 
    RowBox[{
     RowBox[{"f", " ", ":", " ", "mechanismPattern"}], ",", " ", "rule_"}], 
    " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Head", "[", "f", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"ReplaceAll", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "rule"}], "]"}], " ", ",", 
     RowBox[{"f", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"replaceCellData", "[", " ", 
        RowBox[{"#", ",", " ", "rule"}], " ", "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"f", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ReplaceAll", "[", " ", 
   RowBox[{"f_framework", ",", " ", "rule_"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"replaceElement", "[", " ", 
   RowBox[{"f", ",", " ", "rule"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"ReplaceAll", "[", " ", 
   RowBox[{"o_origami", ",", " ", "rule_"}], "]"}], " ", "^:=", " ", 
  RowBox[{"replaceElement", "[", 
   RowBox[{"o", ",", " ", "rule"}], "]"}]}]}], "Code",
 CellLabel->
  "In[6326]:=",ExpressionUUID->"230fde4b-20eb-4071-99aa-5c8ad4bd0f21"]
}, Closed]],

Cell[CellGroupData[{

Cell["Precision[], Rationalize[], N[]", "Subsection",ExpressionUUID->"43647b8f-478e-4e7c-9742-557e8dc9a078"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Precision", "[", " ", "f_framework", " ", "]"}], " ", "^:=", " ", 
  RowBox[{"Precision", "[", " ", 
   RowBox[{"f", "[", "\"\<positions\>\"", "]"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Precision", "[", " ", "o_origami", " ", "]"}], " ", "^:=", " ", 
  RowBox[{"Precision", "[", " ", 
   RowBox[{"o", "[", "\"\<positions\>\"", "]"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6329]:=",ExpressionUUID->"a3217d07-b263-49db-8e2b-a299c78b318f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Rationalize", "[", " ", 
   RowBox[{"f_framework", ",", " ", "dx___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"ReplacePart", "[", " ", 
   RowBox[{"f", ",", " ", 
    RowBox[{"1", " ", "\[Rule]", " ", 
     RowBox[{"Rationalize", "[", " ", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", "dx"}], " ", "]"}]}]}], " ",
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Rationalize", "[", " ", 
   RowBox[{"o_origami", ",", " ", "dx___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"ReplacePart", "[", " ", 
   RowBox[{"o", ",", " ", 
    RowBox[{"1", " ", "\[Rule]", " ", 
     RowBox[{"Rationalize", "[", " ", 
      RowBox[{
       RowBox[{"o", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", "dx"}], " ", "]"}]}]}], " ",
    "]"}]}]}], "Code",
 CellLabel->
  "In[6331]:=",ExpressionUUID->"3334406d-4524-4f4f-9a1f-901b483ce449"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N", "[", " ", 
   RowBox[{"f_framework", ",", " ", "dx___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"ReplacePart", "[", " ", 
   RowBox[{"f", ",", " ", 
    RowBox[{"1", " ", "\[Rule]", " ", 
     RowBox[{"N", "[", " ", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", "dx"}], " ", "]"}]}]}], " ",
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{"N", "[", " ", 
   RowBox[{"o_origami", ",", " ", "dx___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"ReplacePart", "[", " ", 
   RowBox[{"o", ",", " ", 
    RowBox[{"1", " ", "\[Rule]", " ", 
     RowBox[{"N", "[", " ", 
      RowBox[{
       RowBox[{"o", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", "dx"}], " ", "]"}]}]}], " ",
    "]"}]}]}], "Code",
 CellLabel->
  "In[6333]:=",ExpressionUUID->"59f86bc7-1124-49b0-b3e5-f21143d862bd"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["functions to extract information from mechanisms", "Section",ExpressionUUID->"5e1bb1ba-4e01-41e6-bdeb-cab641c995ee"],

Cell[CellGroupData[{

Cell["meshCells[]", "Subsection",ExpressionUUID->"cdd4da67-16db-4c3e-8fda-67bcde70c743"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meshCells", "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "i", "}"}], ",", 
     RowBox[{"With", "[", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mr", " ", "=", " ", 
         RowBox[{"m", "[", "\"\<mesh\>\"", "]"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Property", "[", " ", 
            RowBox[{
             RowBox[{"MeshCells", "[", " ", 
              RowBox[{"mr", ",", " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "#"}], "}"}]}], " ", "]"}], ",", " ", 
             RowBox[{"getProperties", "[", " ", 
              RowBox[{"mr", ",", " ", "i", ",", " ", "#"}], " ", "]"}]}], " ",
             "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"Range", "[", " ", 
           RowBox[{"MeshCellCount", "[", " ", 
            RowBox[{"mr", ",", " ", "i"}], " ", "]"}], " ", "]"}]}], ",", 
         "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "\n", "\t", "]"}]}], 
      "\n", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"meshCells", "[", " ", "mr_MeshRegion", " ", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "i", "}"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Property", "[", " ", 
          RowBox[{
           RowBox[{"MeshCells", "[", " ", 
            RowBox[{"mr", ",", " ", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", "#"}], "}"}]}], " ", "]"}], ",", " ", 
           RowBox[{"getProperties", "[", " ", 
            RowBox[{"mr", ",", " ", "i", ",", " ", "#"}], " ", "]"}]}], " ", 
          "]"}], "&"}], " ", "/@", " ", 
        RowBox[{"Range", "[", " ", 
         RowBox[{"MeshCellCount", "[", " ", 
          RowBox[{"mr", ",", " ", "i"}], " ", "]"}], " ", "]"}]}], ",", "\n", 
       "\t\t", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "\n", "\t", "]"}]}], "\n",
     "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"getProperties", "[", " ", 
   RowBox[{"mr_MeshRegion", ",", " ", "d_", ",", " ", "cell_"}], " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"#", " ", "\[Rule]", " ", 
     RowBox[{"PropertyValue", "[", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mr", ",", " ", 
         RowBox[{"{", 
          RowBox[{"d", ",", " ", "cell"}], "}"}]}], "}"}], ",", " ", "#"}], 
      " ", "]"}]}], " ", "&"}], " ", "/@", " ", 
   "$meshRegionProperties"}]}]}], "Code",
 CellLabel->
  "In[6335]:=",ExpressionUUID->"f5ba25d8-abb2-4a17-9b94-d7776304b74e"]
}, Closed]],

Cell[CellGroupData[{

Cell["matchFromData[], selectFromData[]", "Subsection",ExpressionUUID->"9ac8c75a-4c63-4e05-9934-61e116371563"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"matchFromData", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
    RowBox[{"data_", " ", "\[Rule]", " ", "patt_"}]}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"Flatten", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"takeCells", "[", " ", 
      RowBox[{
       RowBox[{"matchComponents", "[", " ", 
        RowBox[{
         RowBox[{"Head", "[", "#", "]"}], ",", " ", "data", ",", " ", "patt", 
         ",", " ", "#"}], " ", "]"}], ",", " ", "#"}], " ", "]"}], "&"}], " ",
     "/@", " ", 
    RowBox[{"m", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"selectFromData", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "data_", ",", 
    " ", "f_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Flatten", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"takeCells", "[", " ", 
      RowBox[{
       RowBox[{"selectComponents", "[", " ", 
        RowBox[{
         RowBox[{"Head", "[", "#", "]"}], ",", " ", "data", ",", " ", "f", 
         ",", " ", "#"}], " ", "]"}], ",", " ", "#"}], "]"}], " ", "&"}], " ",
     "/@", " ", 
    RowBox[{"m", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6338]:=",ExpressionUUID->"eb4d2ca6-bac8-46f2-bbd5-c654d47af440"]
}, Closed]],

Cell[CellGroupData[{

Cell["componentData[]", "Subsection",ExpressionUUID->"dea4a3c2-e7ee-4f47-bf96-66929b110d6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"componentData", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "s_", ",", 
    " ", "patt_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"pattern", " ", "=", " ", 
       RowBox[{"cellPattern", "[", "patt", "]"}]}], ",", " ", "cells"}], " ", 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"cells", " ", "=", " ", 
      RowBox[{"Flatten", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"takeCells", "[", " ", 
          RowBox[{
           RowBox[{"identifyComponents", "[", " ", 
            RowBox[{"pattern", ",", " ", "#"}], " ", "]"}], " ", ",", " ", 
           "#"}], " ", "]"}], "&"}], " ", "/@", " ", 
        RowBox[{"m", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}], ";", "\n", "\n", 
     "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"componentDataInternal", "[", " ", 
        RowBox[{"s", ",", " ", "#"}], " ", "]"}], " ", "&"}], " ", "/@", " ", 
      "cells"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6340]:=",ExpressionUUID->"f646d260-5ae8-4d55-a107-8169291bb17e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"componentDataInternal", "[", " ", 
   RowBox[{"All", ",", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", " ", ",", " ", "data_", ",", " ", "_"}], " ", 
     "]"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"head", "[", "indices", "]"}], " ", "\[Rule]", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"dataForm", "[", "head", "]"}], " ", "\[Rule]", " ", "data"}], 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentDataInternal", "[", " ", 
    RowBox[{"s_String", ",", " ", 
     RowBox[{"head_", "[", 
      RowBox[{"indices_", ",", "data_", ",", "_"}], "]"}]}], " ", "]"}], " ", 
   ":=", " ", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"location", " ", "=", " ", 
       RowBox[{"s", " ", "/.", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"dataForm", "[", "head", "]"}], " ", "\[Rule]", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", 
            RowBox[{"dataForm", "[", "head", "]"}], "]"}], "]"}]}], "]"}]}]}],
       " ", "}"}], ",", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"IntegerQ", "[", "location", "]"}], ",", " ", 
       RowBox[{
        RowBox[{"head", "[", "indices", "]"}], " ", "\[Rule]", " ", 
        RowBox[{"data", "[", 
         RowBox[{"[", " ", "location", " ", "]"}], "]"}]}], ",", " ", 
       RowBox[{"Missing", "[", "s", "]"}]}], " ", "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"componentDataInternal", "[", " ", 
   RowBox[{"\"\<style\>\"", ",", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], "]"}]}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"head", "[", "indices", "]"}], " ", "\[Rule]", " ", 
   RowBox[{"display", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"componentDataInternal", "[", " ", 
   RowBox[{"\"\<label\>\"", ",", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], "]"}]}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"head", "[", "indices", "]"}], "\[Rule]", " ", 
   RowBox[{"display", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"componentDataInternal", "[", " ", 
   RowBox[{"\"\<shape\>\"", ",", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], "]"}]}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"head", "[", "indices", "]"}], " ", "\[Rule]", " ", 
   RowBox[{"display", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"componentDataInternal", "[", " ", 
   RowBox[{"\"\<display\>\"", " ", ",", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", 
     "]"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"head", "[", "indices", "]"}], " ", "\[Rule]", 
   "display"}]}]}], "Code",
 CellLabel->
  "In[6341]:=",ExpressionUUID->"c50f0a14-a3b8-40a7-b419-0f2e1cacac84"]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanismPositions[] ", "Subsection",ExpressionUUID->"ee32cfa3-1677-497c-bcdd-41a18a8855c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mechanismPositions", "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"m", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPositions", "[", " ", 
    RowBox[{"Rule", "[", " ", 
     RowBox[{
      RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
      RowBox[{"coords_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], " ", "]"}],
     " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"addMeshRegion", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "m", "]"}], "[", 
       RowBox[{"coords", ",", " ", 
        RowBox[{"m", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"m", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"m", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "]"}], " ", ",", " ", 
      "Automatic"}], " ", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", " ", "coords", " ", "]"}], " ", "==", " ", 
     RowBox[{"Dimensions", "[", " ", 
      RowBox[{"m", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPositions", "::", "coords"}], " ", "=", " ", 
   "\"\<Coordinates must be numerical and of the same dimension as mechanism.\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mechanismPositions", "[", " ", 
   RowBox[{"Rule", "[", " ", 
    RowBox[{
     RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "_"}], " ", 
    "]"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", " ", 
    RowBox[{"mechanismPositions", "::", "coords"}], " ", "]"}]}]}]}], "Code",
 CellLabel->
  "In[6347]:=",ExpressionUUID->"c27dc3fd-0e9b-41f3-aae3-759f9af29b32"]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanismComponents[], constrainedComponents[]", "Subsection",ExpressionUUID->"cc530052-f836-4fca-b7ce-fe5da13a5e96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"constrainedComponents", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "patt_"}], 
   " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cellBase", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"takeCells", "[", " ", 
          RowBox[{
           RowBox[{"identifyComponents", "[", " ", 
            RowBox[{
             RowBox[{"cellPattern", "[", "patt", "]"}], ",", " ", "#"}], " ", 
            "]"}], ",", " ", "#"}], " ", "]"}], "&"}], " ", "/@", " ", 
        RowBox[{"m", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], " ", "}"}], ",", "\n", 
    "\t", 
    RowBox[{"mechanismComponentsCell", " ", "/@", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"takeCells", "[", " ", 
           RowBox[{
            RowBox[{"matchComponents", "[", " ", 
             RowBox[{
             "rigidBar", ",", " ", "\"\<stiffness\>\"", ",", " ", "Infinity", 
              ",", " ", "#"}], " ", "]"}], ",", " ", "#"}], " ", "]"}], "&"}],
          " ", "/@", " ", "cellBase"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"takeCells", "[", " ", 
           RowBox[{
            RowBox[{"matchComponents", "[", " ", 
             RowBox[{
             "spring", ",", " ", "\"\<stiffness\>\"", ",", " ", "Infinity", 
              ",", " ", "#"}], " ", "]"}], ",", " ", "#"}], " ", "]"}], "&"}],
          " ", "/@", " ", "cellBase"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"takeCells", "[", " ", 
           RowBox[{
            RowBox[{"matchComponents", "[", " ", 
             RowBox[{
             "joint", ",", " ", "\"\<pinningStiffness\>\"", ",", " ", 
              "Infinity", ",", " ", "#"}], " ", "]"}], ",", " ", "#"}], "]"}],
           "&"}], " ", "/@", " ", "cellBase"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"takeCells", "[", " ", 
           RowBox[{
            RowBox[{"matchComponents", "[", " ", 
             RowBox[{
             "fold", ",", " ", "\"\<torsionalStiffness\>\"", ",", " ", 
              "Infinity", ",", " ", "#"}], " ", "]"}], ",", " ", "#"}], "]"}],
           "&"}], " ", "/@", " ", "cellBase"}]}], "\n", "\t", "}"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6351]:=",ExpressionUUID->"c031031c-ffd7-4d83-bcd8-d42371a77d31"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mechanismComponents", "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"mechanismComponentsCell", " ", "/@", " ", 
    RowBox[{"m", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismComponentsCell", "[", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", ",", " ", "data_", ",", " ", "display_"}], " ", 
     "]"}], "]"}], " ", ":=", " ", 
   RowBox[{"head", "[", 
    RowBox[{"indices", ",", " ", 
     RowBox[{"Association", " ", "@@", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"dataForm", "[", "head", "]"}], " ", "\[Rule]", " ", 
          "data"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<display\>\"", "\[Rule]", " ", "display"}], "}"}]}], 
       "]"}]}]}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismComponents", "[", " ", 
    RowBox[{
     RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "patt_"}], 
    "]"}], " ", ":=", " ", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pattern", " ", "=", " ", 
       RowBox[{"cellPattern", "[", "patt", "]"}]}], "}"}], ",", "\n", 
     RowBox[{"With", "[", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cells", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"takeCells", "[", " ", 
             RowBox[{
              RowBox[{"identifyComponents", "[", " ", 
               RowBox[{"pattern", ",", " ", "#"}], " ", "]"}], ",", " ", 
              "#"}], " ", "]"}], "&"}], " ", "/@", " ", 
           RowBox[{"m", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"mechanismComponentsCell", " ", "/@", " ", "cells"}]}], "\n", 
      "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"mechanismComponents", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
    RowBox[{"Rule", "[", " ", 
     RowBox[{"patt_", ",", " ", "data_"}], " ", "]"}]}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{
   RowBox[{"changeCellData", "[", " ", 
    RowBox[{"patt", ",", " ", "data"}], " ", "]"}], "[", "m", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6352]:=",ExpressionUUID->"41df8914-964f-4940-a28f-5ee27f20f2bd"]
}, Closed]],

Cell[CellGroupData[{

Cell["listEdges[], listFaces[], listVertices[]", "Subsection",ExpressionUUID->"16160a14-4294-44e2-8cb4-421f6295e059"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listEdges", "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"m", "[", "\"\<edges\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listFaces", "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"m", "[", "\"\<faces\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"listVertices", "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Range", "[", " ", 
    RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"listEdges", "[", " ", 
    RowBox[{
     RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
     RowBox[{"edgeList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", "_Integer"}], "}"}], "..."}], "}"}]}]}], 
    " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"indexedEdges", "=", 
        RowBox[{"PositionIndex", "[", 
         RowBox[{"Sort", "/@", 
          RowBox[{"m", "[", "\"\<edges\>\"", "]"}]}], "]"}]}], ",", " ", 
       RowBox[{"sortedEdges", " ", "=", " ", 
        RowBox[{"Sort", "/@", "edgeList"}]}]}], "}"}], ",", " ", "\n", "\t", 
     RowBox[{"Flatten", "[", 
      RowBox[{"indexedEdges", " ", "/@", " ", "sortedEdges"}], "]"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"listFaces", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
    RowBox[{"faceList", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "__Integer", "}"}], "..."}], "}"}]}]}], " ", "]"}], " ", ":=",
   "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"indexedFaces", " ", "=", " ", 
       RowBox[{"PositionIndex", "[", 
        RowBox[{"Sort", "/@", 
         RowBox[{"m", "[", "\"\<faces\>\"", "]"}]}], "]"}]}], ",", " ", 
      RowBox[{"sortedFaces", " ", "=", " ", 
       RowBox[{"Sort", " ", "/@", " ", "faceList"}]}]}], "}"}], ",", "\n", 
    "\t", 
    RowBox[{"Flatten", "[", " ", 
     RowBox[{
      RowBox[{"indexedFaces", " ", "/@", " ", "sortedFaces"}], " ", ",", " ", 
      "1"}], " ", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6356]:=",ExpressionUUID->"f44a31c2-8b21-40ca-a115-2fd8da00a1b5"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["post", "Section",ExpressionUUID->"a96ef353-fd5d-425a-9621-3fe4e067febe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[6361]:=",ExpressionUUID->"947147f2-f482-4741-a59e-b93ede67b4b9"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["mechanisms`geometry: extracting mechanism geometry", "Chapter",ExpressionUUID->"95c9d13b-445a-4347-87a7-43f7db6e7a5f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<mechanisms`geometry`\>\"", "]"}], 
  ";"}]], "Code",
 CellLabel->
  "In[6363]:=",ExpressionUUID->"ea0a7c8e-7cd5-49d0-8504-8949ad7ad62c"],

Cell[CellGroupData[{

Cell["code snippet to check for C compiler and Mathematica version", \
"Subsubsection",ExpressionUUID->"6059f1c6-1fbe-45e0-aea7-add255709cee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\n", "\t", 
   RowBox[{
   "We", " ", "need", " ", "MeshRegion", " ", "to", " ", "work", " ", "for", 
    " ", "this", " ", "package", " ", "to", " ", "work", " ", "so", " ", 
    "make", " ", "sure", " ", "we", " ", "are", " ", "using", " ", "at", " ", 
    "least", " ", "version", " ", "10", " ", "of", " ", "Mathematica"}], "\n",
    "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"$VersionNumber", "<", "10"}], ",", " ", 
      RowBox[{
      "Print", "[", "\"\<Mathematica version may be too low.\>\"", "]"}]}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", "\n", "\t", 
    RowBox[{
     RowBox[{
     "A", " ", "snippet", " ", "of", " ", "code", " ", "to", " ", "test", " ",
       "or", " ", "a", " ", "working", " ", "C", " ", "compiler"}], ",", " ", 
     
     RowBox[{
      RowBox[{"modified", " ", "from", "\n", "\t", 
       RowBox[{"https", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "questions"}], "/", "39837"}], "/", "check"}], "-", "whether", "-", 
       "a", "-", "working", "-", "ccompiler", "-", "is", "-", 
       "installed"}]}]}], "\n", "*)"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Quiet", "[", 
       RowBox[{"Check", "[", 
        RowBox[{
         RowBox[{"TrueQ", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Compile", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", " ", "0", ",", " ", 
              RowBox[{"CompilationTarget", " ", "->", " ", "\"\<C\>\""}]}], 
             "]"}], "[", "]"}], " ", "==", " ", "0"}], "]"}], ",", " ", 
         "False"}], "]"}], "]"}], ",", "\n", "  ", 
      RowBox[{"$compilationTarget", " ", "=", " ", "\"\<C\>\""}], ",", "\n", 
      "  ", 
      RowBox[{
       RowBox[{
       "Print", "[", "\"\<C compilation failed. Using MVM code instead.\>\"", 
        "]"}], ";", "\n", "  ", 
       RowBox[{"$compilationTarget", " ", "=", " ", "\"\<MVM\>\""}]}]}], "\n",
      "]"}], ";"}]}]}]], "Code",
 CellLabel->
  "In[6364]:=",ExpressionUUID->"f81e2e99-8a33-43c6-9b07-9a18257ed9eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["usage", "Section",ExpressionUUID->"648a6476-b797-42cf-8e5a-b9bc1a86e610"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"$compilationTarget", "::", "usage"}], " ", "=", " ", 
   "\"\<Returns \\\"C\\\" if a C compiler was detected.\>\""}], ";"}]], "Code",\

 CellLabel->
  "In[6366]:=",ExpressionUUID->"d786515a-d3bd-4718-b039-f280d0b9f02b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimal", "::", "usage"}], "=", 
   "\"\<infinitesimal[ name, order ] represents an infinitesimal of name and \
at a particular order.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[6367]:=",ExpressionUUID->"dbb93444-1867-4df8-88d7-4358e4ecd562"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displacementRules", "::", "usage"}], " ", "=", " ", 
   "\"\<displacementRules[displacements] returns a list of rules to assign \
vertex displacements to their values.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"positionRules", "::", "usage"}], " ", "=", " ", 
    "\"\<positionRules[positions] returns a list of rules assigning vertex \
positions to their values.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"orthogonalizeDisplacements", "::", "usage"}], "=", "\n", 
    "\"\<orthogonalizeDisplacements[ \
{\!\(\*StyleBox[\\\"displacement\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*\
StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"1\\\",FontSlant->\\\"\
Italic\\\"]\)\!\(\*StyleBox[\\\",\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*\
StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"displacement\\\",\
FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"2\\\",FontSlant->\\\"\
Italic\\\"]\), ...}(, \
\!\(\*StyleBox[\\\"tolerance\\\",FontSlant->\\\"Italic\\\"]\)) ] returns an \
orthogonalized set of vertex displacements using optional tolerance.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomDisplacements", "::", "usage"}], "=", 
    "\"\<randomDisplacements[ m, n ] returns n random displacements of a \
mechanism m starting from positions.\nrandomDisplacements[ positions, n ] \
returns n random displacements starting from positions.\nn defaults to 1 if \
it is omitted.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vertexCoordinatesQ", "::", "usage"}], "=", " ", 
   "\"\<vertexCoordinatesQ[ m, pos ] returns True if pos are valid \
coordinates for mechanism m.\>\""}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numericCoordinatesQ", "::", "usage"}], "=", " ", 
   "\"\<numericCoordinatesQ[ m, pos ] returns True if pos are valid numerical \
coordinates for mechanism m.\>\""}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numericMachinePrecisionCoordinatesQ", "::", "usage"}], "=", " ", 
   "\"\<numericMachinePrecisionCoordinatesQ[ m, pos ] returns True if pos are \
valid numerical, machine precision coordinates for mechanism m.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[6368]:=",ExpressionUUID->"7b3d57d2-d39e-4905-8b4b-bee6117e5212"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"connectivity", "::", "usage"}], " ", "=", " ", 
   "\"\<connectivity[ m, s1 -> s2 ] returns a list of type s2 for each s1. \
Use connectivity[\\\"Methods\\\"] to possible values for s1 or s2.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"orientedQ", "::", "usage"}], " ", "=", " ", 
    "\"\<orientedQ[ m ] returns True if all faces in a mechanism are oriented \
with their neighbors.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"boundaryVertices", "::", "usage"}], "=", 
   "\"\<boundaryVertices[ mechanism ] returns a list of oriented boundary \
vertices { component 1, ...} where each boundary component is a list of \
vertex indices. A boundary is defined as the boundary of a set of 2D faces.\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"boundaryEdges", "::", "usage"}], "=", 
   "\"\<boundaryEdges[ mechanism ] returns a list of oriented boundary edges \
{{v11, v12},{v21,v22},...}. A boundary is defined as the boundary of a set of \
2D faces.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"boundaryFaces", "::", "usage"}], "=", 
   "\"\<boundaryFaces[ mechanism ] returns a list of oriented boundary \
components {face 1, face 2, ...}, ...}. A boundary is defined as the boundary \
of a set of 2D faces.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"interiorVertices", "::", "usage"}], "=", 
   "\"\<interiorVertices[ mechanism ] returns a list of interior \
vertices.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"interiorEdges", "::", "usage"}], "=", 
    "\"\<interiorEdges[ mechanism ] returns a list of interior edges.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displayDimension", "::", "usage"}], "=", "\n", 
    "\"\<displayDimension[ m ] returns the display dimension of a mechanism \
m.\ndisplayDimension[ d ][ m ], displayDimension[m -> d] changes the display \
dimension of a mechanism m to d.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"embeddingDimension", "::", "usage"}], "=", "\n", 
    "\"\<embeddingDimension[ m ] returns the embedding dimension of a \
mechanism m.\nembeddingDimension[ d ][ m ], embeddingDimension[m -> d] \
changes the embedding dimension of a mechanism m to d.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deleteDanglingVertices", "::", "usage"}], "=", 
    "\"\<deleteDanglingVertices[\!\(\*StyleBox[\\\"m\\\",FontSlant->\\\"\
Italic\\\"]\)\!\(\*StyleBox[\\\",\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*\
StyleBox[\\\"type\\\",FontSlant->\\\"Italic\\\"]\)] deletes all vertices of \
\!\(\*StyleBox[\\\"m\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)not adjacent to a cell of a specific type, \
either \\\"faces\\\" or \\\"edges\\\".\nIf omitted, the argument \
\!\(\*StyleBox[\\\"type\\\",FontSlant->\\\"Italic\\\"]\) defaults to \
\\\"faces\\\" for origami or \\\"edges\\\" for frameworks. See: \
deleteVertices[]\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"saveToFOLD", "::", "usage"}], "=", 
   "\"\<saveToFOLD[\!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\"Italic\\\"]\
\), \!\(\*StyleBox[\\\"filename\\\",FontSlant->\\\"Italic\\\"]\)] saves a \
FOLD file from a mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"loadFromFOLD", "::", "usage"}], "=", "\n", 
   "\"\<loadFromFOLD[\!\(\*StyleBox[\\\"filename\\\",FontSlant->\\\"Italic\\\"\
]\)] loads a mechanism from a FOLD. Use option \\\"face\\\" to choose how to \
treat a polygon.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6375]:=",ExpressionUUID->"a1e26495-b179-4855-8335-4436fa78fd50"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"periodicIdentification", "::", "usage"}], "=", "\n", 
    "\"\<periodicIdentification[m, {f1, func1},..] applies transformation \
functions func1, func2, ... and creates a list of vertices identified via \
those transformations.\nperiodicIdentification[m, {z1,z2,...}, {vector1, \
vector2, ...}] identifies vertices under translation vectors {vector1, \
vector2,...} and returns rules identifying vertexDisplacement objects up to \
corresponding factors of {z1, z2,...}.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"minimalMechanism", "::", "usage"}], "=", "\n", 
   "\"\<minimalMechanism[m, {vector1, vector2, ...}] reduces a mechanism to \
the smallest unit cell that can be tesselated periodically according to the \
basis of vectors provided.\nIt relies on periodicIdentification[] but \
unfortunately renumbers vertices.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6387]:=",ExpressionUUID->"684246ec-df06-4736-b3a7-7c0cdf468e9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displacementVector", "::", "usage"}], "=", "\n", 
    "\"\<displacementVector[ positions, edge ] returns the vector pointing \
along an oriented edge.\ndisplacementVector[ positions, { edge 1, edge 2, \
...} ] returns list of displacement vectors.\nEdges can be specified as \
Line[{v1,v2}] or {v1,v2}.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displacementLength", "::", "usage"}], "=", "\n", 
    "\"\<displacementLength[ positions, edge 1 ] returns the length of an \
edge.\ndisplacementLength[ positions, { edge 1, edge 2, ...} ] returns \
lengths of a list of edges.\nEdges can be specified as Line[{v1,v2}] or \
{v1,v2}.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displacementLengthSquared", "::", "usage"}], "=", "\n", 
    "\"\<displacementLengthSquared[ positions, edge 1 ] returns the squared \
length of an edge.\ndisplacementLengthSquared[ positions, { edge 1, edge 2, \
...} ] returns squared lengths of a list of edges.\nEdges can be specified as \
Line[{v1,v2}] or {v1,v2}.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"vectorAngle", "::", "usage"}], "=", "\n", 
    "\"\<vectorAngle[ positions, {vertex 1, vertex 2, vertex 3}] returns the \
angle at vertex 2 spanned by the other two points.\nvectorAngle[ positions, { \
triple 1, triple 2, ...} ] returns the vertex angles anong a list of vertex \
triples.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"turningAngle", "::", "usage"}], "=", "\n", 
    "\"\<turningAngle[ positions, {vertex 1, vertex 2, vertex 3}] returns the \
turning angle at vertex 2 spanned by the other two points.\nturningAngle[ \
positions, { triple 1, triple 2, ...} ] returns the turning angles anong a \
list of vertex triples.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"normalVector", "::", "usage"}], "=", "\n", 
    "\"\<normalVector[ positions, {vertex 1, vertex 2, vertex 3} ] returns \
the vector normal to the plane spanned by the three points.\nnormalVector[ \
positions, { triple 1, triple 2, ...} ] returns vectors normal to the plane \
spanned by the list of triples.\nnormalVector[ positions, polygon ] returns \
the vector normal to a polygon.\nnormalVector[ positions, {polygon 1, polygon \
2, ...} ] returns the vectors normal to a list of polygons.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"planarAngle", "::", "usage"}], "=", "\n", 
    "\"\<planarAngle[positions, {v1, v2, v3}] returns the oriented angle at \
vertex v2 spanned by the other two vertices.\nplanarAngle[positions, {triple \
1, triple 2, ...}] returns the oriented angles at for each triple of \
verticles.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"foldAngle", "::", "usage"}], "=", "\n", 
    "\"\<foldAngle[ mesh, positions, edge ] returns the fold angle along an \
edge.\nfoldAngle[ mesh, positions,{edge 1, edge 2,...} ] returns the fold \
angle of a list of edges.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gaussianCurvature", "::", "usage"}], "=", "\n", 
    "\"\<gaussianCurvature[ mesh, positions,vertex ] returns the discrete \
Gaussian curvature of vertex.\ngaussianCurvature[ mesh, positions,{vertex 1, \
vertex 2, ...} ] returns the discrete Gaussian curvature of a list of \
vertices.\ngaussianCurvature[ mesh, metric,{vertex 1, vertex 2, ...} uses a \
metric to explicitly compute the Gaussian curvature at each vertex.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignMechanism", "::", "usage"}], "=", 
    "\"\<alignMechanism[\!\(\*StyleBox[\\\"point\\\",FontSlant->\\\"Italic\\\"\
]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"list\\\",FontSlant->\\\"\
Italic\\\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"1\\\",FontSlant->\\\"\
Italic\\\"]\)\!\(\*StyleBox[\\\",\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*\
StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"point\\\",FontSlant->\\\"\
Italic\\\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"list\\\",FontSlant->\\\"\
Italic\\\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"2\\\",FontSlant->\\\"\
Italic\\\"]\)] aligns \!\(\*StyleBox[\\\"point\\\",FontSlant->\\\"Italic\\\"]\
\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"list\\\",FontSlant->\\\"\
Italic\\\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"2\\\",FontSlant->\\\"\
Italic\\\"]\) with \
\!\(\*StyleBox[\\\"point\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"list\\\",FontSlant->\\\"\
Italic\\\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"1\\\",FontSlant->\\\"\
Italic\\\"]\) using only Euclidean motions.\nalignMechanism[\!\(\*StyleBox[\\\
\"point\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"list\\\",FontSlant->\\\"\
Italic\\\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"1\\\",FontSlant->\\\"\
Italic\\\"]\), \!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\"Italic\\\"]\)] \
aligns a mechanical with \!\(\*StyleBox[\\\"point\\\",FontSlant->\\\"Italic\\\
\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"list\\\",FontSlant->\\\"\
Italic\\\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"1\\\",FontSlant->\\\"\
Italic\\\"]\) using Euclidean motions.\n\
alignMechanism[\!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\"Italic\\\"]\)\!\
\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"1\\\",FontSlant->\\\"\
Italic\\\"]\), \
\!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\
\" \\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"2\\\",FontSlant->\\\"\
Italic\\\"]\)] aligns \
\!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\
\" \\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"2\\\",FontSlant->\\\"\
Italic\\\"]\) to \
\!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\
\" \\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"1\\\",FontSlant->\\\"\
Italic\\\"]\) using Euclidean motions.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"congruentQ", "::", "usage"}], "=", 
   "\"\<congruentQ[p1,p2] tests whether the two vectorPositions are related \
by a rigid transformation.\ncongruentQ[p1,p2,tolerance] tests whether the two \
vectorPositions are related by a rigid transformation.\ncongruentQ[tolerance] \
is a function that can check the positions between two vertexPosition \
configurations.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6389]:=",ExpressionUUID->"20d4f0d9-5076-4185-aaa7-f1de3061bd9e"]
}, Closed]],

Cell[CellGroupData[{

Cell["global data and patterns", "Section",ExpressionUUID->"6bc0fc48-688d-4ca9-bac5-3a6645a0cdb0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`\>\"", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[6400]:=",ExpressionUUID->"9f392912-8772-4657-8e12-0dfb8191735b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["topology", "Section",ExpressionUUID->"72e8028f-0cb2-4491-b4a5-832df78eed16"],

Cell[CellGroupData[{

Cell["connectivity[]", "Subsection",ExpressionUUID->"e146d239-1c00-4935-9d62-733890aa073d"],

Cell[CellGroupData[{

Cell["orderPairs[]", "Subsubsection",ExpressionUUID->"96f25e17-0c46-43e8-aa86-a343cea151ab"],

Cell["\<\
orderPairs[{{n1, n2}, {n3, n4}, ...}]
 When provided a list of pairs, {1, b}, sort them in order such that {{1, 2}, \
{2, 3}, {3, 4}, ...}
 
 orderPairs[list 1, list 2] orders pairs in which elements of each list are \
paired with
 the corresponding element.\
\>", "Text",ExpressionUUID->"670cccd5-509b-4823-88ac-ff6d4791b777"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"orderPairs", "[", 
   RowBox[{"{", "}"}], "]"}], ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"orderPairs", "[", 
    RowBox[{"pairList_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"orderPairsTopologicalSort", "[", 
     RowBox[{"Graph", "[", 
      RowBox[{"UndirectedEdge", "@@@", "pairList"}], "]"}], "]"}], "/;", " ", 
    
    RowBox[{
     RowBox[{
      RowBox[{"Dimensions", "[", "pairList", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "==", "2"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"orderPairs", "[", 
   RowBox[{"pairList_", ",", "correspondingList_"}], "]"}], ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"association", "=", 
       RowBox[{"Dispatch", "@", 
        RowBox[{"Thread", "[", 
         RowBox[{"pairList", "->", "correspondingList"}], "]"}]}]}], "\n", 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"orderPairs", "[", "pairList", "]"}], "/.", "association"}]}], 
    "\n", "]"}], "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "pairList", "]"}], "==", 
    RowBox[{"Length", "[", "correspondingList", "]"}]}]}]}]}], "Code",
 CellLabel->
  "In[6402]:=",ExpressionUUID->"fec86841-e1b9-407e-91ed-9bcd2389efbf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "does", " ", "a", " ", "topological", " ", "sort", " ", "on", 
    " ", "a", " ", "graph"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"orderPairsTopologicalSort", "[", 
     RowBox[{"g_", "?", "AcyclicGraphQ"}], "]"}], ":=", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"TopologicalSort", "[", 
       RowBox[{"DirectedEdge", "@@@", 
        RowBox[{"EdgeList", "[", "g", "]"}]}], "]"}], ",", "2", ",", "1"}], 
     "]"}]}], "\n", 
   RowBox[{
    RowBox[{"orderPairsTopologicalSort", "[", "g_Graph", "]"}], ":=", 
    RowBox[{"List", "@@@", 
     RowBox[{"(", 
      RowBox[{"First", "@", 
       RowBox[{"FindCycle", "[", 
        RowBox[{"g", ",", "Infinity", ",", "1"}], "]"}]}], 
      ")"}]}]}]}]}]], "Code",
 CellLabel->
  "In[6405]:=",ExpressionUUID->"b7e701c3-de85-45c2-b52e-9aa223f1ec5f"]
}, Closed]],

Cell[CellGroupData[{

Cell["rotateTo[]", "Subsubsection",ExpressionUUID->"dda37c49-20b3-459d-9f34-72d989a2b391"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rotateTo", "[", 
   RowBox[{"s_List", ",", "v_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pos", "=", 
      RowBox[{"FirstPosition", "[", 
       RowBox[{"s", ",", "v"}], "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MissingQ", "[", "pos", "]"}], ",", "s", ",", 
      RowBox[{"RotateLeft", "[", 
       RowBox[{"s", ",", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"rotateTo", "[", 
   RowBox[{
    RowBox[{"h_", "[", "s_List", "]"}], ",", "v_"}], "]"}], ":=", 
  RowBox[{"h", "[", 
   RowBox[{"rotateTo", "[", 
    RowBox[{"s", ",", "v"}], "]"}], "]"}]}]}], "Code",
 CellLabel->
  "In[6407]:=",ExpressionUUID->"1bd6f123-a777-4f1c-8846-573535afb17e"]
}, Closed]],

Cell[CellGroupData[{

Cell["orderFaces[]", "Subsubsection",ExpressionUUID->"d18ddbd8-a5e7-4d3b-9ec8-10b424233e6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"orderFaces", "[", 
   RowBox[{"faceList_", ",", "v_Integer"}], "]"}], ":=", 
  RowBox[{"orderPairs", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], "/@", "faceList"}], 
    ",", "faceList"}], "]"}]}]], "Code",
 CellLabel->
  "In[6409]:=",ExpressionUUID->"25764a05-dbcb-4169-9936-584628582a73"]
}, Closed]],

Cell[CellGroupData[{

Cell["connectivity[]", "Subsubsection",ExpressionUUID->"cd0203ed-6145-429b-aebb-26a4b4acf7bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"connectivity", "[", "\"\<Methods\>\"", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<vertices\>\"", ",", "\"\<edges\>\"", ",", "\"\<faces\>\""}], "}"}],
      "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<vertices\>\"", ",", "\"\<edges\>\"", ",", "\"\<faces\>\"", ",", 
       "\"\<ordered faces\>\"", ",", "\"\<ordered edges\>\""}], "}"}]}], 
    "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[6410]:=",ExpressionUUID->"f895924f-63bb-45d4-83c0-970509bfd0f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"connectivity", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ",
    "]"}], " ", ":=", " ", 
  RowBox[{"m", "[", "\"\<faces\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"connectivity", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ",
    "]"}], " ", ":=", " ", 
  RowBox[{"m", "[", "\"\<edges\>\"", "]"}]}]}], "Code",
 CellLabel->
  "In[6411]:=",ExpressionUUID->"6d2abede-f7b3-4efe-a204-8ff504e5f57a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"connectivity", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], 
    " ", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"faces", " ", "=", " ", 
       RowBox[{"rotateThroughFaces", "[", " ", 
        RowBox[{"connectivity", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{
          "\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ", 
         "]"}], " ", "]"}]}], " ", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"GatherBy", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Join", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", " ", 
              RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", "]"}], " ", 
             "]"}], "}"}], "]"}], ",", " ", 
          RowBox[{"(*", 
           RowBox[{
           "make", " ", "a", " ", "list", " ", "of", " ", "vertices", " ", 
            "in", " ", "order", " ", "of", " ", "the", " ", "form", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"{", "2", "}"}], ",", "..."}], "}"}]}], "*)"}], "\n", 
          "\t\t\t", "faces"}], "\n", "\t\t", "]"}], ",", "\n", "\t", 
        "First"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"2", ";;"}]}], "]"}], "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"rotateThroughFaces", "[", 
   RowBox[{"{", "}"}], "]"}], ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rotateThroughFaces", "[", "faces_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RotateLeft", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "&"}], ",", "faces", ",", 
      RowBox[{
       RowBox[{"Last", "[", 
        RowBox[{"Dimensions", "[", "faces", "]"}], "]"}], "-", "1"}]}], "]"}],
     ",", "1"}], "]"}]}]}], "Code",
 CellLabel->
  "In[6413]:=",ExpressionUUID->"29675125-fd21-49ee-a583-93961cfab76f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"connectivity", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<edges\>\""}]}], " ", 
   "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cells", "=", 
      RowBox[{"Transpose", "[", " ", 
       RowBox[{"connectivity", "[", " ", 
        RowBox[{"m", ",", " ", 
         RowBox[{"\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}],
         " ", "]"}], " ", "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"cells", ",", 
            RowBox[{"{", 
             RowBox[{"cells", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", "1"}], "]"}], ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6416]:=",ExpressionUUID->"d4b93424-3000-4189-9724-831b1489b36f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"connectivity", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], " ", 
    "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"edges", " ", "=", " ", 
        RowBox[{"connectivity", "[", " ", 
         RowBox[{"m", ",", " ", 
          RowBox[{
          "\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ", 
         "]"}]}], ",", " ", 
       RowBox[{"faces", " ", "=", " ", 
        RowBox[{"connectivity", "[", " ", 
         RowBox[{"m", ",", " ", 
          RowBox[{
          "\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ", 
         "]"}]}]}], " ", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"GatherBy", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"edges", ",", 
            RowBox[{"rotateCells", "[", "faces", "]"}]}], "}"}], ",", "1"}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], "&"}]}], "]"}], 
      "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"2", ";;"}]}], "]"}], "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "rotateCells", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<Flatten\>\"", "->", "True"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rotateCells", "[", 
    RowBox[{"cells_", " ", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sortedCells", "=", 
        RowBox[{"GatherBy", "[", 
         RowBox[{"cells", ",", "Length"}], "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"NestList", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RotateLeft", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "&"}], ",", "#", ",", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], "]"}], 
          "&"}], "/@", "sortedCells"}], ",", "2"}], "]"}]}], "\n", "]"}], " ",
     "/;", " ", 
    RowBox[{"OptionValue", "[", "\"\<Flatten\>\"", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"rotateCells", "[", 
   RowBox[{"cells_", " ", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sortedCells", "=", 
      RowBox[{"GatherBy", "[", 
       RowBox[{"cells", ",", "Length"}], "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"First", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NestList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RotateLeft", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "&"}], ",", "#", ",", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], "]"}], "&"}],
       "/@", "sortedCells"}], "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6417]:=",ExpressionUUID->"27e614a4-c2a8-4940-82ad-70b2babd1e0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"connectivity", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<edges\>\""}]}], " ",
    "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"edges", " ", "=", " ", 
      RowBox[{"connectivity", "[", " ", 
       RowBox[{"m", ",", " ", 
        RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], 
       " ", "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"SortBy", "[", 
     RowBox[{
      RowBox[{"GatherBy", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"edges", ",", 
            RowBox[{"Reverse", "[", 
             RowBox[{"edges", ",", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}], ",", "1"}], "]"}], 
        ",", "First"}], "]"}], ",", "First"}], "]"}]}], "\n", "]"}]}]], "Code",\

 CellLabel->
  "In[6421]:=",ExpressionUUID->"83a6385c-2f36-459e-ab9c-3f8d635ded07"],

Cell[BoxData[
 RowBox[{
  RowBox[{"connectivity", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<ordered faces\>\""}]}],
    " ", "]"}], ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"test1", "=", 
       RowBox[{"connectivity", "[", 
        RowBox[{"m", ",", 
         RowBox[{"\"\<vertices\>\"", "->", "\"\<faces\>\""}]}], "]"}]}], ",", 
      "\n", 
      RowBox[{"edges", "=", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"connectivity", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{
          "\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ", 
         "]"}], " ", "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"ToPackedArray", "@", 
     RowBox[{"MapThread", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "\n", "\t\t", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"{", 
               RowBox[{"__", ",", "#2"}], "}"}]}], "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"test1", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"edges", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"{", 
               RowBox[{"_", ",", "#2", ",", "__"}], "}"}]}], "]"}], "&"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"test1", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"edges", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], "\n", 
        "\t\t", "}"}]}], "\n", "\t", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6422]:=",ExpressionUUID->"585ee08c-5fa7-4a7a-a1a7-81f1a9c49466"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{"Unpacks", " ", 
    RowBox[{"lists", "."}]}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{"connectivity", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{
     "\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<ordered faces\>\""}]}], 
    "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"unorderedFace", "=", 
       RowBox[{"connectivity", "[", 
        RowBox[{"m", ",", 
         RowBox[{"\"\<vertices\>\"", "->", "\"\<faces\>\""}]}], "]"}]}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{"MapThread", "[", 
      RowBox[{"orderFaces", ",", 
       RowBox[{"{", 
        RowBox[{"unorderedFace", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "unorderedFace", "]"}], "]"}]}], "}"}]}], 
      "]"}]}], "\n", "]"}]}]}]], "Code",
 CellLabel->
  "In[6423]:=",ExpressionUUID->"116e6b48-0fa9-4e1e-a4a5-b2b73fb8e94b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"connectivity", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{
    "\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<ordered edges\>\""}]}], 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"connectivity", "[", 
    RowBox[{"m", ",", 
     RowBox[{"\"\<vertices\>\"", "->", "\"\<ordered faces\>\""}]}], "]"}], 
   "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "All", ",", 
     RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]], "Code",
 CellLabel->
  "In[6424]:=",ExpressionUUID->"84134194-be7e-4a2f-8524-d78dc34bcbf5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"connectivity", "::", "badcombo"}], "=", 
   "\"\<Methods are not recognized in this combination.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"connectivity", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], " ", ",", " ", 
    RowBox[{"Rule", "[", 
     RowBox[{"_", ",", "_"}], "]"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"connectivity", "::", "badcombo"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[6425]:=",ExpressionUUID->"396a376e-926c-47c4-bbd5-12e1440db841"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["boundaryVertices[], boundaryEdges[], boundaryFaces[]", "Subsection",ExpressionUUID->"76374e09-15c0-4285-9873-5b1119f9fbac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"boundaryEdges", "[", 
   RowBox[{"m_", "?", "mechanismQ"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"facePairs", "=", 
       RowBox[{"connectivity", "[", 
        RowBox[{"m", ",", 
         RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], 
        "]"}]}], ",", "\n", "\t", 
      RowBox[{"edges", "=", 
       RowBox[{"connectivity", "[", 
        RowBox[{"m", ",", " ", 
         RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}],
         "]"}]}], ",", "\n", "\t", "boundary"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"boundary", "=", 
      RowBox[{"Pick", "[", " ", 
       RowBox[{"edges", ",", " ", 
        RowBox[{"Length", " ", "/@", " ", "facePairs"}], ",", " ", "1"}], " ",
        "]"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "boundary", "]"}], "==", "0"}], ",", "\n", 
       "\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"List", "@@", "#"}], "&"}], ",", 
         RowBox[{"FindCycle", "[", 
          RowBox[{
           RowBox[{"Graph", "[", "boundary", "]"}], ",", "Infinity", ",", 
           "All"}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], "\n", "\t", "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[6427]:=",ExpressionUUID->"c9b1dabe-f4f7-4958-94d5-a03d27395cf8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"boundaryVertices", "[", 
   RowBox[{"m_", "?", "mechanismQ"}], "]"}], " ", ":=", " ", 
  RowBox[{"Map", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"First", "@@", "#"}], "&"}], " ", ",", " ", 
    RowBox[{"boundaryEdges", "[", "m", "]"}], " ", ",", " ", 
    RowBox[{"{", "2", "}"}]}], " ", "]"}]}]], "Code",
 CellLabel->
  "In[6428]:=",ExpressionUUID->"7d002678-a532-4bcd-912e-4ff0e5ae48d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"boundaryFaces", "[", 
   RowBox[{"m_", "?", "mechanismQ"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "i", "}"}], ",", "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"boundary", " ", "=", " ", 
         RowBox[{"boundaryVertices", "[", "m", "]"}]}], ",", "\n", "\t\t", 
        RowBox[{"faces", " ", "=", " ", 
         RowBox[{"connectivity", "[", 
          RowBox[{"m", ",", " ", 
           RowBox[{
           "\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ", 
          "]"}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t", 
      RowBox[{"Table", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Select", "[", " ", 
         RowBox[{"faces", ",", " ", 
          RowBox[{
           RowBox[{"ContainsAny", "[", 
            RowBox[{
             RowBox[{"boundary", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "#"}], "]"}], "&"}]}], " ",
          "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "boundary", "]"}]}], "}"}]}], "\n", "\t\t", 
       "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6429]:=",ExpressionUUID->"e8c7d67f-6f52-4ba0-8e76-ccc48f493943"]
}, Closed]],

Cell[CellGroupData[{

Cell["interiorEdges[], interiorVertices[]", "Subsection",ExpressionUUID->"1c2c98d9-43ff-4040-a5e0-cf72764ae01b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interiorEdges", "[", 
   RowBox[{"mr_", "?", "mechanismQ"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Pick", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"connectivity", "[", " ", 
     RowBox[{"mr", ",", " ", 
      RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], 
     "]"}], ",", "\n", "\t\t", 
    RowBox[{"Length", " ", "/@", " ", 
     RowBox[{"connectivity", "[", 
      RowBox[{"mr", ",", " ", 
       RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], 
      "]"}]}], ",", "\n", "\t\t", "2"}], "\n", "\t", "]"}]}]], "Code",
 CellLabel->
  "In[6430]:=",ExpressionUUID->"3068d1eb-a6e1-4120-bfef-ce9fb71e3216"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interiorVertices", "[", 
   RowBox[{"mr_", "?", "mechanismQ"}], "]"}], ":=", "\n", 
  RowBox[{"Complement", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"DeleteDuplicates", "[", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"interiorEdges", "[", "mr", "]"}], "]"}], " ", "]"}], ",", "\n",
     "\t", 
    RowBox[{"Flatten", " ", "@", " ", 
     RowBox[{"boundaryVertices", "[", "mr", "]"}]}]}], "\n", "]"}]}]], "Code",\

 CellLabel->
  "In[6431]:=",ExpressionUUID->"bc5f153c-22ea-4998-8d43-5354d3958a35"]
}, Closed]],

Cell[CellGroupData[{

Cell["orientedQ[]", "Subsection",ExpressionUUID->"d44581db-3241-4500-8895-4f9310373c63"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"orientedQ", "[", 
   RowBox[{"mr_", "?", "mechanismQ"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"AllTrue", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"DeleteCases", "[", " ", 
     RowBox[{
      RowBox[{"connectivity", "[", 
       RowBox[{"mr", ",", 
        RowBox[{"\"\<edges\>\"", "->", "\"\<faces\>\""}]}], "]"}], " ", ",", 
      " ", 
      RowBox[{"{", "_", "}"}]}], " ", "]"}], ",", "\n", "\t\t", 
    "facePairOrientedQ"}], "\n", "\t", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"orientedQ", "[", "_", "]"}], ":=", "False"}]}], "Code",
 CellLabel->
  "In[6432]:=",ExpressionUUID->"8ed6dc61-9ce7-4391-adff-956d7a772019"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"facePairOrientedQ", "[", 
   RowBox[{"{", 
    RowBox[{"v1_", ",", "v2_"}], "}"}], "]"}], ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"eg2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"RotateLeft", "[", 
            RowBox[{"v2", ",", "#"}], "]"}], ",", "2"}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "v2", "]"}], "]"}]}]}], ",", "\n", "\t", 
      RowBox[{"eg1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"RotateLeft", "[", 
             RowBox[{"v1", ",", "#"}], "]"}], ",", "2"}], "]"}], "]"}], "&"}],
         "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "v1", "]"}], "]"}]}]}]}], "\n", "}"}], ",", 
    "\n", "\t", 
    RowBox[{"ContainsAny", "[", 
     RowBox[{"eg1", ",", "eg2"}], "]"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"facePairOrientedQ", "[", 
   RowBox[{"v1_", ",", "v2_"}], "]"}], ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"eg2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"RotateLeft", "[", 
            RowBox[{"v2", ",", "#"}], "]"}], ",", "2"}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "v2", "]"}], "]"}]}]}], ",", "\n", "\t", 
      RowBox[{"eg1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"RotateLeft", "[", 
             RowBox[{"v1", ",", "#"}], "]"}], ",", "2"}], "]"}], "]"}], "&"}],
         "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "v1", "]"}], "]"}]}]}]}], "\n", "}"}], ",", 
    "\n", "\t", 
    RowBox[{"ContainsAny", "[", 
     RowBox[{"eg1", ",", "eg2"}], "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6434]:=",ExpressionUUID->"62bac1ef-cbd7-4818-bad8-b32d8a0b8cfd"]
}, Closed]],

Cell[CellGroupData[{

Cell["embeddingDimension[], displayDimension[]", "Subsection",ExpressionUUID->"0cde69d0-d061-4888-b804-bc8f12ee2607"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"embeddingDimension", "[", " ", 
   RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], ":=", " ", 
  RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"embeddingDimension", "[", " ", 
     RowBox[{"d", " ", ":", " ", 
      RowBox[{"2", "|", "3"}]}], " ", "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"oldPositions", " ", "=", " ", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"ReplacePart", "[", 
      RowBox[{"m", ",", " ", 
       RowBox[{"1", " ", "\[Rule]", " ", 
        RowBox[{"PadRight", "[", " ", 
         RowBox[{"oldPositions", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "oldPositions", "]"}], ",", "d"}], "}"}]}],
          " ", "]"}]}]}], " ", "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"embeddingDimension", "::", "dim"}], " ", "=", " ", 
   "\"\<Dimension `1` should be 2 or 3.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"embeddingDimension", "[", " ", "d_", " ", "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
    RowBox[{"Message", "[", " ", 
     RowBox[{
      RowBox[{"embeddingDimension", "::", "dim"}], ",", " ", "d"}], " ", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"embeddingDimension", "[", " ", 
   RowBox[{"Rule", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "d_"}], "]"}], " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{
   RowBox[{"embeddingDimension", "[", "d", "]"}], "[", "m", "]"}]}]}], "Code",\

 CellLabel->
  "In[6436]:=",ExpressionUUID->"69971570-a0ce-4443-96f9-ac9ac653df50"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displayDimension", "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"m", "[", "\"\<DisplayDimension\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displayDimension", " ", "[", " ", 
     RowBox[{"d", ":", " ", 
      RowBox[{"2", "|", "3"}]}], " ", "]"}], "[", 
    RowBox[{"m_", "?", "mechanismQ"}], "]"}], " ", ":=", " ", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"mechanisms`Private`addMeshRegion", "[", 
        RowBox[{"m", ",", "d"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{"mechanismQ", "[", "res", "]"}]}]}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayDimension", "::", "dim"}], " ", "=", " ", 
   "\"\<Dimension `1` should be 2 or 3.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displayDimension", "[", " ", "d_", " ", "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
    RowBox[{"Message", "[", " ", 
     RowBox[{
      RowBox[{"displayDimension", "::", "dim"}], ",", " ", "d"}], " ", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displayDimension", "[", " ", 
   RowBox[{"Rule", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "d_"}], " ", "]"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"displayDimension", "[", "d", "]"}], "[", "m", "]"}]}]}], "Code",
 CellLabel->
  "In[6441]:=",ExpressionUUID->"3546c726-a156-4c7c-afab-f6a3f846e262"]
}, Closed]],

Cell[CellGroupData[{

Cell["deleteDanglingVertices[]", "Subsection",ExpressionUUID->"2b820542-dab3-4d0b-9a97-bb3be4d7c4e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"deleteDanglingVertices", "[", "m_origami", "]"}], " ", ":=", " ", 
  RowBox[{"deleteDanglingVertices", "[", 
   RowBox[{"m", ",", "\"\<faces\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"deleteDanglingVertices", "[", "m_framework", "]"}], " ", ":=", " ", 
  RowBox[{"deleteDanglingVertices", "[", 
   RowBox[{"m", ",", "\"\<edges\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deleteDanglingVertices", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"type", ":", " ", 
      RowBox[{"\"\<faces\>\"", "|", "\"\<edges\>\""}]}]}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{"deleteDanglingVertices", "[", 
    RowBox[{"m", ",", "type"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deleteDanglingVertices", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "\"\<faces\>\""}], "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vertexSelector", "=", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], "]"}], ",", " ", 
          RowBox[{"Length", " ", "/@", " ", 
           RowBox[{"connectivity", "[", 
            RowBox[{"m", ",", 
             RowBox[{"\"\<vertices\>\"", "\[Rule]", "\"\<faces\>\""}]}], 
            "]"}]}]}], "}"}], " ", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"deleteVertices", "[", 
      RowBox[{"m", ",", " ", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"vertexSelector", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "<", "1"}], "&"}]}], "]"}], "[", 
        
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], " ", "]"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deleteDanglingVertices", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", "\"\<edges\>\""}], "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vertexSelector", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"connectivity", "[", 
           RowBox[{"m", ",", 
            RowBox[{"\"\<vertices\>\"", "\[Rule]", "\"\<edges\>\""}]}], "]"}],
           "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}]}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{"deleteVertices", "[", 
      RowBox[{"m", ",", "vertexSelector"}], "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deleteDanglingVertices", "[", "type_", "]"}], "[", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"deleteDanglingVertices", "[", 
    RowBox[{"m", ",", " ", "type"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deleteDanglingVertices", "::", "typ"}], "=", 
   "\"\<Second argument should be either \\\"faces\\\" or \\\"edges\\\" to \
whether dangling vertices are indicated by a lack of faces or lack of \
edges.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"deleteDanglingVertices", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", "_String"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"deleteDanglingVertices", "::", "typ"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[6446]:=",ExpressionUUID->"96b5897b-36e7-417b-89ca-fc4131507b09"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
RegionDimension[], RegionEmbeddingDimension[], MeshCellCount[]\
\>", "Subsection",ExpressionUUID->"92648dd9-fe4b-4454-a084-c84bea5c6cb4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegionEmbeddingDimension", "[", "o_framework", "]"}], " ", "^:=", 
  " ", 
  RowBox[{"embeddingDimension", "[", "o", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RegionEmbeddingDimension", "[", "o_origami", "]"}], " ", "^:=", 
   " ", 
   RowBox[{"embeddingDimension", "[", "o", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"RegionDimension", "[", "o_framework", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionDimension", "[", " ", 
   RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RegionDimension", "[", "o_origami", "]"}], " ", "^:=", " ", 
   RowBox[{"RegionDimension", "[", " ", 
    RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"MeshCellCount", "[", " ", 
   RowBox[{"o_framework", ",", " ", "d___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"MeshCellCount", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], ",", " ", "d"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"MeshCellCount", "[", " ", 
   RowBox[{"o_origami", ",", " ", "d___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"MeshCellCount", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], ",", " ", "d"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6454]:=",ExpressionUUID->"1bb5502e-b3ac-4710-8ff9-b19fa098d1c7"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["vertex positions and displacements", "Section",ExpressionUUID->"fdebde89-31c1-40e0-a115-f68ade3f301b"],

Cell[CellGroupData[{

Cell["listParameters[],expandExpression[]", "Subsection",ExpressionUUID->"993c23a1-4278-4cf3-9ea0-d4f96b7da186"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listParameters", "[", "expr_", "]"}], ":=", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"expr", ",", "#"}], "]"}], "&"}], ")"}], "/@", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"List", "@@", "expr"}], ",", 
      RowBox[{"infinitesimal", "[", 
       RowBox[{"_", ",", "_"}], "]"}]}], "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[6460]:=",ExpressionUUID->"bf84e85d-32d1-4c19-9b38-a35d433a0119"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", "\t", 
   RowBox[{"This", " ", "basically", " ", "does", " ", "what", " ", 
    RowBox[{"Series", "[", "]"}], " ", "does", " ", "in", " ", "a", " ", 
    "somewhat", " ", "dumber", " ", 
    RowBox[{"way", ".", "\n", "\t", "It"}], " ", 
    RowBox[{"won", "'"}], "t", " ", "handle", " ", "limits", " ", "as", " ", 
    "nicely", " ", "as", " ", 
    RowBox[{"Series", "[", "]"}], " ", "but", " ", "it", " ", "typically", 
    " ", "presents", " ", "results", " ", "that", " ", "look", "\n", "\t", 
    "more", " ", "useful", " ", "for", " ", "analytic", " ", 
    RowBox[{"expressions", "."}]}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"expandExpression", "[", 
     RowBox[{"expr_", ",", "param_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "tmp"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"tmp", "@@", "param"}], ")"}], "^", "i"}], " ", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{"expr", ",", 
               RowBox[{"{", 
                RowBox[{"param", ",", "i"}], "}"}]}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"i", "!"}], ")"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{"param", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "/.", 
         RowBox[{"param", "->", "0"}]}], "]"}], "/.", 
       RowBox[{"tmp", "->", "infinitesimal"}]}]}], "\n", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"expandExpression", "[", 
     RowBox[{"expr_", "?", "NumericQ"}], "]"}], ":=", "expr"}], "\n", 
   RowBox[{
    RowBox[{"expandExpression", "[", "expr_", "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"params", "=", 
        RowBox[{"listParameters", "[", "expr", "]"}]}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{"Fold", "[", 
       RowBox[{"expandExpression", ",", "expr", ",", 
        RowBox[{"Reverse", "@", "params"}]}], "]"}]}], "\n", 
     "]"}]}]}]}]], "Code",
 CellLabel->
  "In[6461]:=",ExpressionUUID->"6ea34ad2-a148-45ae-aa93-a48d3d461e82"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
vertexCoordinatesQ[], numericCoordinatesQ[], \
numericMachinePrecisionCoordinatesQ[]\
\>", "Subsection",ExpressionUUID->"6f392222-bf5b-4961-95a1-f64ae3271739"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vertexCoordinatesQ", "[", " ", 
   RowBox[{"coord_", "?", "MatrixQ"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "\[Equal]", "2"}], "||", 
      RowBox[{"#", "\[Equal]", "3"}]}], " ", "&"}], ")"}], "[", 
   RowBox[{"Last", "[", 
    RowBox[{"Dimensions", "[", "coord", "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexCoordinatesQ", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"coord_", "?", "MatrixQ"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Dimensions", "[", "coord", "]"}], " ", "\[Equal]", " ", 
   RowBox[{"Dimensions", "[", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"vertexCoordinatesQ", "[", " ", "_", " ", "]"}], ":=", 
  "False"}], "\n", 
 RowBox[{
  RowBox[{"vertexCoordinatesQ", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "_"}], " ", "]"}], ":=", 
  "False"}]}], "Code",
 CellLabel->
  "In[6464]:=",ExpressionUUID->"a5ac437a-ac13-4dcc-937b-78f37d29cde8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numericCoordinatesQ", "[", " ", 
   RowBox[{"coord_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"MatrixQ", "[", 
       RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], " ", "]"}], " ",
   ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "\[Equal]", "2"}], "||", 
      RowBox[{"#", "\[Equal]", "3"}]}], " ", "&"}], ")"}], "[", 
   RowBox[{
    RowBox[{"Dimensions", "[", "coord", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"numericCoordinatesQ", "[", " ", "_", " ", "]"}], ":=", 
  "False"}], "\n", 
 RowBox[{
  RowBox[{"numericCoordinatesQ", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"coord_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{
   RowBox[{"Dimensions", "[", "coord", "]"}], " ", "\[Equal]", " ", 
   RowBox[{"Dimensions", "[", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"numericCoordinatesQ", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "_"}], " ", "]"}], ":=", 
  "False"}]}], "Code",
 CellLabel->
  "In[6468]:=",ExpressionUUID->"d5b5a4b2-1d6e-49b3-81b5-095c109c65b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numericMachinePrecisionCoordinatesQ", "[", " ", 
   RowBox[{"coord_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"MatrixQ", "[", 
       RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "\[Equal]", "2"}], "||", 
      RowBox[{"#", "\[Equal]", "3"}]}], " ", "&"}], ")"}], "[", 
   RowBox[{"Dimensions", "[", "coord", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"numericMachinePrecisionCoordinatesQ", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"coord_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}]}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Dimensions", "[", "coord", "]"}], " ", "\[Equal]", " ", 
   RowBox[{"Dimensions", "[", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"numericMachinePrecisionCoordinatesQ", "[", " ", "_", " ", "]"}], ":=",
   "False"}], "\n", 
 RowBox[{
  RowBox[{"numericMachinePrecisionCoordinatesQ", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "_"}], " ", "]"}], ":=", 
  "False"}]}], "Code",
 CellLabel->
  "In[6472]:=",ExpressionUUID->"b9a5f3ca-82c9-4e0e-b0f1-f8a346553919"]
}, Closed]],

Cell[CellGroupData[{

Cell["orthogonalizeDisplacements[]", "Subsection",ExpressionUUID->"702d28ea-9096-4e71-ab44-fc7989355b93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"orthogonalizeDisplacements", "[", " ", 
   RowBox[{
    RowBox[{"displacements", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "vertexCoordinatesQ"}], "}"}]}], ",", " ", 
    RowBox[{"tol", " ", ":", " ", 
     RowBox[{"_", "?", "NumericQ"}], " ", ":", " ", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "8"}], ")"}]}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{
        RowBox[{"Dimensions", "[", "displacements", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", 
      RowBox[{"tolsq", " ", "=", " ", 
       RowBox[{"tol", "^", "2"}]}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{"#", ",", " ", "dim"}], "]"}], "&"}], " ", "/@", " ", 
     RowBox[{"Select", "[", " ", 
      RowBox[{
       RowBox[{"Orthogonalize", "[", " ", 
        RowBox[{
         RowBox[{"Flatten", " ", "/@", " ", "displacements"}], ",", " ", 
         RowBox[{"Tolerance", " ", "\[Rule]", " ", "tol"}]}], " ", "]"}], ",",
        " ", 
       RowBox[{
        RowBox[{
         RowBox[{"#", " ", ".", " ", "#"}], " ", ">", " ", "tolsq"}], " ", 
        "&"}]}], " ", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6476]:=",ExpressionUUID->"cc24f4ca-ba03-4371-9cf3-0b9712ccd804"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"orthogonalizeDisplacements", "::", "notdispl"}], "=", 
   "\"\<Not a list of valid vertex displacements of the same \
dimension.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"orthogonalizeDisplacements", "::", "tol"}], "=", 
    "\"\<Tolerance must be numeric.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"orthogonalizeDisplacements", "[", 
   RowBox[{"displacements_", ",", "___"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"orthogonalizeDisplacements", "::", "notdispl"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"orthogonalizeDisplacements", "[", 
   RowBox[{"displacements_", ",", "_"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"orthogonalizeDisplacements", "::", "tol"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[6477]:=",ExpressionUUID->"e7080ce3-2904-4c72-bd09-95058f237fa4"]
}, Closed]],

Cell[CellGroupData[{

Cell["normalizeDisplacement[]", "Subsection",ExpressionUUID->"55d1c213-4bb2-4451-ba1c-fdc21c15bcf2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"normalizeDisplacement", "[", 
   RowBox[{"displacement_", "?", "MatrixQ"}], "]"}], ":=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"Flatten", "[", "displacement", "]"}], "]"}], ",", 
    RowBox[{"Last", "[", 
     RowBox[{"Dimensions", "[", "displacement", "]"}], "]"}]}], 
   "]"}]}]], "Code",
 CellLabel->
  "In[6481]:=",ExpressionUUID->"b074e873-e000-444e-bfd3-912d2da5f9f6"]
}, Closed]],

Cell[CellGroupData[{

Cell["vertexPosition[], vertexDisplacement[], to3D, to2D, toDim", "Subsection",ExpressionUUID->"3f58e51a-22ea-423b-a461-52f70b313601"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$coordinateSymbols", "[", "3", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$coordinateSymbols", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"vertexPosition", "[", 
   RowBox[{
    RowBox[{"n", " ", ":", " ", 
     RowBox[{"{", "__Integer", "}"}]}], ",", " ", "d_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexPosition", "[", 
     RowBox[{"#", ",", "d"}], "]"}], "&"}], " ", "/@", " ", "n"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexPosition", "[", 
   RowBox[{"n_Integer", ",", " ", 
    RowBox[{"d", " ", ":", " ", 
     RowBox[{
      RowBox[{"{", "__String", "}"}], "|", 
      RowBox[{"{", "__Integer", "}"}]}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexPosition", "[", 
     RowBox[{"n", ",", "#"}], "]"}], "&"}], "/@", "d"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexPosition", "[", 
   RowBox[{"n_Integer", ",", " ", 
    RowBox[{"All", "[", " ", "d_Integer", " ", "]"}]}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexPosition", "[", 
     RowBox[{"n", ",", "#"}], "]"}], "&"}], " ", "/@", " ", 
   RowBox[{"$coordinateSymbols", "[", "d", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"vertexPosition", "[", 
   RowBox[{"n_Integer", ",", " ", "m_Integer"}], "]"}], " ", ":=", " ", 
  RowBox[{"vertexPosition", "[", 
   RowBox[{"n", ",", " ", 
    RowBox[{
     RowBox[{"$coordinateSymbols", "[", "3", "]"}], "[", 
     RowBox[{"[", "m", "]"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexPosition", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "d_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexPosition", "[", 
     RowBox[{"#", ",", "d"}], "]"}], "&"}], " ", "/@", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{
      RowBox[{"m", "[", "\"\<mesh\>\"", "]"}], ",", "0"}], "]"}], 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vertexPosition", "[", 
    RowBox[{"m_", "?", "mechanismQ"}], "]"}], " ", ":=", " ", 
   RowBox[{"vertexPosition", "[", 
    RowBox[{"m", ",", " ", 
     RowBox[{"All", "[", " ", 
      RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], " ", "]"}]}], 
    " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{
    RowBox[{"n", " ", ":", " ", 
     RowBox[{"{", "__Integer", "}"}]}], ",", "d_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexDisplacement", "[", 
     RowBox[{"#", ",", "d"}], "]"}], "&"}], "/@", "n"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{"n_Integer", ",", 
    RowBox[{"d", " ", ":", " ", 
     RowBox[{
      RowBox[{"{", "__String", "}"}], "|", 
      RowBox[{"{", "__Integer", "}"}]}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexDisplacement", "[", 
     RowBox[{"n", ",", "#"}], "]"}], "&"}], "/@", "d"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{"n_Integer", ",", 
    RowBox[{"All", "[", "d_Integer", "]"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexDisplacement", "[", 
     RowBox[{"n", ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"$coordinateSymbols", "[", "d", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{"n_Integer", ",", "m_Integer"}], "]"}], ":=", 
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{"n", ",", 
    RowBox[{
     RowBox[{"$coordinateSymbols", "[", "3", "]"}], "[", 
     RowBox[{"[", "m", "]"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", "d_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexDisplacement", "[", 
     RowBox[{"#", ",", "d"}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{
      RowBox[{"m", "[", "\"\<mesh\>\"", "]"}], ",", "0"}], "]"}], 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vertexDisplacement", "[", 
    RowBox[{"m_", "?", "mechanismQ"}], "]"}], ":=", 
   RowBox[{"vertexDisplacement", "[", 
    RowBox[{"m", ",", 
     RowBox[{"All", "[", 
      RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], "]"}]}], "]"}]}],
   "\n", "\n", 
  RowBox[{"(*", "\n", "\t", 
   RowBox[{
   "Convert", " ", "vertex", " ", "positions", " ", "and", " ", 
    "displacements", " ", "in", " ", "various", " ", 
    RowBox[{"ways", "."}]}], "\n", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"to3D", "=", 
   RowBox[{
    RowBox[{"PadRight", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], ",", "3"}], "}"}]}], "]"}], 
    "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"to2D", "=", 
    RowBox[{
     RowBox[{"PadRight", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "#", "]"}], ",", "2"}], "}"}]}], "]"}], 
     "&"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toDim", "::", "dim"}], "=", 
   "\"\<Number of dimensions is not a positive integer.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"toDim", "[", "n_Integer", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"PadRight", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], ",", "n"}], "}"}]}], "]"}], "&"}], 
   " ", "/;", " ", 
   RowBox[{"n", ">", "0"}]}]}], "\n", 
 RowBox[{
  RowBox[{"toDim", "[", "n_", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"toDim", "::", "dim"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[6482]:=",ExpressionUUID->"962d6ed6-55b6-443c-89ca-3f41ecb08743"]
}, Closed]],

Cell[CellGroupData[{

Cell["displacementRules[], positionRules[]", "Subsection",ExpressionUUID->"8f391a10-04f2-4ed7-aea1-145efce6a5b2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"positionRules", "[", " ", 
   RowBox[{"positions_", "?", "vertexCoordinatesQ"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"arbitraryPositions", " ", "=", " ", 
      RowBox[{"Array", "[", " ", 
       RowBox[{"vertexPosition", ",", " ", 
        RowBox[{"Dimensions", "[", "positions", "]"}]}], " ", "]"}]}], "\n", 
     "}"}], ",", "\n", "\t", 
    RowBox[{"Flatten", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Rule", ",", " ", 
       RowBox[{"{", 
        RowBox[{"arbitraryPositions", ",", " ", "positions"}], "}"}], ",", 
       " ", "2"}], "]"}], "]"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"positionRules", "[", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "vertexCoordinatesQ"}], "}"}]}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"arbitraryPositions", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{"vertexPosition", ",", " ", 
          RowBox[{
           RowBox[{"Dimensions", "[", "positions", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}]}], "\n", "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Flatten", " ", "/@", " ", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{"Rule", ",", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"ConstantArray", "[", " ", 
            RowBox[{"arbitraryPositions", ",", " ", 
             RowBox[{"Length", "[", "positions", "]"}]}], " ", "]"}], ",", 
           " ", "positions"}], " ", "}"}], " ", ",", " ", "3"}], " ", 
        "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"ArrayQ", "[", "positions", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"positionRules", "[", " ", "pos_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"positionRules", "::", "pos"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"positionRules", "::", "pos"}], " ", "=", " ", 
    "\"\<Positions are not of valid form.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displacementRules", "[", " ", 
   RowBox[{"positions_", "?", "vertexCoordinatesQ"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"arbitraryPositions", " ", "=", " ", 
      RowBox[{"Array", "[", " ", 
       RowBox[{"vertexDisplacement", ",", " ", 
        RowBox[{"Dimensions", "[", "positions", "]"}]}], " ", "]"}]}], "\n", 
     "}"}], ",", "\n", "\t", 
    RowBox[{"Flatten", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Rule", ",", " ", 
       RowBox[{"{", 
        RowBox[{"arbitraryPositions", ",", " ", "positions"}], "}"}], ",", 
       " ", "2"}], "]"}], "]"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementRules", "[", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "vertexCoordinatesQ"}], "}"}]}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"arbitraryPositions", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{"vertexDisplacement", ",", " ", 
          RowBox[{
           RowBox[{"Dimensions", "[", "positions", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}]}], "\n", "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Flatten", " ", "/@", " ", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{"Rule", ",", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"ConstantArray", "[", " ", 
            RowBox[{"arbitraryPositions", ",", " ", 
             RowBox[{"Length", "[", "positions", "]"}]}], " ", "]"}], ",", 
           " ", "positions"}], " ", "}"}], " ", ",", " ", "3"}], " ", 
        "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"ArrayQ", "[", "positions", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displacementRules", "[", " ", "pos_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"displacementRules", "::", "pos"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementRules", "::", "pos"}], " ", "=", " ", 
   "\"\<Displacements are not of valid form.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6501]:=",ExpressionUUID->"fc8e80b7-f492-45a8-ad2d-80d222d7c4ab"]
}, Closed]],

Cell[CellGroupData[{

Cell["randomDisplacements[]", "Subsection",ExpressionUUID->"5ef4575d-ff53-410b-b2dc-0721806c9003"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacementsInternal", "[", " ", 
    RowBox[{"positions_", ",", " ", "distribution_", ",", " ", 
     RowBox[{"precision_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericQ", "[", "#", "]"}], " ", "&&", " ", 
         RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"numDisplacements_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", ">", "0"}], "&"}], ")"}]}]}], " ", "]"}], " ", ":=", 
   "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
      "numberOfVertices", ",", " ", "dim", ",", " ", "randomNumbers"}], "\n", 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"numberOfVertices", ",", " ", "dim"}], " ", "}"}], " ", "=", 
       " ", 
       RowBox[{"Dimensions", "[", "positions", "]"}]}], ";", "\n", "\t", 
      RowBox[{"Check", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{"positions", ",", " ", "numDisplacements"}], "]"}], " ", 
         "+", " ", 
         RowBox[{"RandomVariate", "[", " ", 
          RowBox[{"distribution", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "numDisplacements", ",", " ", "numberOfVertices", ",", "dim"}], 
            "}"}], ",", " ", 
           RowBox[{"WorkingPrecision", " ", "\[Rule]", " ", "precision"}]}], 
          " ", "]"}]}], ",", "\n", "\n", "\t\t", "$Failed"}], "\n", "\t", 
       "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"randomDisplacementsInternal", "[", " ", 
   RowBox[{"positions_", ",", " ", "distribution_", ",", " ", 
    RowBox[{"precision_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"NumericQ", "[", "#", "]"}], " ", "&&", " ", 
        RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], ",", " ", 
    RowBox[{"rules", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rule", "[", 
        RowBox[{
         RowBox[{"vertexDisplacement", "[", 
          RowBox[{"_", ",", "_"}], "]"}], ",", "_"}], "]"}], ".."}], "}"}]}], 
    ",", " ", 
    RowBox[{"numDisplacements_Integer", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", ">", "0"}], "&"}], ")"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
     "numberOfVertices", ",", " ", "dim", ",", " ", "displacements", ",", " ",
       "arbitraryDisplacements"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"numberOfVertices", ",", " ", "dim"}], " ", "}"}], " ", "=", 
      " ", 
      RowBox[{"Dimensions", "[", "positions", "]"}]}], ";", "\n", "\t", 
     RowBox[{"displacements", " ", "=", " ", 
      RowBox[{
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"vertexDisplacement", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"numberOfVertices", ",", "dim"}], "}"}]}], "]"}], " ", "//.",
        " ", "rules"}]}], ";", "\n", "\t", 
     RowBox[{"arbitraryDisplacements", " ", "=", " ", 
      RowBox[{"Cases", "[", " ", 
       RowBox[{
        RowBox[{"Flatten", "[", "displacements", "]"}], ",", " ", 
        "_vertexDisplacement"}], "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"Check", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"positions", ",", " ", "numDisplacements"}], "]"}], " ", "+",
         " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"displacements", " ", "/.", " ", 
             RowBox[{"Thread", "[", 
              RowBox[{"arbitraryDisplacements", "->", 
               RowBox[{"RandomVariate", "[", "\n", "\t\t\t", 
                RowBox[{"distribution", ",", "\n", "\t\t\t", 
                 RowBox[{"Length", "[", "arbitraryDisplacements", "]"}], ",", 
                 "\n", "\t\t\t", 
                 RowBox[{"WorkingPrecision", "\[Rule]", "precision"}]}], "\n",
                 "\t\t", "]"}]}], "]"}]}], " ", "&"}], ")"}], ",", " ", 
          "numDisplacements"}], " ", "]"}]}], ",", "\n", "\n", "\t\t", 
       "$Failed"}], "\n", "\t", "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6509]:=",ExpressionUUID->"e2d65e56-4673-4c8e-8227-2994bb1c0619"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacements", "::", "numpos"}], "=", 
   "\"\<Not a valid number of displacements.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacements", "::", "precision"}], "=", 
   "\"\<Working precision should be a real, positive number.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomDisplacements", "::", "rules"}], "=", 
    "\"\<List of rules must be of the form {vertexDisplacements[_,_]->_, \
..}\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"randomDisplacementsInternal", "[", " ", 
   RowBox[{
   "positions_", ",", " ", "distribution_", ",", " ", "precision_", ",", " ", 
    "rules_", ",", " ", "numDisplacements_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Not", "[", 
      RowBox[{
       RowBox[{"NumericQ", "[", "precision", "]"}], " ", "&&", " ", 
       RowBox[{"precision", " ", ">", " ", "0"}]}], "]"}], ",", "\n", "\t\t", 
     
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"randomDisplacements", "::", "precision"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", 
     RowBox[{"Not", "[", 
      RowBox[{
       RowBox[{"IntegerQ", "[", "numDisplacements", "]"}], " ", "&&", " ", 
       RowBox[{"numDisplacements", " ", ">", " ", "0"}]}], "]"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"randomDisplacements", "::", "numpos"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", "True", ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"randomDisplacements", "::", "rules"}], "]"}], ";", " ", 
      "False"}]}], "\n", "]"}]}]}]}], "Code",
 CellLabel->
  "In[6511]:=",ExpressionUUID->"097af00b-cd95-484d-a8cd-bcd98c53194e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "randomDisplacements", "]"}], "=", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<distribution\>\"", "->", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", 
         RowBox[{"1", "/", "10"}]}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"WorkingPrecision", "->", "MachinePrecision"}], ",", "\n", "\t", 
      RowBox[{"\"\<rules\>\"", "\[Rule]", 
       RowBox[{"{", "}"}]}]}], "\n", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"randomDisplacements", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], " ", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"randomDisplacementsInternal", "[", 
       RowBox[{
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<distribution\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}], ",", " ", "1"}], 
       "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"res", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
       "randomDisplacementsInternal"}], " ", "&&", " ", 
      RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacements", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], " ", ",", " ", "numDisplacements_", 
     ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"randomDisplacementsInternal", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<distribution\>\"", "]"}], ",", " ", 
         
         RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}], ",", " ", 
         "numDisplacements"}], "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
        "randomDisplacementsInternal"}], " ", "&&", " ", 
       RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], "\n",
   "\n", 
  RowBox[{"(*", 
   RowBox[{"choose", " ", "your", " ", "own", " ", "coordinates"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"randomDisplacements", "[", 
   RowBox[{
    RowBox[{"coordinates_", "?", "vertexCoordinatesQ"}], ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", "\n", 
  
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"randomDisplacementsInternal", "[", 
       RowBox[{"coordinates", ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<distribution\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}], ",", " ", "1"}], 
       "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"res", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
       "randomDisplacementsInternal"}], " ", "&&", " ", 
      RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacements", "[", 
    RowBox[{
     RowBox[{"coordinates_", "?", "vertexCoordinatesQ"}], " ", ",", " ", 
     "numDisplacements_", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"randomDisplacementsInternal", "[", 
        RowBox[{"coordinates", ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<distribution\>\"", "]"}], ",", " ", 
         
         RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}], ",", " ", 
         "numDisplacements"}], "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
        "randomDisplacementsInternal"}], " ", "&&", " ", 
       RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], "\n",
   "\n", 
  RowBox[{"(*", "***)"}]}], "\n", 
 RowBox[{
  RowBox[{"randomDisplacements", "[", 
   RowBox[{
    RowBox[{"numVertices_Integer", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ",", " ", 
    RowBox[{"All", "[", " ", 
     RowBox[{"dim", ":", " ", 
      RowBox[{"2", "|", "3"}]}], " ", "]"}], " ", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", "\n", 
  
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"randomDisplacementsInternal", "[", " ", 
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"numVertices", ",", " ", "dim"}], "}"}]}], " ", "]"}], " ",
         ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<distribution\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}], ",", " ", "1"}], 
       "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"res", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
       "randomDisplacementsInternal"}], " ", "&&", " ", 
      RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacements", "[", 
    RowBox[{
     RowBox[{"numVertices_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ",", " ", 
     RowBox[{"All", "[", " ", 
      RowBox[{"dim", ":", " ", 
       RowBox[{"2", "|", "3"}]}], " ", "]"}], " ", ",", " ", 
     "numDisplacements_", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"randomDisplacementsInternal", "[", " ", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"numVertices", ",", " ", "dim"}], "}"}]}], " ", "]"}], 
         " ", ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<distribution\>\"", "]"}], ",", " ", 
         
         RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}], ",", " ", 
         "numDisplacements"}], "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
        "randomDisplacementsInternal"}], " ", "&&", " ", 
       RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacements", "::", "dim"}], "=", 
   "\"\<Dimension must be either 2 or 3.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomDisplacements", "::", "numvert"}], "=", 
    "\"\<Not a valid number of vertices.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"randomDisplacements", "[", 
   RowBox[{"numVertices_", ",", " ", "dim_", " ", ",", " ", "___"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Not", "[", " ", 
      RowBox[{
       RowBox[{"IntegerQ", "[", "numVertices", "]"}], " ", "&&", " ", 
       RowBox[{"numVertices", " ", ">", " ", "0"}]}], " ", "]"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"randomDisplacements", "::", "numvert"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"dim", " ", "\[NotEqual]", " ", "2"}], " ", "&&", " ", 
      RowBox[{"dim", " ", "\[NotEqual]", " ", "3"}]}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"randomDisplacements", "::", "dim"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", "True", ",", " ", "False"}], "\n", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[6515]:=",ExpressionUUID->"eb2c692b-8016-46c8-9bbf-9494375f1de4"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Periodic mechanisms", "Section",ExpressionUUID->"6c87b55b-aadb-402e-9eef-99119af5b41f"],

Cell[CellGroupData[{

Cell["periodicIdentification[]", "Subsection",ExpressionUUID->"60e056ed-a16c-4841-8b4b-dde35c6dcbd9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mapQ", "[", 
   RowBox[{"{", 
    RowBox[{"f_", ",", " ", 
     RowBox[{"map", ":", "_Function"}]}], "}"}], "]"}], ":=", "True"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"maoQ", "[", "_", "]"}], ":=", "False"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"periodicIdentificationData", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"f", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "mapQ"}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", 
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"labels", " ", "=", " ", 
         RowBox[{"f", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t", 
        RowBox[{"maps", " ", "=", " ", 
         RowBox[{"f", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", "\n", "\t", 
        RowBox[{"pos", " ", "=", " ", 
         RowBox[{"mechanismPositions", "[", "m", "]"}]}], ",", " ", 
        RowBox[{"dim", " ", "=", " ", 
         RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], ",", "\n", 
        "\t", 
        RowBox[{"ruleFunction", "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "x", "}"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
             RowBox[{"x", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], " ", "]"}]}],
         ",", "\n", "\t", 
        RowBox[{"vertices", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], "]"}]}]}], "\n", 
       "}"}], ",", "\n", "\t", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{"labels", ",", "\n", "\t\t", 
        RowBox[{"vertices", " ", "//.", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"MapThread", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ruleFunction", "[", "#1", "]"}], " ", "/@", " ", 
              RowBox[{"overlappingVertices", "[", 
               RowBox[{"pos", ",", " ", 
                RowBox[{"#2", " ", "/@", " ", "pos"}]}], "]"}]}], "&"}], ",", 
            "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{"labels", ",", "maps"}], "}"}]}], "\n", "\t\t", "]"}], 
          "]"}]}]}], "\n", "\t", "}"}]}], "\n", "]"}]}], "]"}]}]}], "Code",
 CellLabel->
  "In[6525]:=",ExpressionUUID->"894f0b58-5723-4d0e-809d-4ee4d9dc3d49"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentification", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"transf", " ", ":", " ", 
      RowBox[{"{", "__Function", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"f", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Unique", "[", "]"}], "&"}], ",", 
          RowBox[{"Length", "[", "transf", "]"}]}], " ", "]"}]}]}], "}"}], 
     ",", 
     RowBox[{"With", "[", "\n", 
      RowBox[{
       RowBox[{"{", "\n", 
        RowBox[{
         RowBox[{"dim", "=", 
          RowBox[{"embeddingDimension", "[", "m", "]"}]}], ",", "\n", 
         RowBox[{"data", " ", "=", " ", 
          RowBox[{"periodicIdentificationData", "[", 
           RowBox[{"m", ",", " ", 
            RowBox[{"Transpose", "[", " ", 
             RowBox[{"{", 
              RowBox[{"f", ",", " ", "transf"}], "}"}], " ", "]"}]}], " ", 
           "]"}]}], ",", "\n", 
         RowBox[{"cleanupRule", " ", "=", " ", 
          RowBox[{"Thread", "[", 
           RowBox[{"f", "\[Rule]", "Identity"}], "]"}]}]}], "\n", "}"}], ",", 
       "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "/.", " ", 
         RowBox[{"x_Integer", " ", "\[RuleDelayed]", " ", 
          RowBox[{"vertexPosition", "[", 
           RowBox[{"x", ",", 
            RowBox[{"All", "[", "dim", "]"}]}], "]"}]}]}], " ", "/.", " ", 
        "cleanupRule"}]}], "\n", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"periodicIdentification", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "func_List", ",", " ", 
    RowBox[{"transf", " ", ":", " ", 
     RowBox[{"{", "__Function", "}"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y", ",", " ", 
       RowBox[{"f", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Unique", "[", "]"}], "&"}], ",", 
          RowBox[{"Length", "[", "transf", "]"}]}], " ", "]"}]}]}], "}"}], 
     ",", 
     RowBox[{"With", "[", "\n", 
      RowBox[{
       RowBox[{"{", "\n", 
        RowBox[{
         RowBox[{"dim", "=", 
          RowBox[{"embeddingDimension", "[", "m", "]"}]}], ",", "\n", 
         RowBox[{"data", " ", "=", " ", 
          RowBox[{"periodicIdentificationData", "[", 
           RowBox[{"m", ",", " ", 
            RowBox[{"Transpose", "[", " ", 
             RowBox[{"{", 
              RowBox[{"f", ",", " ", "transf"}], "}"}], " ", "]"}]}], " ", 
           "]"}]}], ",", "\n", 
         RowBox[{"cleanupRule", " ", "=", " ", 
          RowBox[{"Thread", "[", 
           RowBox[{"f", "\[Rule]", "func"}], "]"}]}]}], "\n", "}"}], ",", 
       "\n", "\t", 
       RowBox[{"DeleteCases", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Thread", "[", " ", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"vertexPosition", "[", "m", "]"}], "]"}], " ", "\[Rule]", 
           " ", 
           RowBox[{"Flatten", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"data", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", "/.", " ", 
              RowBox[{"x_Integer", " ", "\[RuleDelayed]", " ", 
               RowBox[{"vertexPosition", "[", 
                RowBox[{"x", ",", 
                 RowBox[{"All", "[", "dim", "]"}]}], "]"}]}]}], " ", "/.", 
             " ", "cleanupRule"}], " ", "]"}]}], " ", "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"y_", " ", "\[Rule]", " ", "y_"}]}], "\n", "\t", "]"}]}], 
      "\n", "]"}]}], "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "func", "]"}], " ", "\[Equal]", " ", 
    RowBox[{"Length", "[", "transf", "]"}]}]}]}]}], "Code",
 CellLabel->
  "In[6528]:=",ExpressionUUID->"b2e7dc4a-fb6d-44f9-b0b0-6d6b222a28ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"periodicIdentification", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"vars_", "?", "VectorQ"}], ",", " ", 
    RowBox[{"latticeVectors_", "?", "MatrixQ"}]}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y", ",", " ", "z", ",", " ", 
       RowBox[{"f", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Unique", "[", "]"}], "&"}], ",", 
          RowBox[{"Length", "[", "vars", "]"}]}], "]"}]}]}], "}"}], ",", " ", 
     
     RowBox[{"With", "[", "\n", 
      RowBox[{
       RowBox[{"{", "\n", 
        RowBox[{
         RowBox[{"dim", "=", 
          RowBox[{"embeddingDimension", "[", "m", "]"}]}], ",", "\n", 
         RowBox[{"data", " ", "=", " ", 
          RowBox[{"periodicIdentificationData", "[", 
           RowBox[{"m", ",", " ", 
            RowBox[{"Transpose", "[", " ", 
             RowBox[{"{", 
              RowBox[{"f", ",", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"Function", "[", 
                  RowBox[{
                   RowBox[{"{", "z", "}"}], ",", 
                   RowBox[{"z", " ", "+", " ", "#"}]}], "]"}], "&"}], " ", "/@",
                 " ", "latticeVectors"}]}], "}"}], " ", "]"}]}], " ", "]"}]}],
          ",", "\n", 
         RowBox[{"cleanupRule", " ", "=", " ", 
          RowBox[{"Thread", "[", " ", 
           RowBox[{"f", " ", "\[Rule]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{
                 RowBox[{"{", "y", "}"}], ",", " ", 
                 RowBox[{"#", " ", "y"}]}], "]"}], "&"}], "/@", "vars"}], 
             ")"}]}], " ", "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
       RowBox[{"DeleteCases", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Thread", "[", " ", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}], " ", 
           "\[Rule]", " ", 
           RowBox[{"Flatten", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"data", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", "/.", " ", 
              RowBox[{"x_Integer", " ", "\[RuleDelayed]", " ", 
               RowBox[{"vertexDisplacement", "[", 
                RowBox[{"x", ",", 
                 RowBox[{"All", "[", "dim", "]"}]}], "]"}]}]}], " ", "/.", 
             " ", "cleanupRule"}], " ", "]"}]}], " ", "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"z_", " ", "\[Rule]", " ", "z_"}]}], "\n", "\t", "]"}]}], 
      "\n", "]"}]}], "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "vars", "]"}], "\[Equal]", 
     RowBox[{"Length", "[", "latticeVectors", "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Last", "[", " ", 
      RowBox[{"Dimensions", "[", "latticeVectors", "]"}], " ", "]"}], " ", 
     "\[Equal]", " ", 
     RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}]}]}]}]], "Code",
 CellLabel->
  "In[6530]:=",ExpressionUUID->"b9b089d6-add9-4269-87bb-d50c23ee1f14"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\n", "\t", 
   RowBox[{
   "overlappingVertices", " ", "returns", " ", "a", " ", "list", " ", "of", 
    " ", "which", " ", "vertices", " ", "in", " ", "the", " ", "first", " ", 
    "set", " ", "of", " ", "positions", " ", "can", " ", "be", "\n", "\t", 
    "identified", " ", "in", " ", "the", " ", "second", " ", 
    RowBox[{"set", ".", "\n", "\t", "\n", "\t", 
     RowBox[{"overlappingVertices", "[", 
      RowBox[{
       RowBox[{"positions", " ", "1"}], ",", " ", 
       RowBox[{"positions", " ", "2"}]}], "]"}]}], " ", "returns", " ", "a", 
    " ", "list", " ", "of", " ", "which", " ", "vertices", " ", "listed", " ",
     "in", " ", "1", " ", "can", " ", "be", " ", "found", " ", "in", " ", 
    "2."}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{"overlappingVertices", "[", 
    RowBox[{
     RowBox[{"positions1_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"positions2_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"tol", " ", ":", " ", 
      RowBox[{"_", "?", "NumericQ"}], " ", ":", " ", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "5"}], ")"}]}]}]}], "]"}], " ", ":=", " ", "\n", 
   RowBox[{
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"nearestList", ",", " ", "selectorList"}], " ", "}"}], ",", 
      "\n", "\t", 
      RowBox[{"(*", "\n", "\t", 
       RowBox[{
       "get", " ", "the", " ", "points", " ", "in", " ", "list", " ", "1", 
        " ", "that", " ", "are", " ", "closest", " ", "to", " ", "each", " ", 
        "of", " ", "the", " ", "points", " ", "in", " ", "list", " ", "2"}], 
       "\n", "\t", "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"nearestList", " ", "=", " ", 
        RowBox[{
         RowBox[{"Nearest", "[", " ", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"positions1", " ", "\[Rule]", " ", 
             RowBox[{"Range", "[", " ", 
              RowBox[{"Length", "[", "positions1", "]"}], " ", "]"}]}], "]"}],
            ",", " ", "positions2"}], " ", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], " ", ";", "\n", "\n", 
       "\t", 
       RowBox[{"(*", 
        RowBox[{
        "get", " ", "the", " ", "actual", " ", "overlapping", " ", "points", 
         " ", "according", " ", "to", " ", "the", " ", "provided", " ", 
         "tolerance"}], "*)"}], "\n", "\t", 
       RowBox[{"selectorList", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", ".", "#"}], "<", 
            RowBox[{"tol", "^", "2"}]}], "&"}], ")"}], " ", "/@", " ", 
         RowBox[{"(", " ", 
          RowBox[{"positions2", "-", 
           RowBox[{"positions1", "[", 
            RowBox[{"[", " ", "nearestList", " ", "]"}], "]"}]}], " ", 
          ")"}]}]}], " ", ";", "\n", "\n", "\t", 
       RowBox[{"Pick", "[", " ", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"nearestList", " ", "\[Rule]", " ", 
           RowBox[{"Range", "[", " ", 
            RowBox[{"Length", " ", "@", " ", "positions1"}], "]"}]}], " ", 
          "]"}], ",", " ", "selectorList"}], " ", "]"}]}]}], "\n", "\n", 
     "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "positions1", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"Dimensions", "[", "positions2", "]"}]}]}]}]}]], "Code",
 CellLabel->
  "In[6531]:=",ExpressionUUID->"05b7ff90-ba72-4264-910c-7dcce83fa5b1"]
}, Closed]],

Cell[CellGroupData[{

Cell["minimalMechanism[]", "Subsection",ExpressionUUID->"a08fec2b-4c6d-4ec5-a6c9-19108d52a205"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"minimalMechanism", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"basis_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{
          RowBox[{"N", "[", "#", "]"}], ",", "NumericQ"}], "]"}], "&"}], 
       ")"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{"badVertices", "=", 
        RowBox[{"Check", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", " ", 
           RowBox[{
            RowBox[{"periodicIdentification", "[", 
             RowBox[{"m", ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"1", ",", 
                RowBox[{"Length", "[", "basis", "]"}]}], "]"}], ",", 
              "basis"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}], "]"}], ",", 
          "$Failed"}], "]"}]}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"badEdges", "=", " ", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"connectivity", "[", 
               RowBox[{"m", ",", 
                RowBox[{"\"\<edges\>\"", "\[Rule]", "\"\<vertices\>\""}]}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{"ContainsAll", "[", 
                RowBox[{"badVertices", ",", "#"}], "]"}], "&"}]}], "]"}]}], 
           ",", "\n", "\t\t", 
           RowBox[{"badFaces", " ", "=", " ", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"connectivity", "[", 
               RowBox[{"m", ",", 
                RowBox[{"\"\<faces\>\"", "\[Rule]", "\"\<vertices\>\""}]}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{"ContainsAll", "[", 
                RowBox[{"badVertices", ",", "#"}], "]"}], "&"}]}], "]"}]}]}], 
          "\n", "\t", "}"}], ",", "\n", "\t\t", 
         RowBox[{"deleteDanglingVertices", "[", "\n", "\t\t\t", 
          RowBox[{"deleteCells", "[", 
           RowBox[{"m", ",", " ", 
            RowBox[{"Alternatives", " ", "@@", " ", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"_", "/@", "badEdges"}], ",", 
               RowBox[{"_", "/@", "badFaces"}]}], "]"}]}]}], " ", "]"}], "\n",
           "\t\t", "]"}]}], "\n", "\t", "]"}], " ", "/;", " ", 
       RowBox[{"badVertices", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}], 
    " ", "/;", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", "basis", "]"}], "\[Equal]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"embeddingDimension", "[", "m", "]"}], ",", 
         RowBox[{"embeddingDimension", "[", "m", "]"}]}], "}"}]}], ",", 
      "True", ",", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"minimalMechanism", "::", "dim"}], "]"}], ";", " ", 
       "False"}]}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"minimalMechanism", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"basis_", "?", "MatrixQ"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"minimalMechanism", "::", "num"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"minimalMechanism", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"basis", " ", ":", " ", 
     RowBox[{"Except", "[", 
      RowBox[{"_", "?", "MatrixQ"}], "]"}]}]}], " ", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"minimalMechanism", "::", "num"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"minimalMechanism", "[", 
   RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"minimalMechanism", "::", "num"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[6532]:=",ExpressionUUID->"ffd7ea39-a364-44f4-94e2-69aab71ecae0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"minimalMechanism", "::", "dim"}], "=", 
   "\"\<Dimension of basis must match embedding dimension of \
mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"minimalMechanism", "::", "num"}], "=", 
   "\"\<Second argument should be a numeric basis.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6536]:=",ExpressionUUID->"f855b1b9-6eff-4966-88ee-3d609bef8039"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["geometry", "Section",ExpressionUUID->"7efcf6d8-4de1-4a1a-8c78-769edd726844"],

Cell[CellGroupData[{

Cell["Measuring cell functions", "Subsection",ExpressionUUID->"c6c03fa0-3229-4dd7-afc5-2a195b6c78d6"],

Cell[CellGroupData[{

Cell["displacementVector[]", "Subsubsection",ExpressionUUID->"4e2ed6ef-c949-4a3f-abd2-7e4ee843fa95"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displacementVector", "[", 
    RowBox[{"__", ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementVector", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"edgeList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", "_Integer"}], "}"}], ".."}], "}"}]}]}], 
    "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"displacementVectorInternal", "[", 
     RowBox[{"positions", ",", " ", "edgeList"}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "edgeList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "positions", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "edgeList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementVector", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"pos_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"edgeList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}]}],
     "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"displacementVectorInternal", "[", " ", 
     RowBox[{"pos", " ", ",", " ", "edgeList"}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "edgeList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "pos", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "edgeList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displacementVector", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"edgeList", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}]}], 
   "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"displacementVectorInternal", "[", " ", 
    RowBox[{
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", ",", " ", 
     "edgeList"}], "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Max", "[", "edgeList", "]"}], " ", "\[LessEqual]", " ", 
     RowBox[{"MeshCellCount", "[", 
      RowBox[{"m", ",", "0"}], "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Min", "[", "edgeList", "]"}], " ", "\[GreaterEqual]", " ", 
     "1"}]}]}]}]}], "Code",
 CellLabel->
  "In[6538]:=",ExpressionUUID->"17b69bef-e499-4349-baa1-daabc117b244"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displacementVectorInternal", "[", 
    RowBox[{
     RowBox[{"positions_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", 
     "edgeList_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"displacementVectorCompiled", "[", "]"}], "[", 
    RowBox[{"positions", ",", "edgeList"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementVectorInternal", "[", 
    RowBox[{"positions_", ",", "edgeList_"}], "]"}], ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"flippedEdgeList", "=", 
       RowBox[{"Transpose", "[", "edgeList", "]"}]}], "}"}], ",", "\n", "\t", 
     
     RowBox[{
      RowBox[{"positions", "[", 
       RowBox[{"[", 
        RowBox[{"flippedEdgeList", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "-", 
      RowBox[{"positions", "[", 
       RowBox[{"[", 
        RowBox[{"flippedEdgeList", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"displacementVectorCompiled", "[", "]"}], ":=", 
  RowBox[{
   RowBox[{"displacementVectorCompiled", "[", "]"}], "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"positions", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"edgeList", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"flippedEdgeList", "=", 
         RowBox[{"Transpose", "[", "edgeList", "]"}]}], "}"}], ",", "\n", 
       "\t\t", 
       RowBox[{
        RowBox[{"positions", "[", 
         RowBox[{"[", 
          RowBox[{"flippedEdgeList", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "-", 
        RowBox[{"positions", "[", 
         RowBox[{"[", 
          RowBox[{"flippedEdgeList", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}], "\n", "\t", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}]}]}], "Code",
 CellLabel->
  "In[6542]:=",ExpressionUUID->"b3dd01b3-e2b3-4f86-9379-bb750cf02b0f"]
}, Closed]],

Cell[CellGroupData[{

Cell["displacementLength[]", "Subsubsection",ExpressionUUID->"ee4062c6-055d-4d98-aa31-c01db58958d2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displacementLength", "[", 
    RowBox[{"__", ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLength", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"edgeList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}]}],
     "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"displacementLengthInternal", "[", 
     RowBox[{"positions", ",", " ", "edgeList"}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "edgeList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "positions", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "edgeList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLength", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"edgeList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}]}],
     "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"displacementLengthInternal", "[", 
     RowBox[{"positions", ",", " ", "edgeList"}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "edgeList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "positions", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "edgeList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLength", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"edgeList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}]}],
     "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"displacementLengthInternal", "[", " ", 
     RowBox[{
      RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", ",", " ", 
      "edgeList"}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "edgeList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"MeshCellCount", "[", 
       RowBox[{"m", ",", "0"}], "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "edgeList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displacementLengthInternal", "[", 
   RowBox[{
    RowBox[{"positions_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
    "edgelist_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"displacementLengthCompiled", "[", 
    RowBox[{"Length", "[", 
     RowBox[{"positions", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
   RowBox[{"positions", ",", 
    RowBox[{"ToPackedArray", "[", "edgelist", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"displacementLengthInternal", "[", 
   RowBox[{"positions_", ",", "edgelist_"}], "]"}], ":=", 
  RowBox[{"displacementLengthAnalytic", "[", 
   RowBox[{"positions", ",", 
    RowBox[{"ToPackedArray", "[", "edgelist", "]"}]}], "]"}]}]}], "Code",
 CellLabel->
  "In[6545]:=",ExpressionUUID->"4bd86452-df2c-49a9-85be-4186d23886da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displacementLengthCompiled", "[", "d_Integer", "]"}], ":=", 
   RowBox[{
    RowBox[{"displacementLengthCompiled", "[", "d", "]"}], "=", "\n", 
    RowBox[{"Compile", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"edges", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "j"}], "}"}], ",", "\n", "\t\t", 
        RowBox[{"Table", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"index1", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"edges", ",", "i", ",", "1"}], "]"}]}], ",", "\n", 
              "\t\t\t", 
              RowBox[{"index2", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"edges", ",", "i", ",", "2"}], "]"}]}]}], "\n", 
             "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"pos", ",", "index1", ",", "j"}], "]"}], "-", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"pos", ",", "index2", ",", "j"}], "]"}]}], ")"}], 
                "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "d"}], "}"}]}], "]"}], "]"}]}], 
           "\n", "\t\t\t", "]"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "\n", "\t\t", 
         "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
      RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
      RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displacementLengthAnalytic", "[", 
   RowBox[{"positions_", ",", "edgeList_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"expandExpression", "[", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", " ", ".", " ", "#"}], "&"}], ")"}], " ", "/@", " ", 
     RowBox[{"displacementVectorInternal", "[", 
      RowBox[{"positions", ",", "edgeList"}], "]"}]}], "]"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6551]:=",ExpressionUUID->"47d503bb-80a8-46f4-adfd-d8e28cca427f"]
}, Closed]],

Cell[CellGroupData[{

Cell["displacementLengthSquared[]", "Subsubsection",ExpressionUUID->"6e26983a-185e-44bf-ac51-16107024bc44"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displacementLengthSquared", "[", 
    RowBox[{"__", ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLengthSquared", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"edgeList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}]}],
     "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"displacementLengthSquaredInternal", "[", 
     RowBox[{"positions", ",", " ", "edgeList"}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "edgeList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "positions", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "edgeList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLengthSquared", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"edgeList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}]}],
     "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"displacementLengthSquaredInternal", "[", 
     RowBox[{"positions", ",", " ", "edgeList"}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "edgeList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "positions", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "edgeList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLengthSquared", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"edgeList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}]}],
     "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"displacementLengthSquaredInternal", "[", " ", 
     RowBox[{
      RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", ",", " ", 
      "edgeList"}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "edgeList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"MeshCellCount", "[", 
       RowBox[{"m", ",", "0"}], "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "edgeList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displacementLengthSquaredInternal", "[", 
   RowBox[{
    RowBox[{"positions_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
    "edgelist_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"displacementLengthSquaredCompiled", "[", 
    RowBox[{"Length", "[", 
     RowBox[{"positions", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
   RowBox[{"positions", ",", 
    RowBox[{"ToPackedArray", "[", "edgelist", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"displacementLengthSquaredInternal", "[", 
   RowBox[{"positions_", ",", "edgelist_"}], "]"}], ":=", 
  RowBox[{"displacementLengthSquaredAnalytic", "[", 
   RowBox[{"positions", ",", 
    RowBox[{"ToPackedArray", "[", "edgelist", "]"}]}], "]"}]}]}], "Code",
 CellLabel->
  "In[6553]:=",ExpressionUUID->"d6b7fefc-3c97-48b6-aa3b-634122a7326d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"displacementLengthSquaredCompiled", "[", "d_Integer", "]"}], ":=", 
  
  RowBox[{
   RowBox[{"displacementLengthSquaredCompiled", "[", "d", "]"}], "=", "\n", 
   RowBox[{"Compile", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"edges", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], ",", "\n", "\t\t", 
       RowBox[{"Table", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"index1", "=", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"edges", ",", "i", ",", "1"}], "]"}]}], ",", "\n", 
             "\t\t\t", 
             RowBox[{"index2", "=", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"edges", ",", "i", ",", "2"}], "]"}]}]}], "\n", 
            "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", "index1", ",", "j"}], "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", "index2", ",", "j"}], "]"}]}], ")"}], 
              "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "d"}], "}"}]}], "]"}]}], "\n", 
          "\t\t\t", "]"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "\n", "\t\t", 
        "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"displacementLengthSquaredAnalytic", "[", 
   RowBox[{"positions_", ",", "edgeList_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"expandExpression", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", " ", ".", " ", "#"}], " ", "&"}], ",", 
     RowBox[{"displacementVectorInternal", "[", 
      RowBox[{"positions", ",", "edgeList"}], "]"}]}], "]"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6559]:=",ExpressionUUID->"b38f48e1-50f8-461b-954a-16c4e8e83427"]
}, Closed]],

Cell[CellGroupData[{

Cell["turningAngle[]", "Subsubsection",ExpressionUUID->"53909e4a-e9b3-4b91-ba43-6442595c2658"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"turningAngle", "[", 
    RowBox[{"p__", ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"turningAngle", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"tripleList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer", ",", "_Integer"}], "}"}], 
        ".."}], "}"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"turningAngleInternal", "[", 
     RowBox[{"positions", ",", " ", "tripleList"}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "tripleList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "positions", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "tripleList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"turningAngle", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"tripleList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer", ",", "_Integer"}], "}"}], 
        ".."}], "}"}]}]}], "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"turningAngleInternal", "[", 
     RowBox[{"positions", ",", " ", "tripleList"}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "tripleList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "positions", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "tripleList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"turningAngle", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"tripleList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer", ",", "_Integer"}], "}"}], 
        ".."}], "}"}]}]}], "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"turningAngleInternal", "[", " ", 
     RowBox[{
      RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", ",", " ", 
      "tripleList"}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "tripleList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"MeshCellCount", "[", 
       RowBox[{"m", ",", "0"}], "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "tripleList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"turningAngleInternal", "[", 
   RowBox[{
    RowBox[{"positions_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
    "tripleList_"}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"turningAngleCompiled", "[", 
    RowBox[{"Length", "[", 
     RowBox[{"positions", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
   RowBox[{
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
    RowBox[{"ToPackedArray", "[", "tripleList", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"turningAngleInternal", "[", 
   RowBox[{"positions_", ",", "tripleList_"}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"turningAngleAnalytic", "[", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"positions", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "positions", ",", 
    RowBox[{"ToPackedArray", "[", "tripleList", "]"}]}], "]"}]}]}], "Code",
 CellLabel->
  "In[6561]:=",ExpressionUUID->"fe12d61c-c2b8-41f3-93cc-6879d3615206"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"turningAngleCompiled", "[", "3", "]"}], ":=", 
   RowBox[{
    RowBox[{"turningAngleCompiled", "[", "3", "]"}], "=", "\n", 
    RowBox[{"Compile", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"triplets", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",",
       "\n", "\t", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"p1x", "=", 
             RowBox[{
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
               "]"}], "-", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
               "]"}]}]}], ",", "\n", "\t\t\t", 
            RowBox[{"p1y", "=", 
             RowBox[{
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
               "]"}], "-", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
               "]"}]}]}], ",", "\n", "\t\t\t", 
            RowBox[{"p1z", "=", 
             RowBox[{
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
               "]"}], "-", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
               "]"}]}]}], ",", "\n", "\t\t\t", 
            RowBox[{"p2x", "=", 
             RowBox[{
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
               "]"}], "-", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
               "]"}]}]}], ",", "\n", "\t\t\t", 
            RowBox[{"p2y", "=", 
             RowBox[{
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
               "]"}], "-", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
               "]"}]}]}], ",", "\n", "\t\t\t", 
            RowBox[{"p2z", "=", 
             RowBox[{
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "3"}], 
               "]"}], "-", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
               "]"}]}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t\t", 
          RowBox[{"ArcCos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"p1x", " ", "p2x"}], "+", 
              RowBox[{"p1y", " ", "p2y"}], "+", 
              RowBox[{"p1z", " ", "p2z"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"p1x", "^", "2"}], "+", 
                RowBox[{"p1y", "^", "2"}], "+", 
                RowBox[{"p1z", "^", "2"}]}], "]"}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"p2x", "^", "2"}], "+", 
                RowBox[{"p2y", "^", "2"}], "+", 
                RowBox[{"p2z", "^", "2"}]}], "]"}]}], ")"}]}], "]"}]}], "\n", 
         "\t\t", "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
      RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
      RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"turningAngleCompiled", "[", "2", "]"}], ":=", 
  RowBox[{
   RowBox[{"turningAngleCompiled", "[", "2", "]"}], "=", "\n", 
   RowBox[{"Compile", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"triplets", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"p1x", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "1"}],
                 "]"}]}]}], ",", "\n", "\t\t\t", 
             RowBox[{"p1y", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "2"}],
                 "]"}]}]}], ",", "\n", "\t\t\t", 
             RowBox[{"p2x", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "1"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}],
                 "]"}]}]}], ",", "\n", "\t\t\t", 
             RowBox[{"p2y", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "2"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}],
                 "]"}]}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"p1x", " ", "p2x"}], " ", "+", " ", 
              RowBox[{"p1y", " ", "p2y"}]}], ",", 
             RowBox[{
              RowBox[{"p1x", " ", "p2y"}], " ", "-", " ", 
              RowBox[{"p2x", " ", "p1y"}]}]}], "]"}]}], "\n", "\t\t", "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "triplets", "]"}]}], "}"}]}], "]"}]}], "\n",
       "\t", "]"}], ",", "\n", "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[6567]:=",ExpressionUUID->"c0d5a99a-fc74-4eed-a096-7b22190d0c1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
    "this", " ", "funny", " ", "construction", " ", "here", " ", "works", " ",
      "better", " ", "during", " ", "expansions", " ", "because", " ", "of", 
     " ", "the", " ", "branch", " ", "cuts", " ", "of", " ", 
     RowBox[{"ArcCos", "[", "]"}], "\n", "\n", "The", " ", "problem", " ", 
     "arises", " ", "in", " ", 
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{"ArcCos", "[", 
        RowBox[{"1", "-", 
         RowBox[{"xx", "^", "2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"xx", ",", "0", ",", "2"}], "}"}]}], "]"}], " ", "which", " ",
      "requires", " ", "the", " ", "choice", " ", "of", " ", "a", " ", 
     RowBox[{"branch", ".", " ", "This"}], " ", "last", " ", "part", "\n", 
     RowBox[{"hasn", "'"}], "t", " ", "been", " ", "solved", " ", "but", " ", 
     "at", " ", "least", " ", "the", " ", "answer", " ", "comes", " ", "out", 
     " ", 
     RowBox[{"faster", ".", " ", "The"}], " ", "rest", " ", "of", " ", "the", 
     " ", "branch", " ", "cut", " ", "issues", "\n", "are", " ", "handled", 
     " ", "automatically", " ", "in", " ", 
     RowBox[{"expandExpression", "[", "]"}]}], ",", " ", 
    RowBox[{
    "which", " ", "does", " ", "what", " ", "it", " ", "can", " ", "to", " ", 
     "make", " ", "imaginary", " ", "components", " ", 
     RowBox[{"zero", ".", "\n", "\n", "There"}], " ", "should", " ", "be", 
     " ", "a", " ", "better", " ", "way", " ", "to", " ", "handle", " ", 
     "this", " ", "but", " ", "this", " ", "seems", " ", "to", " ", "work", 
     " ", "in", " ", "most", " ", 
     RowBox[{"cases", "."}]}]}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"turningAngleAnalytic", "[", 
     RowBox[{"3", ",", "data_", ",", "tripleList_"}], "]"}], ":=", "\n", 
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"cosvectorAngle3D", "=", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"With", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"y", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"z", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ",", 
              RowBox[{"xx", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"yy", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"zz", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", "\n", 
            "\t\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", " ", "xx"}], "+", 
               RowBox[{"y", " ", "yy"}], "+", 
               RowBox[{"z", " ", "zz"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x", "^", "2"}], "+", 
                 RowBox[{"y", "^", "2"}], "+", 
                 RowBox[{"z", "^", "2"}]}], "]"}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"xx", "^", "2"}], "+", 
                 RowBox[{"yy", "^", "2"}], "+", 
                 RowBox[{"zz", "^", "2"}]}], "]"}]}], ")"}]}]}], "\n", "\t\t",
            "]"}]}], "\n", "\t", "]"}]}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"expandExpression", "@", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"pts", "=", 
              RowBox[{"data", "[", 
               RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"expandExpression", "@", 
              RowBox[{"cosvectorAngle3D", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pts", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{"pts", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"pts", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "-", 
                 RowBox[{"pts", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "]"}]}], 
           "]"}]}], ")"}], "&"}], "/@", "tripleList"}]}], "\n", "]"}]}], "\n",
    "\n", 
   RowBox[{
    RowBox[{"turningAngleAnalytic", "[", 
     RowBox[{"2", ",", "data_", ",", "tripleList_"}], "]"}], ":=", "\n", 
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"vectorAngle2D", "=", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"With", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"y", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"xx", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"yy", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\n", 
            "\t\t\t", 
            RowBox[{"ArcTan", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", " ", "xx"}], " ", "+", " ", 
               RowBox[{"y", " ", "yy"}]}], ",", 
              RowBox[{
               RowBox[{"x", " ", "yy"}], " ", "-", " ", 
               RowBox[{"xx", " ", "y"}]}]}], "]"}]}], "\t", "\n", "\t\t", 
           "]"}]}], "\n", "\t", "]"}]}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"expandExpression", "@", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"pts", "=", 
              RowBox[{"data", "[", 
               RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"vectorAngle2D", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"pts", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", 
               RowBox[{"pts", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"pts", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "-", 
               RowBox[{"pts", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "]"}]}], ")"}], 
        "&"}], "/@", "tripleList"}]}], "\n", "]"}]}]}]}]], "Code",
 CellLabel->
  "In[6569]:=",ExpressionUUID->"f1f67da6-685b-4863-a6e5-867dca6d7d71"]
}, Closed]],

Cell[CellGroupData[{

Cell["normalVector[]", "Subsubsection",ExpressionUUID->"7f555d7d-65ac-41d9-b354-767dbfdea267"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "normalVector", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"\"\<normalize\>\"", "\[Rule]", "True"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVector", "[", 
    RowBox[{"__", ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVector", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"faces", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "__Integer", "}"}], ".."}], "}"}]}], ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"normalVectorInternal", "[", 
     RowBox[{"positions", ",", " ", "faces", ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<normalize\>\"", "]"}]}], "]"}], " ", "/;",
     " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "faces", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "positions", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "faces", "]"}], " ", "\[GreaterEqual]", " ", "1"}], 
     " ", "&&", " ", 
     RowBox[{"BooleanQ", "[", 
      RowBox[{"OptionValue", "[", "\"\<normalize\>\"", "]"}], "]"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVector", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"faces", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "__Integer", "}"}], ".."}], "}"}]}], ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"normalVectorInternal", "[", 
     RowBox[{
      RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "faces", ",", 
      " ", 
      RowBox[{"OptionValue", "[", "\"\<normalize\>\"", "]"}]}], "]"}], " ", "/;",
     " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "faces", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}], " ", "&&", " ", 
     
     RowBox[{
      RowBox[{"Min", "[", "faces", "]"}], " ", "\[GreaterEqual]", " ", "1"}], 
     " ", "&&", " ", 
     RowBox[{"BooleanQ", "[", 
      RowBox[{"OptionValue", "[", "\"\<normalize\>\"", "]"}], "]"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVector", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"faces", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "__Integer", "}"}], ".."}], "}"}]}], ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"normalVectorInternal", "[", 
     RowBox[{"positions", ",", " ", "faces", ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<normalize\>\"", "]"}]}], "]"}], " ", "/;",
     " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "faces", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "positions", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "faces", "]"}], " ", "\[GreaterEqual]", " ", "1"}], 
     " ", "&&", " ", 
     RowBox[{"BooleanQ", "[", 
      RowBox[{"OptionValue", "[", "\"\<normalize\>\"", "]"}], "]"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"normalVectorInternal", "[", 
   RowBox[{
    RowBox[{"pos_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", 
    "faces_", ",", 
    RowBox[{"normalize_", " ", ":", " ", "True"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"normalVectorCompiled", "[", 
    RowBox[{"normalize", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"pos", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "[", 
   RowBox[{"pos", ",", 
    RowBox[{"ToPackedArray", "[", "faces", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"normalVectorInternal", "[", 
   RowBox[{"pos_", ",", "faces_", ",", 
    RowBox[{"normalize_", " ", ":", " ", "True"}]}], "]"}], ":=", 
  RowBox[{"normalVectorAnalytic", "[", 
   RowBox[{"normalize", ",", 
    RowBox[{"Length", "[", 
     RowBox[{"pos", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "pos", ",", "faces"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6571]:=",ExpressionUUID->"383dd186-4709-4e0c-bd04-18a0c8d007c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"normalVectorCompiled", "[", 
   RowBox[{"True", ",", "3"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"normalVectorCompiled", "[", 
    RowBox[{"True", ",", "3"}], "]"}], "=", "\n", 
   RowBox[{"Compile", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"faces", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
       RowBox[{"Table", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"With", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"y", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"z", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "3"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"xx", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"yy", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"zz", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "3"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
                "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "yy"}], " ", "z"}], "+", 
                RowBox[{"y", " ", "zz"}]}], ")"}], "/", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"xx", " ", "y"}], "-", 
                   RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"xx", " ", "z"}], "-", 
                   RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"yy", " ", "z"}], "-", 
                   RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
             ",", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xx", " ", "z"}], "-", 
                RowBox[{"x", " ", "zz"}]}], ")"}], "/", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"xx", " ", "y"}], "-", 
                   RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"xx", " ", "z"}], "-", 
                   RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"yy", " ", "z"}], "-", 
                   RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
             ",", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "xx"}], " ", "y"}], "+", 
                RowBox[{"x", " ", "yy"}]}], ")"}], "/", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"xx", " ", "y"}], "-", 
                   RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"xx", " ", "z"}], "-", 
                   RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"yy", " ", "z"}], "-", 
                   RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}]}],
             "\n", "\t\t\t", "}"}]}], "\n", "\t\t\t", "]"}], ",", "\n", 
         "\t\t\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "faces", "]"}]}], "}"}]}], "\n", "\t\t", 
        "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"normalVectorCompiled", "[", 
   RowBox[{"False", ",", "3"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"normalVectorCompiled", "[", 
    RowBox[{"False", ",", "3"}], "]"}], "=", "\n", 
   RowBox[{"Compile", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"faces", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
       RowBox[{"Table", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"With", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"y", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"z", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "3"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"xx", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"yy", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"zz", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "3"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
                "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "yy"}], " ", "z"}], "+", 
               RowBox[{"y", " ", "zz"}]}], ")"}], ",", "\n", "\t\t\t\t", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xx", " ", "z"}], "-", 
               RowBox[{"x", " ", "zz"}]}], ")"}], ",", "\n", "\t\t\t\t", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "xx"}], " ", "y"}], "+", 
               RowBox[{"x", " ", "yy"}]}], ")"}]}], "\n", "\t\t\t", "}"}]}], 
          "\n", "\t\t\t", "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "faces", "]"}]}], "}"}]}], "\n", "\t\t", 
        "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVectorCompiled", "[", 
    RowBox[{"True", ",", "2"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"normalVectorCompiled", "[", 
     RowBox[{"True", ",", "2"}], "]"}], "=", "\n", 
    RowBox[{"Compile", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"faces", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
        RowBox[{"Table", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"With", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"y", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"xx", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"yy", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                 "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"Sign", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "xx"}], " ", "y"}], "+", 
              RowBox[{"x", " ", "yy"}]}], "]"}]}], "\n", "\t\t\t", "]"}], ",",
           "\n", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "faces", "]"}]}], "}"}]}], "\n", "\t\t", 
         "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
      RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
      RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVectorCompiled", "[", 
    RowBox[{"False", ",", "2"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"normalVectorCompiled", "[", 
     RowBox[{"False", ",", "2"}], "]"}], "=", "\n", 
    RowBox[{"Compile", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"faces", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
        RowBox[{"Table", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"With", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"y", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"xx", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"yy", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                 "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "xx"}], " ", "y"}], "+", 
             RowBox[{"x", " ", "yy"}]}]}], "\n", "\t\t\t", "]"}], ",", "\n", 
          "\t\t\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "faces", "]"}]}], "}"}]}], "\n", "\t\t", 
         "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
      RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
      RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVectorAnalytic", "[", 
    RowBox[{"True", " ", 
     RowBox[{"(*", " ", "normalized", " ", "*)"}], ",", "3", ",", " ", 
     "positions_", ",", " ", "triples_"}], "]"}], ":=", "\n", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"data", "=", "positions"}], ",", "\n", "\t", 
       RowBox[{"normalVector3D", "=", 
        RowBox[{"Function", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"With", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"y", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"z", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ",", 
              RowBox[{"xx", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"yy", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"zz", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}]}], "\n", "\t\t\t", "}"}], 
            ",", "\n", "\t\t\t", 
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "yy"}], " ", "z"}], "+", 
                 RowBox[{"y", " ", "zz"}]}], ")"}], "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"xx", " ", "y"}], "-", 
                    RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"xx", " ", "z"}], "-", 
                    RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"yy", " ", "z"}], "-", 
                    RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
              ",", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"xx", " ", "z"}], "-", 
                 RowBox[{"x", " ", "zz"}]}], ")"}], "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"xx", " ", "y"}], "-", 
                    RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"xx", " ", "z"}], "-", 
                    RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"yy", " ", "z"}], "-", 
                    RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
              ",", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "xx"}], " ", "y"}], "+", 
                 RowBox[{"x", " ", "yy"}]}], ")"}], "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"xx", " ", "y"}], "-", 
                    RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"xx", " ", "z"}], "-", 
                    RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"yy", " ", "z"}], "-", 
                    RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], 
                "]"}]}]}], "\n", "\t\t\t", "}"}]}], "\n", "\t\t", "]"}]}], 
         "\n", "\t", "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p", "=", 
           RowBox[{"data", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"expandExpression", "@", 
          RowBox[{"normalVector3D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "-", 
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], "]"}], "&"}], "/@",
       "triples"}]}], "\n", "]"}]}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"normalVectorAnalytic", "[", 
   RowBox[{"False", " ", 
    RowBox[{"(*", " ", "normalized", " ", "*)"}], ",", "3", ",", " ", 
    "positions_", ",", " ", "triples_"}], "]"}], ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"data", "=", "positions"}], ",", "\n", "\t", 
      RowBox[{"unnormalVector3D", "=", 
       RowBox[{"Function", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"With", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"y", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"z", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ",", 
             RowBox[{"xx", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"yy", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"zz", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}]}], "\n", "\t\t\t", "}"}], ",",
            "\n", "\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"-", "yy"}], " ", "z"}], "+", 
              RowBox[{"y", " ", "zz"}]}], ",", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"xx", " ", "z"}], "-", 
              RowBox[{"x", " ", "zz"}]}], ",", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "xx"}], " ", "y"}], "+", 
              RowBox[{"x", " ", "yy"}]}]}], "\n", "\t\t\t", "}"}]}], "\n", 
          "\t\t", "]"}]}], "\n", "\t", "]"}]}]}], "\n", "}"}], ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"expandExpression", "@", 
         RowBox[{"unnormalVector3D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", 
            RowBox[{"p", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"p", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], "]"}], "&"}], "/@",
      "triples"}]}], "\n", "]"}], " "}]}], "Code",
 CellLabel->
  "In[6578]:=",ExpressionUUID->"457f1a6d-3d7b-48cc-9239-8e3f57cf5799"]
}, Closed]],

Cell[CellGroupData[{

Cell["planarAngle[]", "Subsubsection",ExpressionUUID->"e1b81da1-dbc7-4247-b5fd-7c771260b4c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"planarAngle", "[", 
    RowBox[{"__", ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planarAngle", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"tripleList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer", ",", "_Integer"}], "}"}], 
        ".."}], "}"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"planarAngleInternal", "[", 
     RowBox[{"positions", ",", " ", "tripleList"}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "tripleList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "positions", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "tripleList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planarAngle", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"tripleList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer", ",", "_Integer"}], "}"}], 
        ".."}], "}"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"planarAngleInternal", "[", 
     RowBox[{"positions", ",", " ", "tripleList"}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "tripleList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "positions", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "tripleList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"planarAngle", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"tripleList", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"_Integer", ",", " ", "_Integer", ",", " ", "_Integer"}], 
        "}"}], ".."}], "}"}]}]}], " ", "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"planarAngleInternal", "[", 
    RowBox[{
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "tripleList"}], 
    "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Max", "[", "tripleList", "]"}], " ", "\[LessEqual]", " ", 
     RowBox[{"Length", "[", 
      RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Min", "[", "tripleList", "]"}], " ", "\[GreaterEqual]", " ", 
     "1"}]}]}]}]}], "Code",
 CellLabel->
  "In[6584]:=",ExpressionUUID->"39e4fbce-94cb-4ec1-909a-9be6211b734a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"planarAngleInternal", "[", 
   RowBox[{
    RowBox[{"pos_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", 
    "triples_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"planarAngleCompiled", "[", 
    RowBox[{"Length", "[", 
     RowBox[{"pos", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
   RowBox[{"pos", ",", "triples"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"planarAngleInternal", "[", 
   RowBox[{"pos_", ",", "triples_"}], "]"}], " ", ":=", " ", 
  RowBox[{"planarAngleAnalytic", "[", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"pos", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "pos", ",", "triples"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6588]:=",ExpressionUUID->"c161f406-b316-4337-bc62-09fbc7236f0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"planarAngleCompiled", "[", "3", "]"}], ":=", 
  RowBox[{
   RowBox[{"planarAngleCompiled", "[", "3", "]"}], "=", "\n", 
   RowBox[{"Compile", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"triplets", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
     
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "i", "}"}], ",", "\n", "\t", 
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "1"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"y", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "2"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"z", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "3"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "3"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"xx", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "1"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"yy", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "2"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"zz", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "3"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "3"}],
                 "]"}]}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", " ", "xx"}], "+", 
              RowBox[{"y", " ", "yy"}], "+", 
              RowBox[{"z", " ", "zz"}]}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"xx", " ", "y"}], "-", 
                  RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"xx", " ", "z"}], "-", 
                  RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"yy", " ", "z"}], "-", 
                  RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
            "]"}]}], "\n", "\t\t", "]"}], ",", "\n", "\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "triplets", "]"}]}], "}"}]}], "\n", "\t", 
        "]"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"planarAngleCompiled", "[", "2", "]"}], ":=", 
  RowBox[{
   RowBox[{"planarAngleCompiled", "[", "2", "]"}], "=", 
   RowBox[{"Compile", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"triplets", ",", "_Real", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "i", "}"}], ",", "\n", "\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "1"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"y", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "2"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"xx", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "1"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"yy", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "2"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}],
                 "]"}]}]}]}], "\n", "\t", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", " ", "xx"}], "+", 
              RowBox[{"y", " ", "yy"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xx", " ", "y"}], "-", 
                RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}]}], "]"}]}], 
          "\n", "\t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "triplets", "]"}]}], "}"}]}], "\n", "\t", 
        "]"}]}], "\n", "]"}], ",", "\n", "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[6590]:=",ExpressionUUID->"6969d9a9-f29e-49b1-bd28-24b1e249bfb5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"planarAngleAnalytic", "[", 
   RowBox[{"3", ",", "positions_", ",", "tripleList_"}], "]"}], ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"data", "=", "positions"}], ",", "\n", "\t", 
      RowBox[{"angleFunc", "=", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"With", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"y", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"z", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ",", 
             RowBox[{"xx", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"yy", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"zz", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", " ", "xx"}], "+", 
              RowBox[{"y", " ", "yy"}], "+", 
              RowBox[{"z", " ", "zz"}]}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"xx", " ", "y"}], "-", 
                  RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"xx", " ", "z"}], "-", 
                  RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"yy", " ", "z"}], "-", 
                  RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
            "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}]}], "\n", 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pts", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"expandExpression", "@", 
         RowBox[{"angleFunc", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pts", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"pts", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"pts", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", 
            RowBox[{"pts", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], "]"}], "&"}], "/@",
      "tripleList"}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6592]:=",ExpressionUUID->"6e37a092-e53a-4e96-9b44-eafeab8280a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"planarAngleAnalytic", "[", 
   RowBox[{"2", ",", "positions_", ",", "tripleList_"}], "]"}], ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"data", "=", "positions"}], ",", "\n", "\t", 
      RowBox[{"angleFunc", "=", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"With", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"y", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"xx", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"yy", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", " ", "xx"}], "+", 
              RowBox[{"y", " ", "yy"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xx", " ", "y"}], "-", 
                RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}]}], "]"}]}], 
          "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}]}], "\n", "}"}], ",", 
    "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pts", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"expandExpression", "@", 
         RowBox[{"angleFunc", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pts", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"pts", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"pts", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", 
            RowBox[{"pts", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], "]"}], "&"}], "/@",
      "tripleList"}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6593]:=",ExpressionUUID->"eefa33f0-9487-482a-a9f9-75992e7dc134"]
}, Closed]],

Cell[CellGroupData[{

Cell["foldAngle[]", "Subsubsection",ExpressionUUID->"43186013-f54c-4925-b767-89869d60a75b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"foldAngle", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"_", "?", "vertexCoordinatesQ"}], ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"foldAngle", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"foldAngle", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"edgeList", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"_Integer", ",", "_Integer"}], "}"}], ".."}], "}"}]}]}], " ", 
   "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"foldAngleInternal", "[", 
    RowBox[{"m", ",", " ", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
     RowBox[{"listQuadruples", "[", 
      RowBox[{"m", ",", "edgeList"}], "]"}]}], " ", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Max", "[", "edgeList", "]"}], " ", "\[LessEqual]", " ", 
     RowBox[{"Length", "[", 
      RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Min", "[", "edgeList", "]"}], " ", "\[GreaterEqual]", " ", 
     "1"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"foldAngle", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"edgeList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", "_Integer"}], "}"}], ".."}], "}"}]}]}], " ",
     "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"foldAngleInternal", "[", 
     RowBox[{"m", ",", " ", "positions", ",", " ", 
      RowBox[{"listQuadruples", "[", 
       RowBox[{"m", ",", " ", "edgeList"}], "]"}]}], " ", "]"}], " ", "/;", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "edgeList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "positions", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "edgeList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"foldAngle", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"_", "?", "vertexCoordinatesQ"}], ".."}], "}"}]}], ",", " ", 
     RowBox[{"edgelist", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}]}],
     " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"quadruples", " ", "=", " ", 
        RowBox[{"listQuadruples", "[", 
         RowBox[{"m", ",", "edgelist"}], "]"}]}], "}"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"foldAngleInternal", "[", 
         RowBox[{"m", ",", " ", "#", ",", " ", "quadruples"}], "]"}], "&"}], 
       " ", "/@", " ", "positions"}]}], "\n", "\t", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "edgelist", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}], " ", "&&", " ", 
     
     RowBox[{
      RowBox[{"Min", "[", "edgelist", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"listQuadruples", "[", 
   RowBox[{"m_", ",", "edgelist_"}], "]"}], ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"faces", "=", 
      RowBox[{
       RowBox[{"connectivity", "[", 
        RowBox[{"m", ",", 
         RowBox[{"\"\<edges\>\"", "\[Rule]", "\"\<ordered faces\>\""}]}], 
        "]"}], "[", 
       RowBox[{"[", " ", 
        RowBox[{"listEdges", "[", 
         RowBox[{"m", ",", " ", "edgelist"}], "]"}], " ", "]"}], "]"}]}], 
     "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"ToPackedArray", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], "==", "2"}], ",", "\n", "\t\t\t", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"Last", "@", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "0", ",", "0"}], 
          "}"}]}], "\n", "\t\t", "]"}], "&"}], "/@", "faces"}], "\n", "\t", 
     "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6594]:=",ExpressionUUID->"105425f9-6faa-403b-bf41-cd3b92587bc2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"foldAngleInternal", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
    "quadruples_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"foldAngleCompiled", "[", "]"}], "[", 
   RowBox[{"positions", ",", "quadruples"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"foldAngleInternal", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "positions_", ",", " ", 
     "quadruples_"}], "]"}], ":=", 
   RowBox[{"foldAngleAnalytic", "[", 
    RowBox[{"positions", ",", "quadruples"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"foldAngleCompiled", "[", "]"}], ":=", 
   RowBox[{
    RowBox[{"foldAngleCompiled", "[", "]"}], "=", "\n", 
    RowBox[{"Compile", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"faces", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
      "\n", 
      RowBox[{"Table", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Compile`GetElement", "[", 
            RowBox[{"faces", ",", "i", ",", "3"}], "]"}], "==", "0"}], ",", 
          "\n", "\t", "0", ",", "\n", "\t", 
          RowBox[{"With", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t", 
             RowBox[{
              RowBox[{"p1x", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p1y", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p1z", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "3"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p2x", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p2y", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p2z", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p3x", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p3y", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p3z", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "3"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p4x", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "4"}], "]"}], ",", "1"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p4y", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "4"}], "]"}], ",", "2"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p4z", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "4"}], "]"}], ",", "3"}], 
                "]"}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t", 
            RowBox[{"ArcTan", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p1y", " ", 
                   RowBox[{"(", 
                    RowBox[{"p2x", "-", "p3x"}], ")"}]}], "+", 
                  RowBox[{"p2y", " ", "p3x"}], "-", 
                  RowBox[{"p2x", " ", "p3y"}], "+", 
                  RowBox[{"p1x", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p2y"}], "+", "p3y"}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "p2y"}], " ", "p4x"}], "+", 
                  RowBox[{"p1y", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p2x"}], "+", "p4x"}], ")"}]}], "+", 
                  RowBox[{"p1x", " ", 
                   RowBox[{"(", 
                    RowBox[{"p2y", "-", "p4y"}], ")"}]}], "+", 
                  RowBox[{"p2x", " ", "p4y"}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p1z", " ", 
                   RowBox[{"(", 
                    RowBox[{"p2x", "-", "p3x"}], ")"}]}], "+", 
                  RowBox[{"p2z", " ", "p3x"}], "-", 
                  RowBox[{"p2x", " ", "p3z"}], "+", 
                  RowBox[{"p1x", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p2z"}], "+", "p3z"}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "p2z"}], " ", "p4x"}], "+", 
                  RowBox[{"p1z", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p2x"}], "+", "p4x"}], ")"}]}], "+", 
                  RowBox[{"p1x", " ", 
                   RowBox[{"(", 
                    RowBox[{"p2z", "-", "p4z"}], ")"}]}], "+", 
                  RowBox[{"p2x", " ", "p4z"}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p1z", " ", 
                   RowBox[{"(", 
                    RowBox[{"p2y", "-", "p3y"}], ")"}]}], "+", 
                  RowBox[{"p2z", " ", "p3y"}], "-", 
                  RowBox[{"p2y", " ", "p3z"}], "+", 
                  RowBox[{"p1y", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p2z"}], "+", "p3z"}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "p2z"}], " ", "p4y"}], "+", 
                  RowBox[{"p1z", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p2y"}], "+", "p4y"}], ")"}]}], "+", 
                  RowBox[{"p1y", " ", 
                   RowBox[{"(", 
                    RowBox[{"p2z", "-", "p4z"}], ")"}]}], "+", 
                  RowBox[{"p2y", " ", "p4z"}]}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"p1x", "-", "p2x"}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"p1y", "-", "p2y"}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"p1z", "-", "p2z"}], ")"}], "^", "2"}]}], "]"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "p1x"}], " ", "p2z", " ", "p3y"}], "+", 
                 RowBox[{"p1x", " ", "p2y", " ", "p3z"}], "+", 
                 RowBox[{"p2z", " ", "p3y", " ", "p4x"}], "-", 
                 RowBox[{"p2y", " ", "p3z", " ", "p4x"}], "+", 
                 RowBox[{"p1x", " ", "p2z", " ", "p4y"}], "-", 
                 RowBox[{"p2z", " ", "p3x", " ", "p4y"}], "-", 
                 RowBox[{"p1x", " ", "p3z", " ", "p4y"}], "+", 
                 RowBox[{"p2x", " ", "p3z", " ", "p4y"}], "+", 
                 RowBox[{"p1z", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p2x", " ", "p3y"}], "-", 
                    RowBox[{"p3y", " ", "p4x"}], "+", 
                    RowBox[{"p2y", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p3x"}], "+", "p4x"}], ")"}]}], "-", 
                    RowBox[{"p2x", " ", "p4y"}], "+", 
                    RowBox[{"p3x", " ", "p4y"}]}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "p1x"}], " ", "p2y"}], "+", 
                    RowBox[{"p2y", " ", "p3x"}], "+", 
                    RowBox[{"p1x", " ", "p3y"}], "-", 
                    RowBox[{"p2x", " ", "p3y"}]}], ")"}], " ", "p4z"}], "+", 
                 RowBox[{"p1y", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p2z", " ", "p3x"}], "-", 
                    RowBox[{"p2x", " ", "p3z"}], "-", 
                    RowBox[{"p2z", " ", "p4x"}], "+", 
                    RowBox[{"p3z", " ", "p4x"}], "+", 
                    RowBox[{"p2x", " ", "p4z"}], "-", 
                    RowBox[{"p3x", " ", "p4z"}]}], ")"}]}]}], ")"}]}]}], 
             "]"}]}], "\n", "\t", "]"}]}], "]"}], ",", "\n", "\t", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "faces", "]"}]}], "}"}]}], "\n", "]"}], ",", 
      "\n", "\t", 
      RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
      RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"foldAngleAnalytic", "[", 
   RowBox[{"positions_", ",", "quadrupleList_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"With", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"p1x", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p1y", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p1z", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], "]"}]}], ",", 
        "\n", "\t", 
        RowBox[{"p2x", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p2y", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p2z", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "3"}], "]"}], "]"}]}], ",", 
        "\n", "\t", 
        RowBox[{"p3x", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p3y", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p3z", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "3"}], "]"}], "]"}]}], ",", 
        "\n", "\t", 
        RowBox[{"p4x", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p4y", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p4z", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", "3"}], "]"}], "]"}]}]}], 
       "\n", "\t", "}"}], ",", "\n", "\t", 
      RowBox[{"expandExpression", "@", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p1y", " ", 
              RowBox[{"(", 
               RowBox[{"p2x", "-", "p3x"}], ")"}]}], "+", 
             RowBox[{"p2y", " ", "p3x"}], "-", 
             RowBox[{"p2x", " ", "p3y"}], "+", 
             RowBox[{"p1x", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "p2y"}], "+", "p3y"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "p2y"}], " ", "p4x"}], "+", 
             RowBox[{"p1y", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "p2x"}], "+", "p4x"}], ")"}]}], "+", 
             RowBox[{"p1x", " ", 
              RowBox[{"(", 
               RowBox[{"p2y", "-", "p4y"}], ")"}]}], "+", 
             RowBox[{"p2x", " ", "p4y"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p1z", " ", 
              RowBox[{"(", 
               RowBox[{"p2x", "-", "p3x"}], ")"}]}], "+", 
             RowBox[{"p2z", " ", "p3x"}], "-", 
             RowBox[{"p2x", " ", "p3z"}], "+", 
             RowBox[{"p1x", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "p2z"}], "+", "p3z"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "p2z"}], " ", "p4x"}], "+", 
             RowBox[{"p1z", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "p2x"}], "+", "p4x"}], ")"}]}], "+", 
             RowBox[{"p1x", " ", 
              RowBox[{"(", 
               RowBox[{"p2z", "-", "p4z"}], ")"}]}], "+", 
             RowBox[{"p2x", " ", "p4z"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p1z", " ", 
              RowBox[{"(", 
               RowBox[{"p2y", "-", "p3y"}], ")"}]}], "+", 
             RowBox[{"p2z", " ", "p3y"}], "-", 
             RowBox[{"p2y", " ", "p3z"}], "+", 
             RowBox[{"p1y", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "p2z"}], "+", "p3z"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "p2z"}], " ", "p4y"}], "+", 
             RowBox[{"p1z", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "p2y"}], "+", "p4y"}], ")"}]}], "+", 
             RowBox[{"p1y", " ", 
              RowBox[{"(", 
               RowBox[{"p2z", "-", "p4z"}], ")"}]}], "+", 
             RowBox[{"p2y", " ", "p4z"}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p1x", "-", "p2x"}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p1y", "-", "p2y"}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p1z", "-", "p2z"}], ")"}], "^", "2"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "p1x"}], " ", "p2z", " ", "p3y"}], "+", 
            RowBox[{"p1x", " ", "p2y", " ", "p3z"}], "+", 
            RowBox[{"p2z", " ", "p3y", " ", "p4x"}], "-", 
            RowBox[{"p2y", " ", "p3z", " ", "p4x"}], "+", 
            RowBox[{"p1x", " ", "p2z", " ", "p4y"}], "-", 
            RowBox[{"p2z", " ", "p3x", " ", "p4y"}], "-", 
            RowBox[{"p1x", " ", "p3z", " ", "p4y"}], "+", 
            RowBox[{"p2x", " ", "p3z", " ", "p4y"}], "+", 
            RowBox[{"p1z", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p2x", " ", "p3y"}], "-", 
               RowBox[{"p3y", " ", "p4x"}], "+", 
               RowBox[{"p2y", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "p3x"}], "+", "p4x"}], ")"}]}], "-", 
               RowBox[{"p2x", " ", "p4y"}], "+", 
               RowBox[{"p3x", " ", "p4y"}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "p1x"}], " ", "p2y"}], "+", 
               RowBox[{"p2y", " ", "p3x"}], "+", 
               RowBox[{"p1x", " ", "p3y"}], "-", 
               RowBox[{"p2x", " ", "p3y"}]}], ")"}], " ", "p4z"}], "+", 
            RowBox[{"p1y", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p2z", " ", "p3x"}], "-", 
               RowBox[{"p2x", " ", "p3z"}], "-", 
               RowBox[{"p2z", " ", "p4x"}], "+", 
               RowBox[{"p3z", " ", "p4x"}], "+", 
               RowBox[{"p2x", " ", "p4z"}], "-", 
               RowBox[{"p3x", " ", "p4z"}]}], ")"}]}]}], ")"}]}]}], "]"}]}]}],
      "\n", "\t", "]"}], "&"}], "/@", "quadrupleList"}]}]}], "Code",
 CellLabel->
  "In[6600]:=",ExpressionUUID->"af3fed59-5075-43ec-8a7e-0533187360f0"]
}, Closed]],

Cell[CellGroupData[{

Cell["gaussianCurvature[]", "Subsubsection",ExpressionUUID->"0f8d50f1-afcc-44d1-b384-6e361cf93302"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gaussianCurvature", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"_", "?", "vertexCoordinatesQ"}], ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gaussianCurvature", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gaussianCurvature", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"vertexList", " ", ":", " ", 
      RowBox[{"{", "__Integer", "}"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"gaussianCurvatureInternal", "[", 
     RowBox[{"m", ",", " ", 
      RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "vertexList"}], 
     "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", "vertexList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}], " ", "&&", " ", 
     
     RowBox[{
      RowBox[{"Min", "[", "vertexList", "]"}], " ", "\[GreaterEqual]", " ", 
      "1"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"gaussianCurvature", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
    RowBox[{"vertexList", " ", ":", " ", 
     RowBox[{"{", "__Integer", "}"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"gaussianCurvatureInternal", "[", 
    RowBox[{"m", ",", " ", "positions", ",", " ", "vertexList"}], "]"}], " ", 
   "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Max", "[", "vertexList", "]"}], " ", "\[LessEqual]", " ", 
     RowBox[{"Length", "[", "positions", "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Length", "[", "positions", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"MeshCellCount", "[", 
      RowBox[{
       RowBox[{"m", "[", "\"\<mesh\>\"", "]"}], ",", "0"}], "]"}]}], " ", "&&",
     " ", 
    RowBox[{
     RowBox[{"Min", "[", "vertexList", "]"}], " ", "\[GreaterEqual]", " ", 
     "1"}]}]}]}]}], "Code",
 CellLabel->
  "In[6604]:=",ExpressionUUID->"c2dc76eb-f1f2-4627-94b2-322d01f7c229"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gaussianCurvatureInternal", "[", 
    RowBox[{"m_", ",", " ", "pos_", ",", "vertexlist_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"Length", "[", "vertexlist", "]"}]}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"embeddingDimension", "[", "m", "]"}], "\[Equal]", "2"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"gaussianCurvatureInternal", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"pos_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", 
    "vertexlist_"}], "]"}], ":=", "\n", "\t\t", 
  RowBox[{
   RowBox[{"gaussianCurvatureCompiled", "[", "]"}], "[", 
   RowBox[{"pos", ",", "\n", "\t\t\t", 
    RowBox[{"ToPackedArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PadRight", "[", 
        RowBox[{"connectivity", "[", 
         RowBox[{"m", ",", 
          RowBox[{"\"\<vertices\>\"", "->", "\"\<ordered faces\>\""}]}], 
         "]"}], "]"}], "[", 
       RowBox[{"[", "vertexlist", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", 
        RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], "]"}]}], "\n", "\t", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"gaussianCurvatureInternal", "[", 
   RowBox[{"m_", ",", " ", "pos_", ",", "vertexlist_"}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"gaussianCurvatureAnalytic", "[", "\n", "\t\t", 
   RowBox[{"pos", ",", "\n", "\t\t", 
    RowBox[{"ToPackedArray", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"RotateRight", ",", " ", 
        RowBox[{
         RowBox[{"connectivity", "[", 
          RowBox[{"m", ",", " ", 
           RowBox[{
           "\"\<vertices\>\"", " ", "\[Rule]", " ", 
            "\"\<ordered faces\>\""}]}], "]"}], "[", 
         RowBox[{"[", "vertexlist", "]"}], "]"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", 
        RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], "\n", "\t\t", "]"}]}], "\n",
    "\t", "]"}]}]}], "Code",
 CellLabel->
  "In[6608]:=",ExpressionUUID->"983639bb-e7ad-4ed8-a16b-1a1e153cc30e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gaussianCurvatureCompiled", "[", "]"}], ":=", 
  RowBox[{
   RowBox[{"gaussianCurvatureCompiled", "[", "]"}], "=", "\n", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"triplets", ",", "_Integer", ",", "3"}], "}"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "Pi"}], "-", 
          RowBox[{"Sum", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}], "==",
                "0"}], ",", "\n", "\t\t\t", "0", ",", "\n", "\t\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"x", "=", 
                   RowBox[{
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "3"}], "]"}],
                     ",", "1"}], "]"}], "-", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}],
                     ",", "1"}], "]"}]}]}], ",", "\n", "\t\t\t", 
                  RowBox[{"y", "=", 
                   RowBox[{
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "3"}], "]"}],
                     ",", "2"}], "]"}], "-", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}],
                     ",", "2"}], "]"}]}]}], ",", "\n", "\t\t\t", 
                  RowBox[{"z", "=", 
                   RowBox[{
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "3"}], "]"}],
                     ",", "3"}], "]"}], "-", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}],
                     ",", "3"}], "]"}]}]}], ",", "\n", "\t\t\t", 
                  RowBox[{"xx", "=", 
                   RowBox[{
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "2"}], "]"}],
                     ",", "1"}], "]"}], "-", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}],
                     ",", "1"}], "]"}]}]}], ",", "\n", "\t\t\t", 
                  RowBox[{"yy", "=", 
                   RowBox[{
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "2"}], "]"}],
                     ",", "2"}], "]"}], "-", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}],
                     ",", "2"}], "]"}]}]}], ",", "\n", "\t\t\t", 
                  RowBox[{"zz", "=", 
                   RowBox[{
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "2"}], "]"}],
                     ",", "3"}], "]"}], "-", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}],
                     ",", "3"}], "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", " ", "xx"}], "+", 
                   RowBox[{"y", " ", "yy"}], "+", 
                   RowBox[{"z", " ", "zz"}]}], ",", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xx", " ", "y"}], "-", 
                    RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xx", " ", "z"}], "-", 
                    RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"yy", " ", "z"}], "-", 
                    RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
                 "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}], ",", 
            "\n", "\t\t", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"triplets", ",", "j"}], "]"}], "]"}]}], "}"}]}], 
           RowBox[{"(*", " ", "Sum", " ", "*)"}], "\n", "\t", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "triplets", "]"}]}], "}"}]}], "]"}]}], " ", 
      
      RowBox[{"(*", " ", "Table", " ", "*)"}], "\n", "\t", "]"}], ",", "\n", 
     "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}]], "Code",
 CellLabel->
  "In[6611]:=",ExpressionUUID->"4da8bcf9-f7fc-4baa-a7fe-2d419e79ddc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gaussianCurvatureAnalytic", "[", 
   RowBox[{"pos_", ",", 
    RowBox[{"{", 
     RowBox[{"triples__", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], "}"}]}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"expandExpression", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "Pi"}], "-", 
        RowBox[{"Total", "[", 
         RowBox[{"planarAngle", "[", 
          RowBox[{"pos", ",", "#"}], "]"}], "]"}]}], ")"}]}], ")"}], "&"}], "/@", 
   RowBox[{"{", "triples", "}"}]}]}]], "Code",
 CellLabel->
  "In[6612]:=",ExpressionUUID->"856f48e0-31e2-4ceb-a592-f7ee2ce95867"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["global geometry functions", "Subsection",ExpressionUUID->"cb0705f5-6ee7-42ce-bd98-337ea66e1bcf"],

Cell[CellGroupData[{

Cell["FindGeometricTransform[], alignMechanism[]", "Subsubsection",ExpressionUUID->"936edf7f-020a-47a7-9d2d-d59ca5691bea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FindGeometricTransform", "[", 
   RowBox[{"pts_", ",", " ", "m_origami", ",", " ", "r___"}], " ", "]"}], " ",
   "^:=", " ", 
  RowBox[{"FindGeometricTransform", "[", " ", 
   RowBox[{"pts", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindGeometricTransform", "[", 
    RowBox[{"m1_origami", ",", " ", "m2_origami", ",", " ", "r___"}], "]"}], 
   " ", "^:=", " ", 
   RowBox[{"FindGeometricTransform", "[", " ", 
    RowBox[{
     RowBox[{"m1", "[", "\"\<positions\>\"", "]"}], ",", " ", 
     RowBox[{"m2", "[", "\"\<positions\>\"", "]"}], ",", " ", "r"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"FindGeometricTransform", "[", 
   RowBox[{"pts_", ",", " ", "m_framework", ",", " ", "r___"}], " ", "]"}], 
  " ", "^:=", " ", 
  RowBox[{"FindGeometricTransform", "[", " ", 
   RowBox[{"pts", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"FindGeometricTransform", "[", 
   RowBox[{"m1_framework", ",", " ", "m2_framework", ",", " ", "r___"}], 
   "]"}], " ", "^:=", " ", 
  RowBox[{"FindGeometricTransform", "[", " ", 
   RowBox[{
    RowBox[{"m1", "[", "\"\<positions\>\"", "]"}], ",", " ", 
    RowBox[{"m2", "[", "\"\<positions\>\"", "]"}], ",", " ", "r"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6613]:=",ExpressionUUID->"8d08c533-5aca-4c92-9115-3251c5110c59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alignMechanismInternal", "[", " ", 
   RowBox[{
    RowBox[{"positionsFrom_", "?", "vertexCoordinatesQ"}], ",", " ", 
    RowBox[{"positionsTo_", "?", "vertexCoordinatesQ"}], ",", " ", 
    "options_"}], " ", "]"}], " ", ":=", " ", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"transformation", " ", "=", " ", 
      RowBox[{"FindGeometricTransform", "[", 
       RowBox[{"positionsFrom", ",", " ", "positionsTo", ",", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"options", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "TransformationClass", " ", "\[Rule]", " ", "\"\<Rigid\>\""}], 
             ",", " ", 
             RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Linear\>\""}]}], " ",
             "}"}]}], "}"}], "]"}]}], " ", "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "transformation", "]"}], " ", "===", " ", 
       "FindGeometricTransform"}], ",", " ", "$Failed", ",", " ", 
      RowBox[{"transformation", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}]}], "\n", "]"}]}]], "Code",\

 CellLabel->
  "In[6617]:=",ExpressionUUID->"0cd90e14-bdd3-4e77-87ae-322091a59501"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "alignMechanism", "]"}], "=", 
    RowBox[{"Options", "[", "FindGeometricTransform", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alignMechanism", "[", 
    RowBox[{
     RowBox[{"mFrom_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"mTo_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"alignMechanismInternal", "[", " ", 
         RowBox[{
          RowBox[{"mFrom", "[", "\"\<positions\>\"", "]"}], ",", " ", 
          RowBox[{"mTo", "[", "\"\<positions\>\"", "]"}], ",", " ", 
          RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], " ", "}"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"mechanismPositions", "[", " ", 
        RowBox[{"mTo", " ", "\[Rule]", " ", 
         RowBox[{"res", "[", 
          RowBox[{"mTo", "[", "\"\<positions\>\"", "]"}], "]"}]}], " ", "]"}],
        " ", "/;", " ", 
       RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}], " ", "/;",
     " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mFrom", "[", "\"\<VertexNumber\>\"", "]"}], ",", 
       RowBox[{"embeddingDimension", "[", "mFrom", "]"}]}], "}"}], " ", 
     "\[Equal]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mTo", "[", "\"\<VertexNumber\>\"", "]"}], ",", " ", 
       RowBox[{"embeddingDimension", "[", "mTo", "]"}]}], "}"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alignMechanism", "[", 
    RowBox[{
     RowBox[{"positionsFrom_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"mTo_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"alignMechanismInternal", "[", " ", 
         RowBox[{"positionsFrom", ",", " ", 
          RowBox[{"mTo", "[", "\"\<positions\>\"", "]"}], ",", " ", 
          RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], " ", "}"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"mechanismPositions", "[", " ", 
        RowBox[{"mTo", " ", "\[Rule]", " ", 
         RowBox[{"res", "[", 
          RowBox[{"mTo", "[", "\"\<positions\>\"", "]"}], "]"}]}], " ", "]"}],
        " ", "/;", " ", 
       RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}], " ", "/;",
     " ", 
    RowBox[{"numericCoordinatesQ", "[", 
     RowBox[{"mTo", ",", " ", "positionsFrom"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alignMechanism", "[", 
    RowBox[{
     RowBox[{"positionsFrom_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mTo_", "?", "mechanismQ"}], ",", " ", 
       RowBox[{"vertexList", " ", ":", " ", 
        RowBox[{"{", "__Integer", "}"}]}]}], " ", "}"}], " ", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"alignMechanismInternal", "[", " ", 
         RowBox[{"positionsFrom", ",", " ", 
          RowBox[{
           RowBox[{"mTo", "[", "\"\<positions\>\"", "]"}], "[", 
           RowBox[{"[", " ", "vertexList", " ", "]"}], "]"}], ",", " ", 
          RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], "\n", "}"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"mechanismPositions", "[", " ", 
        RowBox[{"mTo", " ", "\[Rule]", " ", 
         RowBox[{"res", "[", " ", 
          RowBox[{"mTo", "[", "\"\<positions\>\"", "]"}], " ", "]"}]}], " ", 
        "]"}], " ", "/;", " ", 
       RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}], " ", "/;",
     " ", 
    RowBox[{
     RowBox[{"MatrixQ", "[", 
      RowBox[{"positionsFrom", ",", " ", "NumericQ"}], "]"}], " ", "&&", " ", 
     
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", "positionsFrom", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", 
      RowBox[{"embeddingDimension", "[", "mTo", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Length", "[", "positionsFrom", "]"}], " ", "\[Equal]", " ", 
      RowBox[{"Length", "[", "vertexList", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Max", "[", "vertexList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"mTo", "[", "\"\<VertexNumber\>\"", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "vertexList", "]"}], " ", ">", " ", "0"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alignMechanism", "[", 
    RowBox[{
     RowBox[{"mFrom_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"positionsTo_", "?", "vertexCoordinatesQ"}], ",", " ", 
       RowBox[{"vertexList", " ", ":", " ", 
        RowBox[{"{", "__Integer", "}"}]}]}], " ", "}"}], " ", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"alignMechanismInternal", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"mFrom", "[", "\"\<positions\>\"", "]"}], "[", 
           RowBox[{"[", " ", "vertexList", " ", "]"}], "]"}], ",", " ", 
          RowBox[{"positionsTo", "[", 
           RowBox[{"[", " ", "vertexList", " ", "]"}], "]"}], ",", " ", 
          RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], "\n", "}"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"res", "[", " ", "positionsTo", " ", "]"}], " ", "/;", " ", 
       RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}], " ", "/;",
     " ", 
    RowBox[{
     RowBox[{"MatrixQ", "[", 
      RowBox[{"positionsTo", ",", " ", "NumericQ"}], "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", "positionsTo", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", 
      RowBox[{"embeddingDimension", "[", "mFrom", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Max", "[", "vertexList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"mFrom", "[", "\"\<VertexNumber\>\"", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "vertexList", "]"}], " ", ">", " ", "0"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alignMechanism", "[", 
    RowBox[{
     RowBox[{"mFrom_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positionsTo_", "?", "vertexCoordinatesQ"}], " ", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"alignMechanismInternal", "[", " ", 
         RowBox[{
          RowBox[{"mFrom", "[", "\"\<positions\>\"", "]"}], ",", " ", 
          "positionsTo", ",", " ", 
          RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], "\n", "}"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"res", "[", " ", "positionsTo", " ", "]"}], " ", "/;", " ", 
       RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}], " ", "/;",
     " ", 
    RowBox[{
     RowBox[{"MatrixQ", "[", 
      RowBox[{"positionsTo", ",", " ", "NumericQ"}], "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Dimensions", "[", "positionsTo", "]"}], " ", "\[Equal]", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"mFrom", "[", "\"\<VertexNumber\>\"", "]"}], ",", " ", 
        RowBox[{"embeddingDimension", "[", "mFrom", "]"}]}], " ", 
       "}"}]}]}]}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alignMechanism", "::", "match"}], "=", 
   "\"\<Mechanisms must have the same number of vertices and embedding \
dimension and positions must be numeric.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alignMechanism", "::", "vert"}], "=", 
   "\"\<Vertices are out of bound\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alignMechanism", "::", "number"}], "=", 
   "\"\<Number of vertices must match number of points.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"alignMechanism", "[", 
   RowBox[{
    RowBox[{"_", "?", "vertexCoordinatesQ"}], ",", " ", 
    RowBox[{"_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"alignMechanism", "::", "match"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"alignMechanism", "[", 
   RowBox[{
    RowBox[{"_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"alignMechanism", "::", "match"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"alignMechanism", "[", " ", 
   RowBox[{
    RowBox[{"pos", " ", ":", " ", 
     RowBox[{"_", "?", "vertexCoordinatesQ"}]}], ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"mTo", " ", ":", " ", 
       RowBox[{"_", "?", "mechanismQ"}]}], ",", " ", 
      RowBox[{"vertexList", " ", ":", " ", 
       RowBox[{"{", "__Integer", "}"}]}]}], " ", "}"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Not", "[", " ", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"pos", ",", " ", "NumericQ"}], "]"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "pos", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", 
        RowBox[{"embeddingDimension", "[", "mTo", "]"}]}]}], " ", "]"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"alignMechanism", "::", "match"}], "]"}], ";", " ", "False"}], 
     ",", "\n", "\t", 
     RowBox[{"Not", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", "vertexList", "]"}], " ", "\[LessEqual]", " ", 
        RowBox[{"mTo", "[", "\"\<VertexNumber\>\"", "]"}]}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Min", "[", "vertexList", "]"}], " ", ">", " ", "0"}]}], " ", 
      "]"}], ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"alignMechanism", "::", "vert"}], "]"}], ";", " ", "False"}], 
     ",", "\n", "\t", "True", ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"alignMechanism", "::", "number"}], "]"}], ";", " ", 
      "False"}]}], "\n", "]"}]}]}]}], "Code",
 CellLabel->
  "In[6618]:=",ExpressionUUID->"414a48f8-0460-4f16-beb3-5304ae31782f"]
}, Closed]],

Cell[CellGroupData[{

Cell["congruentQ[]", "Subsubsection",ExpressionUUID->"ad1bcf64-cd10-4ca6-b1cc-585d731370c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"congruentQ", "[", 
    RowBox[{
     RowBox[{"m1_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"m2_", "?", "mechanismQ"}], ",", " ", "tolerance_"}], " ", "]"}],
    " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"congruentQ", "[", 
        RowBox[{
         RowBox[{"m1", "[", "\"\<positions\>\"", "]"}], ",", " ", 
         RowBox[{"m2", "[", "\"\<positions\>\"", "]"}], ",", "tolerance"}], 
        "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{
       RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", "congruentQ"}]}]}],
     "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"congruentQ", "[", 
   RowBox[{
    RowBox[{"pos1_", "?", "vertexCoordinatesQ"}], ",", " ", 
    RowBox[{"pos2_", "?", "vertexCoordinatesQ"}], ",", " ", "tolerance_"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{"False", " ", "/;", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "pos1", "]"}], " ", "\[NotEqual]", " ", 
    RowBox[{"Dimensions", "[", "pos2", "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"congruentQ", "[", 
    RowBox[{
     RowBox[{"pos1_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"pos2_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"tolerance", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], " ", "&&", " ", 
          RowBox[{"#", " ", ">", " ", "0"}]}], "&"}], ")"}]}]}]}], " ", "]"}],
    " ", ":=", " ", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"FindGeometricTransform", "[", " ", 
         RowBox[{"pos1", ",", " ", "pos2", ",", " ", 
          RowBox[{
          "TransformationClass", " ", "\[Rule]", " ", "\"\<Rigid\>\""}], ",", 
          " ", 
          RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Linear\>\""}]}], " ", 
         "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newPos", " ", "=", " ", 
          RowBox[{
           RowBox[{"res", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", " ", "pos2", " ", "]"}]}], 
         "}"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pos1", " ", "-", " ", "newPos"}], ")"}], " ", ".", " ", 
          RowBox[{"(", 
           RowBox[{"pos1", " ", "-", " ", "newPos"}], ")"}]}], " ", "<", " ", 
         
         RowBox[{"tolerance", "^", "2"}]}]}], "\n", "]"}]}], "]"}], " ", "/;",
     " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"Dimensions", "[", "pos2", "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"congruentQ", "[", 
   RowBox[{
    RowBox[{"pos1_", "?", "vertexCoordinatesQ"}], ",", " ", 
    RowBox[{"pos2_", "?", "vertexCoordinatesQ"}], ",", " ", "tolerance_", ",",
     " ", 
    RowBox[{"vertexList", " ", ":", " ", 
     RowBox[{"{", "__Integer", "}"}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"False", " ", "/;", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "pos1", "]"}], " ", "\[NotEqual]", " ", 
    RowBox[{"Dimensions", "[", "pos2", "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"congruentQ", "[", 
    RowBox[{
     RowBox[{"pos1_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"pos2_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"tolerance", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], " ", "&&", " ", 
          RowBox[{"#", " ", ">", " ", "0"}]}], "&"}], ")"}]}]}], " ", ",", 
     " ", 
     RowBox[{"vertexList", " ", ":", " ", 
      RowBox[{"{", "__Integer", "}"}]}]}], " ", "]"}], " ", ":=", " ", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"FindGeometricTransform", "[", " ", 
         RowBox[{
          RowBox[{"pos1", "[", 
           RowBox[{"[", " ", "vertexList", " ", "]"}], "]"}], ",", " ", 
          RowBox[{"pos2", "[", 
           RowBox[{"[", " ", "vertexList", " ", "]"}], "]"}], ",", " ", 
          RowBox[{
          "TransformationClass", " ", "\[Rule]", " ", "\"\<Rigid\>\""}], ",", 
          " ", 
          RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Linear\>\""}]}], " ", 
         "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newPos", " ", "=", " ", 
          RowBox[{
           RowBox[{"res", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", " ", "pos2", " ", "]"}]}], 
         "}"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pos1", " ", "-", " ", "newPos"}], ")"}], " ", ".", " ", 
          RowBox[{"(", 
           RowBox[{"pos1", " ", "-", " ", "newPos"}], ")"}]}], " ", "<", " ", 
         
         RowBox[{"tolerance", "^", "2"}]}]}], "\n", "]"}]}], "]"}], " ", "/;",
     " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Dimensions", "[", "pos1", "]"}], " ", "\[Equal]", " ", 
      RowBox[{"Dimensions", "[", "pos2", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "vertexList", "]"}], " ", ">", " ", "0"}], " ", "&&",
      " ", 
     RowBox[{
      RowBox[{"Max", "[", "vertexList", "]"}], " ", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "pos1", "]"}]}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"congruentQ", "[", "tolerance__", "]"}], "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], " ", ":=", " ", 
  RowBox[{"congruentQ", "[", 
   RowBox[{"a", ",", "b", ",", "tolerance"}], "]"}]}]}], "Code",
 CellLabel->
  "In[6630]:=",ExpressionUUID->"2b8c3072-deb2-4963-8d04-f459f5914cdd"]
}, Closed]],

Cell[CellGroupData[{

Cell["BoundingRegion[]", "Subsubsection",ExpressionUUID->"8cce2016-734e-42f2-be2b-cbdd076c933d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BoundingRegion", "[", 
   RowBox[{"o_origami", ",", " ", "r___"}], "]"}], " ", "^:=", " ", 
  RowBox[{"BoundingRegion", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<positions\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"BoundingRegion", "[", 
   RowBox[{"o_framework", ",", " ", "r___"}], "]"}], " ", "^:=", " ", 
  RowBox[{"BoundingRegion", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<positions\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6636]:=",ExpressionUUID->"a044e23e-1cf7-439c-8988-ba19bc69562f"]
}, Closed]],

Cell[CellGroupData[{

Cell["RegionNearest[]", "Subsubsection",ExpressionUUID->"82b83af1-364d-4441-ac6f-7d4ab9c93140"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegionNearest", "[", " ", 
   RowBox[{"f_framework", ",", " ", "pt_"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionNearest", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "pt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RegionNearest", "[", " ", "f_framework", " ", "]"}], " ", "^:=", 
   " ", 
   RowBox[{"RegionNearest", "[", " ", 
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"RegionNearest", "[", " ", 
   RowBox[{"f_origami", ",", " ", "pt_"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionNearest", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "pt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionNearest", "[", " ", "f_origami", " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionNearest", "[", " ", 
   RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6638]:=",ExpressionUUID->"24754796-afb7-45a3-8951-4a536a4a06ac"]
}, Closed]],

Cell[CellGroupData[{

Cell["RegionMember[]", "Subsubsection",ExpressionUUID->"40634b5d-5042-457b-b993-97b346712759"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegionMember", "[", " ", 
   RowBox[{"f_framework", ",", " ", "pt_"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionMember", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "pt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RegionMember", "[", " ", "f_framework", " ", "]"}], " ", "^:=", 
   " ", 
   RowBox[{"RegionMember", "[", " ", 
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"RegionMember", "[", " ", 
   RowBox[{"f_origami", ",", " ", "pt_"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionMember", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "pt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionMember", "[", " ", "f_origami", " ", "]"}], " ", "^:=", " ", 
  
  RowBox[{"RegionMember", "[", " ", 
   RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6642]:=",ExpressionUUID->"7a361400-0ab0-480a-8540-923e7b45dae0"]
}, Closed]],

Cell[CellGroupData[{

Cell["RegionBounds[]", "Subsubsection",ExpressionUUID->"b14c81ad-57f2-4d31-b5c8-6ba50d536466"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegionBounds", "[", " ", 
   RowBox[{"f_framework", ",", " ", "type___"}], " ", "]"}], " ", "^:=", " ", 
  
  RowBox[{"RegionBounds", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "type"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionBounds", "[", " ", 
   RowBox[{"f_origami", ",", " ", "type___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionBounds", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "type"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6646]:=",ExpressionUUID->"b4b8b7fc-0ce5-405c-bfdc-ceda27c196cd"]
}, Closed]],

Cell[CellGroupData[{

Cell["RandomPoint[]", "Subsubsection",ExpressionUUID->"5aef37b4-8e7e-4e78-8436-4ba089791318"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RandomPoint", "[", " ", 
   RowBox[{"f_framework", ",", " ", "reg___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RandomPoint", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "reg"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RandomPoint", "[", " ", 
   RowBox[{"f_origami", ",", " ", "reg___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RandomPoint", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "reg"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6648]:=",ExpressionUUID->"17113e68-20ca-4fc5-b9c9-b00d33e0fb3d"]
}, Closed]],

Cell[CellGroupData[{

Cell["RegionCentroid[]", "Subsubsection",ExpressionUUID->"51d396bd-59b9-41b5-8132-3e59ac3c087f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegionCentroid", "[", " ", "f_framework", " ", "]"}], " ", "^:=", 
  " ", 
  RowBox[{"RegionCentroid", "[", " ", 
   RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionCentroid", "[", " ", "f_origami", " ", "]"}], " ", "^:=", 
  " ", 
  RowBox[{"RegionCentroid", "[", " ", 
   RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[6650]:=",ExpressionUUID->"39a0c5e5-34c0-48f6-8ad7-a3093cefd676"]
}, Closed]],

Cell[CellGroupData[{

Cell["RegionDistance[], SignedRegionDistance[]", "Subsubsection",ExpressionUUID->"72d58bed-db3c-4a7d-9208-04f5cef0b41d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegionDistance", "[", " ", 
   RowBox[{"f_framework", ",", " ", "p___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionDistance", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "p"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionDistance", "[", " ", 
   RowBox[{"f_origami", ",", " ", "p___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionDistance", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "p"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6652]:=",ExpressionUUID->"ef666df7-d4d4-42ba-a742-668ead4cc0eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SignedRegionDistance", "[", " ", 
   RowBox[{"f_framework", ",", " ", "p___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"SignedRegionDistance", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "p"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"SignedRegionDistance", "[", " ", 
   RowBox[{"f_origami", ",", " ", "p___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"SignedRegionDistance", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "p"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6654]:=",ExpressionUUID->"00cc8537-555f-44c2-a479-a17ad44530f5"]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["graphics/output", "Section",ExpressionUUID->"1057eff9-5f17-4068-acc7-4bffd91fc573"],

Cell[CellGroupData[{

Cell["saveToFOLD[], loadFromFOLD[]", "Subsection",ExpressionUUID->"570218bd-49b5-4ca4-b546-bea8c4815be7"],

Cell["\<\
Save the mechanism using the .fold specification \
(https://github.com/edemaine/fold/blob/master/doc/spec.md)\
\>", "Text",ExpressionUUID->"7de08b25-a660-4064-8f9f-9c0584610130"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"incrementVertices", "[", "d_List", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "+", "1"}], "&"}], "/@", "d"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"decrementVertices", "[", "d_List", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "-", "1"}], "&"}], "/@", "d"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"surfaceQ", "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", " ", 
    RowBox[{
     RowBox[{"Length", " ", "/@", " ", 
      RowBox[{"connectivity", "[", " ", 
       RowBox[{"m", ",", " ", 
        RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], 
       " ", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"#", " ", "\[LessEqual]", " ", "2"}], "&"}]}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"saveToFOLD", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], " ", ",", " ", "filename_String"}], 
   " ", "]"}], ":=", "\n", 
  RowBox[{"Export", "[", 
   RowBox[{"filename", ",", "\n", "\t", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{
      "\"\<file_spec\>\"", " ", "\[Rule]", " ", "$mechanismsVersion"}], ",", 
      "\n", "\t", 
      RowBox[{
      "\"\<file_creator\>\"", " ", "\[Rule]", " ", "\"\<mechanisms\>\""}], 
      ",", "\n", "\t", 
      RowBox[{"\"\<file_classes\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", "\"\<singleModel\>\"", "}"}]}], ",", "\n", "\t", 
      RowBox[{"\"\<frame_classes\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", "\"\<creasePattern\>\"", "}"}]}], ",", "\n", "\t", 
      RowBox[{"\"\<frame_attributes\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Switch", "[", " ", 
          RowBox[{
           RowBox[{"displayDimension", "[", "m", "]"}], ",", " ", "2", ",", 
           " ", "\"\<2D\>\"", ",", " ", "3", ",", " ", "\"\<3D\>\"", ",", "_",
            ",", " ", "Nothing"}], " ", "]"}], ",", "\n", "\t\t", 
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "m", "]"}], "===", 
            RowBox[{"origami", " ", ">", " ", "0"}]}], ",", " ", 
           "\"\<manifold\>\"", ",", " ", "Nothing"}], " ", "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{"orientedQ", "[", " ", "m", " ", "]"}], ",", " ", 
           "\"\<orientable\>\"", ",", " ", "\"\<nonOrientable\>\""}], " ", 
          "]"}]}], "\n", "\t", "}"}]}], ",", "\n", "\t", 
      RowBox[{"\"\<frame_unit\>\"", " ", "\[Rule]", " ", "\"\<unit\>\""}], 
      ",", "\n", "\t", 
      RowBox[{"\"\<vertices_coords\>\"", " ", "\[Rule]", " ", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], ",", "\n", "\t", 
      RowBox[{"\"\<edges_vertices\>\"", " ", "\[Rule]", " ", 
       RowBox[{"decrementVertices", " ", "/@", " ", 
        RowBox[{"connectivity", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{
          "\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], 
         "]"}]}]}], ",", "\n", "\t", 
      RowBox[{"\"\<faces_vertices\>\"", " ", "\[Rule]", " ", 
       RowBox[{"decrementVertices", " ", "/@", " ", 
        RowBox[{"listFaces", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{
          "\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], 
         "]"}]}]}]}], "\n", "}"}], ",", "\"\<JSON\>\""}], "]"}]}]}], "Code",
 CellLabel->
  "In[6656]:=",ExpressionUUID->"8fc21ec3-bd31-48c7-99a9-e6f2bd594953"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "loadFromFOLD", "]"}], "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"\"\<face\>\"", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"face", "[", "#", "]"}], "&"}], ")"}]}], "}"}], ",", " ", 
      RowBox[{"Options", "[", "origami", "]"}]}], " ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"loadFromFOLD", "[", 
   RowBox[{"filename_String", ",", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"inputData", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"filename", ",", "\"\<JSON\>\""}], "]"}]}], ",", "\n", "\t", 
      "coords", ",", "edges", ",", "faces"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"inputData", " ", "===", " ", "$Failed"}], ",", "\n", "\t\t", 
      "$Failed", ",", "\n", "\n", "\t\t", 
      RowBox[{
       RowBox[{"coords", "=", 
        RowBox[{"\"\<vertices_coords\>\"", " ", "/.", " ", "inputData"}]}], 
       ";", "\n", "\t\t", 
       RowBox[{"edges", "=", 
        RowBox[{"\"\<edges_vertices\>\"", " ", "/.", " ", "inputData"}]}], 
       ";", "\n", "\t\t", 
       RowBox[{"faces", "=", 
        RowBox[{"\"\<faces_vertices\>\"", " ", "/.", " ", "inputData"}]}], 
       ";", "\n", "\n", "\t\t", 
       RowBox[{"origami", "[", " ", 
        RowBox[{"coords", ",", " ", 
         RowBox[{"Join", "[", " ", 
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<face\>\"", "]"}], " ", "/@", " ", 
           
           RowBox[{"incrementVertices", " ", "/@", " ", "faces"}]}], "]"}], 
         ",", " ", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "opt", "}"}], ",", 
           RowBox[{"Options", "[", "origami", "]"}]}], "]"}]}], " ", 
        "]"}]}]}], "\n", "\t", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6660]:=",ExpressionUUID->"8ac23fb1-7284-4a34-87b9-593e96f3af72"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["post", "Section",ExpressionUUID->"6e6b1080-8143-41c2-bf56-a613ed97817c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[6662]:=",ExpressionUUID->"f4f9e795-777e-433c-97fa-0aa5d3bb0d3a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanisms`rigidity: rigidity and linkage functions", "Chapter",ExpressionUUID->"b2dba352-41ac-4c41-8cd0-89374938bec7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<mechanisms`rigidity`\>\"", "]"}], 
  ";"}]], "Code",
 CellLabel->
  "In[6664]:=",ExpressionUUID->"b82d541f-dac9-4957-9bce-6f05e2b763c2"],

Cell[CellGroupData[{

Cell["usage", "Section",ExpressionUUID->"73915429-1494-4af5-b0a0-500eb7ba478d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"toFramework", "::", "usage"}], "=", "\n", 
    "\"\<toFramework[ obj ] attempts to create a framework from some other \
object (e.g. Graph[], MeshRegion[], etc.).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomCellNetwork", "::", "usage"}], "=", 
    "\"\<randomCellNetwork[n] returns a random network of cells that can be \
tesselated in 2D.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomTriangulatedNetwork", "::", "usage"}], "=", 
    "\"\<randomTriangulatedNetwork[n] returns a random triangulated network \
that can be tesselated in 2D.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Henneberg", "::", "usage"}], "=", 
   "\"\<Henneberg[1][vertices, label -> pos] is an Henneberg operation of \
type 1 that creates a new vertex at a position and attaches it to vertices.\n\
Henneberg[2][ {v1,v2,v3},label -> pos] is a Henneberg operation of type 2 \
that subdivides an edge {v1,v2} and places the new vertex and connects it to \
vertex v3.\nHenneberg[t][pos] is a random Henneberg operation of type t, \
placing the new vertex at position pos.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6665]:=",ExpressionUUID->"d062486e-3334-4371-b057-cc402806a5aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cellData", "::", "usage"}], " ", "=", " ", 
   "\"\<cellData[ m, cellType, dataType ] returns the equilibrium data of a \
certain type for a certain cell type.\ncellData[ m, positions, cellType, \
dataType ] uses provided vertex positions to compute equilibrium data where \
not specified explicitly.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[6669]:=",ExpressionUUID->"54d13d81-bc52-43f3-b92b-77ecb238a8aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"constraintEquations", "::", "usage"}], "=", "\n", 
    "\"\<constraintEquations[\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\
\"]\)(, \!\(\*StyleBox[\"positions\",FontSlant->\"Italic\"]\)), \
\!\(\*StyleBox[\"order\",FontSlant->\"Italic\"]\)] returns constraint \
equations valid to some order in the displacements.\n\
\!\(\*StyleBox[\"order\",FontSlant->\"Italic\"]\) should be 1, 2 or Infinity. \
Use option \\\"constraints\\\" to set additional constraints.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mechanismEnergy", "::", "usage"}], "=", "\n", 
    "\"\<mechanismEnergy[ \!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\
\) ] returns an energy expression for a mechanism.\nmechanismEnergy[ \
\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"positions\",FontSlant->\"Italic\"]\) ] returns an energy \
expression for vertices at arbitrary positions but using the provided \
positions to determine equilibrium parameters where necessary.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compiledMechanismEnergy", "::", "usage"}], "=", "\n", 
    "\"\<compiledMechanismEnergy[ \
\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\) ] compiles an energy \
and gradient for a mechanism.\ncompiledMechanismEnergy[ \
\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\",\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"positions\",FontSlant->\"Italic\"]\
\) ] compiles an energy and gradient for a mechanism starting from a set of \
positions.\n\nUndefined symbols in the energy must be set using ReplaceAll[].\
\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compiledMechanismEnergyQ", "::", "usage"}], "=", "\n", 
    "\"\<compiledMechanismEnergyQ[ energy ] returns True if and only if \
energy is a compiledMechanismEnergy[] object.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "::", "usage"}], "=", 
   "\"\<$defaultStiffness[\!\(\*StyleBox[\"component\",FontSlant->\"Italic\"]\
\)] returns the default stiffness in case the constraint is rigid.\nUse \
$defaultStiffness[\\\"constraints\\\"] to find the stiffness of added \
constraints.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6670]:=",ExpressionUUID->"d3d232a2-d2f0-4edd-811a-e6bfe8f464d3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"constraintMatrix", "::", "usage"}], "=", 
    "\"\<constraintMatrix[ m ] returns a constraint matrix for the \
first-order constraints.\nconstraintMatrix[ m, positions ] returns a \
constraint matrix using positions to determine matrix element.\n\nOptions: \\\
\"constraints\\\" to add additional constraints, \\\"pattern\\\" to restrict \
which components will provide constraints, \\\"rules\\\" eliminates variables \
from the constraint matrix.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"zeroModes", "::", "usage"}], "=", 
    "\"\<zeroModes[m] returns a list of numerical zero modes (linear \
isometries) associated with the constraints of mechanism m.\n\nIt takes the \
options of constraintMatrix[] and Eigensystem. Option Tolerance can be used \
to set a numerical value to correspond to 0.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"selfStresses", "::", "usage"}], "=", 
    "\"\<selfStresses[m] returns a list of numerical self-stresses () modes \
associated with the constraints of mechanism m.\n\nIt takes the options of \
constraintMatrix[] and Eigensystem. Option Tolerance can be used to set a \
numerical value to correspond to 0.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"infinitesimalMotions", "::", "usage"}], "=", "\n", 
    "\"\<infinitesimalMotions[\!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\"\
Italic\\\"]\)(, \
\!\(\*StyleBox[\\\"positions\\\",FontSlant->\\\"Italic\\\"]\))] returns a \
list of two elements: an infinitesimal linear motion and, if necessary, a \
list of quadratic constraints they must satisfy.\n\nUse option \
\\\"variables\\\" to control the form of the output.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stressMatrix", "::", "usage"}], "=", "\n", 
   "\"\<stressMatrix[ m, vec ] returns a stress matrix associated with the \
stress vector vec. The (i,j) component of the stress matrix is the negative \
of the corresponding stress vector component (and zero otherwise) and \
diagonal components are chosen so that rows and columns sum to zero.\n\n(see \
Connelly on generic global rigidity)\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6675]:=",ExpressionUUID->"9f3c6bc3-e1f2-404a-b458-b61b234f2a0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"minimizeEnergy", "::", "usage"}], "=", "\n", 
    "\"\<minimizeEnergy[\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\
\)\!\(\*StyleBox[\" \",FontSlant->\"Italic\"]\)], minimizeEnergy[ \
\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"energy\",FontSlant->\"Italic\"]\) ] minimizes the energy of \
a mechanism, returning {\!\(\*StyleBox[\"minimum\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"energy\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"mininal\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"vertex\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"positions\",FontSlant->\"Italic\"]\
\)\!\(\*StyleBox[\"}\",FontSlant->\"Italic\"]\).\n\nThe optional argument \
\!\(\*StyleBox[\"energy\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)can be either an expression or a compiled \
mechanism energy.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"repeatedMinimizeEnergy", "::", "usage"}], "=", "\n", 
    "\"\<repeatedMinimizeEnergy[\!\(\*StyleBox[\"mechanism\",FontSlant->\"\
Italic\"]\), \!\(\*StyleBox[\"energy\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"number\",FontSlant->\"Italic\"]\)] minimizes the energy \
number times using random initial conditions.\n\
repeatedMinimizeEnergy[\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\),\
\!\(\*StyleBox[\"energy\",FontSlant->\"Italic\"]\),\!\(\*StyleBox[\"number\",\
FontSlant->\"Italic\"]\),\!\(\*StyleBox[\"test\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"value\",FontSlant->\
\"Italic\"]\)] uses a numeric test value to determine if two vertex positions \
are the same.\n\
repeatedMinimizeEnergy[\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\),\
\!\(\*StyleBox[\"energy\",FontSlant->\"Italic\"]\),\!\(\*StyleBox[\"number\",\
FontSlant->\"Italic\"]\),\!\(\*StyleBox[\"test\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"function\",FontSlant->\"Italic\"]\
\)] uses a test function to determine if two vertex positions are the same.\>\
\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tallyRepeatedMinimizeEnergy", "::", "usage"}], "=", "\n", 
    "\"\<tallyRepeatedMinimizeEnergy[\!\(\*StyleBox[\"mechanism\",FontSlant->\
\"Italic\"]\), \
\!\(\*StyleBox[\"energy\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\",\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"number\",FontSlant->\"Italic\"]\)]\
 minimizes the energy number times using random initial conditions and \
tallies the results.\n\
tallyRepeatedMinimizeEnergy[\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"\
]\),energy,\!\(\*StyleBox[\"number\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
,\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"test\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"value\",FontSlant->\"Italic\"]\)] \
uses a numeric test value to determine if two vertexPositions are the same.\n\
tallyRepeatedMinimizeEnergy[\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"\
]\),energy,\!\(\*StyleBox[\"number\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
,\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"test\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"function\",FontSlant->\"Italic\"]\
\)] uses a test function to determine if two vertexPositions are the \
same.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dynamicalSystem", "::", "usage"}], "=", "\n", 
    "\"\<dynamicalSystem[\!\(\*StyleBox[\"m\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"{\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\"initial\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"positions\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"initial\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"velocities\",FontSlant->\"Italic\"\
]\)\!\(\*StyleBox[\"}\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\",\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"{\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\"time\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"variable\",FontSlant->\"Italic\"]\
\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"start\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"time\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"end\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"time\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\"}\",FontSlant->\"Italic\"]\)] returns a list of functions \
specifying how vertices will move as a function of \
\!\(\*StyleBox[\"time\",FontSlant->\"Italic\"]\).\n\nUse options \\\"mass\\\" \
and \\\"drag\\\" to set the mass and drag coefficient for the \
particles.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dynamicalSystemEquations", "::", "usage"}], "=", "\n", 
    "\"\<dynamicalSystemEquations[\!\(\*StyleBox[\"mech\",FontSlant->\"Italic\
\"]\), {\!\(\*StyleBox[\"variable\",FontSlant->\"Italic\"]\), \!\(\*StyleBox[\
\"time\",FontSlant->\"Italic\"]\)}] returns dynamical equations for vertex \
positions, using \!\(\*StyleBox[\"variable\",FontSlant->\"Italic\"]\) as \
vertex names, and \!\(\*StyleBox[\"time\",FontSlant->\"Italic\"]\) as the \
symbol for time.\n\nUse options \\\"mass\\\" and \\\"drag\\\" to set the mass \
and drag coefficient for the particles.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "usage"}], "=", 
   "\"\<monteCarloRun[ m, \[Beta], n, distribution ] attempts n Monte Carlo \
steps at inverse temperature \[Beta] using a probability distribution.\nThe \
results are output as {list of energies, list of positions}.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[6680]:=",ExpressionUUID->"26ac018e-d3cd-4b8e-8be3-ef6964a705fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"isometricTrajectory", "::", "usage"}], "=", "\n", 
    "\"\<isometricTrajectory[\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\
\"]\), \!\(\*StyleBox[\"{\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"{\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\[CapitalDelta]x1\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\[CapitalDelta]y1\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"..\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\"}\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"..\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\"}\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)] creates a trajectory using \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\) steps through the configuration \
space of a mechanism starting in the\ndisplacement direction \
\!\(\*StyleBox[\"{\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"{\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"\[CapitalDelta]x1\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\[CapitalDelta]y1\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"..\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\"}\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"..\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\"}\",FontSlant->\"Italic\"]\). Each step is specified by the \
option \\\"stepMethod\\\" using options \\\"stepOptions\\\".\n\n\
isometricTrajectory[mechanism, direction, {variable, start, end}] attempts to \
find an isometric trajectory for a system with one degree of freedom.\n\
\!\(\*StyleBox[\"direction\",FontSlant->\"Italic\"]\) is either +1 or -1. It \
returns a list of InterpolatingFunctions as a function of \
\!\(\*StyleBox[\"variable\",FontSlant->\"Italic\"]\) representing the \
positions of the vertices.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"findMinimalTrajectory", "::", "usage"}], "=", "\n", 
    "\"\<findMinimalTrajectory[\!\(\*StyleBox[\"mechanism\",FontSlant->\"\
Italic\"]\), \!\(\*StyleBox[\"start\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"end\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)] attempts to find a valid \
trajectory from \!\(\*StyleBox[\"start\",FontSlant->\"Italic\"]\) to \
\!\(\*StyleBox[\"end\",FontSlant->\"Italic\"]\) configurations using \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\) intermediate steps.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"genericGloballyRigidQ", "::", "usage"}], "=", "\n", 
   "\"\<genericGloballyRigidQ[m] returns True if it can be determined that \
the system is generically globally rigid according to Connelly's criteria \
based on the stress matrix.\nIf it returns True, the specific mechanism may \
still be non-rigid.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6686]:=",ExpressionUUID->"b5932bf9-eb16-4733-95a2-c0d28cbc74eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotStress", "::", "usage"}], "=", 
   "\"\<plotStress[ m, edges, stresses ] plots a mechanism with edge stresses \
denoted by double-headed arrows.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[6689]:=",ExpressionUUID->"7b07195b-81ae-4c6b-b53b-c12da7b91d15"]
}, Closed]],

Cell[CellGroupData[{

Cell["global data", "Section",ExpressionUUID->"8a9e5486-2df6-4b93-9dc2-b554504ae96d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`geometry`\>\"", "]"}], ";"}]}], "Code",\

 CellLabel->
  "In[6690]:=",ExpressionUUID->"e1d9d711-2332-45c6-b149-b767382b3d44"]
}, Open  ]],

Cell[CellGroupData[{

Cell["private rigidity functions", "Section",ExpressionUUID->"9fbb1e8d-4aff-41c8-a1c6-577a2f9fb10e"],

Cell[CellGroupData[{

Cell["linearMotions[]", "Subsection",ExpressionUUID->"99d232f2-b91d-458c-a3db-d922760b95e4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "linearMotions", "]"}], " ", "=", " ", 
    RowBox[{"Options", "[", "NullSpace", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"linearMotions", "[", " ", 
   RowBox[{"m_", " ", ",", " ", "rigidityMatrix_", " ", ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"embeddingDimension", "[", "m", "]"}]}], ",", " ", 
      RowBox[{"lin", " ", "=", " ", 
       RowBox[{"NullSpace", "[", 
        RowBox[{"rigidityMatrix", ",", "opt"}], "]"}]}]}], "}"}], ",", "\n", 
    "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "lin", "]"}], ">", "0"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Partition", "[", " ", 
        RowBox[{
         RowBox[{"Orthogonalize", "[", "lin", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "dim"}], "}"}]}], " ", "]"}], "[", 
       RowBox[{"[", " ", 
        RowBox[{"All", ",", " ", "All", ",", " ", "1"}], " ", "]"}], "]"}], 
      ",", "\n", "\t\t", 
      RowBox[{"{", "}"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6693]:=",ExpressionUUID->"acfcd0c2-af8a-418c-a3d7-96424de01343"]
}, Closed]],

Cell[CellGroupData[{

Cell["numericExpressionQ[]", "Subsection",ExpressionUUID->"1dfd8d13-1b68-4298-a629-f270fa825602"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "does", " ", "an", " ", "expression", " ", "evaluate", " ", "to", " ", "a",
     " ", "number", " ", "if", " ", "the", " ", "vertex", " ", "positions", 
    " ", "or", " ", "displacements", " ", "are", " ", 
    RowBox[{"set", "?"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"numericExpressionQ", "[", 
    RowBox[{"positions_", ",", " ", "expression_"}], "]"}], ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"reducedExpression", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", " ", ".", " ", "#"}], "&"}], ")"}], "[", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"expression", " ", "/.", " ", 
            RowBox[{"positionRules", "[", " ", 
             RowBox[{"N", "[", "positions", "]"}], " ", "]"}]}], " ", "/.", 
           " ", 
           RowBox[{
            RowBox[{"vertexDisplacement", "[", 
             RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0.001"}]}], "}"}], 
         " ", "]"}], " ", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"NumericQ", "[", "reducedExpression", "]"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"Chop", "[", 
        RowBox[{"Im", "[", "reducedExpression", "]"}], "]"}], "\[Equal]", 
       "0"}]}]}], "\n", "]"}]}]}]], "Code",
 CellLabel->
  "In[6695]:=",ExpressionUUID->"c096df45-35d7-4194-bb7d-c685fc4d292d"]
}, Closed]],

Cell[CellGroupData[{

Cell["parseExpression[]", "Subsection",ExpressionUUID->"8488fe5a-cff7-4dfa-ac4b-5654c56b2c7f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parseValidTokenQ", "[", 
   RowBox[{"foldAngle", "[", 
    RowBox[{"{", 
     RowBox[{"_Integer", ",", "_Integer"}], "}"}], "]"}], "]"}], ":=", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"parseValidTokenQ", "[", 
   RowBox[{"displacementLength", "[", 
    RowBox[{"{", 
     RowBox[{"_Integer", ",", "_Integer"}], "}"}], "]"}], "]"}], ":=", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"parseValidTokenQ", "[", 
   RowBox[{"displacementLengthSquared", "[", 
    RowBox[{"{", 
     RowBox[{"_Integer", ",", "_Integer"}], "}"}], "]"}], "]"}], ":=", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parseValidTokenQ", "[", "_", "]"}], ":=", "False"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parseExtractTokens", "[", "expr_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rawTokens", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Variables", "[", "expr", "]"}], ",", "parseValidTokenQ"}], 
        "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "&"}], "/@", 
      RowBox[{"GatherBy", "[", 
       RowBox[{"rawTokens", ",", "Head"}], "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"parseEvaluateTokens", "[", 
   RowBox[{"m_", ",", "positions_", ",", 
    RowBox[{"foldAngle", "[", "data_", "]"}]}], "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"foldAngle", "/@", "data"}], ")"}], " ", "\[Rule]", " ", 
    RowBox[{"foldAngle", "[", 
     RowBox[{"m", ",", "positions", ",", "data"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"parseEvaluateTokens", "[", 
   RowBox[{"m_", ",", "positions_", ",", 
    RowBox[{"displacementLength", "[", "data_", "]"}]}], "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"displacementLength", "/@", "data"}], ")"}], " ", "\[Rule]", " ", 
    RowBox[{"displacementLength", "[", 
     RowBox[{"m", ",", "positions", ",", "data"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"parseEvaluateTokens", "[", 
   RowBox[{"m_", ",", "positions_", ",", 
    RowBox[{"displacementLengthSquared", "[", "data_", "]"}]}], "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"displacementLengthSquared", "/@", "data"}], ")"}], " ", 
    "\[Rule]", " ", 
    RowBox[{"displacementLengthSquared", "[", 
     RowBox[{"m", ",", "positions", ",", "data"}], "]"}]}], "]"}]}]}], "Code",\

 CellLabel->
  "In[6696]:=",ExpressionUUID->"379532fc-ab3b-4100-8b5e-6183b7f55947"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parseComponentData", "[", 
    RowBox[{"m_", ",", "positions_", ",", 
     RowBox[{"rigidBar", "[", 
      RowBox[{"indices_", ",", "data_"}], "]"}]}], "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"lengths", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#2", "===", "Automatic"}], ",", "#1", ",", "#2"}], 
            "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"displacementLength", "[", 
             RowBox[{"positions", ",", "indices"}], "]"}], ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
       ",", "\n", "\t", 
       RowBox[{"stiffnesses", "=", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "\n", "}"}], ",", "\n",
      "\t", 
     RowBox[{"Join", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"length", "/@", "indices"}], ")"}], "\[Rule]", "lengths"}], 
        "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"length", "/@", 
           RowBox[{"(", 
            RowBox[{"Reverse", "/@", "indices"}], ")"}]}], ")"}], "\[Rule]", 
         "lengths"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"lengthSquared", "/@", "indices"}], ")"}], "\[Rule]", 
         RowBox[{"lengths", "^", "2"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"lengthSquared", "/@", 
           RowBox[{"(", 
            RowBox[{"Reverse", "/@", "indices"}], ")"}]}], ")"}], "\[Rule]", 
         RowBox[{"lengths", "^", "2"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"stiffness", "/@", "indices"}], ")"}], "\[Rule]", 
         "stiffnesses"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"stiffness", "/@", 
           RowBox[{"(", 
            RowBox[{"Reverse", "/@", "indices"}], ")"}]}], ")"}], "\[Rule]", 
         "stiffnesses"}], "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parseComponentData", "[", 
    RowBox[{"m_", ",", "positions_", ",", 
     RowBox[{"foldAngle", "[", 
      RowBox[{"indices_", ",", "data_"}], "]"}]}], "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"angles", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#2", "===", "Automatic"}], ",", "#1", ",", "#2"}], 
            "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"displacementLength", "[", 
             RowBox[{"positions", ",", "indices"}], "]"}], ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
       ",", "\n", "\t", 
       RowBox[{"torsionalStiffnesses", "=", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "\n", "}"}], ",", "\n",
      "\t", 
     RowBox[{"Join", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"angle", "/@", "indices"}], ")"}], "\[Rule]", "angles"}], 
        "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"angle", "/@", 
           RowBox[{"(", 
            RowBox[{"Reverse", "/@", "indices"}], ")"}]}], ")"}], "\[Rule]", 
         "angles"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"torsionalStiffness", "/@", "indices"}], ")"}], "\[Rule]", 
         "torsionalStiffnesses"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"torsionalStiffness", "/@", 
           RowBox[{"(", 
            RowBox[{"Reverse", "/@", "indices"}], ")"}]}], ")"}], "\[Rule]", 
         "torsionalStiffnesses"}], "]"}]}], "\n", "\t", "]"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"parseComponentData", "[", 
   RowBox[{"m_", ",", "positions_", ",", "_"}], "]"}], ":=", 
  RowBox[{"{", "}"}]}]}], "Code",
 CellLabel->
  "In[6704]:=",ExpressionUUID->"2e6066e1-9346-4cd8-aed9-3d85923df3d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"parseExpression", "[", 
   RowBox[{"m_", ",", "positions_", ",", "expr_"}], "]"}], ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"parsingRules", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"parseComponentData", "[", 
            RowBox[{"m", ",", "positions", ",", "#"}], "]"}], "&"}], "/@", 
          RowBox[{"m", "[", "\"\<components\>\"", "]"}]}], ",", "\n", "\t\t", 
         
         RowBox[{
          RowBox[{
           RowBox[{"parseEvaluateTokens", "[", 
            RowBox[{"m", ",", 
             RowBox[{"vertexPosition", "[", "m", "]"}], ",", "#"}], "]"}], 
           "&"}], "/@", 
          RowBox[{"parseExtractTokens", "[", "expr", "]"}]}]}], "\n", "\t", 
        "}"}], "]"}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"expr", "//.", 
     RowBox[{"Dispatch", "[", "parsingRules", "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[6707]:=",ExpressionUUID->"1215db5f-4226-4914-976f-95e9ec2bdd56"]
}, Closed]],

Cell[CellGroupData[{

Cell["constraintVector[], reduceConstraintToOrder[]", "Subsection",ExpressionUUID->"ad6ad24c-4f7b-4beb-92a1-ed99eb40f1e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"constraintVector", "[", " ", 
      RowBox[{"positions", ",", " ", "constraints"}], " ", "]"}], " ", 
     "takes", " ", "arbitrary", " ", "constraints"}], ",", " ", 
    RowBox[{
    "written", " ", "as", " ", "equations", " ", "or", " ", "in", " ", "some",
      " ", "other", " ", "form"}], ",", "\n", 
    RowBox[{"parses", " ", "them"}], ",", " ", 
    RowBox[{
    "and", " ", "returns", " ", "a", " ", "standard", " ", "vector", " ", 
     "map", " ", "from", " ", "positions", " ", "to", " ", "a", " ", 
     RowBox[{"\"\<constraint space\>\"", "."}]}]}], "\n", "*)"}], "\n", "\n", 
  
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"get", " ", "a", " ", "set", " ", "of", " ", "user"}], "-", 
    RowBox[{
    "specified", " ", "constraints", " ", "into", " ", "the", " ", "form", 
     " ", "of", " ", "a", " ", "vector", " ", "equal", " ", "to", " ", "zero",
      " ", "when", " ", "constraints", " ", "are", " ", "satisfied"}]}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"constraintVector", "[", 
     RowBox[{"positions_", ",", "None"}], "]"}], ":=", 
    RowBox[{"{", "}"}]}], "\n", 
   RowBox[{
    RowBox[{"constraintVector", "[", 
     RowBox[{"positions_", ",", "constraints_"}], "]"}], ":=", 
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"equations", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"equationToExpression", "[", "constraints", "]"}], "}"}], 
          "]"}]}], ",", "\n", 
        RowBox[{"dimensions", "=", 
         RowBox[{"Dimensions", "[", "positions", "]"}]}]}], "\n", "}"}], ",", 
      "\n", "\t", 
      RowBox[{"equations", " ", "/.", " ", 
       RowBox[{"Dispatch", "[", 
        RowBox[{"displacementRules", "[", " ", 
         RowBox[{
          RowBox[{"vertexPosition", "[", " ", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"dimensions", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
            RowBox[{"All", "[", 
             RowBox[{"dimensions", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], " ", "]"}], " ", "-", 
          " ", "positions"}], "]"}], "]"}]}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"equationToExpression", "[", 
     RowBox[{"Equal", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}], "]"}], ":=", 
    RowBox[{"a", "-", "b"}]}], "\n", 
   RowBox[{
    RowBox[{"equationToExpression", "[", 
     RowBox[{"Equal", "[", 
      RowBox[{"a_", ",", "b__"}], "]"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"a", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "b", "}"}], "]"}]}], "]"}], "-", 
     RowBox[{"{", "b", "}"}]}]}], "\n", 
   RowBox[{
    RowBox[{"equationToExpression", "[", 
     RowBox[{"a", ":", 
      RowBox[{"Except", "[", "_Equal", "]"}]}], "]"}], ":=", "a"}], "\n", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"equationToExpression", ",", "Listable"}], "]"}], 
    ";"}]}]}]], "Code",
 CellLabel->
  "In[6708]:=",ExpressionUUID->"47297589-ee37-43ff-bf7f-7c152204d265"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"reduceConstraintToOrder", "[", " ", 
     RowBox[{"positions", ",", " ", "constraintMap", ",", " ", "order"}], " ",
      "]"}], " ", "changes", " ", "the", " ", "order", " ", "of", " ", "the", 
    " ", "constraint", " ", 
    RowBox[{"map", "."}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "express", " ", "the", " ", "constraints", " ", "to", " ", "be", " ", 
    "valid", " ", "at", " ", "a", " ", "certain", " ", "order"}], "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"reduceConstraintToOrder", "[", 
     RowBox[{"positions_", ",", "constraintVector_", ",", 
      RowBox[{"order_Integer", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", ">=", "0"}], "&"}], ")"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"dimensions", "=", 
         RowBox[{"Dimensions", "[", "positions", "]"}]}], ",", "\n", 
        "expandedExpression", ",", "x"}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"expandedExpression", " ", "=", " ", 
        RowBox[{"constraintVector", " ", "/.", " ", 
         RowBox[{"Dispatch", "[", " ", 
          RowBox[{"positionRules", "[", " ", 
           RowBox[{"positions", " ", "+", " ", 
            RowBox[{"x", " ", 
             RowBox[{"vertexDisplacement", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"dimensions", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
               RowBox[{"All", "[", 
                RowBox[{"dimensions", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}], 
          "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"Total", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{"expandedExpression", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "#"}], "}"}]}], "]"}], "/", 
            RowBox[{"Factorial", "[", "#", "]"}]}], "&"}], " ", "/@", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "order"}], "]"}]}], " ", "/.", " ", 
         RowBox[{"x", "\[Rule]", "0"}]}], "]"}]}]}], "\n", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"reduceConstraintToOrder", "[", 
     RowBox[{"positions_", ",", "constraintVector_", ",", "_"}], "]"}], ":=", 
    "constraintVector"}]}]}]], "Code",
 CellLabel->
  "In[6714]:=",ExpressionUUID->"11766d39-10ef-4cf6-927c-a440d6c8c708"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
solveLinearConstraints[], dynamicVariables[], processConstraintEquations[], \
nonlinearConstraintVector[]\
\>", "Subsection",ExpressionUUID->"af2c53f5-a9de-4109-a13f-82f175ddf7f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Fastest", " ", "way", " ", "to", " ", "pull", " ", "out", " ", 
    "equations", " ", "that", " ", "are", " ", "definitely", " ", "linear", 
    " ", "and", " ", "can", " ", "be", " ", "solved", " ", "explicitly"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"linearEquationQ", "[", 
     RowBox[{"eq_", ",", "var_"}], "]"}], ":=", 
    RowBox[{"VectorQ", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"eq", ",", 
        RowBox[{"{", "var", "}"}]}], "]"}], ",", "NumericQ"}], "]"}]}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"given", " ", "a", " ", "set", " ", "constraints"}], ",", " ", 
     RowBox[{
     "select", " ", "out", " ", "the", " ", "linear", " ", "ones", " ", "and",
       " ", "solve", " ", 
      RowBox[{"them", "."}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"solveLinearEquations", "[", 
     RowBox[{"constraintVec_", ",", " ", "var_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", " ", 
     RowBox[{
      RowBox[{"{", "soln", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Quiet", "[", " ", 
        RowBox[{"soln", " ", "=", " ", 
         RowBox[{"Solve", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Select", "[", " ", 
             RowBox[{"constraintVec", ",", " ", 
              RowBox[{
               RowBox[{"linearEquationQ", "[", 
                RowBox[{"#", ",", " ", "var"}], "]"}], "&"}]}], " ", "]"}], 
            " ", "\[Equal]", " ", "0"}], ",", " ", "var"}], " ", "]"}]}], " ",
         "]"}], ";", "\n", "\t", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "soln", "]"}], " ", "=!=", " ", "Solve"}], ",",
          " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"{", "}"}]}], " ", "]"}]}]}], "\n", "]"}]}]}]}]], "Code",
 CellLabel->
  "In[6716]:=",ExpressionUUID->"db6a5df8-19c5-4bab-8ac6-3147ffb02c54"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", "\t", 
   RowBox[{"processConstraintEquations", "[", " ", 
    RowBox[{
     RowBox[{"initial", " ", "positions"}], ",", " ", 
     RowBox[{"constraint", " ", "equations"}]}], " ", "]"}], "\n", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"processConstraintEquations", "[", 
     RowBox[{"positions_", ",", " ", "constraintEq_"}], "]"}], " ", ":=", " ",
     "\n", 
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"constraints", " ", "=", " ", 
         RowBox[{"constraintVector", "[", " ", 
          RowBox[{"positions", ",", " ", "constraintEq"}], " ", "]"}]}], ",", 
        "\n", "\t", 
        RowBox[{"vars", " ", "=", " ", 
         RowBox[{"Flatten", " ", "@", " ", 
          RowBox[{"Array", "[", " ", 
           RowBox[{"vertexPosition", ",", " ", 
            RowBox[{"Dimensions", "[", "positions", "]"}]}], " ", "]"}]}]}], 
        ",", "\n", "\t", "linearEquationSelector", ",", "\n", "\t", 
        "solvedLinearConstraints", ",", "\n", "\t", "constrainedPositions"}], 
       "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"linearEquationSelector", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"linearEquationQ", "[", 
           RowBox[{"#", ",", " ", "vars"}], "]"}], "&"}], " ", "/@", " ", 
         "constraints"}]}], ";", "\n", "\t", 
       RowBox[{"solvedLinearConstraints", " ", "=", " ", 
        RowBox[{"Quiet", "[", " ", 
         RowBox[{"Solve", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Pick", "[", " ", 
             RowBox[{"constraints", ",", " ", "linearEquationSelector"}], " ",
              "]"}], " ", "\[Equal]", " ", "0"}], ",", " ", "vars"}], " ", 
          "]"}], " ", "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "solvedLinearConstraints", "]"}], " ", "===", 
          " ", "Solve"}], ",", "\n", "\t\t", 
         RowBox[{"Association", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"\"\<linear solutions\>\"", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", " ", "\n", "\t\t\t", 
           RowBox[{"\"\<constrained positions\>\"", " ", "\[Rule]", " ", 
            RowBox[{"Array", "[", 
             RowBox[{"vertexPosition", ",", " ", 
              RowBox[{"Dimensions", "[", "positions", "]"}]}], " ", "]"}]}], 
           ",", "\n", "\t\t\t", 
           RowBox[{
           "\"\<nonlinear constraints\>\"", " ", "\[Rule]", " ", 
            "constraints"}]}], "\n", "\t\t", "]"}], ",", "\n", "\t", "\n", 
         "\t\t", 
         RowBox[{"Association", "[", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{
           "rules", " ", "that", " ", "solve", " ", "the", " ", "linear", " ",
             "constraints"}], "*)"}], "\n", "\t\t", 
          RowBox[{
           RowBox[{"\"\<linear solutions\>\"", " ", "\[Rule]", " ", 
            RowBox[{"First", "[", "solvedLinearConstraints", "]"}]}], ",", 
           "\n", "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{
            "positions", " ", "with", " ", "linear", " ", "solutions", " ", 
             "applied"}], "*)"}], "\n", "\t\t", 
           RowBox[{"\"\<constrained positions\>\"", " ", "\[Rule]", " ", 
            RowBox[{"(", " ", 
             RowBox[{"constrainedPositions", " ", "=", " ", 
              RowBox[{
               RowBox[{"Array", "[", 
                RowBox[{"vertexPosition", ",", " ", 
                 RowBox[{"Dimensions", "[", "positions", "]"}]}], "]"}], " ", 
               "/.", " ", 
               RowBox[{"Dispatch", "[", 
                RowBox[{"First", "[", "solvedLinearConstraints", "]"}], 
                "]"}]}]}], " ", ")"}]}], ",", "\n", "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{"remaining", " ", "nonlinear", " ", "constraints"}], 
            "*)"}], "\n", "\t\t", 
           RowBox[{"\"\<nonlinear constraints\>\"", " ", "\[Rule]", " ", 
            RowBox[{"Pick", "[", " ", 
             RowBox[{
             "constraints", ",", " ", "linearEquationSelector", ",", " ", 
              "False"}], " ", "]"}]}]}], "\n", "\t\t", "]"}]}], "\n", "\t", 
        "]"}]}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"nonlinearConstraintVector", "[", 
     RowBox[{"positions_", ",", " ", "constraintEq_"}], "]"}], " ", ":=", " ",
     "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"constraints", " ", "=", " ", 
         RowBox[{"constraintVector", "[", " ", 
          RowBox[{"positions", ",", " ", "constraintEq"}], " ", "]"}]}], ",", 
        " ", 
        RowBox[{"vars", " ", "=", " ", 
         RowBox[{"Flatten", "[", " ", 
          RowBox[{"Array", "[", 
           RowBox[{"vertexPosition", ",", " ", 
            RowBox[{"Dimensions", "[", "positions", "]"}]}], "]"}], " ", 
          "]"}]}]}], " ", "}"}], ",", "\n", "\t", 
      RowBox[{"Select", "[", " ", 
       RowBox[{"constraints", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"linearEquationQ", "[", 
           RowBox[{"#", ",", "vars"}], "]"}], "&"}], " ", "/@", " ", 
         "constraintEq"}]}], "]"}]}], "\n", "]"}]}]}]}]], "Code",
 CellLabel->
  "In[6718]:=",ExpressionUUID->"b298e006-af04-4d16-996b-24e3bd33eb73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "is", " ", "an", " ", "old", " ", "version", " ", "of", " ", 
    "the", " ", "function", " ", "that", " ", "will", " ", "be", " ", 
    "removed", " ", "eventually"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"dynamicVariables", "[", 
     RowBox[{"m_", ",", " ", "pinnedVertices_", ",", "initialPositions_"}], 
     "]"}], ":=", "\n", "\t", 
    RowBox[{"DeleteDuplicatesBy", "[", 
     RowBox[{
      RowBox[{"Cases", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Flatten", " ", "@", " ", 
             RowBox[{"vertexPosition", "[", "m", "]"}]}], ",", 
            RowBox[{"Flatten", " ", "@", " ", "initialPositions"}]}], "}"}], 
          "]"}], " ", "/.", " ", "pinnedVertices"}], ",", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"_vertexPosition", ",", "_"}], "}"}]}], "\n", "\t", "]"}], 
      ",", " ", "First"}], " ", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"dynamicVariables", "[", " ", 
     RowBox[{"positions_", ",", " ", "processedConstraints_Association"}], 
     " ", "]"}], " ", ":=", " ", 
    RowBox[{"dynamicVariables", "[", " ", 
     RowBox[{"positions", ",", " ", 
      RowBox[{
      "processedConstraints", "[", "\"\<constrained positions\>\"", "]"}]}], 
     " ", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"dynamicVariables", "[", " ", 
     RowBox[{"positions_", ",", " ", "constrainedPositions_"}], " ", "]"}], 
    " ", ":=", " ", "\n", "\t", 
    RowBox[{"DeleteDuplicatesBy", "[", " ", 
     RowBox[{
      RowBox[{"Cases", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Transpose", "[", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"Flatten", " ", "@", " ", "constrainedPositions"}], ",", 
           " ", 
           RowBox[{"Flatten", " ", "@", " ", "positions"}]}], " ", "}"}], " ",
          "]"}], ",", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"_vertexPosition", ",", " ", "_"}], "}"}]}], "\n", "\t", 
       "]"}], ",", " ", "First"}], " ", "]"}]}]}]}]], "Code",
 CellLabel->
  "In[6720]:=",ExpressionUUID->"d950c243-7cbd-4fa7-9959-4787123d60ec"]
}, Closed]],

Cell[CellGroupData[{

Cell["evaluateEnergy[]", "Subsection",ExpressionUUID->"05958150-2753-49a1-bcff-ad04e453151c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"energy", ":", " ", 
      RowBox[{"Except", "[", "_compiledMechanismEnergy", "]"}]}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"energy", " ", "/.", " ", 
    RowBox[{"Dispatch", "[", 
     RowBox[{"positionRules", "[", "positions", "]"}], "]"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "VectorQ"}], ",", " ", 
     RowBox[{"energy", ":", " ", 
      RowBox[{"Except", "[", "_compiledMechanismEnergy", "]"}]}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"energy", " ", "/.", " ", 
    RowBox[{"Dispatch", "[", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"vertexPosition", "[", "m", "]"}], "]"}], "\[Rule]", 
       "positions"}], "]"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"energy_", "?", "compiledMechanismEnergyQ"}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"energy", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "positions", "]"}], ",", 
     RowBox[{"energy", "[", "\"\<data\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "VectorQ"}], ",", " ", 
     RowBox[{"energy_", "?", "compiledMechanismEnergyQ"}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"energy", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"positions", ",", 
     RowBox[{"energy", "[", "\"\<data\>\"", "]"}]}], "]"}]}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"energy", ":", " ", 
      RowBox[{"Except", "[", "_compiledMechanismEnergy", "]"}]}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"energy", " ", "/.", " ", 
    RowBox[{"Dispatch", "[", 
     RowBox[{"positionRules", "[", "positions", "]"}], "]"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "VectorQ"}], ",", " ", 
     RowBox[{"energy", ":", " ", 
      RowBox[{"Except", "[", "_compiledMechanismEnergy", "]"}]}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"energy", " ", "/.", " ", 
    RowBox[{"Dispatch", "[", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"vertexPosition", "[", "m", "]"}], "]"}], "\[Rule]", 
       "positions"}], "]"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"energy_", "?", "compiledMechanismEnergyQ"}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"energy", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "positions", "]"}], ",", 
     RowBox[{"energy", "[", "\"\<data\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"evaluateEnergy", "[", 
   RowBox[{
    RowBox[{"positions_", "?", "VectorQ"}], ",", " ", 
    RowBox[{"energy_", "?", "compiledMechanismEnergyQ"}]}], "]"}], ":=", "\n",
   "\t", 
  RowBox[{
   RowBox[{"energy", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"positions", ",", 
    RowBox[{"energy", "[", "\"\<data\>\"", "]"}]}], "]"}]}]}], "Code",
 CellLabel->
  "In[6723]:=",ExpressionUUID->"5e7cf034-611a-4000-a371-7ce6fd7d8af1"]
}, Closed]],

Cell[CellGroupData[{

Cell["analyticEnergyQ[]", "Subsection",ExpressionUUID->"8bb00a64-b11b-49dc-8019-90801a7f898c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"analyticEnergyQ", "[", 
    RowBox[{"Automatic", " ", ",", " ", "positions_"}], "]"}], ":=", "True"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"analyticEnergyQ", "[", 
   RowBox[{"energyExpression_", " ", ",", " ", "positions_"}], "]"}], ":=", 
  "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"number", " ", "=", " ", 
      RowBox[{"N", "[", " ", 
       RowBox[{"energyExpression", " ", "/.", " ", 
        RowBox[{"Dispatch", "[", 
         RowBox[{"positionRules", "[", "positions", "]"}], "]"}]}], " ", 
       "]"}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Im", "[", 
       RowBox[{"Chop", "[", "number", "]"}], "]"}], " ", "\[Equal]", " ", 
      "0"}], " ", "&&", " ", 
     RowBox[{"NumericQ", "[", "number", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Chop", "[", 
       RowBox[{"Im", "[", "number", "]"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6731]:=",ExpressionUUID->"d5b77de4-6377-4475-99bc-9c004e543f84"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["modifying and creating linkages", "Section",ExpressionUUID->"be412990-58f1-4e3c-bc6b-ba37fa0aa38e"],

Cell[CellGroupData[{

Cell["toFramework[]", "Subsection",ExpressionUUID->"a7008bb2-24cc-448f-8adf-7c2a22dda581"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "toFramework", "]"}], "=", 
    RowBox[{"Options", "[", "framework", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toFramework", "[", 
    RowBox[{"mr_MeshRegion", ",", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"framework", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"MeshCoordinates", "[", "mr", "]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"meshCells", "[", "mr", "]"}], " ", "/.", " ", 
      RowBox[{"Line", "->", "rigidBar"}]}], ",", "\n", "\t", "opt"}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toFramework", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g_Graph", ",", "data___"}], "}"}], ",", " ", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"framework", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"GraphEmbedding", "[", 
      RowBox[{"g", ",", "data"}], "]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"rigidBar", "[", 
        RowBox[{"List", "@@", "#"}], "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"EdgeList", "[", "g", "]"}]}], ",", "\n", "\t", "opt"}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toFramework", "[", 
    RowBox[{"g_Graph", ",", " ", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"framework", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"GraphEmbedding", "[", "g", "]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"rigidBar", "[", 
        RowBox[{"List", "@@", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"EdgeList", "[", "g", "]"}]}], ",", "\n", "\t", "opt"}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toFramework", "::", "bad"}], "=", 
   "\"\<Unable to turn `1` into a framework.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"toFramework", "[", " ", 
   RowBox[{"obj_", " ", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{
     RowBox[{"toFramework", "::", "bad"}], ",", " ", 
     RowBox[{"Head", "[", "obj", "]"}]}], " ", "]"}]}]}]}], "Code",
 CellLabel->
  "In[6733]:=",ExpressionUUID->"950dff22-28f0-4fb2-a83f-4d38bd914428"]
}, Closed]],

Cell[CellGroupData[{

Cell["randomCellNetwork[]", "Subsection",ExpressionUUID->"544c5086-1df8-4504-beb9-cdd9287aa475"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "a", " ", "periodic", " ", "Voronoi", " ", "mesh", " ", "by",
     " ", "tiling", " ", "the", " ", "vertices", " ", "and", " ", 
    "extracting", " ", "only", " ", "the", " ", "cells", " ", "associated", 
    " ", "with", " ", "the", " ", "original", " ", 
    RowBox[{"vertices", "."}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "randomCellNetwork", "]"}], ":=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"\"\<faces\>\"", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"\"\<map\>\"", "\[Rule]", "Identity"}]}], " ", "}"}], ",", 
       " ", 
       RowBox[{"Options", "[", "framework", "]"}]}], " ", "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"randomCellNetwork", "[", 
     RowBox[{
      RowBox[{"numPoints_Integer", "?", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"#", ">", "0"}], " ", "&"}], " ", ")"}]}], ",", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "selectedPrimitives", ",", " ", "positions", ",", 
        " ", "mappedPositions"}], "}"}], ",", "\n", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"randomPoints", "=", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "/", "2"}], ",", 
              RowBox[{"1", "/", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"numPoints", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\n", "\n", "\t", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"expandedMesh", "=", 
            RowBox[{"MeshPrimitives", "[", 
             RowBox[{
              RowBox[{"VoronoiMesh", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"randomPoints", "+", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", ",", "j"}], "}"}], ",", "numPoints"}], 
                    "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
                 "2"}], "]"}], "]"}], ",", "2"}], "]"}]}], "}"}], ",", "\n", 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{"selectedPrimitives", " ", "=", " ", 
            RowBox[{"Select", "[", 
             RowBox[{"expandedMesh", ",", 
              RowBox[{
               RowBox[{"Or", "@@", 
                RowBox[{"RegionMember", "[", 
                 RowBox[{"#", ",", " ", "randomPoints"}], "]"}]}], "&"}]}], 
             "]"}]}], ";", "\n", "\t\t", 
           RowBox[{"positions", " ", "=", " ", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"selectedPrimitives", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
             "]"}]}], ";", "\n", "\t\t", 
           RowBox[{"mappedPositions", " ", "=", " ", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<map\>\"", "]"}], " ", "/@", " ",
              "positions"}]}], ";", "\n", "\n", "\t\t", 
           RowBox[{
            RowBox[{"With", "[", "\n", "\t\t", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"mesh", " ", "=", " ", 
                RowBox[{"MeshRegion", "[", 
                 RowBox[{"positions", ",", " ", 
                  RowBox[{"Polygon", " ", "/@", " ", 
                   RowBox[{"Flatten", " ", "/@", " ", 
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{"selectedPrimitives", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "/.", " ", 
                    RowBox[{"PositionIndex", "[", "positions", "]"}]}], " ", 
                    ")"}]}]}]}], "]"}]}], "}"}], ",", "\t", "\n", "\n", 
              "\t\t\t", 
              RowBox[{"If", "[", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"BooleanQ", "[", 
                  RowBox[{"OptionValue", "[", "\"\<faces\>\"", "]"}], "]"}], 
                 " ", "&&", " ", 
                 RowBox[{
                  RowBox[{"OptionValue", "[", "\"\<faces\>\"", "]"}], " ", 
                  "\[Equal]", " ", "True"}]}], ",", "\n", "\t\t\t\t", 
                RowBox[{"framework", "[", " ", 
                 RowBox[{"mappedPositions", ",", " ", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{"mesh", ",", "2"}], "]"}], " ", "/.", " ", 
                   RowBox[{"Polygon", "\[Rule]", "face"}]}], ",", " ", 
                  RowBox[{"FilterRules", "[", 
                   RowBox[{
                    RowBox[{"{", "opt", "}"}], ",", " ", 
                    RowBox[{"Options", "[", "framework", "]"}]}], " ", 
                   "]"}]}], " ", "]"}], ",", "\n", "\t\t\t\t", 
                RowBox[{"framework", "[", " ", 
                 RowBox[{"mappedPositions", ",", " ", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{"mesh", ",", "1"}], "]"}], " ", "/.", " ", 
                   RowBox[{"Line", "\[Rule]", "spring"}]}], ",", " ", 
                  RowBox[{"FilterRules", "[", 
                   RowBox[{
                    RowBox[{"{", "opt", "}"}], ",", " ", 
                    RowBox[{"Options", "[", "framework", "]"}]}], " ", 
                   "]"}]}], " ", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\n",
              "\t\t", "]"}], " ", "/;", " ", 
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"MatrixQ", "[", 
                RowBox[{"mappedPositions", ",", "NumericQ"}], "]"}], " ", "&&",
                " ", 
               RowBox[{
                RowBox[{"Last", "[", 
                 RowBox[{"Dimensions", "[", "mappedPositions", "]"}], "]"}], 
                "\[Equal]", "2"}]}], ",", "\n", "\t\t\t", "True", ",", "\n", 
              "\t\t\t", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{"randomCellNetwork", "::", "map"}], "]"}], ";", " ", 
               "False"}]}], "\n", "\t\t", "]"}]}]}]}], "\n", "\t", "]"}]}], 
       "]"}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"randomCellNetwork", "[", 
     RowBox[{"numPoints_", ",", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
     RowBox[{"Message", "[", 
      RowBox[{"randomCellNetwork", "::", "num"}], "]"}]}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomCellNetwork", "::", "map"}], "=", 
     "\"\<Option \\\"map\\\" is not a function taking a point in 2D to a \
point in 2D.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomCellNetwork", "::", "num"}], "=", 
     "\"\<Number of points should be a positive integer.\>\""}], 
    ";"}]}]}]], "Code",
 CellLabel->
  "In[6739]:=",ExpressionUUID->"1ff66576-f1b4-46d1-9239-013556c9f5eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["randomTriangulatedNetwork[]", "Subsection",ExpressionUUID->"e5fb46ed-8d91-476b-90c1-a5a692e9c7b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "a", " ", "periodic", " ", "Voronoi", " ", "mesh", " ", "by",
     " ", "tiling", " ", "the", " ", "vertices", " ", "and", " ", 
    "extracting", " ", "only", " ", "the", " ", "cells", " ", "associated", 
    " ", "with", " ", "the", " ", "original", " ", 
    RowBox[{"vertices", "."}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "randomTriangulatedNetwork", "]"}], ":=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"\"\<faces\>\"", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"\"\<map\>\"", "\[Rule]", "Identity"}]}], " ", "}"}], ",", 
       " ", 
       RowBox[{"Options", "[", "framework", "]"}]}], " ", "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"randomTriangulatedNetwork", "[", 
     RowBox[{
      RowBox[{"numPoints_Integer", "?", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"#", ">", "0"}], " ", "&"}], " ", ")"}]}], ",", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "selectedPrimitives", ",", " ", "positions", ",", 
        " ", "mappedPositions"}], "}"}], ",", "\n", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"randomPoints", "=", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "/", "2"}], ",", 
              RowBox[{"1", "/", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"numPoints", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\n", "\n", "\t", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"expandedMesh", "=", 
            RowBox[{"MeshPrimitives", "[", 
             RowBox[{
              RowBox[{"DelaunayMesh", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"randomPoints", "+", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", ",", "j"}], "}"}], ",", "numPoints"}], 
                    "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
                 "2"}], "]"}], "]"}], ",", "2"}], "]"}]}], "}"}], ",", "\n", 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{"selectedPrimitives", " ", "=", " ", 
            RowBox[{"Select", "[", 
             RowBox[{"expandedMesh", ",", 
              RowBox[{
               RowBox[{"Or", "@@", 
                RowBox[{"RegionMember", "[", 
                 RowBox[{"#", ",", " ", "randomPoints"}], "]"}]}], "&"}]}], 
             "]"}]}], ";", "\n", "\t\t", 
           RowBox[{"positions", " ", "=", " ", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"selectedPrimitives", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
             "]"}]}], ";", "\n", "\t\t", 
           RowBox[{"mappedPositions", " ", "=", " ", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<map\>\"", "]"}], " ", "/@", " ",
              "positions"}]}], ";", "\n", "\n", "\t\t", 
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"mesh", " ", "=", " ", 
                RowBox[{"MeshRegion", "[", 
                 RowBox[{"positions", ",", " ", 
                  RowBox[{"Polygon", " ", "/@", " ", 
                   RowBox[{"Flatten", " ", "/@", " ", 
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{"selectedPrimitives", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "/.", " ", 
                    RowBox[{"PositionIndex", "[", "positions", "]"}]}], " ", 
                    ")"}]}]}]}], "]"}]}], "}"}], ",", "\t", "\n", "\n", 
              "\t\t\t", 
              RowBox[{"If", "[", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"BooleanQ", "[", 
                  RowBox[{"OptionValue", "[", "\"\<faces\>\"", "]"}], "]"}], 
                 " ", "&&", " ", 
                 RowBox[{
                  RowBox[{"OptionValue", "[", "\"\<faces\>\"", "]"}], " ", 
                  "\[Equal]", " ", "True"}]}], ",", "\n", "\t\t\t\t", 
                RowBox[{"framework", "[", " ", 
                 RowBox[{"mappedPositions", ",", " ", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{"mesh", ",", "2"}], "]"}], " ", "/.", " ", 
                   RowBox[{"Polygon", "\[Rule]", "face"}]}], ",", " ", 
                  RowBox[{"FilterRules", "[", 
                   RowBox[{
                    RowBox[{"{", "opt", "}"}], ",", " ", 
                    RowBox[{"Options", "[", "framework", "]"}]}], " ", 
                   "]"}]}], " ", "]"}], ",", "\n", "\t\t\t\t", 
                RowBox[{"framework", "[", " ", 
                 RowBox[{"mappedPositions", ",", " ", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{"mesh", ",", "1"}], "]"}], " ", "/.", " ", 
                   RowBox[{"Line", "\[Rule]", "spring"}]}], ",", " ", 
                  RowBox[{"FilterRules", "[", 
                   RowBox[{
                    RowBox[{"{", "opt", "}"}], ",", " ", 
                    RowBox[{"Options", "[", "framework", "]"}]}], " ", 
                   "]"}]}], " ", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\n",
              "\t\t", "]"}], " ", "/;", " ", 
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"MatrixQ", "[", 
                RowBox[{"mappedPositions", ",", "NumericQ"}], "]"}], " ", "&&",
                " ", 
               RowBox[{
                RowBox[{"Last", "[", 
                 RowBox[{"Dimensions", "[", "mappedPositions", "]"}], "]"}], 
                "\[Equal]", "2"}]}], ",", "\n", "\t\t\t", "True", ",", "\n", 
              "\t\t\t", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{"randomCellNetwork", "::", "map"}], "]"}], ";", " ", 
               "False"}]}], "\n", "\t\t", "]"}]}]}]}], "\n", "\t", "]"}]}], 
       "]"}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"randomTriangulatedNetwork", "[", 
     RowBox[{"numPoints_", ",", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
     RowBox[{"Message", "[", 
      RowBox[{"randomTriangulatedNetwork", "::", "num"}], "]"}]}]}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomTriangulatedNetwork", "::", "map"}], "=", 
     "\"\<Option \\\"map\\\" is not a function taking a point in 2D to a \
point in 2D.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomTriangulatedNetwork", "::", "num"}], "=", 
     "\"\<Number of points should be a positive integer.\>\""}], 
    ";"}]}]}]], "Code",
 CellLabel->
  "In[6744]:=",ExpressionUUID->"c1058285-daa4-49c3-b6e6-cf523195583e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Henneberg", "Subsection",ExpressionUUID->"1d6849e4-8a93-416b-9629-816a8d713505"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Henneberg", "[", "1", "]"}], "[", 
     RowBox[{
      RowBox[{"n_", "?", "VectorQ"}], ",", " ", 
      RowBox[{"label_", " ", "\[Rule]", " ", 
       RowBox[{"pos_", "?", "VectorQ"}]}]}], "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"addCells", "[", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Point", "[", 
        RowBox[{"label", " ", "\[Rule]", " ", 
         RowBox[{"PadRight", "[", 
          RowBox[{"pos", ",", " ", 
           RowBox[{"embeddingDimension", "[", "m", "]"}]}], "]"}]}], " ", 
        "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"rigidBar", "[", 
          RowBox[{"{", 
           RowBox[{"#", ",", "label"}], "}"}], "]"}], "&"}], " ", "/@", " ", 
        "n"}]}], " ", "}"}], " ", "]"}], "[", "m", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Henneberg", "[", "1", "]"}], "[", 
     RowBox[{"pos_", "?", "VectorQ"}], "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"vertices", " ", "=", " ", 
       RowBox[{"RandomSample", "[", " ", 
        RowBox[{
         RowBox[{"Range", "[", " ", 
          RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], " ", "]"}], ",", 
         " ", "2"}], " ", "]"}]}], " ", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Henneberg", "[", "1", "]"}], "[", 
       RowBox[{"vertices", ",", " ", 
        RowBox[{
         RowBox[{"Unique", "[", "]"}], " ", "\[Rule]", " ", "pos"}]}], " ", 
       "]"}], "[", "m", "]"}]}], "\n", "\t", "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Henneberg", "[", "2", "]"}], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n1_", ",", " ", "n2_", ",", "n3_"}], "}"}], ",", " ", 
      RowBox[{"label_", " ", "\[Rule]", " ", "pos_"}]}], "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"addCells", "[", 
     RowBox[{"{", 
      RowBox[{"rigidBar", "[", 
       RowBox[{"{", 
        RowBox[{"label", ",", " ", "n3"}], "}"}], "]"}], "}"}], "]"}], " ", 
    "@", " ", 
    RowBox[{
     RowBox[{"splitEdge", "[", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n1", ",", "n2"}], "}"}], ",", " ", 
       RowBox[{"label", " ", "\[Rule]", " ", "pos"}]}], " ", "]"}], "[", " ", 
     "m", " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Henneberg", "[", "2", "]"}], "[", 
     RowBox[{"pos_", "?", "VectorQ"}], "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"edge", " ", "=", " ", 
       RowBox[{"RandomChoice", "[", " ", 
        RowBox[{"m", "[", "\"\<edges\>\"", "]"}], " ", "]"}]}], " ", "}"}], 
     ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Henneberg", "[", "2", "]"}], "[", 
       RowBox[{
        RowBox[{"Flatten", "[", " ", 
         RowBox[{"{", " ", 
          RowBox[{"edge", ",", " ", 
           RowBox[{"RandomChoice", "[", " ", 
            RowBox[{"Complement", "[", " ", 
             RowBox[{
              RowBox[{"Range", "[", " ", 
               RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], " ", "]"}], 
              ",", " ", "edge"}], "]"}], " ", "]"}]}], " ", "}"}], " ", "]"}],
         ",", " ", 
        RowBox[{
         RowBox[{"Unique", "[", "]"}], " ", "\[Rule]", " ", "pos"}]}], " ", 
       "]"}], "[", "m", "]"}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Henneberg", "[", 
    RowBox[{"d", ":", 
     RowBox[{"1", "|", "2"}]}], "]"}], "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "x__"}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Henneberg", "[", "d", "]"}], "[", "x", "]"}], "[", "m", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6749]:=",ExpressionUUID->"83cf1a8f-e72b-4988-9fbc-31a4ee901dc2"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["extracting rigidity data", "Section",ExpressionUUID->"a179735a-0e92-4be5-8c11-2f14787a7022"],

Cell[CellGroupData[{

Cell["cellData[]", "Subsection",ExpressionUUID->"9f7f7300-e093-4608-bdc0-515eb88529f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellData", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"pos", " ", ":", " ", 
     RowBox[{
      RowBox[{"_", "?", "MatrixQ"}], "|", "Automatic"}], " ", ":", " ", 
     "Automatic"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"head_Symbol", ",", " ", "dataType_"}], "}"}]}], " ", "]"}], " ",
   ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"positions", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pos", " ", "===", " ", "Automatic"}], ",", " ", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "pos"}], " ",
         "]"}]}], ",", " ", 
      RowBox[{"components", " ", "=", " ", 
       RowBox[{"mechanismComponents", "[", 
        RowBox[{"m", ",", " ", 
         RowBox[{"head", "[", "_", "]"}]}], "]"}]}]}], "\n", "}"}], ",", "\n",
     "\t", 
    RowBox[{
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "components", "]"}], " ", ">", " ", "0"}], ",",
        "\n", "\t\t", 
       RowBox[{"cellDataInternal", "[", 
        RowBox[{"m", ",", "positions", ",", "dataType", ",", 
         RowBox[{"First", " ", "@", " ", "components"}]}], "]"}], ",", "\n", 
       "\t\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}], "\n", "\t", "]"}], " ", "/;", " ", 
     RowBox[{"cellDataArgumentsQ", "[", 
      RowBox[{"m", ",", "positions"}], "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellData", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"pos", " ", ":", " ", 
      RowBox[{
       RowBox[{"_", "?", "MatrixQ"}], "|", "Automatic"}], " ", ":", " ", 
      "Automatic"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"pattern_", ",", " ", "dataType_"}], "}"}]}], " ", "]"}], " ", ":=",
    "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"positions", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pos", " ", "===", " ", "Automatic"}], ",", " ", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "pos"}], " ",
         "]"}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"cellDataInternal", "[", 
         RowBox[{"m", ",", "positions", ",", "dataType", ",", "#"}], "]"}], 
        "&"}], " ", "/@", " ", 
       RowBox[{"mechanismComponents", "[", 
        RowBox[{"m", ",", " ", "pattern"}], "]"}]}], " ", "/;", " ", 
      RowBox[{"cellDataArgumentsQ", "[", 
       RowBox[{"m", ",", "positions"}], "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellData", "::", "pos"}], " ", "=", " ", 
   "\"\<Positions do not have same dimensions as mechanism positions.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"cellDataArgumentsQ", "[", " ", 
   RowBox[{"m_", ",", " ", "positions_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"True", " ", "/;", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "positions", "]"}], " ", "==", " ", 
    RowBox[{"Dimensions", "[", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellDataArgumentsQ", "[", " ", 
    RowBox[{"m_", ",", " ", "positions_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"cellData", "::", "pos"}], "]"}], ";", " ", "False"}], ")"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellDataInternal", "[", " ", 
    RowBox[{"m_", ",", " ", "positions_", ",", " ", "All", " ", ",", " ", 
     RowBox[{"head_", "[", 
      RowBox[{"indices_", ",", " ", "data_"}], "]"}]}], " ", "]"}], " ", ":=",
    "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"results", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"#", " ", "\[Rule]", " ", 
          RowBox[{"Normal", "[", 
           RowBox[{"cellDataAutomatic", "[", 
            RowBox[{"m", ",", "positions", ",", "#", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"head", "[", "indices", "]"}], ",", "data"}], "}"}]}], 
            "]"}], "]"}]}], "&"}], " ", "/@", " ", 
        RowBox[{"mechanisms`Private`dataForm", "[", "head", "]"}]}]}], "\n", 
      "}"}], ",", "\n", "\t", 
     RowBox[{"Association", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"\"\<indices\>\"", " ", "\[Rule]", " ", "indices"}], ",", "\n",
        "\t\t", 
       RowBox[{"Association", " ", "@@", " ", "results"}]}], "\n", "\t", 
      "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"cellDataInternal", "[", " ", 
   RowBox[{"m_", ",", " ", "positions_", ",", " ", "dataType_", ",", " ", 
    RowBox[{"head_", "[", 
     RowBox[{"indices_", ",", " ", "data_"}], "]"}]}], " ", "]"}], " ", ":=", 
  "\n", "\t", 
  RowBox[{"{", 
   RowBox[{"indices", ",", " ", 
    RowBox[{"cellDataAutomatic", "[", 
     RowBox[{"m", ",", "positions", ",", "dataType", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"head", "[", "indices", "]"}], ",", "data"}], "}"}]}], " ", 
     "]"}]}], "}"}]}]}], "Code",
 CellLabel->
  "In[6754]:=",ExpressionUUID->"5878e7b9-caab-42ce-baf5-731a64551fce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cellDataAutomatic", "[", " ", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "\"\<length\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rigidBar", "[", "indices_", "]"}], ",", " ", "data_"}], 
      "}"}]}], " ", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", " ", "\n", 
      RowBox[{
       RowBox[{"automaticCells", " ", "=", " ", 
        RowBox[{"Position", "[", " ", 
         RowBox[{
          RowBox[{"Normal", "@", " ", 
           RowBox[{"data", "[", "\"\<length\>\"", "]"}]}], ",", " ", 
          "\"\<Automatic\>\""}], " ", "]"}]}], ",", " ", "newlengths"}], "\n",
       "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"newlengths", " ", "=", " ", 
       RowBox[{"displacementLength", "[", 
        RowBox[{"m", ",", " ", "positions", ",", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"indices", ",", "automaticCells"}], "]"}]}], " ", "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"ReplacePart", "[", " ", 
       RowBox[{
        RowBox[{"data", "[", "\"\<length\>\"", "]"}], ",", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "automaticCells", "]"}], " ", "\[Rule]", 
          " ", "newlengths"}], "]"}]}], " ", "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellDataAutomatic", "[", " ", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "\"\<length\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"spring", "[", "indices_", "]"}], ",", "data_"}], "}"}]}], 
    "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", " ", "\n", 
      RowBox[{
       RowBox[{"automaticCells", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Normal", "@", 
           RowBox[{"data", "[", "\"\<length\>\"", "]"}]}], ",", " ", 
          "\"\<Automatic\>\""}], " ", "]"}]}], ",", " ", "newlengths"}], "\n",
       "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"newlengths", " ", "=", " ", 
       RowBox[{"displacementLength", "[", 
        RowBox[{"m", ",", " ", "positions", ",", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"indices", ",", "automaticCells"}], "]"}]}], " ", "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"ReplacePart", "[", " ", 
       RowBox[{
        RowBox[{"data", "[", "\"\<length\>\"", "]"}], ",", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "automaticCells", "]"}], " ", "\[Rule]", 
          " ", "newlengths"}], "]"}]}], " ", "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellDataAutomatic", "[", " ", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "\"\<strain\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"spring", "[", "indices_", "]"}], ",", "data_"}], "}"}]}], 
    "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", " ", "\n", 
      RowBox[{
       RowBox[{"automaticCells", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Normal", "@", 
           RowBox[{"data", "[", "\"\<strain\>\"", "]"}]}], ",", " ", 
          "\"\<linear\>\""}], " ", "]"}]}], ",", " ", "newlengths", ",", " ", 
       "vertices"}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{"ReplacePart", "[", " ", 
      RowBox[{
       RowBox[{"data", "[", "\"\<strain\>\"", "]"}], ",", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "automaticCells", "]"}], " ", "\[Rule]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#1", "-", "#2"}], ")"}], "/", "#2"}], "&"}], ")"}]}], 
        "]"}]}], " ", "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellDataAutomatic", "[", " ", 
    RowBox[{"m_", ",", " ", "positions_", ",", " ", "\"\<angle\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fold", "[", "indices_", "]"}], ",", "data_"}], "}"}]}], "]"}],
    " ", ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", " ", "\n", 
      RowBox[{
       RowBox[{"automaticCells", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Normal", "@", 
           RowBox[{"data", "[", "\"\<angle\>\"", "]"}]}], ",", " ", 
          "\"\<Automatic\>\""}], " ", "]"}]}], ",", " ", "newlengths"}], "\n",
       "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"newlengths", " ", "=", " ", 
       RowBox[{"foldAngle", "[", 
        RowBox[{"m", ",", " ", "positions", ",", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"indices", ",", "automaticCells"}], "]"}]}], " ", "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"ReplacePart", "[", " ", 
       RowBox[{
        RowBox[{"data", "[", "\"\<angle\>\"", "]"}], ",", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "automaticCells", "]"}], " ", "\[Rule]", 
          " ", "newlengths"}], "]"}]}], " ", "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellDataAutomatic", "[", " ", 
    RowBox[{"m_", ",", " ", "positions_", ",", " ", "\"\<angle\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"angleJoint", "[", "indices_", "]"}], ",", "data_"}], "}"}]}], 
    "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", " ", "\n", 
      RowBox[{
       RowBox[{"automaticCells", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Normal", "@", 
           RowBox[{"data", "[", "\"\<angle\>\"", "]"}]}], ",", " ", 
          "\"\<Automatic\>\""}], " ", "]"}]}], ",", " ", "newlengths"}], "\n",
       "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"newlengths", " ", "=", " ", 
       RowBox[{"turningAngle", "[", 
        RowBox[{"m", ",", " ", "positions", ",", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"indices", ",", "automaticCells"}], "]"}]}], " ", "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"ReplacePart", "[", " ", 
       RowBox[{
        RowBox[{"data", "[", "\"\<angle\>\"", "]"}], ",", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "automaticCells", "]"}], " ", "\[Rule]", 
          " ", "newlengths"}], "]"}]}], " ", "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"cellDataAutomatic", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "\"\<constraint\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"joint", "[", "indices_", "]"}], ",", "data_"}], "}"}]}], "]"}],
   " ", ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", " ", "\n", 
     RowBox[{
      RowBox[{"automaticCells", " ", "=", " ", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Normal", "@", 
          RowBox[{"data", "[", "\"\<constraint\>\"", "]"}]}], ",", " ", 
         "\"\<Automatic\>\""}], " ", "]"}]}], ",", " ", "newlengths", ",", 
      " ", "vertices"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"newlengths", " ", "=", " ", 
      RowBox[{"vertexPinningFunction", "/@", " ", 
       RowBox[{"positions", "[", 
        RowBox[{"[", " ", 
         RowBox[{"Extract", "[", " ", 
          RowBox[{"indices", ",", " ", "automaticCells"}], "]"}], " ", "]"}], 
        "]"}]}]}], ";", "\n", "\n", "\t", 
     RowBox[{"ReplacePart", "[", " ", 
      RowBox[{
       RowBox[{"data", "[", "\"\<constraint\>\"", "]"}], ",", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "automaticCells", "]"}], " ", "\[Rule]", " ",
          "newlengths"}], "]"}]}], " ", "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vertexPinningFunction", "[", "pos_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "-", "pos"}], ")"}], "&"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"cellDataAutomatic", "[", " ", 
   RowBox[{"m_", ",", " ", "positions_", ",", " ", "dataType_", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"head_", "[", "indices_", "]"}], ",", " ", "data_"}], "}"}]}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{"data", "[", "dataType", "]"}]}]}], "Code",
 CellLabel->
  "In[6761]:=",ExpressionUUID->"3255d63f-811d-4016-b5d6-658930f74cf7"]
}, Closed]],

Cell[CellGroupData[{

Cell["constraintEquations[]", "Subsection",ExpressionUUID->"b7156b33-cb6c-4b74-aacf-f98656168e47"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", " ", "constraintEquations", " ", "]"}], " ", "=", 
    " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", "None"}], ",", "\n",
       "\t", 
      RowBox[{"\"\<output\>\"", " ", "\[Rule]", " ", "vertexDisplacement"}], 
      ",", "\n", "\t", 
      RowBox[{"\"\<pattern\>\"", " ", "\[Rule]", " ", "_"}]}], "\n", "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"orderQ", "[", " ", 
   RowBox[{"_Integer", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], ")"}]}], " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"orderQ", "[", " ", "Infinity", " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"orderQ", "[", " ", "x_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"constraintEquations", "::", "order"}], "]"}], ";", " ", 
     "False"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"constraintEquations", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{
      RowBox[{"_", "?", "MatrixQ"}], "|", "Automatic"}]}], ",", " ", 
    RowBox[{"order_", "?", "orderQ"}], " ", ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"actualPositions", " ", "=", " ", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"positions", " ", "===", " ", "Automatic"}], ",", " ", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
         "positions"}], " ", "]"}]}], ",", "\n", "\t", 
      RowBox[{"output", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<output\>\"", "]"}]}]}], "\n", "}"}], 
    ",", "\n", "\t", 
    RowBox[{
     RowBox[{"constraintEquationsInternal", "[", 
      RowBox[{"m", ",", " ", "actualPositions", ",", " ", "order", ",", " ", 
       RowBox[{"OptionValue", "[", "\"\<pattern\>\"", "]"}], ",", " ", 
       RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}], ",", " ", 
       "output"}], " ", "]"}], " ", "/;", " ", 
     RowBox[{"Which", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Not", " ", "@", " ", 
        RowBox[{"vertexCoordinatesQ", "[", " ", 
         RowBox[{"m", ",", " ", "positions"}], " ", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"constraintEquations", "::", "pos"}], "]"}], ";", " ", 
        "False"}], ",", "\n", "\t\t", 
       RowBox[{"Not", " ", "@", " ", 
        RowBox[{"Or", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"IntegerQ", "[", "order", "]"}], " ", "&&", " ", 
           RowBox[{"order", " ", ">", " ", "0"}]}], ",", " ", 
          RowBox[{"order", " ", "===", " ", "Infinity"}]}], " ", "]"}]}], ",",
        " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"constraintEquations", "::", "order"}], "]"}], ";", " ", 
        "False"}], ",", "\n", "\t\t", 
       RowBox[{"Not", " ", "@", " ", 
        RowBox[{"MatchQ", "[", 
         RowBox[{"output", ",", " ", 
          RowBox[{"vertexDisplacement", "|", "vertexPosition"}]}], "]"}]}], 
       ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"constraintEquations", "::", "output"}], "]"}], ";", " ", 
        "False"}], ",", "\n", "\t\t", "True", ",", " ", "True"}], "\n", "\t", 
      "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintEquations", "[", " ", 
    RowBox[{"m_", ",", " ", 
     RowBox[{"order_", "?", "orderQ"}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"constraintEquations", "[", " ", 
    RowBox[{"m", ",", " ", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "order", ",", 
     " ", "opt"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintEquations", "::", "pos"}], "=", 
   "\"\<Positions do not correspond to mechanism vertices.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintEquations", "::", "output"}], "=", 
   "\"\<Option \\\"output\\\" must be either vertexDisplacement or \
vertexPosition.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintEquations", "::", "order"}], "=", 
   "\"\<Order of expansion must be a positive integer or Infinity.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[6769]:=",ExpressionUUID->"b0b15184-d1a1-457a-8b95-c43845ad02d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"constraintEquationsInternal", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "order_", ",", " ", "pattern_", 
    ",", " ", "constraints_", ",", " ", 
    RowBox[{"output", " ", ":", " ", 
     RowBox[{"vertexDisplacement", " ", "|", " ", "vertexPosition"}]}]}], " ",
    "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tmp", ",", " ", "tmpPositions"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"tmpPositions", " ", "=", " ", 
      RowBox[{"positions", " ", "/.", " ", 
       RowBox[{"vertexPosition", " ", "\[Rule]", " ", "tmp"}]}]}], ";", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"ReplaceAll", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"reduceConstraintToOrder", "[", "\n", "\t\t\t", 
         RowBox[{"positions", ",", "\n", "\t\t\t", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"componentToConstraints", "[", 
                 RowBox[{"m", " ", ",", " ", "tmpPositions", ",", " ", 
                  RowBox[{"vertexPosition", "[", "m", "]"}], ",", " ", "#"}], 
                 " ", "]"}], "&"}], " ", "/@", " ", 
               RowBox[{"constrainedComponents", "[", 
                RowBox[{"m", " ", ",", " ", "pattern"}], " ", "]"}]}], ")"}], 
             ",", "\n", "\t\t\t\t", 
             RowBox[{"constraintVector", "[", " ", 
              RowBox[{"tmpPositions", ",", " ", "constraints"}], " ", "]"}]}],
             "\n", "\t\t\t", "}"}], "]"}], ",", "\n", "\t\t\t", "order"}], 
         "\n", "\t\t", "]"}], ",", "\n", "\n", "\t\t", 
        RowBox[{"Which", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"order", " ", "===", " ", "Infinity"}], " ", "&&", " ", 
           RowBox[{"output", " ", "===", " ", "vertexDisplacement"}]}], ",", 
          " ", 
          RowBox[{"Dispatch", "[", 
           RowBox[{"positionRules", "[", " ", 
            RowBox[{"positions", " ", "+", " ", 
             RowBox[{"vertexDisplacement", "[", "m", "]"}]}], " ", "]"}], 
           "]"}], ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"IntegerQ", "[", "order", "]"}], " ", "&&", " ", 
           RowBox[{"output", " ", "===", " ", "vertexPosition"}]}], ",", " ", 
          
          RowBox[{"Dispatch", "[", 
           RowBox[{"displacementRules", "[", " ", 
            RowBox[{
             RowBox[{"vertexPosition", "[", "m", "]"}], " ", "-", " ", 
             "positions"}], " ", "]"}], "]"}], ",", "\n", "\t\t\t", "True", 
          ",", " ", 
          RowBox[{"{", "}"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}], " ",
       "/.", " ", 
      RowBox[{"tmp", " ", "\[Rule]", " ", "vertexPosition"}]}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[6778]:=",ExpressionUUID->"1541376a-e966-4f59-8e04-b3265424a372"],

Cell[CellGroupData[{

Cell["componentToConstraints[]", "Subsubsection",ExpressionUUID->"8eb12589-13d0-4db1-8d82-5a7f3627cf24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"componentToConstraints", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
    "bar_rigidBar"}], " ", "]"}], ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"constrainedBars", " ", "=", " ", 
      RowBox[{"cellDataInternal", "[", "  ", 
       RowBox[{
       "m", ",", " ", "positions", ",", " ", "\"\<length\>\"", ",", " ", 
        "bar"}], " ", "]"}]}], " ", "}"}], ",", "\n", "\t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"displacementLengthSquared", "[", " ", 
       RowBox[{"arbitraryPositions", ",", " ", 
        RowBox[{"constrainedBars", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"constrainedBars", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], ")"}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[6779]:=",ExpressionUUID->"d23ba088-27d1-4486-af97-c5061397f6ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"componentToConstraints", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
    "bar_spring"}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"constrainedBars", " ", "=", " ", 
       RowBox[{"cellDataInternal", "[", " ", 
        RowBox[{
        "m", ",", " ", "positions", ",", " ", "\"\<length\>\"", ",", " ", 
         "bar"}], "]"}]}], ",", " ", 
      RowBox[{"strain", " ", "=", " ", 
       RowBox[{"cellDataInternal", "[", " ", 
        RowBox[{
        "m", ",", " ", "positions", ",", " ", "\"\<strain\>\"", ",", " ", 
         "bar"}], " ", "]"}]}]}], " ", "}"}], ",", "\n", "\t", 
    RowBox[{"MapThread", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "[", 
        RowBox[{"#2", ",", " ", "#3"}], "]"}], "&"}], ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"strain", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"displacementLength", "[", " ", 
         RowBox[{"arbitraryPositions", ",", " ", 
          RowBox[{"constrainedBars", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], ",", " ", 
        RowBox[{"constrainedBars", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], " ", "}"}]}], " ", "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[6780]:=",ExpressionUUID->"782ed89f-bdb4-4a7a-8b66-41dc46d0a1a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"componentToConstraints", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
    "bar_fold"}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"constrainedBars", " ", "=", " ", 
      RowBox[{"cellDataInternal", "[", " ", 
       RowBox[{
       "m", ",", " ", "positions", ",", " ", "\"\<angle\>\"", ",", " ", 
        "bar"}], "]"}]}], " ", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"foldAngle", "[", " ", 
      RowBox[{"m", ",", " ", "arbitraryPositions", ",", " ", 
       RowBox[{"constrainedBars", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], " ", "-", " ", 
     RowBox[{"constrainedBars", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6781]:=",ExpressionUUID->"cca4c994-4bdb-4262-8a73-59346334dcf8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"componentToConstraints", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
    "vertices_joint"}], " ", "]"}], ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"constrainedVertices", " ", "=", " ", 
      RowBox[{"cellDataInternal", "[", "  ", 
       RowBox[{
       "m", ",", " ", "positions", ",", " ", "\"\<constraint\>\"", ",", " ", 
        "vertices"}], " ", "]"}]}], " ", "}"}], ",", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"constrainedVertices", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "\[Equal]", " ", "0"}], 
      ",", "\n", "\t\t", 
      RowBox[{"{", "}"}], ",", " ", "\n", "\t\t", 
      RowBox[{"MapThread", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "[", 
          RowBox[{"#2", ",", "#3"}], "]"}], "&"}], ",", "\n", "\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"constrainedVertices", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", ",", " ", "\n", "\t\t\t", 
          RowBox[{"vertexPosition", "[", " ", 
           RowBox[{
            RowBox[{"constrainedVertices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"All", "[", " ", 
             RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], " ", 
             "]"}]}], " ", "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"positions", "[", 
           RowBox[{"[", " ", 
            RowBox[{"constrainedVertices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], "]"}]}], "\n", 
         "\t\t\t", "}"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[6782]:=",ExpressionUUID->"45528231-7bba-4542-a290-17553f1ce429"],

Cell[BoxData[
 RowBox[{
  RowBox[{"componentToConstraints", "[", " ", "___", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"{", "}"}]}]], "Code",
 CellLabel->
  "In[6783]:=",ExpressionUUID->"49ff6c33-b326-4e81-9f7f-58b38ecac55a"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanismEnergy[]", "Subsection",ExpressionUUID->"534dfc5d-c63b-4c6e-ba63-758d27e8d0e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$defaultStiffness", "[", "\"\<Methods\>\"", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
   "rigidBar", ",", " ", "spring", ",", " ", "fold", ",", " ", "joint", ",", 
    " ", "angleJoint", ",", " ", "\"\<constraints\>\""}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "rigidBar", "]"}], "=", "1"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "spring", "]"}], "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "fold", "]"}], "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "4"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "joint", "]"}], "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "4"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "angleJoint", "]"}], "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "4"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$defaultStiffness", "[", "\"\<constraints\>\"", "]"}], "=", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "::", "err"}], "=", 
   "\"\<`1` does not have a default stiffness.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "s_", "]"}], ":=", 
   RowBox[{"\"\<nothing\>\"", "/;", " ", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"$defaultStiffness", "::", "err"}], ",", "s"}], "]"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "mechanismEnergy", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<constraints\>\"", "->", "None"}], ",", " ", 
      RowBox[{"\"\<pattern\>\"", " ", "\[Rule]", " ", "_"}]}], "}"}]}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismEnergy", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", " ", ":", " ", "Automatic"}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"actualPositions", " ", "=", " ", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"positions", " ", "===", " ", "Automatic"}], ",", " ", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
         "positions"}], "]"}]}], " ", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"mechanismEnergyInternal", "[", 
       RowBox[{"m", ",", " ", "actualPositions", ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<pattern\>\"", "]"}]}], " ", "]"}], 
      " ", "/;", " ", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", " ", "actualPositions"}], "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismEnergy", "::", "pos"}], "=", 
   "\"\<Positions do not correspond to mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "_", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
    RowBox[{"Message", "[", 
     RowBox[{"mechanismEnergy", "::", "pos"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"mechanismEnergyInternal", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "constraints_", ",", " ", 
    "pattern_"}], " ", "]"}], " ", ":=", " ", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"components", " ", "=", " ", 
       RowBox[{"mechanismComponents", "[", 
        RowBox[{"m", ",", " ", "pattern"}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"nonlinearConstraints", " ", "=", " ", 
       RowBox[{"nonlinearConstraintVector", "[", 
        RowBox[{"positions", ",", " ", "constraints"}], "]"}]}], ",", "\n", 
      "\t", 
      RowBox[{"arbitraryPositions", " ", "=", " ", 
       RowBox[{"vertexPosition", "[", "m", "]"}]}]}], "\n", "}"}], ",", "\n", 
    "\t", 
    RowBox[{"Total", " ", "@", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"componentEnergy", "[", 
           RowBox[{
           "m", ",", " ", "positions", ",", " ", "arbitraryPositions", ",", 
            " ", "#"}], "]"}], "&"}], " ", "/@", " ", "components"}], ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"$defaultStiffness", "[", "\"\<constraints\>\"", "]"}], " ", 
         
         RowBox[{
          RowBox[{
          "nonlinearConstraints", " ", ".", " ", "nonlinearConstraints"}], 
          "/", "2"}]}]}], "\n", "\t", "}"}], "]"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6784]:=",ExpressionUUID->"f995f568-5603-423b-b92c-73f086e5526e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"componentEnergy", "[", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     "bar_rigidBar"}], " ", "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"cellDataInternal", "[", " ", 
        RowBox[{
        "m", ",", " ", "positions", ",", " ", "All", ",", " ", "bar"}], " ", 
        "]"}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "this", " ", "form", " ", "has", " ", "the", " ", "property", " ", 
       "that", " ", "the", " ", "elastic", " ", "energy", " ", "to", " ", 
       "apply", " ", "a", " ", "fixed", " ", "strain", " ", "to", " ", "N", 
       " ", "beams", " ", "in", " ", "series", " ", "is", " ", "the", " ", 
       RowBox[{"same", "."}]}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"data", "[", "\"\<stiffness\>\"", "]"}], " ", "/.", " ", 
        RowBox[{"Infinity", " ", "\[Rule]", " ", 
         RowBox[{"$defaultStiffness", "[", "rigidBar", "]"}]}]}], " ", ")"}], 
      " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"displacementLengthSquared", "[", 
            RowBox[{"arbitraryPositions", ",", " ", 
             RowBox[{"data", "[", "\"\<indices\>\"", "]"}]}], " ", "]"}], "/", 
           RowBox[{
            RowBox[{"data", "[", "\"\<length\>\"", "]"}], "^", "2"}]}], " ", 
          "-", " ", "1"}], " ", ")"}], "^", "2"}], "/", "8"}]}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentEnergy", "[", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     "bar_spring"}], " ", "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"cellDataInternal", "[", " ", 
        RowBox[{
        "m", ",", " ", "positions", ",", " ", "All", ",", " ", "bar"}], " ", 
        "]"}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"data", "[", "\"\<stiffness\>\"", "]"}], " ", "/.", 
        RowBox[{"Infinity", " ", "\[Rule]", " ", 
         RowBox[{"$defaultStiffness", "[", "spring", "]"}]}]}], ")"}], "  ", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#1", "[", 
            RowBox[{"#2", ",", "#3"}], "]"}], "^", "2"}], "/", "2"}], "&"}], 
        ",", " ", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"data", "[", "\"\<strain\>\"", "]"}], ",", " ", 
          RowBox[{"displacementLength", "[", 
           RowBox[{"arbitraryPositions", ",", " ", 
            RowBox[{"data", "[", "\"\<indices\>\"", "]"}]}], "]"}], ",", " ", 
          
          RowBox[{"data", "[", "\"\<length\>\"", "]"}]}], " ", "}"}]}], " ", 
       "\n", "\t", "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentEnergy", "[", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     "bar_fold"}], " ", "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"cellDataInternal", "[", " ", 
        RowBox[{
        "m", ",", " ", "positions", ",", " ", "All", ",", " ", "bar"}], " ", 
        "]"}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"data", "[", "\"\<torsionalStiffness\>\"", "]"}], "  ", "/.", 
        " ", 
        RowBox[{"Infinity", " ", "\[Rule]", " ", 
         RowBox[{"$defaultStiffness", "[", "fold", "]"}]}]}], " ", ")"}], " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"foldAngle", "[", 
           RowBox[{"m", ",", "arbitraryPositions", ",", " ", 
            RowBox[{"data", "[", "\"\<indices\>\"", "]"}]}], "]"}], " ", "-", 
          " ", 
          RowBox[{"data", "[", "\"\<angle\>\"", "]"}]}], ")"}], "^", "2"}], 
       "/", "2"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentEnergy", "[", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     "angles_angleJoint"}], " ", "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"cellDataInternal", "[", " ", 
        RowBox[{
        "m", ",", " ", "positions", ",", " ", "All", ",", " ", "angles"}], 
        " ", "]"}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"data", "[", "\"\<angularStiffness\>\"", "]"}], "  ", "/.", 
        " ", 
        RowBox[{"Infinity", " ", "\[Rule]", " ", 
         RowBox[{"$defaultStiffness", "[", "angleJoint", "]"}]}]}], " ", 
       ")"}], " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"turningAngle", "[", 
           RowBox[{"m", ",", "arbitraryPositions", ",", " ", 
            RowBox[{"data", "[", "\"\<indices\>\"", "]"}]}], "]"}], " ", "-", 
          " ", 
          RowBox[{"data", "[", "\"\<angle\>\"", "]"}]}], ")"}], "^", "2"}], 
       "/", "2"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentEnergy", "[", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     "ind_joint"}], " ", "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"cellDataInternal", "[", " ", 
        RowBox[{
        "m", ",", " ", "positions", ",", " ", "All", ",", " ", "ind"}], " ", 
        "]"}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"data", "[", "\"\<pinningStiffness\>\"", "]"}], "  ", "/.", 
        " ", 
        RowBox[{"Infinity", " ", "\[Rule]", " ", 
         RowBox[{"$defaultStiffness", "[", "joint", "]"}]}]}], " ", ")"}], 
      " ", 
      RowBox[{"(", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", "#2", "]"}], "^", "2"}], "/", "2"}], "&"}], 
         ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"data", "[", "\"\<constraint\>\"", "]"}], " ", ",", " ", 
           RowBox[{"arbitraryPositions", "[", 
            RowBox[{"[", " ", 
             RowBox[{"data", "[", "\"\<indices\>\"", "]"}], " ", "]"}], 
            "]"}]}], " ", "}"}]}], " ", "]"}], " ", ")"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"componentEnergy", "[", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
    "ind_face"}], " ", "]"}], ":=", 
  RowBox[{"{", "0", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"componentEnergy", "[", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
    "ind_Polygon"}], " ", "]"}], ":=", 
  RowBox[{"{", "0", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"componentEnergy", "[", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
    "ind_Line"}], " ", "]"}], ":=", 
  RowBox[{"{", "0", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"componentEnergy", "[", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
    "ind_Point"}], " ", "]"}], ":=", 
  RowBox[{"{", "0", "}"}]}]}], "Code",
 CellLabel->
  "In[6798]:=",ExpressionUUID->"b05402af-776c-4acb-bfe9-c46f1bc36e1e"]
}, Closed]],

Cell[CellGroupData[{

Cell["compiledMechanismEnergy[]", "Subsection",ExpressionUUID->"fdb08a27-d392-4708-8d7c-e22a50d18359"],

Cell[CellGroupData[{

Cell["compiledMechanismEnergy[] data structure", "Subsubsection",ExpressionUUID->"043fba01-a9ed-4a37-9182-6e60ca559505"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compiledMechanismEnergy", "[", 
     RowBox[{
     "variables_List", ",", "energy_CompiledFunction", ",", 
      "gradient_CompiledFunction"}], "]"}], "[", "\"\<variables\>\"", "]"}], ":=",
    "variables"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{"compiledMechanismEnergy", "[", 
    RowBox[{
    "variables_List", ",", "energy_CompiledFunction", ",", 
     "gradient_CompiledFunction"}], "]"}], "]"}], ":=", "\n", 
  RowBox[{"StringJoin", "[", "\n", "\t", 
   RowBox[{"\"\<compiledMechanismEnergy[\>\"", ",", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "variables", "]"}], "<", "10"}], ",", "\n", 
      "\t\t", 
      RowBox[{"ToString", "[", "variables", "]"}], ",", "\n", "\t\t", 
      RowBox[{"\"\<{\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"First", "[", "variables", "]"}], "<>", "\"\<...\>\"", "<>", 
         
         RowBox[{"Last", "[", "variables", "]"}], "<>", "\"\<}\>\""}], 
        "]"}]}]}], "\n", "\t", "]"}], ",", "\n", "\t", "\"\<]\>\""}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6807]:=",ExpressionUUID->"066adf50-6828-4aea-a6bb-c6afb7d98a82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compiledMechanismEnergy", "[", 
     RowBox[{
      RowBox[{"variables_", "?", "VectorQ"}], ",", "energy_CompiledFunction", 
      ",", "gradient_CompiledFunction"}], "]"}], "[", "\"\<data\>\"", "]"}], ":=",
    "variables"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compiledMechanismEnergy", "[", 
     RowBox[{
     "variables_List", ",", "energy_CompiledFunction", ",", 
      "gradient_CompiledFunction"}], "]"}], "[", "\"\<energy\>\"", "]"}], "[", 
   RowBox[{
    RowBox[{"pos_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"VectorQ", "[", 
        RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", "data_"}],
    "]"}], " ", ":=", " ", 
  RowBox[{"energy", "[", 
   RowBox[{"pos", ",", "data"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"compiledMechanismEnergy", "[", 
      RowBox[{
      "variables_List", ",", "energy_CompiledFunction", ",", 
       "gradient_CompiledFunction"}], "]"}], "[", "\"\<gradient\>\"", "]"}], 
    "[", 
    RowBox[{
     RowBox[{"pos_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"VectorQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", 
     "data_"}], "]"}], " ", ":=", " ", 
   RowBox[{"gradient", "[", 
    RowBox[{"pos", ",", "data"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compiledMechanismEnergy", "[", 
    RowBox[{
    "variables_List", ",", "energy_CompiledFunction", ",", 
     "gradient_CompiledFunction"}], "]"}], "[", 
   RowBox[{"v_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"VectorQ", "[", 
       RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], "]"}], " ", ":=",
   " ", 
  RowBox[{"compiledMechanismEnergy", "[", 
   RowBox[{"v", ",", "energy", ",", "gradient"}], "]"}]}]}], "Code",
 CellLabel->
  "In[6809]:=",ExpressionUUID->"ce6d6f2c-48d8-4ec7-ade0-2516669648a1"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
compiledMechanismEnergyQ[], compiledNumericalMechanismEnergyQ[]\
\>", "Subsubsection",ExpressionUUID->"60e19505-c58d-41b9-83e1-93382c6b5f0e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"compiledMechanismEnergyQ", "[", 
   RowBox[{"compiledMechanismEnergy", "[", 
    RowBox[{
    "variables_", ",", "energy_CompiledFunction", ",", 
     "gradient_CompiledFunction"}], "]"}], "]"}], ":=", 
  RowBox[{"VectorQ", "[", "variables", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compiledMechanismEnergyQ", "[", "_", "]"}], ":=", "False"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"compiledNumericalMechanismEnergyQ", "[", 
   RowBox[{"compiledMechanismEnergy", "[", 
    RowBox[{
    "variables_", ",", "energy_CompiledFunction", ",", 
     "gradient_CompiledFunction"}], "]"}], "]"}], ":=", 
  RowBox[{"VectorQ", "[", 
   RowBox[{"variables", ",", "NumericQ"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"compiledNumericalMechanismEnergyQ", "[", "_", "]"}], ":=", 
  "False"}]}], "Code",
 CellLabel->
  "In[6813]:=",ExpressionUUID->"012050bf-af43-467f-8c4c-ab008faf4d1a"]
}, Closed]],

Cell[CellGroupData[{

Cell["compiledMechanismEnergy[]", "Subsubsection",ExpressionUUID->"bc228997-732f-4570-80d8-fa2b9bd50f25"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "compiledMechanismEnergy", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<constraints\>\"", "\[Rule]", "None"}], ",", " ", 
     RowBox[{"\"\<additional\>\"", "\[Rule]", "0"}], ",", " ", 
     RowBox[{"\"\<pattern\>\"", " ", "\[Rule]", " ", "_"}]}], "}"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[6817]:=",ExpressionUUID->"b21c5234-5bbb-457a-92fc-46ee4c5f0e27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"compiledMechanismEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"pos", " ", ":", " ", 
      RowBox[{"Except", "[", "_Rule", "]"}], " ", ":", " ", "Automatic"}], 
     ",", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"actualPositions", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pos", "===", "Automatic"}], ",", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "pos"}], "]"}]}], 
      "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"Module", "[", "\n", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"res", "=", 
          RowBox[{"compiledMechanismEnergyInternal", "[", 
           RowBox[{"m", ",", "actualPositions", ",", 
            RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}], ",", 
            RowBox[{"OptionValue", "[", "\"\<additional\>\"", "]"}], ",", " ", 
            RowBox[{"OptionValue", "[", "\"\<pattern\>\"", "]"}]}], " ", 
           "]"}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"res", "/;", 
         RowBox[{"res", "=!=", "$Failed"}]}]}], "\n", "]"}], "/;", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "actualPositions"}], "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compiledMechanismEnergy", "::", "pos"}], "=", 
   "\"\<Provided positions do not correspond to mechanism.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"compiledMechanismEnergy", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"pos", " ", ":", " ", 
     RowBox[{"Except", "[", 
      RowBox[{"_Rule", "|", "Automatic"}], "]"}]}], ",", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"compiledMechanismEnergy", "::", "pos"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[6818]:=",ExpressionUUID->"7b32ddb1-db56-4cb0-9b8d-da5ec6e9a55b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compiledMechanismEnergyInternal", "[", 
   RowBox[{
   "m_", ",", "positions_", ",", "constraints_", ",", "additional_", ",", " ",
     "pattern_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"symbols", ",", 
      RowBox[{"energy", "=", 
       RowBox[{
        RowBox[{"mechanismEnergy", "[", 
         RowBox[{"m", ",", "positions", ",", 
          RowBox[{"\"\<constraints\>\"", "\[Rule]", "constraints"}], ",", " ", 
          RowBox[{"\"\<pattern\>\"", " ", "\[Rule]", " ", "_"}]}], "]"}], "+",
         "additional"}]}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"symbols", "=", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{"energy", ",", "_Symbol", ",", "Infinity"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"NumericQ", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}]}], 
     ";", "\n", "\n", "\t", 
     RowBox[{"Check", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"compiledMechanismEnergy", "[", "\n", "\t\t\t", 
        RowBox[{"symbols", ",", "\n", "\t\t\t", 
         RowBox[{"compileEnergy", "[", 
          RowBox[{
          "m", ",", "energy", ",", "symbols", ",", "$compilationTarget"}], 
          "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"compileGradient", "[", 
          RowBox[{
          "m", ",", "energy", ",", "symbols", ",", "$compilationTarget"}], 
          "]"}]}], "\n", "\t\t", "]"}], ",", "\n", "\t\t", "$Failed"}], "\n", 
      "\t", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6821]:=",ExpressionUUID->"a5364f25-eff6-4acb-91ec-f48e03bebed9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compileEnergy", "[", 
   RowBox[{"m_", ",", "energy_", ",", "symbols_", ",", "compiler_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{"body", ",", "\n", 
      RowBox[{"variables", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"vertexPosition", "[", "m", "]"}], "]"}]}], ",", "\n", 
      "injector", ",", "c", ",", "\n", "dataInjector", ",", "data"}], "\n", 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"injector", "=", 
      RowBox[{"Dispatch", "@", 
       RowBox[{"Thread", "[", 
        RowBox[{"variables", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Hold", "[", 
             RowBox[{"c", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "@", "variables"}], "]"}]}], ")"}]}], "]"}]}]}],
      ";", "\n", "\t", 
     RowBox[{"dataInjector", "=", 
      RowBox[{"Dispatch", "@", 
       RowBox[{"Thread", "[", 
        RowBox[{"symbols", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Hold", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "@", "symbols"}], "]"}]}], ")"}]}], "]"}]}]}], 
     ";", "\n", "\t", 
     RowBox[{"body", "=", 
      RowBox[{
       RowBox[{"energy", "/.", "injector"}], "/.", "dataInjector"}]}], ";", 
     "\n", "\t", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{
       RowBox[{"Hold", "[", "Compile", "]"}], "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"c", ",", "_Real", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"data", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
        "\n", "\t\t", "body", ",", "\n", "\t\t", 
        RowBox[{"RuntimeOptions", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<EvaluateSymbolically\>\"", "->", "False"}], "}"}]}], 
        ",", "\n", "\t\t", 
        RowBox[{"CompilationTarget", "->", "compiler"}]}], "\n", "\t", "]"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6822]:=",ExpressionUUID->"92ffeed0-c3d9-4161-bdf3-36b3e40fc494"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compileGradient", "[", 
   RowBox[{"m_", ",", "energy_", ",", "symbols_", ",", "compiler_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{"body", ",", "\n", 
      RowBox[{"variables", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"vertexPosition", "[", "m", "]"}], "]"}]}], ",", "\n", 
      "injector", ",", "c", ",", "\n", "dataInjector", ",", "data"}], "\n", 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"injector", "=", 
      RowBox[{"Dispatch", "@", 
       RowBox[{"Thread", "[", 
        RowBox[{"variables", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Hold", "[", 
             RowBox[{"c", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "@", "variables"}], "]"}]}], ")"}]}], "]"}]}]}],
      ";", "\n", "\t", 
     RowBox[{"dataInjector", "=", 
      RowBox[{"Dispatch", "@", 
       RowBox[{"Thread", "[", 
        RowBox[{"symbols", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Hold", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "@", "symbols"}], "]"}]}], ")"}]}], "]"}]}]}], 
     ";", "\n", "\t", 
     RowBox[{"body", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"energy", ",", 
          RowBox[{"{", "variables", "}"}]}], "]"}], "/.", "injector"}], "/.", 
       "dataInjector"}]}], ";", "\n", "\t", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{
       RowBox[{"Hold", "[", "Compile", "]"}], "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"c", ",", "_Real", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"data", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
        "\n", "\t\t", "body", ",", "\n", "\t\t", 
        RowBox[{"RuntimeOptions", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<EvaluateSymbolically\>\"", "->", "False"}], "}"}]}], 
        ",", "\n", "\t\t", 
        RowBox[{"CompilationTarget", "->", "compiler"}]}], "\n", "\t", "]"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6823]:=",ExpressionUUID->"fc66d059-3816-4b04-a69b-80ebdc0fcb74"]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["local rigidity", "Section",ExpressionUUID->"333eb685-a2c4-4c84-bd5e-8615e1631051"],

Cell[CellGroupData[{

Cell["constraintMatrix[]", "Subsection",ExpressionUUID->"7175c9bb-4b34-456a-961e-4df84c76e52c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "constraintMatrix", "]"}], "=", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", "None"}], ",", " ", 
      
      RowBox[{"\"\<pattern\>\"", " ", "\[Rule]", " ", "_"}], ",", " ", 
      RowBox[{"\"\<rules\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", "}"}]}]}], " ", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"constraintMatrix", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"constraintMatrix", "[", " ", 
   RowBox[{"m", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "opt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintMatrix", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "positions_", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"constraintMatrices", ",", " ", "vars"}], " ", "}"}], ",", 
      "\n", "\n", "\t", 
      RowBox[{
       RowBox[{"vars", " ", "=", " ", 
        RowBox[{"Check", "[", " ", 
         RowBox[{
          RowBox[{"reduceVariables", "[", " ", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}], " ", ",", 
            " ", 
            RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}]}], " ", "]"}], 
          ",", " ", "$Failed"}], " ", "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"constraintMatrices", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vars", " ", "===", " ", "$Failed"}], ",", "\n", "\n", 
          "\t\t", 
          RowBox[{"CoefficientArrays", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"constraintEquations", "[", " ", 
             RowBox[{"m", ",", " ", "positions", ",", " ", "1", ",", " ", 
              RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", 
               RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}]}], 
              ",", " ", 
              RowBox[{"\"\<pattern\>\"", "\[Rule]", 
               RowBox[{"OptionValue", "[", "\"\<pattern\>\"", "]"}]}], ",", 
              " ", 
              RowBox[{
              "\"\<output\>\"", " ", "\[Rule]", " ", "vertexDisplacement"}]}],
              " ", "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"Flatten", "[", 
             RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}]}], "\n", 
           "\t\t", "]"}], ",", "\n", "\n", "\t\t", 
          RowBox[{"CoefficientArrays", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"constraintEquations", "[", " ", 
              RowBox[{"m", ",", " ", "positions", ",", " ", "1", ",", " ", 
               RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", 
                RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}]}], 
               ",", " ", 
               RowBox[{"\"\<pattern\>\"", "\[Rule]", 
                RowBox[{"OptionValue", "[", "\"\<pattern\>\"", "]"}]}], ",", 
               " ", 
               RowBox[{
               "\"\<output\>\"", " ", "\[Rule]", " ", 
                "vertexDisplacement"}]}], " ", "]"}], " ", "//.", " ", 
             RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}]}], ",", "\n", 
            "\t\t\t", "vars"}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}], 
       ";", "\n", "\t", "\n", "\t", 
       RowBox[{"Which", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"constraintMatrices", "\[Equal]", 
          RowBox[{"{", 
           RowBox[{"{", "}"}], "}"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", " ", 
            RowBox[{
             RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], " ", 
             RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], "]"}], 
          "}"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{
          RowBox[{"MatrixQ", "[", 
           RowBox[{"positions", ",", " ", "NumericQ"}], "]"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"Chop", "[", " ", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"constraintMatrices", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", ".", " ", 
             RowBox[{"N", "[", 
              RowBox[{"constraintMatrices", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], " ", "]"}], " ", 
           "\[NotEqual]", " ", "0"}]}], ",", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"outputStressError", "[", " ", 
           RowBox[{"N", "[", 
            RowBox[{"constraintMatrices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "]"}], ";", "\n", 
          "\t\t\t", 
          RowBox[{"constraintMatrices", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "\n", "\t\t", "\n", "\t\t", 
         "True", ",", "\n", "\t\t\t", 
         RowBox[{"constraintMatrices", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "\n", "\t", "]"}]}]}], "\n", 
     "]"}], " ", "/;", " ", 
    RowBox[{"vertexCoordinatesQ", "[", 
     RowBox[{"m", ",", " ", "positions"}], " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintMatrix", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"Except", "[", " ", "__Rule", " ", "]"}], ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
    RowBox[{"Message", "[", 
     RowBox[{"constraintMatrix", "::", "vcoord"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"outputStressError", "[", " ", "vec_", " ", "]"}], " ", ":=", " ", 
   
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"stresses", " ", "=", " ", 
       RowBox[{
        RowBox[{"Select", "[", " ", 
         RowBox[{
          RowBox[{"Transpose", "[", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "[", "vec", "]"}], "]"}], ",", " ", "vec"}], 
            "}"}], " ", "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Chop", "[", 
             RowBox[{"Abs", "[", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", "]"}], "]"}], " ", ">", 
            " ", "0"}], " ", "&"}]}], " ", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], " ", "}"}], ",", "\n", 
     "\t", 
     RowBox[{"Message", "[", " ", 
      RowBox[{
       RowBox[{"constraintMatrix", "::", "stressed"}], ",", " ", 
       RowBox[{
        RowBox[{"N", "[", "vec", "]"}], " ", ".", " ", 
        RowBox[{"N", "[", "vec", "]"}]}], ",", " ", "stresses"}], " ", 
      "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"reduceVariables", "[", 
   RowBox[{"vars_", ",", 
    RowBox[{"{", "}"}]}], "]"}], ":=", "vars"}], "\n", 
 RowBox[{
  RowBox[{"reduceVariables", "[", 
   RowBox[{"vars_", ",", 
    RowBox[{"rules", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rule", "[", " ", 
        RowBox[{
         RowBox[{"vertexDisplacement", "[", 
          RowBox[{"_", ",", "_"}], "]"}], ",", " ", "_"}], " ", "]"}], ".."}],
       "}"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"Variables", "[", 
     RowBox[{"vars", " ", "//.", " ", "rules"}], "]"}], ",", 
    "_vertexDisplacement"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"reduceVariables", "[", 
    RowBox[{"vars_", ",", " ", "notRules_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", " ", 
      RowBox[{"constraintMatrix", "::", "rules"}], "]"}], ";", " ", "vars"}], 
    ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintMatrix", "::", "vcoord"}], "=", 
   "\"\<Vertex positions do not match mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintMatrix", "::", "stressed"}], "=", 
   "\"\<Warning: Mechanism is stressed (residual is `1`) at constraints `2`. \
Constraint matrix may not be useful.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintMatrix", "::", "rules"}], "=", 
   "\"\<Replacement rules are not of the form { vertexDisplacement[v1, c1] -> \
.., .. }.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6824]:=",ExpressionUUID->"d218d248-ce20-48a5-af65-68e0c4272cc5"]
}, Closed]],

Cell[CellGroupData[{

Cell["zeroModes[], selfStresses[]", "Subsection",ExpressionUUID->"5ea20f50-81a4-427a-bc68-378f73dcb50b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "zeroModes", "]"}], " ", "=", " ", 
    RowBox[{"Join", "[", " ", 
     RowBox[{
      RowBox[{"Options", "[", "constraintMatrix", "]"}], ",", " ", 
      RowBox[{"Options", "[", "Eigensystem", "]"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"Tolerance", "\[Rule]", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "10"}], ")"}]}]}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"zeroModes", "::", "num"}], "=", 
    "\"\<The constraint matrix is not numerical.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"zeroModes", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"zeroModes", "[", " ", 
   RowBox[{"m", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "opt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"zeroModes", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "positions_", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"mat", "=", 
         RowBox[{"constraintMatrix", "[", 
          RowBox[{"m", ",", " ", "positions", ",", 
           RowBox[{"FilterRules", "[", " ", 
            RowBox[{
             RowBox[{"{", "opt", "}"}], ",", " ", 
             RowBox[{"Options", "[", "constraintMatrix", "]"}]}], " ", 
            "]"}]}], "]"}]}], ",", "\n", "\t", 
        RowBox[{"dim", "=", 
         RowBox[{"embeddingDimension", "[", "m", "]"}]}], ",", "\n", "\t", 
        "evalues"}], "\n", "}"}], ",", 
      RowBox[{
       RowBox[{"(", "\n", "\t", 
        RowBox[{
         RowBox[{"evalues", " ", "=", " ", 
          RowBox[{"Chop", "[", 
           RowBox[{
            RowBox[{"Eigensystem", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Transpose", "[", "mat", "]"}], " ", ".", " ", "mat"}],
               ",", " ", 
              RowBox[{"FilterRules", "[", " ", 
               RowBox[{
                RowBox[{"{", "opt", "}"}], ",", " ", 
                RowBox[{"Options", "[", "Eigenvalues", "]"}]}], " ", "]"}]}], 
             "]"}], ",", " ", 
            RowBox[{"OptionValue", "[", "Tolerance", "]"}]}], "]"}]}], ";", 
         "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Partition", "[", 
            RowBox[{"#", ",", " ", "dim"}], "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"evalues", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{"-", 
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"evalues", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "]"}]}]}], 
           "]"}]}]}], "\n", "\t", ")"}], " ", "/;", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", " ", "@", " ", 
          RowBox[{"MatrixQ", "[", 
           RowBox[{"mat", ",", " ", "NumericQ"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"zeroModes", "::", "num"}], "]"}], ";", " ", "False"}], 
         ",", " ", "True"}], "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"numericCoordinatesQ", "[", 
     RowBox[{"m", ",", " ", "positions"}], " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"zeroModes", "::", "vcoord"}], "=", 
   "\"\<Vertex positions do not match mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zeroModes", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"Except", "[", " ", "__Rule", " ", "]"}], ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"zeroModes", "::", "vcoord"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[6835]:=",ExpressionUUID->"ae1e713b-def1-4284-a80c-7c15c0aec447"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "selfStresses", "]"}], " ", "=", " ", 
    RowBox[{"Join", "[", " ", 
     RowBox[{
      RowBox[{"Options", "[", "constraintMatrix", "]"}], ",", " ", 
      RowBox[{"Options", "[", "Eigensystem", "]"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"Tolerance", "\[Rule]", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "10"}], ")"}]}]}], "}"}]}], " ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"selfStresses", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"selfStresses", "[", " ", 
   RowBox[{"m", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "opt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"selfStresses", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "positions_", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"mat", "=", 
         RowBox[{"constraintMatrix", "[", 
          RowBox[{"m", ",", " ", "positions", ",", 
           RowBox[{"FilterRules", "[", " ", 
            RowBox[{
             RowBox[{"{", "opt", "}"}], ",", " ", 
             RowBox[{"Options", "[", "constraintMatrix", "]"}]}], " ", 
            "]"}]}], "]"}]}], ",", "\n", "\t", "evalues"}], "\n", "}"}], ",", 
      
      RowBox[{
       RowBox[{"(", "\n", "\t", 
        RowBox[{
         RowBox[{"evalues", " ", "=", " ", 
          RowBox[{"Chop", "[", 
           RowBox[{
            RowBox[{"Eigensystem", "[", " ", 
             RowBox[{
              RowBox[{"mat", " ", ".", " ", 
               RowBox[{"Transpose", "[", "mat", "]"}]}], " ", ",", " ", 
              RowBox[{"FilterRules", "[", " ", 
               RowBox[{
                RowBox[{"{", "opt", "}"}], ",", " ", 
                RowBox[{"Options", "[", "Eigenvalues", "]"}]}], " ", "]"}]}], 
             "]"}], ",", " ", 
            RowBox[{"OptionValue", "[", "Tolerance", "]"}]}], "]"}]}], ";", 
         "\n", "\t", 
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"evalues", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
           RowBox[{"-", 
            RowBox[{"Count", "[", 
             RowBox[{
              RowBox[{"evalues", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "]"}]}]}], "]"}]}],
         "\n", "\t", ")"}], " ", "/;", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", " ", "@", " ", 
          RowBox[{"MatrixQ", "[", 
           RowBox[{"mat", ",", " ", "NumericQ"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"selfStresses", "::", "num"}], "]"}], ";", " ", "False"}], 
         ",", " ", "True"}], "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"numericCoordinatesQ", "[", 
     RowBox[{"m", ",", " ", "positions"}], " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"selfStresses", "::", "vcoord"}], "=", 
   "\"\<Vertex positions do not match mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"selfStresses", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"Except", "[", " ", "__Rule", " ", "]"}], ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"selfStresses", "::", "vcoord"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[6841]:=",ExpressionUUID->"84c86739-b364-471a-beae-96cff8470e91"]
}, Closed]],

Cell[CellGroupData[{

Cell["stressMatrix[]", "Subsection",ExpressionUUID->"3fdd0cdc-6a5f-4e8e-92b2-1a97ac4fb176"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"stressMatrix", "[", " ", 
     RowBox[{"m", ",", " ", "vec"}], " ", "]"}], " ", "returns", " ", "a", 
    " ", "stress", " ", "matrix", " ", "associated", " ", "with", " ", "the", 
    " ", "stress", " ", "vector", " ", 
    RowBox[{"vec", ".", " ", "The"}], " ", 
    RowBox[{"(", 
     RowBox[{"i", ",", "j"}], ")"}], " ", "component", " ", "of", " ", "the", 
    " ", "stress", " ", "matrix", " ", "is", " ", "the", " ", "negative", " ",
     "of", " ", "the", " ", "corresponding", "\n", "stress", " ", "vector", 
    " ", "component", " ", 
    RowBox[{"(", 
     RowBox[{"and", " ", "zero", " ", "otherwise"}], ")"}], " ", "and", " ", 
    "diagonal", " ", "components", " ", "are", " ", "chosen", " ", "so", " ", 
    "that", " ", "rows", " ", "sum", " ", "to", " ", 
    RowBox[{"zero", ".", "\n", "\n", "Columns"}], " ", "should", " ", "also", 
    " ", "sum", " ", "to", " ", 
    RowBox[{"zero", ".", "\n", "\n", 
     RowBox[{"(", 
      RowBox[{
      "see", " ", "Connelly", " ", "on", " ", "generic", " ", "global", " ", 
       "rigidity"}], ")"}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"stressMatrix", "[", " ", 
     RowBox[{
      RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "stressVector_"}], " ", 
     "]"}], " ", ":=", "\n", 
    RowBox[{
     RowBox[{"Module", "[", " ", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
        "offDiagonalComponents", ",", " ", "diagonalComponents", ",", " ", 
         RowBox[{"edges", " ", "=", " ", 
          RowBox[{"connectivity", "[", 
           RowBox[{"m", ",", " ", 
            RowBox[{
            "\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<edges\>\""}]}], 
           "]"}]}]}], " ", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"offDiagonalComponents", " ", "=", " ", "\n", "\t", 
         RowBox[{
          RowBox[{"(", "\n", "\t\t", 
           RowBox[{"(*", "symmetrize", "*)"}], "\n", "\t\t", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", " ", "+", " ", 
              RowBox[{"Transpose", "[", "#", "]"}]}], " ", "&"}], " ", ")"}], 
           "\n", "\t", ")"}], " ", "@", " ", 
          RowBox[{"SparseArray", "[", " ", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Thread", "[", " ", 
             RowBox[{
              RowBox[{"m", "[", "\"\<edges\>\"", "]"}], " ", "\[Rule]", " ", 
              RowBox[{"-", "stressVector"}]}], " ", "]"}], ",", "\n", "\t\t", 
            
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], ",", " ", 
              RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], " ", "}"}]}],
            "\n", "\t", "]"}]}]}], ";", "\n", "\t", 
        RowBox[{"diagonalComponents", " ", "=", " ", 
         RowBox[{"SparseArray", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Thread", "[", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", "#"}], "}"}], "&"}], " ", "/@", " ", 
               RowBox[{"Range", "[", " ", 
                RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], " ", "]"}]}],
               ")"}], " ", "\[Rule]", " ", 
             RowBox[{"(", 
              RowBox[{"-", " ", 
               RowBox[{"Total", " ", "/@", " ", 
                RowBox[{"Map", "[", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"offDiagonalComponents", "[", 
                    RowBox[{"[", " ", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], "]"}], 
                   "&"}], ",", " ", 
                  RowBox[{"connectivity", "[", 
                   RowBox[{"m", ",", " ", 
                    RowBox[{
                    "\"\<vertices\>\"", " ", "\[Rule]", " ", 
                    "\"\<edges\>\""}]}], "]"}], " ", ",", " ", 
                  RowBox[{"{", "2", "}"}]}], " ", "]"}]}]}], ")"}]}], " ", 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], ",", " ", 
             RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], " ", "}"}]}], 
          "\n", "\t", "]"}]}], ";", "\n", "\t", "\n", "\t", 
        RowBox[{
        "offDiagonalComponents", " ", "+", " ", "diagonalComponents"}]}]}], 
      "\n", "]"}], " ", "/;", " ", 
     RowBox[{"stressMatrixArgumentsQ", "[", " ", 
      RowBox[{"m", ",", " ", "stressVector"}], " ", "]"}]}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"stressMatrix", "::", "svec"}], "=", 
     "\"\<Stress vector is not a vector.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"stressMatrix", "::", "len"}], "=", 
     "\"\<Stress vector length is not the same as the number of edges.\>\""}],
     ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"stressMatrixArgumentsQ", "[", " ", 
     RowBox[{"m_", ",", " ", "stressVector_"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"Which", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Not", " ", "@", " ", 
       RowBox[{"VectorQ", "[", " ", "stressVector", " ", "]"}]}], " ", ",", 
      "\n", "\t\t", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"stressMatrix", "::", "svec"}], "]"}], ";", " ", "False"}], 
      ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"m", "[", "\"\<edges\>\"", "]"}], "]"}], " ", "\[NotEqual]", 
       " ", 
       RowBox[{"Length", "[", "stressVector", "]"}]}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"stressMatrix", "::", "len"}], "]"}], ";", " ", "False"}], 
      ",", "\n", "\t", "True", ",", " ", "True"}], "\n", "]"}]}]}]}]], "Code",\

 CellLabel->
  "In[6846]:=",ExpressionUUID->"bb3a7d49-4ce8-41fc-b235-752e697856ab"]
}, Closed]],

Cell[CellGroupData[{

Cell["infinitesimalMotions[]", "Subsection",ExpressionUUID->"4943eeb1-0a06-427a-8438-0fa94c25262d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "infinitesimalMotions", "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<constraints\>\"", "\[Rule]", "None"}], ",", " ", 
       RowBox[{"\"\<variables\>\"", "\[Rule]", "Automatic"}]}], "}"}], ",", 
     " ", 
     RowBox[{"Options", "[", "NullSpace", "]"}]}], " ", "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[6850]:=",ExpressionUUID->"b649267b-3eb7-488c-aa47-6711a6ebdcc9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions", ":", " ", 
      RowBox[{"Except", "[", "_Rule", "]"}], " ", ":", " ", "Automatic"}], 
     ",", " ", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"actualPositions", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"positions", "===", "Automatic"}], ",", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "positions"}], 
        "]"}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Module", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"res", "=", 
          RowBox[{"infinitesimalMotionsInternal", "[", 
           RowBox[{"m", ",", "actualPositions", ",", 
            RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}], ",", 
            RowBox[{"OptionValue", "[", "\"\<variables\>\"", "]"}], ",", " ", 
            
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"{", "opt", "}"}], ",", 
              RowBox[{"Options", "[", "NullSpace", "]"}]}], "]"}]}], "]"}]}], 
         "}"}], ",", "\n", "\t\t", 
        RowBox[{"res", " ", "/;", " ", 
         RowBox[{"res", "=!=", "$Failed"}]}]}], "\n", "\t ", "]"}], " ", "/;",
       " ", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "actualPositions"}], "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "::", "failed"}], "=", 
   "\"\<Failed to find an appropriate solution. Check the constraints.\>\""}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "::", "pos"}], "=", 
   "\"\<Positions do not match those of mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"infinitesimalMotions", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{"Except", "[", 
      RowBox[{"Automatic", "|", "_Rule"}], "]"}]}], ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", "\n", "\t", 
   RowBox[{"Which", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Not", "[", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "positions"}], "]"}], "]"}], ",", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"infinitesimalMotions", "::", "pos"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t\t", "True", ",", " ", "False"}], "\n", "\t", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[6851]:=",ExpressionUUID->"83a592c0-4483-4c46-8440-5e3cfc26f34a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "::", "var"}], "=", 
   "\"\<Variables listed are not of the form vertexDisplacement[n,c].\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "::", "sing"}], "=", 
   "\"\<Jacobian matrix is singular. Recovering using generic \
variables.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "::", "jac"}], "=", 
   "\"\<Jacobian matrix may not be invertible. Choosing different \
displacements may give better results.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "::", "lin"}], "=", 
   "\"\<Found `1` linear motions so `1` displacements are needed.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[6855]:=",ExpressionUUID->"52dcd2cd-c194-44c3-a973-37f1d0ee3ac9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"infinitesimalMotionsInternal", "[", 
   RowBox[{
   "m_", ",", "positions_", ",", "inputConstraints_", ",", "v_", ",", 
    "nullspaceOptions_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"matrix", ",", "dependencies", ",", "solution"}], "}"}], ",", 
    "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"variables", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}]}], ",", "\n", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
         "collect", " ", "all", " ", "the", " ", "constraints", " ", "valid", 
          " ", "to", " ", "2", "nd", " ", "order", " ", "in", " ", "the", " ",
           "displacements"}], " ", "*)"}], "\n", 
        RowBox[{"equations", "=", 
         RowBox[{"constraintEquationsInternal", "[", 
          RowBox[{
          "m", ",", " ", "positions", ",", " ", "2", ",", " ", "_", ",", " ", 
           "inputConstraints", ",", " ", "vertexDisplacement"}], "]"}]}]}], 
       "\n", "}"}], ",", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"linearize", " ", "the", " ", "equations"}], "*)"}], "\n", 
      "\t", 
      RowBox[{
       RowBox[{"matrix", "=", 
        RowBox[{"CoefficientArrays", "[", 
         RowBox[{"equations", ",", "variables", ",", " ", 
          RowBox[{"\"\<Symmetric\>\"", "\[Rule]", "True"}]}], "]"}]}], ";", 
       "\n", "\n", "\t", 
       RowBox[{"(*", "\n", "\t", 
        RowBox[{
         RowBox[{
         "Find", " ", "dependencies", " ", "among", " ", "the", " ", "linear",
           " ", 
          RowBox[{"equations", ".", "\n", "\n", "\t", "When"}], " ", "the", 
          " ", "constraints", " ", "arise", " ", "only", " ", "from", " ", 
          "edge", " ", "stretching"}], ",", " ", 
         RowBox[{
          RowBox[{
          "these", " ", "dependences", " ", "are", " ", "the", " ", "self"}], 
          "-", 
          RowBox[{"stresses", "."}]}]}], "\n", "\t", "*)"}], "\n", "\t", 
       RowBox[{"dependencies", "=", 
        RowBox[{"Orthogonalize", "[", 
         RowBox[{"NullSpace", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"matrix", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "nullspaceOptions"}],
           "]"}], "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "the", " ", "linear", " ", "displacements", " ", "that", " ", "are", 
         " ", "allowed"}], "*)"}], "\n", "\t", 
       RowBox[{"solution", "=", 
        RowBox[{"linearMotionsToDisplacementRules", "[", 
         RowBox[{"m", ",", 
          RowBox[{"linearMotions", "[", 
           RowBox[{"m", ",", 
            RowBox[{"matrix", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "nullspaceOptions"}], "]"}],
           ",", "v"}], "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"Which", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"solution", "===", "$Failed"}], ",", " ", "$Failed", ",", 
         "\n", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Length", "[", "solution", "]"}], ">", "0"}], ",", "\n", 
         "\t\t\t", 
         RowBox[{"Expand", "[", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "analytical", " ", "processing", " ", "that", " ", "I", " ", 
             "prefer"}], ",", " ", 
            RowBox[{
            "but", " ", "should", " ", "not", " ", "take", " ", "a", " ", 
             "long", " ", "time", " ", "to", " ", "perform"}]}], "*)"}], "\n",
           "\t\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"vertexDisplacement", "[", "m", "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "dependencies", "]"}], ">", "0"}], ",", 
               RowBox[{"dependencies", " ", ".", " ", "equations"}], ",", 
               RowBox[{"{", "}"}]}], "]"}]}], "\n", "\t\t\t\t", "}"}], " ", "/.",
            " ", 
           RowBox[{"Dispatch", "[", "solution", "]"}]}], "\n", "\t\t\t", 
          "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
          "no", " ", "solution", " ", "but", " ", "no", " ", "errors", " ", 
           "either"}], "*)"}], "\n", "\t\t", "True", ",", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"infinitesimalMotions", "::", "failed"}], "]"}], ";", "\n",
           "\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}]}]}], "\n", "\t", "]"}]}]}], "\n", 
     "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[6859]:=",ExpressionUUID->"b327d84b-f6fd-4e10-a64a-483813cf0a29"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"linearMotionsToDisplacementRules", "[", 
    RowBox[{"m_", ",", "linearMotions_", ",", "inputDisplacements_"}], "]"}], 
   ":=", 
   RowBox[{
    RowBox[{"{", "}"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Length", "[", "linearMotions", "]"}], "\[Equal]", "0"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"linearMotionsToDisplacementRules", "[", 
    RowBox[{"m_", ",", "linearMotions_", ",", "inputDisplacements_List"}], 
    "]"}], ":=", "\n", 
   RowBox[{"With", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{"preprocess", " ", "arguments"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"displacements", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "inputDisplacements", "}"}], "]"}]}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"Module", "[", "\n", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "x", ",", "y", ",", "c", ",", "rules", ",", "jacobianMatrix", ",", 
          "inverseJacobian", ",", "displacementIndices"}], "}"}], ",", "\n", 
        "\t", 
        RowBox[{
         RowBox[{"displacementIndices", "=", 
          RowBox[{
           RowBox[{"displacements", "/.", 
            RowBox[{
             RowBox[{"vertexDisplacement", "[", 
              RowBox[{"x_", ",", "y_"}], "]"}], "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}]}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<x\>\"", "\[Rule]", "1"}], ",", 
             RowBox[{"\"\<y\>\"", "\[Rule]", "2"}], ",", 
             RowBox[{"\"\<z\>\"", "\[Rule]", "3"}]}], "}"}]}]}], ";", "\n", 
         "\t", 
         RowBox[{"jacobianMatrix", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"linearMotions", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"Sequence", "@@", "#"}]}], "]"}], "]"}], "&"}], "/@", 
           "displacementIndices"}]}], ";", "\n", "\t", "\n", "\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "if", " ", "inverting", " ", "the", " ", "jacobian", " ", "fails", 
            " ", "entirely"}], ",", " ", 
           RowBox[{
            RowBox[{"we", "'"}], "ll", " ", "need", " ", "to", " ", "deal", 
            " ", "with", " ", 
            RowBox[{"that", "."}]}]}], "*)"}], "\n", "\t", 
         RowBox[{"inverseJacobian", "=", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"Inverse", "[", "jacobianMatrix", "]"}], ",", "\n", 
            "\t\t", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{"infinitesimalMotions", "::", "sing"}], "]"}], ";", 
             "\n", "\t\t", 
             RowBox[{"Return", "[", 
              RowBox[{"linearMotionsToDisplacementRules", "[", 
               RowBox[{"m", ",", "linearMotions", ",", "Automatic"}], "]"}], 
              "]"}]}], ",", "\n", "\t\t", 
            RowBox[{"Inverse", "::", "sing"}]}], "\n", "\t", "]"}]}], ";", 
         "\n", "\t", 
         RowBox[{"(*", 
          RowBox[{
          "warn", " ", "that", " ", "the", " ", "jacobian", " ", "matrix", 
           " ", "is", " ", "almost", " ", "singular"}], "*)"}], "\n", "\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"Det", "[", "jacobianMatrix", "]"}], "]"}], "<", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "16"}], ")"}]}]}], ",", 
           RowBox[{"Message", "[", 
            RowBox[{"infinitesimalMotions", "::", "jac"}], "]"}]}], "]"}], 
         ";", "\n", "\n", "\t", 
         RowBox[{"rules", "=", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"Array", "[", 
             RowBox[{"c", ",", 
              RowBox[{"Length", "[", "jacobianMatrix", "]"}]}], "]"}], "->", 
            RowBox[{"inverseJacobian", " ", ".", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", "displacements", "}"}], "]"}]}]}], "]"}]}], ";", 
         "\n", "\t", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}], "\[Rule]", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Array", "[", 
               RowBox[{"c", ",", 
                RowBox[{"Length", "[", "jacobianMatrix", "]"}]}], "]"}], " ", 
              ".", " ", "linearMotions"}], "/.", "rules"}], "]"}]}], 
          "]"}]}]}], "\n", "\n", "]"}], "/;", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "linearMotions", "]"}], "\[Equal]", 
        RowBox[{"Length", "[", "displacements", "]"}]}], "&&", 
       RowBox[{"MatchQ", "[", 
        RowBox[{"displacements", ",", 
         RowBox[{"{", "__vertexDisplacement", "}"}]}], "]"}]}]}]}], " ", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"linearMotionsToDisplacementRules", "[", 
    RowBox[{"m_", ",", "linearMotions_", ",", "Automatic"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", "=", 
        RowBox[{"Unique", "[", "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}], "\[Rule]", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Array", "[", 
           RowBox[{"v", ",", 
            RowBox[{"Length", "[", "linearMotions", "]"}]}], "]"}], " ", ".", 
          " ", "linearMotions"}], "]"}]}], "]"}]}], "\n", "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "linearMotions", "]"}], ">", "0"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"linearMotionsToDisplacementRules", "[", 
   RowBox[{"m_", ",", "linearMotions_", ",", "c_Symbol"}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}], "\[Rule]", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Array", "[", 
        RowBox[{"c", ",", 
         RowBox[{"Length", "[", "linearMotions", "]"}]}], "]"}], " ", ".", 
       " ", "linearMotions"}], "]"}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "linearMotions", "]"}], ">", "0"}]}]}]}], "Code",
 CellLabel->
  "In[6860]:=",ExpressionUUID->"acf53775-617a-4c64-abce-1ca8d0a00a98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"linearMotionsToDisplacementRules", "[", 
   RowBox[{"m_", ",", "linearMotions_", ",", "displacements_"}], "]"}], ":=", 
  
  RowBox[{"Which", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Not", "[", 
     RowBox[{"MatchQ", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "displacements", "}"}], "]"}], ",", 
       RowBox[{"{", "__vertexDisplacement", "}"}]}], "]"}], "]"}], ",", "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"infinitesimalMotions", "::", "var"}], "]"}], ";", "\n", "\t\t",
      "$Failed"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"Length", "[", "linearMotions", "]"}], "\[NotEqual]", 
     RowBox[{"Length", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", "displacements", "}"}], "]"}], "]"}]}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"infinitesimalMotions", "::", "lin"}], ",", 
       RowBox[{"Length", "[", "linearMotions", "]"}]}], "]"}], ";", "\n", 
     "\t\t", "$Failed"}], ",", "\n", "\t", "True", ",", "\n", "\t\t", 
    "$Failed"}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6864]:=",ExpressionUUID->"cc158a20-c3f3-4d03-9644-fc087c2118ee"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["energy minimization", "Section",ExpressionUUID->"3a07a406-3a93-4f1d-9018-62647c8f04a2"],

Cell[CellGroupData[{

Cell["minimizeEnergy[]", "Subsection",ExpressionUUID->"73422a9f-f78f-40d0-b5cf-0b9ca1818700"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "minimizeEnergy", "]"}], "=", 
   RowBox[{"Join", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<initial\>\"", "->", "Automatic"}], "}"}], ",", " ", 
     RowBox[{"Options", "[", "mechanismEnergy", "]"}], ",", " ", 
     RowBox[{"Options", "[", "FindMinimum", "]"}]}], " ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"minimizeEnergy", ",", "HoldRest"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"minimizeEnergy", "::", "badinitial"}], "=", 
   "\"\<Initial conditions are not well-formed numeric positions matching the \
mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"minimizeEnergy", "::", "data"}], "=", 
   "\"\<Data for compiled function not a vector of numerical values.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"minimizeEnergy", "::", "energy"}], "=", 
   "\"\<Energy is not numerical at initial condition.\>\""}], ";"}]}], "Code",\

 CellLabel->
  "In[6865]:=",ExpressionUUID->"3e97a0de-a970-4d5c-ab00-d0691ecf3e87"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"minimizeEnergy", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"energy", " ", ":", " ", 
      RowBox[{"Except", "[", "_Rule", "]"}], " ", ":", " ", "Automatic"}], 
     ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"minimizeEnergyInternal", "[", " ", 
        RowBox[{"m", ",", " ", "energy", ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<initial\>\"", "]"}], ",", " ", 
         RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], " ", "}"}], ",", "\n", 
     "\t", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"minimizeEnergyInternal", "[", " ", 
   RowBox[{
   "m_", ",", " ", "energyExpression_", ",", " ", "initial_", ",", " ", 
    "opt_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"energy", " ", "=", " ", 
       RowBox[{"minimizeEnergyComputeEnergy", "[", 
        RowBox[{"m", ",", " ", "energyExpression", ",", " ", "opt"}], " ", 
        "]"}]}], ",", "\n", "\t", 
      RowBox[{"initialPositions", " ", "=", " ", 
       RowBox[{"minimizeEnergyInitialPositions", "[", 
        RowBox[{"m", ",", " ", "initial"}], " ", "]"}]}], ",", "\n", "\t", 
      "res"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"energy", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
       RowBox[{"initialPositions", " ", "=!=", " ", "$Failed"}]}], ",", "\n", 
      "\t\t", 
      RowBox[{
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"minimizeEnergyMinimize", "[", " ", 
         RowBox[{
         "m", ",", " ", "energy", ",", " ", "initialPositions", ",", " ", 
          "opt"}], " ", "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", " ", 
           RowBox[{"Dimensions", "[", "initial", "]"}], " ", "]"}], " ", 
          "\[Equal]", " ", "3"}], ",", " ", "res", ",", " ", 
         RowBox[{"First", "[", "res", "]"}]}], " ", "]"}]}], ",", "\n", 
      "\t\t", "$Failed"}], "\n", "\t", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6870]:=",ExpressionUUID->"cad7656e-ac79-4b74-bd8a-9e72c0644b19"],

Cell[CellGroupData[{

Cell["\<\
minimizeEnergyInitialPositions[], minimizeEnergyComputeEnergy[]\
\>", "Subsubsection",ExpressionUUID->"ce099429-1333-43b9-b495-fa2b90f21605"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", "\t", 
   RowBox[{"parse", " ", "the", " ", "arguments"}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"minimizeEnergyInitialPositions", "[", " ", 
     RowBox[{"m_", ",", " ", "Automatic"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "}"}]}], "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyInitialPositions", "[", " ", 
     RowBox[{"m_", ",", " ", 
      RowBox[{"initialPositions_", "?", "MatrixQ"}]}], " ", "]"}], " ", ":=", 
    " ", 
    RowBox[{
     RowBox[{"{", "initialPositions", "}"}], " ", "/;", " ", 
     RowBox[{"numericCoordinatesQ", "[", 
      RowBox[{"m", ",", " ", "initialPositions"}], "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyInitialPositions", "[", " ", 
     RowBox[{"m_", ",", " ", 
      RowBox[{"initialPositions_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ArrayQ", "[", 
          RowBox[{"#", ",", "_", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], 
     " ", "]"}], " ", ":=", " ", 
    RowBox[{"initialPositions", " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", "initialPositions", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;"}], "]"}], "]"}], " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], ",", 
        RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], "}"}]}]}]}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyInitialPositions", "[", " ", 
     RowBox[{"m_", ",", " ", "pos_"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"minimizeEnergy", "::", "badinitial"}], "]"}], ";", " ", 
      "$Failed"}], ")"}]}], "\n", "\n", 
   RowBox[{"(*", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyComputeEnergy", "[", " ", 
     RowBox[{"m_", ",", " ", "Automatic", ",", " ", "options_"}], " ", "]"}], 
    " ", ":=", " ", 
    RowBox[{"mechanismEnergy", "[", 
     RowBox[{"m", ",", " ", 
      RowBox[{"FilterRules", "[", 
       RowBox[{
        RowBox[{"{", "options", "}"}], ",", " ", 
        RowBox[{"Options", "[", "mechanismEnergy", "]"}]}], "]"}]}], " ", 
     "]"}]}], "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyComputeEnergy", "[", " ", 
     RowBox[{"m_", ",", " ", 
      RowBox[{"energy_", "?", "compiledNumericalMechanismEnergyQ"}], ",", " ",
       "options_"}], " ", "]"}], " ", ":=", " ", "energy"}], "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyComputeEnergy", "[", " ", 
     RowBox[{"m_", ",", " ", "analyticEnergy_", ",", " ", "options_"}], " ", 
     "]"}], " ", ":=", " ", 
    RowBox[{"analyticEnergy", " ", "/;", " ", 
     RowBox[{"analyticEnergyQ", "[", 
      RowBox[{"analyticEnergy", ",", " ", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "]"}]}]}], "\n", "\n", 
   
   RowBox[{
    RowBox[{"minimizeEnergyComputeEnergy", "[", " ", 
     RowBox[{"m_", ",", " ", 
      RowBox[{"energy_", "?", "compiledMechanismEnergyQ"}], ",", " ", 
      "options_"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"minimizeEnergy", "::", "data"}], "]"}], ";", " ", "$Failed"}],
      ")"}]}], "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyComputeEnergy", "[", " ", 
     RowBox[{"m_", ",", " ", "badEnergy_", ",", " ", "options_"}], " ", "]"}],
     " ", ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"minimizeEnergy", "::", "energy"}], "]"}], ";", " ", 
      "$Failed"}], ")"}]}]}]}]], "Code",
 CellLabel->
  "In[6872]:=",ExpressionUUID->"9357dc4e-c4b9-4298-9e85-37d87e5d3ebc"]
}, Closed]],

Cell[CellGroupData[{

Cell["minimizeEnergyMinimize[]", "Subsubsection",ExpressionUUID->"603d4498-8b6c-4503-933d-b4a9c97b5661"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"energy", " ", "is", " ", "a", " ", "compiled", " ", "function"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"minimizeEnergyMinimize", "[", " ", 
     RowBox[{"m_", ",", " ", 
      RowBox[{"energy_", "?", "compiledNumericalMechanismEnergyQ"}], ",", " ",
       "initialPositions_", ",", " ", "options_"}], " ", "]"}], " ", ":=", 
    "\n", 
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"constraintData", " ", "=", " ", 
         RowBox[{"processConstraintEquations", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "\n", "\t\t", 
           RowBox[{"constraintEquations", "[", " ", 
            RowBox[{"m", ",", " ", 
             RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
             "Infinity", ",", " ", 
             RowBox[{"Flatten", " ", "@", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "\"\<output\>\"", " ", "\[Rule]", " ", "vertexPosition"}], 
                ",", " ", 
                RowBox[{"FilterRules", "[", 
                 RowBox[{"options", ",", " ", 
                  RowBox[{"Options", "[", "constraintEquations", "]"}]}], " ",
                  "]"}]}], " ", "}"}]}]}], " ", "]"}]}], "\n", "\t", "]"}]}], 
        ",", "\n", "\t", 
        RowBox[{"data", " ", "=", " ", 
         RowBox[{"energy", "[", "\"\<data\>\"", "]"}]}], ",", " ", 
        RowBox[{"allVariables", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"vertexPosition", "[", "m", "]"}], "]"}]}], ",", "\n", "\t",
         "variables", ",", " ", "variableSpecifications", ",", " ", 
        "linearConstraints", ",", "\n", "\t", "\n", "\t", 
        RowBox[{"minimizationOptions", " ", "=", " ", 
         RowBox[{"Sequence", " ", "@@", " ", 
          RowBox[{"FilterRules", "[", 
           RowBox[{"options", ",", " ", 
            RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}]}], ",", 
        "\n", "\t", "minimizationResults"}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"variables", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
         "constraintData", "[", " ", "\"\<constrained positions\>\"", " ", 
          "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"variableSpecifications", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", " ", 
           RowBox[{"{", 
            RowBox[{"allVariables", ",", " ", 
             RowBox[{"Flatten", " ", "@", " ", "#"}]}], "}"}], " ", "]"}], 
          "&"}], " ", "/@", " ", "initialPositions"}]}], ";", "\n", "\n", 
       "\t", 
       RowBox[{"(*", 
        RowBox[{
        "turn", " ", "the", " ", "solved", " ", "linear", " ", "constraints", 
         " ", "into", " ", "simple", " ", "linear", " ", "constraints"}], 
        "*)"}], "\n", "\t", 
       RowBox[{"linearConstraints", " ", "=", " ", 
        RowBox[{"Equal", " ", "@@@", " ", 
         RowBox[{
         "constraintData", "[", " ", "\"\<linear solutions\>\"", " ", 
          "]"}]}]}], ";", "\n", "\n", "\t", 
       RowBox[{"minimizationResults", " ", "=", " ", 
        RowBox[{"Cases", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Map", "[", " ", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"executeMinimizationCompiled", "[", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"energy", "[", "\"\<energy\>\"", "]"}], "[", 
                RowBox[{"variables", ",", " ", "data"}], "]"}], ",", " ", 
               "linearConstraints", ",", " ", "#", ",", " ", 
               RowBox[{
                RowBox[{"energy", "[", "\"\<gradient\>\"", "]"}], "[", 
                RowBox[{"variables", ",", "data"}], "]"}], ",", " ", 
               "minimizationOptions"}], " ", "]"}], "&"}], ",", "\n", 
            "\t\t\t ", "variableSpecifications"}], "\n", "\t\t", "]"}], ",", 
          "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"_", "?", "NumericQ"}], ",", " ", 
            RowBox[{"{", "__Rule", "}"}]}], "}"}]}], "\n", "\t", "]"}]}], ";",
        "\n", "\t", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
           RowBox[{
            RowBox[{
            "constraintData", "[", "\"\<constrained positions\>\"", "]"}], 
            " ", "/.", " ", 
            RowBox[{"Dispatch", "[", " ", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "]"}]}]}], " ", "}"}], 
         "&"}], " ", "/@", " ", "minimizationResults"}]}]}], "\n", "]"}]}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"executeMinimizationCompiled", "[", " ", 
     RowBox[{
     "energy_", ",", " ", "constraints_", ",", " ", "initial_", ",", " ", 
      "gradient_", ",", " ", "options_"}], " ", "]"}], ":=", " ", "\n", "\t", 
    
    RowBox[{"(", 
     RowBox[{"FindMinimum", " ", "@@", " ", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Flatten", "[", " ", 
         RowBox[{"{", 
          RowBox[{"energy", ",", " ", "constraints"}], "}"}], " ", "]"}], ",",
         " ", 
        RowBox[{"Sequence", " ", "@@", " ", "initial"}], ",", " ", 
        RowBox[{"Gradient", " ", "\[RuleDelayed]", " ", "gradient"}], ",", 
        " ", "options"}], " ", "\n", "\t", "}"}]}], ")"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "energy", " ", "is", " ", "an", " ", "analytic", " ", "expression"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyMinimize", "[", " ", 
     RowBox[{
     "m_", ",", " ", "energy_", ",", " ", "initialPositions_", ",", " ", 
      "options_"}], " ", "]"}], " ", ":=", " ", "\n", 
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"constraintData", " ", "=", " ", 
         RowBox[{"processConstraintEquations", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "\n", "\t\t", 
           RowBox[{"constraintEquations", "[", " ", 
            RowBox[{"m", ",", " ", 
             RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
             "Infinity", ",", " ", 
             RowBox[{"Flatten", " ", "@", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "\"\<output\>\"", " ", "\[Rule]", " ", "vertexPosition"}], 
                ",", " ", 
                RowBox[{"FilterRules", "[", 
                 RowBox[{"options", ",", " ", 
                  RowBox[{"Options", "[", "constraintEquations", "]"}]}], " ",
                  "]"}]}], " ", "}"}]}]}], " ", "]"}]}], "\n", "\t", "]"}]}], 
        ",", "\n", "\t", "constrainedEnergy", ",", " ", 
        "variableSpecifications", ",", "\n", "\t", 
        RowBox[{"minimizationOptions", " ", "=", " ", 
         RowBox[{"FilterRules", "[", 
          RowBox[{"options", ",", 
           RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], ",", "\n",
         "\t", "minimizationResults"}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"variableSpecifications", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"dynamicVariables", "[", " ", 
           RowBox[{"#", ",", " ", "constraintData"}], " ", "]"}], "&"}], " ", 
         "/@", " ", "initialPositions"}]}], ";", "\n", "\t", 
       RowBox[{"constrainedEnergy", " ", "=", " ", 
        RowBox[{"energy", " ", "/.", " ", 
         RowBox[{"constraintData", "[", "\"\<linear solutions\>\"", "]"}]}]}],
        ";", "\n", "\n", "\t", 
       RowBox[{"minimizationResults", " ", "=", " ", 
        RowBox[{"Cases", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Map", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"executeMinimizationAnalytic", "[", " ", 
              RowBox[{
              "constrainedEnergy", ",", " ", "#", ",", " ", 
               "minimizationOptions"}], " ", "]"}], " ", "&"}], " ", ",", " ",
             "variableSpecifications"}], " ", "]"}], ",", "\n", "\t\t", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"_", "?", "NumericQ"}], ",", " ", 
            RowBox[{"{", "__Rule", "}"}]}], "}"}]}], "\n", "\t", "]"}]}], ";",
        "\n", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
           RowBox[{
            RowBox[{
            "constraintData", "[", "\"\<constrained positions\>\"", "]"}], 
            " ", "/.", " ", 
            RowBox[{"Dispatch", "[", " ", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "]"}]}]}], " ", "}"}], 
         "&"}], " ", "/@", " ", "minimizationResults"}]}]}], "\n", "]"}]}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"executeMinimizationAnalytic", "[", " ", 
     RowBox[{"energy_", ",", " ", "data_", ",", " ", "options_"}], " ", "]"}],
     " ", ":=", " ", 
    RowBox[{"FindMinimum", " ", "@@", " ", 
     RowBox[{"{", 
      RowBox[{"energy", ",", " ", "data", ",", " ", 
       RowBox[{"Sequence", " ", "@@", " ", "options"}]}], " ", 
      "}"}]}]}]}]}]], "Code",
 CellLabel->
  "In[6881]:=",ExpressionUUID->"9c6a83e3-770d-4c96-b30e-1d9e09063824"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["repeatedMinimizeEnergy[]", "Subsection",ExpressionUUID->"89d07baf-29ff-40b5-a155-6ae60f411f0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "repeatedMinimizeEnergy", "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MaxEnergy\>\"", "->", "Infinity"}], "}"}], ",", 
     RowBox[{"Options", "[", "randomDisplacements", "]"}], ",", 
     RowBox[{"Options", "[", "minimizeEnergy", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[6885]:=",ExpressionUUID->"638cc8ea-f6a2-4655-af57-88c8956ec0e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"repeatedMinimizeEnergy", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"energy", " ", ":", " ", 
     RowBox[{"Except", "[", "_Integer", "]"}], " ", ":", " ", "Automatic"}], 
    ",", " ", "num_", ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"positions", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<initial\>\"", "]"}], "===", 
         "Automatic"}], ",", " ", 
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<initial\>\"", "]"}]}], " ", "]"}]}], 
     " ", "}"}], ",", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"repeatedMinimizeEnergyInternal", "[", " ", 
         RowBox[{
         "m", ",", " ", "positions", ",", " ", "energy", ",", " ", "num", ",",
           " ", 
          RowBox[{"OptionValue", "[", "\"\<MaxEnergy\>\"", "]"}], ",", " ", 
          RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"res", " ", "/;", " ", 
       RowBox[{
        RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
        "repeatedMinimizeEnergyInternal"}]}]}], "\n", "]"}]}], 
   "]"}]}]], "Code",
 CellLabel->
  "In[6886]:=",ExpressionUUID->"bfcda39c-0644-435b-8e52-c73864eff3b0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"repeatedMinimizeEnergyInternal", "[", 
    RowBox[{"m_", ",", " ", "positions_", ",", " ", "energy_", ",", " ", 
     RowBox[{"number_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ",", " ", 
     RowBox[{"maxEnergy", " ", ":", " ", 
      RowBox[{
       RowBox[{"_", "?", "NumericQ"}], "|", "Infinity"}]}], ",", " ", 
     "options_"}], " ", "]"}], " ", ":=", " ", "\n", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"displacementOptions", " ", "=", " ", 
         RowBox[{"FilterRules", "[", 
          RowBox[{"options", ",", " ", 
           RowBox[{"Options", "[", "randomDisplacements", "]"}]}], "]"}]}], 
        ",", "\n", 
        RowBox[{"minimizationOptions", " ", "=", " ", 
         RowBox[{"FilterRules", "[", 
          RowBox[{"options", ",", " ", 
           RowBox[{"Options", "[", "minimizeEnergy", "]"}]}], "]"}]}], ",", 
        "\n", "res"}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"minimizeEnergyInternal", "[", " ", 
         RowBox[{"m", ",", " ", "energy", ",", " ", 
          RowBox[{"randomDisplacements", "[", " ", 
           RowBox[{
           "positions", ",", " ", "number", ",", " ", "displacementOptions"}],
            " ", "]"}], ",", " ", "minimizationOptions"}], " ", "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"res", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "\[LessEqual]", " ", 
            "maxEnergy"}], " ", "&"}]}], " ", "]"}], " ", "/;", " ", 
        RowBox[{
         RowBox[{"res", " ", "=!=", " ", "minimizeEnergyInternal"}], " ", "&&",
          " ", 
         RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}]}], "\n", "]"}], 
    " ", "/;", " ", 
    RowBox[{"numericCoordinatesQ", "[", 
     RowBox[{"m", ",", " ", "positions"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"repeatedMinimizeEnergyInternal", "[", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "energy_", ",", " ", "number_", 
    ",", " ", "maxEnergy_", ",", " ", "options_"}], "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Not", "[", 
      RowBox[{"numericCoordinatesQ", "[", 
       RowBox[{"m", ",", " ", "positions"}], "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"repeatedMinimizeEnergy", "::", "pos"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", 
     RowBox[{"Not", "[", " ", 
      RowBox[{
       RowBox[{"IntegerQ", "[", "number", "]"}], " ", "&&", " ", 
       RowBox[{"number", " ", ">", " ", "0"}]}], " ", "]"}], ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"repeatedMinimizeEnergy", "::", "numneg"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", 
     RowBox[{"Not", "[", " ", 
      RowBox[{
       RowBox[{"NumericQ", "[", "maxEnergy", "]"}], " ", "||", " ", 
       RowBox[{"maxEnergy", " ", "\[Equal]", " ", "Infinity"}]}], " ", "]"}], 
     ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"repeatedMinimizeEnergy", "::", "max"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", "True", ",", " ", "False"}], "\n", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[6887]:=",ExpressionUUID->"57ce5909-974b-48ac-99ba-c0f6a103d000"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"repeatedMinimizeEnergy", "::", "numneg"}], "=", 
   "\"\<Number of repetitions should be a positive integer.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"repeatedMinimizeEnergy", "::", "max"}], "=", 
   "\"\<Option \\\"MaxEnergy\\\" does not have a valid value.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"repeatedMinimizeEnergy", "::", "pos"}], "=", 
   "\"\<Initial positions are not numerical and valid.\>\""}], ";"}]}], "Code",\

 CellLabel->
  "In[6889]:=",ExpressionUUID->"f5756fcc-4f46-47b4-924b-eae4cdafeb53"]
}, Closed]],

Cell[CellGroupData[{

Cell["tallyRepeatedMinimizeEnergy[]", "Subsection",ExpressionUUID->"fdbbe4fd-2f77-4cbe-91b2-9746fc3ae9f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "tallyRepeatedMinimizeEnergy", "]"}], "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Options", "[", "repeatedMinimizeEnergy", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"SameTest", " ", "\[Rule]", " ", "Automatic"}], "}"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tallyRepeatedMinimizeEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", "num_Integer", ",", 
     RowBox[{"tol", ":", 
      RowBox[{"_", "?", "NumericQ"}], ":", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "6"}], ")"}]}]}], ",", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"res", "=", 
       RowBox[{"repeatedMinimizeEnergy", "[", 
        RowBox[{"m", ",", "num", ",", "opt"}], "]"}]}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"tallyRepeatedMinimizeEnergyOutput", "[", 
       RowBox[{"res", ",", "tol"}], "]"}], "/;", 
      RowBox[{
       RowBox[{"Head", "[", "res", "]"}], "=!=", 
       "repeatedMinimizeEnergy"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tallyRepeatedMinimizeEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", "energy_", ",", "num_Integer", 
     ",", 
     RowBox[{"tol", ":", 
      RowBox[{"_", "?", "NumericQ"}], ":", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "6"}], ")"}]}]}], ",", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"res", "=", 
       RowBox[{"repeatedMinimizeEnergy", "[", 
        RowBox[{"m", ",", "energy", ",", "num", ",", "opt"}], "]"}]}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"tallyRepeatedMinimizeEnergyOutput", "[", 
       RowBox[{"res", ",", "tol"}], "]"}], "/;", 
      RowBox[{
       RowBox[{"Head", "[", "res", "]"}], "=!=", 
       "repeatedMinimizeEnergy"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"tallyRepeatedMinimizeEnergyOutput", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "_"}], "]"}], ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"tallyRepeatedMinimizeEnergyOutput", "[", 
   RowBox[{"res_", ",", "tol_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"output", "=", 
      RowBox[{"Transpose", "[", "res", "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"output", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
      RowBox[{"Tally", "[", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], ".", 
           RowBox[{"Flatten", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}]}], "<", 
          RowBox[{"tol", "^", "2"}]}], "&"}]}], " ", "]"}]}], "}"}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6892]:=",ExpressionUUID->"db89b083-f6f8-4ef9-be0e-ba614297f87d"]
}, Closed]],

Cell[CellGroupData[{

Cell["dynamicalSystem[], dynamicalSystemEquations[]", "Subsection",ExpressionUUID->"f771deb2-a4a2-400f-b0c2-7680cc5b00ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "dynamicalSystemEquations", "]"}], "=", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<constraints\>\"", "\[Rule]", "None"}], ",", " ", 
      RowBox[{"(*", 
       RowBox[{"a", " ", "list", " ", "of", " ", "constraints"}], "*)"}], 
      "\n", "\t", 
      RowBox[{"\"\<mass\>\"", "\[Rule]", "1"}], ",", "\n", "\t", 
      RowBox[{"\"\<drag\>\"", "\[Rule]", "0"}], ",", "\n", "\t", 
      RowBox[{"\"\<additional\>\"", "\[Rule]", "0"}]}], " ", 
     RowBox[{"(*", 
      RowBox[{
      "additional", " ", "terms", " ", "to", " ", "add", " ", "to", " ", 
       "the", " ", "energy"}], "*)"}], "\n", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "dynamicalSystem", "]"}], "=", 
   RowBox[{"Join", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Options", "[", "dynamicalSystemEquations", "]"}], ",", "\n", 
     "\t", 
     RowBox[{"Options", "[", "NDSolve", "]"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellLabel->
  "In[6897]:=",ExpressionUUID->"4315eb56-9425-419f-b071-2e2f797f402d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystemEquations", "::", "drag"}], "=", 
   "\"\<Option \\\"drag\\\" cannot be parsed.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystemEquations", "::", "mass"}], "=", 
   "\"\<Option \\\"mass\\\" cannot be parsed.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystemEquations", "::", "pos"}], "=", 
   "\"\<Not a valid set of positions.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystemEquations", "::", "var"}], "=", 
   "\"\<Variables should be of the form {variable, time}.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[6899]:=",ExpressionUUID->"f36975ed-8d9f-4ec4-babc-cce78e40b1a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"validEquationsParamQ", "[", 
   RowBox[{"value_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"value", " ", "\[GreaterEqual]", " ", "0"}]}], "\n", 
 RowBox[{
  RowBox[{"validEquationsParamQ", "[", 
   RowBox[{"value", " ", ":", " ", 
    RowBox[{"Except", "[", "_List", "]"}]}], "]"}], ":=", 
  RowBox[{"Not", "[", 
   RowBox[{"NumericQ", "[", "value", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validEquationsParamQ", "[", "_", "]"}], ":=", "False"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"expandEquationDrags", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"drags_", "?", "validEquationsParamQ"}]}], "]"}], ":=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"drags", ",", " ", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"expandEquationDrags", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"drags", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "validEquationsParamQ"}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"drags", " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "drags", "]"}], "\[Equal]", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"expandEquationDrags", "[", 
   RowBox[{"m_", ",", " ", "None"}], "]"}], ":=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"0", ",", " ", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expandEquationDrags", "[", 
    RowBox[{"m_", ",", " ", "_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"dynamicalSystemEquations", "::", "drag"}], "]"}], ";", " ", 
     "$Failed"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"expandEquationMasses", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"masses_", "?", "validEquationsParamQ"}]}], "]"}], ":=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"masses", ",", " ", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"expandEquationMasses", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"masses", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "validEquationsParamQ"}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"masses", " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "masses", "]"}], "\[Equal]", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"expandEquationMasses", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"None", " ", "|", " ", "0"}]}], "]"}], ":=", "None"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expandEquationMasses", "[", 
    RowBox[{"m_", ",", " ", "_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"dynamicalSystemEquations", "::", "mass"}], "]"}], ";", " ", 
     "$Failed"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"evaluateEquationPositions", "[", 
   RowBox[{"m_", ",", " ", "Automatic"}], "]"}], ":=", 
  RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"evaluateEquationPositions", "[", 
   RowBox[{"m_", ",", " ", "positions_"}], "]"}], ":=", 
  RowBox[{"positions", " ", "/;", " ", 
   RowBox[{"vertexPositionsQ", "[", 
    RowBox[{"m", ",", "positions"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"evaluateEquationPositions", "[", 
   RowBox[{"m_", ",", " ", "_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"dynamicalSystemEquations", "::", "pos"}], "]"}], ";", " ", 
    "$Failed"}], ")"}]}]}], "Code",
 CellLabel->
  "In[6903]:=",ExpressionUUID->"bd2ebe0c-ce7f-45f7-bfc1-49aa1aec9a95"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystemEquations", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"initialPositions_", " ", ":", " ", "Automatic"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"variableName_Symbol", ",", " ", "timeVariable_Symbol"}], "}"}],
      ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"energy", " ", "=", " ", 
        RowBox[{
         RowBox[{"mechanismEnergy", "[", 
          RowBox[{"m", ",", " ", 
           RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", 
            RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}]}]}], 
          "]"}], " ", "+", " ", 
         RowBox[{"OptionValue", "[", "\"\<additional\>\"", "]"}]}]}], ",", 
       "\n", 
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"evaluateEquationPositions", "[", 
         RowBox[{"m", ",", "initialPositions"}], "]"}]}], ",", "\n", 
       RowBox[{"drags", " ", "=", " ", 
        RowBox[{"expandEquationDrags", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<drag\>\"", "]"}]}], "]"}]}], ",", 
       "\n", 
       RowBox[{"masses", " ", "=", " ", 
        RowBox[{"expandEquationMasses", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<mass\>\"", "]"}]}], "]"}]}]}], 
      "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"res", "=", 
          RowBox[{"dynamicalSystemEquationsInternal", "[", 
           RowBox[{
           "m", ",", " ", "positions", ",", " ", "variableName", ",", " ", 
            "timeVariable", ",", " ", "masses", ",", " ", "drags", ",", " ", 
            "energy"}], " ", "]"}]}], "}"}], ",", "\n", "\t\t", 
        RowBox[{"res", " ", "/;", " ", 
         RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", "\t", "]"}], 
      " ", "/;", " ", 
      RowBox[{
       RowBox[{"drags", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
       RowBox[{"masses", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
       RowBox[{"positions", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
       RowBox[{"variableName", " ", "=!=", " ", "timeVariable"}]}]}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"dynamicalSystemEquations", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"initialPositions_", " ", ":", " ", "Automatic"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"_", ",", "_"}], "}"}], ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"dynamicalSystemEquations", "::", "vars"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"dynamicalSystemEquations", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"initialPositions_", " ", ":", " ", "Automatic"}], ",", " ", 
    RowBox[{"Except", "[", "_List", "]"}], " ", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"dynamicalSystemEquations", "::", "vars"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[6917]:=",ExpressionUUID->"1b30499b-3dd1-4129-8c80-b3664c73ca01"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystem", "::", "drag"}], "=", 
   "\"\<Option \\\"drag\\\" cannot be parsed.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystem", "::", "mass"}], "=", 
   "\"\<Option \\\"mass\\\" cannot be parsed.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystem", "::", "timespec"}], "=", 
   "\"\<The last argument should be of the form {time variable, start time, \
end time} with start and end times being numerical and the time variable \
being a Symbol.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6920]:=",ExpressionUUID->"e01b2e15-065d-44be-a333-3bb058054274"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"validDynamicalParamQ", "[", "value_", "]"}], ":=", 
   RowBox[{
    RowBox[{"NumericQ", "[", "value", "]"}], " ", "&&", " ", 
    RowBox[{"value", " ", "\[GreaterEqual]", " ", "0"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalDrags", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"drags_", "?", "validDynamicalParamQ"}]}], "]"}], ":=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"drags", ",", " ", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalDrags", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"drags", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "validDynamicalParamQ"}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"drags", " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "drags", "]"}], "\[Equal]", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalDrags", "[", 
   RowBox[{"m_", ",", " ", "None"}], "]"}], ":=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"0", ",", " ", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expandDynamicalDrags", "[", 
    RowBox[{"m_", ",", " ", "_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"dynamicalSystem", "::", "drag"}], "]"}], ";", " ", "$Failed"}],
     ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "expandDynamicalMasses", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalMasses", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"None", " ", "|", " ", "0"}]}], "]"}], ":=", " ", 
  "None"}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalMasses", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"masses_", "?", "validDynamicalParamQ"}]}], "]"}], ":=", " ", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"masses", ",", " ", 
    RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalMasses", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"masses", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "validDynamicalParamQ"}], "}"}]}]}], "]"}], ":=", 
  " ", 
  RowBox[{"masses", " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "masses", "]"}], " ", "\[Equal]", " ", 
    RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalMasses", "[", 
   RowBox[{"m_", ",", " ", "_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"dynamicalSystem", "::", "mass"}], "]"}], ";", " ", "$Failed"}], 
   ")"}]}]}], "Code",
 CellLabel->
  "In[6923]:=",ExpressionUUID->"a850dc3b-621f-4bd6-aaee-873395b1bb45"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parseInitialConditions", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{
      RowBox[{"_", "?", "MatrixQ"}], " ", "|", " ", "Automatic"}]}]}], "]"}], 
  ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"parsePositions", "[", 
     RowBox[{"m", ",", " ", "positions"}], "]"}], ",", " ", 
    RowBox[{"parseVelocities", "[", 
     RowBox[{"m", ",", " ", "None"}], "]"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"parseInitialConditions", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"positions", " ", ":", " ", 
       RowBox[{
        RowBox[{"_", "?", "MatrixQ"}], " ", "|", " ", "Automatic"}]}], ",", 
      " ", 
      RowBox[{"velocities_", "?", "MatrixQ"}]}], "}"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"parsePositions", "[", 
     RowBox[{"m", ",", " ", "positions"}], "]"}], ",", " ", 
    RowBox[{"parseVelocities", "[", 
     RowBox[{"m", ",", " ", "velocities"}], "]"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parseInitialConditions", "[", 
    RowBox[{"m_", ",", " ", "_"}], "]"}], ":=", "$Failed"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"parsePositions", "[", 
   RowBox[{"m_", ",", " ", "Automatic"}], "]"}], ":=", 
  RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"parsePositions", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"positions_", "?", "MatrixQ"}]}], "]"}], ":=", 
  RowBox[{"positions", " ", "/;", " ", 
   RowBox[{"numericCoordinatesQ", "[", 
    RowBox[{"m", ",", "positions"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parsePositions", "[", 
    RowBox[{"m_", ",", " ", 
     RowBox[{"positions_", "?", "MatrixQ"}]}], "]"}], ":=", "$Failed"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"parseVelocities", "[", 
   RowBox[{"m_", ",", " ", "velocities_"}], "]"}], ":=", " ", 
  RowBox[{"velocities", " ", "/;", " ", 
   RowBox[{"numericCoordinatesQ", "[", 
    RowBox[{"m", ",", " ", "velocities"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"parseVelocities", "[", 
   RowBox[{"m_", ",", " ", "None"}], "]"}], ":=", " ", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"0", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], ",", " ", 
      RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], "}"}]}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[6933]:=",ExpressionUUID->"d0b96612-939a-4fb2-8f6e-a03a87c8f541"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystem", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"initialConditions_", " ", ":", " ", "Automatic"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"time_Symbol", ",", " ", 
       RowBox[{"start_", "?", "NumericQ"}], ",", " ", 
       RowBox[{"end_", "?", "NumericQ"}]}], "}"}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"energy", " ", "=", " ", 
        RowBox[{
         RowBox[{"mechanismEnergy", "[", 
          RowBox[{"m", ",", " ", 
           RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", 
            RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}]}]}], 
          "]"}], " ", "+", " ", 
         RowBox[{"OptionValue", "[", "\"\<additional\>\"", "]"}]}]}], ",", 
       "\n", 
       RowBox[{"parsedInitialConditions", " ", "=", " ", 
        RowBox[{"parseInitialConditions", "[", 
         RowBox[{"m", ",", " ", "initialConditions"}], "]"}]}], ",", "\n", 
       RowBox[{"drags", " ", "=", " ", 
        RowBox[{"expandDynamicalDrags", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<drag\>\"", "]"}]}], "]"}]}], ",", 
       "\n", 
       RowBox[{"masses", " ", "=", " ", 
        RowBox[{"expandDynamicalMasses", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<mass\>\"", "]"}]}], "]"}]}]}], 
      "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"res", "=", 
          RowBox[{"dynamicalSystemInternal", "[", 
           RowBox[{
           "m", ",", " ", "masses", ",", " ", "drags", ",", " ", 
            "parsedInitialConditions", ",", " ", "energy", ",", " ", 
            RowBox[{"{", 
             RowBox[{"time", ",", " ", "start", ",", " ", "end"}], "}"}], ",",
             " ", 
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"{", "opt", "}"}], ",", " ", 
              RowBox[{"Options", "[", "NDSolve", "]"}]}], "]"}]}], " ", 
           "]"}]}], "}"}], ",", "\n", "\t\t", 
        RowBox[{"res", " ", "/;", " ", 
         RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", "\t", "]"}], 
      " ", "/;", " ", 
      RowBox[{
       RowBox[{"drags", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
       RowBox[{"masses", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
       RowBox[{"parsedInitialConditions", " ", "=!=", " ", "$Failed"}]}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"dynamicalSystem", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"_", " ", ":", " ", "Automatic"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"_", ",", "_", ",", "_"}], "}"}]}], " ", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"dynamicalSystem", "::", "timespec"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"dynamicalSystem", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"_", " ", ":", " ", "Automatic"}], ",", " ", 
    RowBox[{"Except", "[", "_List", "]"}]}], " ", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"dynamicalSystem", "::", "timespec"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[6941]:=",ExpressionUUID->"d9dde884-5ff3-466a-b915-739df74cc11a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dynamicalSystemEquationsInternal", "[", 
   RowBox[{
   "m_", ",", " ", "initialPositions_", ",", " ", "v_", ",", " ", 
    "timeVariable_", ",", " ", "masses_", ",", " ", "drags_", ",", " ", 
    "energy_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pinnedVertices", " ", "=", " ", 
       RowBox[{"Dispatch", "[", " ", 
        RowBox[{"solveLinearEquations", "[", 
         RowBox[{
          RowBox[{"constraintEquations", "[", 
           RowBox[{"m", ",", "initialPositions", ",", "Infinity", ",", 
            RowBox[{"\"\<output\>\"", "\[Rule]", "vertexPosition"}]}], "]"}], 
          ",", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{"vertexPosition", "[", "m", "]"}], "]"}]}], " ", "]"}], 
        " ", "]"}]}], ",", " ", "\n", "variables", ",", " ", "gradient", ",", 
      " ", "equationSystem", ",", " ", "i", ",", " ", "j", ",", " ", "t"}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"variables", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"vertexPosition", "[", "m", "]"}], " ", "/.", " ", 
        "pinnedVertices"}], " ", "/.", " ", 
       RowBox[{
        RowBox[{"vertexPosition", "[", 
         RowBox[{"i_", ",", " ", "j_"}], "]"}], " ", "\[RuleDelayed]", " ", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"i", ",", " ", "j"}], "]"}], "[", "t", "]"}]}]}]}], ";", 
     "\n", "\t", 
     RowBox[{"gradient", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Partition", "[", " ", 
         RowBox[{
          RowBox[{"D", "[", " ", 
           RowBox[{"energy", ",", " ", 
            RowBox[{"{", " ", 
             RowBox[{"Flatten", "[", " ", 
              RowBox[{"vertexPosition", "[", "m", "]"}], " ", "]"}], " ", 
             "}"}]}], "]"}], ",", " ", 
          RowBox[{"embeddingDimension", "[", "m", "]"}]}], " ", "]"}], " ", "/.",
         " ", "pinnedVertices"}], " ", "/.", " ", 
       RowBox[{
        RowBox[{"vertexPosition", "[", 
         RowBox[{"i_", ",", " ", "j_"}], "]"}], " ", "\[RuleDelayed]", " ", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"i", ",", " ", "j"}], "]"}], "[", "t", "]"}]}]}]}], ";", 
     "\n", "\t", "\n", "\t", 
     RowBox[{"equationSystem", " ", "=", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"masses", " ", "===", " ", "None"}], ",", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{"Dimensions", "[", "initialPositions", "]"}]}], " ", 
            "]"}], ",", " ", 
           RowBox[{
            RowBox[{"DiagonalMatrix", "[", " ", "masses", " ", "]"}], " ", 
            ".", " ", 
            RowBox[{"D", "[", " ", 
             RowBox[{"variables", ",", " ", 
              RowBox[{"{", 
               RowBox[{"t", ",", " ", "2"}], "}"}]}], " ", "]"}]}]}], " ", 
          "]"}], " ", "\n", "\t\t\t", "+", " ", 
         RowBox[{
          RowBox[{"DiagonalMatrix", "[", " ", "drags", " ", "]"}], " ", ".", 
          " ", 
          RowBox[{"D", "[", " ", 
           RowBox[{"variables", ",", " ", 
            RowBox[{"{", 
             RowBox[{"t", ",", " ", "1"}], "}"}]}], " ", "]"}]}], " ", "+", 
         " ", "gradient"}], "\n", "\t", "]"}], " ", "/.", " ", 
       RowBox[{"t", "\[Rule]", "timeVariable"}]}]}], ";", "\n", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "we", " ", "need", " ", "to", " ", "explicitly", " ", "eliminate", " ", 
       "the", " ", "equations", " ", "that", " ", "are", " ", "predetermined",
        " ", "by", " ", "the", " ", "pinned", " ", "vertices", " ", "or", " ",
        "there", " ", "will", " ", "be", " ", "too", " ", "many", " ", 
       "equations"}], "*)"}], "\n", "\t", 
     RowBox[{"Pick", "[", " ", 
      RowBox[{"equationSystem", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Not", "[", " ", 
          RowBox[{"NumericQ", "[", "#", "]"}], " ", "]"}], "&"}], " ", "/@", 
        " ", 
        RowBox[{"Flatten", "[", "variables", "]"}]}]}], " ", "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[6944]:=",ExpressionUUID->"78b2f67f-dc48-44fe-9713-fc2cd8b3ffff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dynamicalSystemInternal", "[", 
   RowBox[{"m_", ",", " ", "masses_", ",", " ", "drags_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"initialPositions_", ",", " ", "initialVelocities_"}], "}"}], 
    ",", " ", "energy_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"timeVariable_", ",", " ", "start_", ",", " ", "end_"}], "}"}], 
    ",", " ", "opt_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "equations", ",", " ", "v", ",", " ", "variables", ",", " ", 
      "processedVariables", ",", " ", "solution", ",", " ", "i", ",", " ", 
      "j", ",", " ", "\n", 
      RowBox[{"pinnedVertices", " ", "=", " ", 
       RowBox[{"Dispatch", "[", " ", 
        RowBox[{"solveLinearEquations", "[", 
         RowBox[{
          RowBox[{"constraintEquations", "[", 
           RowBox[{"m", ",", "initialPositions", ",", "Infinity", ",", 
            RowBox[{"\"\<output\>\"", "\[Rule]", "vertexPosition"}]}], "]"}], 
          ",", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{"vertexPosition", "[", "m", "]"}], "]"}]}], " ", "]"}], 
        " ", "]"}]}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"list", " ", "only", " ", "the", " ", "non"}], "-", 
      RowBox[{"pinned", " ", "variables"}]}], "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"variables", " ", "=", " ", 
      RowBox[{"Flatten", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"vertexPosition", "[", "m", "]"}], " ", "/.", " ", 
         "pinnedVertices"}], " ", "/.", " ", 
        RowBox[{
         RowBox[{"vertexPosition", "[", 
          RowBox[{"i_", ",", " ", "j_"}], "]"}], " ", "\[RuleDelayed]", " ", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"i", ",", " ", "j"}], "]"}], "[", "timeVariable", 
          "]"}]}]}], " ", "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"equations", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{"the", " ", "dynamical", " ", "system", " ", "equations"}], 
         "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"dynamicalSystemEquationsInternal", "[", 
          RowBox[{
          "m", ",", " ", "initialPositions", ",", " ", "v", ",", " ", 
           "timeVariable", ",", " ", "masses", ",", " ", "drags", ",", " ", 
           "energy"}], "]"}], ",", "\n", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"initial", " ", "positions"}], "*)"}], "\n", "\t\t", 
         RowBox[{"Select", "[", " ", 
          RowBox[{
           RowBox[{"Flatten", "[", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"variables", " ", "/.", " ", 
               RowBox[{"timeVariable", "\[Rule]", "0"}]}], ")"}], " ", "-", 
             " ", 
             RowBox[{"Flatten", "[", "initialPositions", "]"}]}], "]"}], ",", 
           " ", 
           RowBox[{
            RowBox[{"Not", "[", " ", 
             RowBox[{"NumericQ", "[", " ", "#", " ", "]"}], " ", "]"}], 
            "&"}]}], " ", "]"}], ",", "\n", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"initial", " ", "velocities", " ", "if", " ", "needed"}], 
          "*)"}], "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"masses", " ", "===", " ", "None"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"Select", "[", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", " ", 
                RowBox[{
                 RowBox[{"D", "[", " ", 
                  RowBox[{"variables", ",", " ", "timeVariable"}], " ", "]"}],
                  " ", "/.", " ", 
                 RowBox[{"timeVariable", "\[Rule]", "0"}]}], " ", ")"}], " ", 
               "-", " ", 
               RowBox[{"Flatten", "[", "initialVelocities", "]"}]}], ")"}], 
             ",", " ", 
             RowBox[{
              RowBox[{"Not", "[", " ", 
               RowBox[{"NumericQ", "[", " ", "#", " ", "]"}], " ", "]"}], 
              "&"}]}], " ", "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "}"}],
        "]"}]}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"solution", " ", "=", " ", 
      RowBox[{"NDSolve", "[", " ", 
       RowBox[{
        RowBox[{"Thread", "[", " ", 
         RowBox[{"equations", " ", "\[Equal]", " ", "0"}], " ", "]"}], ",", 
        "  ", 
        RowBox[{"Select", "[", " ", 
         RowBox[{"variables", ",", " ", 
          RowBox[{
           RowBox[{"Not", "[", " ", 
            RowBox[{"NumericQ", "[", "#", "]"}], " ", "]"}], " ", "&"}]}], 
         " ", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"timeVariable", ",", " ", "start", ",", " ", "end"}], " ", 
         "}"}], ",", " ", "opt"}], " ", "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "did", " ", "NDSolve", " ", "return", " ", "a", " ", "list", " ", "of", 
       " ", 
       RowBox[{"rules", "?"}]}], "*)"}], "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MatchQ", "[", 
        RowBox[{"solution", ",", 
         RowBox[{"{", 
          RowBox[{"{", "__Rule", "}"}], "}"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"vertexPosition", "[", "m", "]"}], " ", "/.", " ", 
          "pinnedVertices"}], " ", "/.", " ", 
         RowBox[{
          RowBox[{"vertexPosition", "[", 
           RowBox[{"i_", ",", " ", "j_"}], "]"}], " ", "\[RuleDelayed]", " ", 
          
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "[", "timeVariable", 
           "]"}]}]}], " ", "/.", " ", 
        RowBox[{"solution", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t\t", "$Failed"}], 
      "\n", "\t", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6945]:=",ExpressionUUID->"e09521af-e51f-454e-acee-9ae42f06aee1"]
}, Closed]],

Cell[CellGroupData[{

Cell["monteCarloRun[]", "Subsection",ExpressionUUID->"70fa9bc8-0774-4c9e-b67f-9bd9be81f808"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "monteCarloRun", "]"}], " ", "=", " ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Options", "[", "constraintEquations", "]"}], ",", "\n", "\t", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"\"\<energy\>\"", "\[Rule]", "Automatic"}], ",", " ", 
        RowBox[{"\"\<initial\>\"", "\[Rule]", "Automatic"}]}], "\n", "\t", 
       "}"}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"beta_", "?", "temperatureQ"}], ",", " ", 
     RowBox[{"steps_", "?", "stepsQ"}], " ", ",", " ", 
     RowBox[{"distribution_", "?", "distributionQ"}], ",", " ", 
     RowBox[{"options", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"constraintData", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], " ", "\[Rule]", " ", "0"}], 
             ")"}], "&"}], " ", "/@", " ", 
           RowBox[{
            RowBox[{"processConstraintEquations", "[", "\n", "\t\t", 
             RowBox[{
              RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "\n", "\t\t", 
              RowBox[{"constraintEquations", "[", " ", 
               RowBox[{"m", ",", " ", 
                RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
                "Infinity", ",", " ", 
                RowBox[{"Flatten", " ", "@", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "\"\<output\>\"", " ", "\[Rule]", " ", "vertexPosition"}], 
                   ",", " ", 
                   RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "options", "}"}], ",", " ", 
                    RowBox[{"Options", "[", "constraintEquations", "]"}]}], 
                    " ", "]"}]}], " ", "}"}]}]}], " ", "]"}]}], "\n", "\t", 
             "]"}], "[", "\"\<linear solutions\>\"", "]"}]}], ")"}], " ", "/.",
          " ", 
         RowBox[{"positionRules", "[", " ", 
          RowBox[{
           RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", "+", " ", 
           RowBox[{"vertexDisplacement", "[", "m", "]"}]}], "]"}]}]}], ",", 
       "\n", "\t", 
       RowBox[{"energy", " ", "=", " ", 
        RowBox[{"getEnergy", "[", 
         RowBox[{"m", ",", 
          RowBox[{"OptionValue", "[", "\"\<energy\>\"", "]"}]}], "]"}]}], ",",
        "\n", "\t", "firstEnergy", ",", "\n", "\t", 
       RowBox[{"firstPositions", " ", "=", " ", 
        RowBox[{"processInitialPositions", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<initial\>\"", "]"}]}], "]"}]}], 
       ",", "\n", "\t", "results"}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"firstEnergy", " ", "=", " ", 
       RowBox[{"evaluateEnergy", "[", " ", 
        RowBox[{"firstPositions", ",", " ", "energy"}], " ", "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"results", " ", "=", " ", 
       RowBox[{"Transpose", " ", "@", " ", 
        RowBox[{"NestList", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"monteCarloStep", "[", " ", 
            RowBox[{
            "energy", ",", " ", "#", ",", " ", "beta", ",", " ", 
             "distribution", ",", " ", "constraintData"}], " ", "]"}], "&"}], 
          ",", " ", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "firstEnergy", ",", " ", "firstPositions"}],
            "}"}], ",", " ", "\n", "\t\t", "steps"}], "\n", "\t", "]"}]}]}], 
      ";", "\n", "\t", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"N", "@", 
          RowBox[{"Total", "[", 
           RowBox[{"results", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "/", 
         RowBox[{"Length", "[", 
          RowBox[{"results", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", " ", 
        RowBox[{"results", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"results", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], " ", "}"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"getEnergy", "[", " ", 
   RowBox[{"m_", ",", " ", "Automatic"}], "]"}], " ", ":=", " ", 
  RowBox[{"mechanismEnergy", "[", "m", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"getEnergy", "[", " ", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"energy_", "?", "compiledMechanismEnergyQ"}]}], "]"}], " ", ":=", 
  " ", "energy"}], "\n", 
 RowBox[{
  RowBox[{"getEnergy", "[", " ", 
   RowBox[{"m_", ",", " ", "expression_"}], "]"}], ":=", " ", 
  RowBox[{"expression", " ", "/;", " ", 
   RowBox[{"analyticEnergyQ", "[", 
    RowBox[{"expression", ",", " ", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergy", "[", " ", 
    RowBox[{"m_", ",", " ", "_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"monteCarloRun", "::", "energy"}], "]"}], ";", "\n", "\t", 
     RowBox[{"mechanismEnergy", "[", "m", "]"}]}], "\n", ")"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"processInitialPositions", "[", 
   RowBox[{"m_", ",", " ", "Automatic"}], "]"}], ":=", 
  RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"processInitialPositions", "[", 
   RowBox[{"m_", ",", " ", "pos_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"pos", " ", "/;", " ", 
   RowBox[{"numericCoordinatesQ", "[", 
    RowBox[{"m", ",", "pos"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"processInitialPositions", "[", 
    RowBox[{"m_", ",", " ", "pos_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"monteCarloRun", "::", "pos"}], "]"}], ";", "  ", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"temperatureQ", "[", " ", 
   RowBox[{"beta_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
       RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], " ", "]"}], " ", ":=", 
  " ", "True"}], "\n", 
 RowBox[{
  RowBox[{"temperatureQ", "[", " ", 
   RowBox[{"beta_", "?", "NumericQ"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"monteCarloRun", "::", "neg"}], "]"}], ";", " ", "False"}], 
   ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"temperatureQ", "[", " ", "beta_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"monteCarloRun", "::", "num"}], "]"}], ";", " ", "False"}], 
    ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"stepsQ", "[", " ", 
   RowBox[{"steps_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"IntegerQ", "[", "#", "]"}], " ", "&&", " ", 
       RowBox[{"#", " ", ">", " ", "0"}]}], " ", "&"}], ")"}]}], " ", "]"}], 
  " ", ":=", " ", "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stepsQ", "[", " ", "steps_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"monteCarloRun", "::", "steps"}], "]"}], ";", " ", "False"}], 
    ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"distributionQ", "[", " ", 
   RowBox[{"distribution_", "?", "DistributionParameterQ"}], " ", "]"}], " ", 
  ":=", " ", "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"distributionQ", "[", " ", "distribution_", " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"monteCarloRun", "::", "distr"}], "]"}], ";", " ", "False"}], 
    ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "energy"}], "=", 
   "\"\<Option \\\"energy\\\" should be an analytical energy, a compiled \
energy, or Automatic.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "neg"}], "=", 
   "\"\<Inverse temperature should be positive.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "pos"}], "=", 
   "\"\<Initial positions are not compatible with mechanism.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "num"}], "=", 
   "\"\<Inverse temperature should be numerical and positive.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "steps"}], "=", 
   "\"\<Third argument should be a positive integer indicated the number of \
steps to take.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "distr"}], "=", 
   "\"\<Fourth argument should be a valid probability distribution.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[6946]:=",ExpressionUUID->"0b3e82e1-9782-44ba-a8ab-6a1e680d3561"],

Cell[BoxData[
 RowBox[{
  RowBox[{"monteCarloStep", "[", " ", 
   RowBox[{"energy_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"_", ",", " ", "oldEnergy_", ",", " ", "oldPositions_"}], "}"}], 
    " ", ",", " ", "beta_", ",", " ", "distribution_", ",", " ", "rules_"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"newPositions", " ", "=", " ", 
       RowBox[{"randomDisplacements", "[", " ", 
        RowBox[{"oldPositions", ",", " ", 
         RowBox[{
         "\"\<distribution\>\"", " ", "\[Rule]", " ", "distribution"}], ",", 
         " ", 
         RowBox[{"\"\<rules\>\"", " ", "\[Rule]", " ", "rules"}]}], " ", 
        "]"}]}], ",", "\n", "\t", "newEnergy"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"newEnergy", " ", "=", " ", 
      RowBox[{"evaluateEnergy", "[", 
       RowBox[{"newPositions", ",", " ", "energy"}], "]"}]}], ";", "\n", "\t",
      "\n", "\t", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"newEnergy", " ", "\[LessEqual]", " ", "oldEnergy"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "newEnergy", ",", " ", "newPositions"}], "}"}],
        ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "<", 
        RowBox[{"Exp", "[", 
         RowBox[{"beta", " ", 
          RowBox[{"(", 
           RowBox[{"oldEnergy", "-", "newEnergy"}], ")"}]}], " ", "]"}]}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "newEnergy", ",", " ", "newPositions"}], "}"}],
        ",", "\[IndentingNewLine]", "\t\t", "True", ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "oldEnergy", ",", "oldPositions"}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[6968]:=",ExpressionUUID->"908b3a1d-a33f-4549-ac93-a0bb0355f103"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["global rigidity", "Section",ExpressionUUID->"10b53468-301a-456a-9396-7a1b3738e486"],

Cell[CellGroupData[{

Cell["isometricTrajectory[]", "Subsection",ExpressionUUID->"b2ee595b-130d-48ce-a5ad-4e7ffb538f90"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", " ", "isometricTrajectory", " ", "]"}], " ", ":=",
     " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<initial\>\"", " ", "\[Rule]", " ", "Automatic"}], ",", 
      "\n", "\t", 
      RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", "None"}], ",", "\n",
       "\t", 
      RowBox[{"Method", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Minimization\>\"", ",", " ", 
         RowBox[{"MaxIterations", " ", "\[Rule]", " ", 
          RowBox[{"10", "^", "4"}]}]}], "}"}]}], ",", "\n", "\t", 
      RowBox[{"Tolerance", " ", "\[Rule]", " ", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "8"}], ")"}]}]}], ",", "\n", "\t", 
      RowBox[{"\"\<stepsize\>\"", " ", "\[Rule]", " ", "0.1"}], ",", "\n", 
      "\t", 
      RowBox[{"\"\<compile\>\"", " ", "\[Rule]", " ", "False"}]}], "\n", 
     "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"isometricTrajectory", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "directionSpecification_", 
    ",", " ", 
    RowBox[{"steps_", "?", "stepNumberQ"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"positions", " ", "=", " ", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<initial\>\"", "]"}], " ", "===", 
          " ", "Automatic"}], ",", " ", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<initial\>\"", "]"}]}], " ", "]"}]}],
       ",", "\n", "\t", 
      RowBox[{"methodOptions", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Rest", "[", 
         RowBox[{"OptionValue", "[", "Method", "]"}], "]"}], "]"}]}]}], "\n", 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"With", "[", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"isometricTrajectoryStepperInternal", "[", " ", "\n", "\t\t", 
          RowBox[{"m", ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"positions", ",", " ", "directionSpecification"}], "}"}], 
           ",", " ", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"steps", ",", " ", 
             RowBox[{"OptionValue", "[", "\"\<stepsize\>\"", "]"}]}], "}"}], 
           ",", " ", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<compile\>\"", "]"}], ",", " ", 
             RowBox[{"constraintVector", "[", 
              RowBox[{"positions", ",", 
               RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}]}], 
              "]"}]}], "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"OptionValue", "[", "Method", "]"}], "]"}], ",", " ", 
             RowBox[{"OptionValue", "[", "Tolerance", "]"}], ",", " ", 
             "methodOptions"}], " ", "}"}]}], "\n", "\t\t", "]"}]}], "}"}], 
       ",", "\n", "\t\t", 
       RowBox[{"res", " ", "/;", " ", 
        RowBox[{
         RowBox[{"Head", "[", "res", "]"}], " ", "===", " ", "List"}]}]}], 
      "\n", "\t", "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{"directionQ", "[", " ", 
       RowBox[{"m", ",", " ", "directionSpecification"}], " ", "]"}], " ", "&&",
       " ", 
      RowBox[{"positionsQ", "[", " ", 
       RowBox[{"m", ",", " ", "positions"}], " ", "]"}], " ", "&&", " ", 
      RowBox[{"stepsizeQ", "[", 
       RowBox[{"OptionValue", "[", "\"\<stepsize\>\"", "]"}], "]"}], " ", "&&",
       " ", 
      RowBox[{"compileQ", "[", " ", 
       RowBox[{"OptionValue", "[", "\"\<compile\>\"", "]"}], " ", "]"}]}]}]}],
    "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6969]:=",ExpressionUUID->"f766b5d0-2b0a-4658-998d-1d2ffeb53538"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectory", "::", "steps"}], "=", 
   "\"\<Number of steps is not a positive integer.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stepNumberQ", "[", " ", 
   RowBox[{"num_Integer", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], ")"}]}], " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stepNumberQ", "[", " ", "num_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"Message", "[", " ", 
      RowBox[{"isometricTrajectory", "::", "steps"}], "]"}], ";", " ", 
     "False"}], " ", ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectory", "::", "dir"}], "=", 
   "\"\<Initial direction is not numerical.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectory", "::", "dir2"}], "=", 
   "\"\<Initial direction is not a valid set of vertex displacements.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"directionQ", "[", " ", 
   RowBox[{"m_", ",", " ", "v_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"True", " ", "/;", " ", 
   RowBox[{"numericCoordinatesQ", "[", 
    RowBox[{"m", ",", " ", "v"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"directionQ", "[", " ", 
    RowBox[{"m_", ",", " ", "v_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"vertexCoordinatesQ", "[", 
      RowBox[{"m", ",", " ", "v"}], "]"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", " ", 
       RowBox[{"isometricTrajectory", "::", "dir2"}], " ", "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", "True", ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", " ", 
       RowBox[{"isometricTrajectory", "::", "dir"}], " ", "]"}], ";", " ", 
      "False"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectory", "::", "pos"}], "=", 
   "\"\<Initial positions are not numerical or are not compatible with \
mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectory", "::", "pos2"}], "=", 
   "\"\<Initial positions are not a valid set of vertex positions.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"positionsQ", "[", " ", 
   RowBox[{"m_", ",", " ", "v_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"True", " ", "/;", " ", 
   RowBox[{"numericCoordinatesQ", "[", 
    RowBox[{"m", ",", " ", "v"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"positionsQ", "[", " ", 
    RowBox[{"m_", ",", " ", "v_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"vertexCoordinatesQ", "[", 
      RowBox[{"m", ",", " ", "v"}], "]"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", " ", 
       RowBox[{"isometricTrajectory", "::", "pos2"}], " ", "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", "True", ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", " ", 
       RowBox[{"isometricTrajectory", "::", "pos"}], " ", "]"}], ";", " ", 
      "False"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectory", "::", "stepsize"}], "=", 
   "\"\<Option \\\"stepsize\\\" should be a positive, real number.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"stepsizeQ", "[", " ", 
   RowBox[{"num_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], ")"}]}], " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stepsizeQ", "[", " ", "num_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", " ", 
      RowBox[{"isometricTrajectory", "::", "stepsize"}], " ", "]"}], ";", " ",
      "False"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectory", "::", "compile"}], "=", 
   "\"\<Option \\\"compile\\\" should be a Boolean indicating if the \
constraints should be precompiled or compiled energy.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"compileQ", "[", " ", 
   RowBox[{"x_", "?", "BooleanQ"}], " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"compileQ", "[", " ", 
   RowBox[{"x_", "?", "compiledMechanismEnergyQ"}], " ", "]"}], " ", ":=", 
  " ", "True"}], "\n", 
 RowBox[{
  RowBox[{"compileQ", "[", " ", "_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"isometricTrajectory", "::", "compile"}], "]"}], ";", " ", 
    "False"}], ")"}]}]}], "Code",
 CellLabel->
  "In[6971]:=",ExpressionUUID->"d1684dc1-97c6-4969-af60-093d8fe550b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"isometricTrajectoryStepperInternal", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"initialPositions_", ",", "initialDirection_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"steps_", ",", "stepsize_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"energy_", ",", "constraintVec_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"method_", ",", "tolerance_", ",", "stepOptions_"}], "}"}]}], 
   "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"energyTemp", ",", "out"}], "}"}], ",", "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"variables", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}]}], ",", "\n", 
        "\t", 
        RowBox[{"blankPositions", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"vertexPosition", "[", "m", "]"}], "]"}]}], ",", "\n", "\t", 
        RowBox[{"positions", "=", 
         RowBox[{"Flatten", "[", "initialPositions", "]"}]}], ",", "\n", "\t", 
        RowBox[{"initialDirectionNormalized", "=", 
         RowBox[{"Normalize", "[", 
          RowBox[{"Flatten", "[", "initialDirection", "]"}], "]"}]}], ",", 
        "\n", "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{
         "figure", " ", "out", " ", "the", " ", "constraints", " ", "we", " ",
           "want", " ", "to", " ", "use", " ", "at", " ", "1", "st", " ", 
          "order", " ", "and", " ", "at", " ", "infinite", " ", "order"}], 
         "*)"}], "\n", "\t", 
        RowBox[{"firstOrderConstraints", "=", 
         RowBox[{"Join", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"constraintEquationsInternal", "[", " ", 
            RowBox[{"m", ",", " ", 
             RowBox[{"vertexPosition", "[", "m", "]"}], ",", " ", "1", ",", 
             " ", "_", ",", " ", "None", ",", " ", "vertexDisplacement"}], 
            " ", "]"}], ",", "\n", "\t\t", 
           RowBox[{"reduceConstraintToOrder", "[", 
            RowBox[{
             RowBox[{"vertexPosition", "[", "m", "]"}], ",", "constraintVec", 
             ",", "1"}], "]"}]}], "\n", "\t\t", "]"}]}], ",", "\n", "\n", 
        "\t", 
        RowBox[{"fullConstraints", "=", 
         RowBox[{"Join", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"constraintEquationsInternal", "[", " ", 
            RowBox[{
            "m", ",", " ", "initialPositions", ",", " ", "Infinity", ",", " ",
              "_", ",", " ", "None", ",", " ", "vertexPosition"}], " ", "]"}],
            ",", "\n", "\t\t", "constraintVec"}], "\n", "\t\t", "]"}]}]}], 
       "\n", "\t", "}"}], ",", "\n", "\n", "\t", 
      RowBox[{"With", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"{", "\n", "\n", "\t", 
         RowBox[{"(*", 
          RowBox[{
          "this", " ", "function", " ", "will", " ", "find", " ", "the", " ", 
           "numerical", " ", "1", "st", " ", "order", " ", "constraint", " ", 
           "matrix"}], "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"constraintMatFunction", "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"CoefficientArrays", "[", 
               RowBox[{
                RowBox[{"firstOrderConstraints", "/.", 
                 RowBox[{"Dispatch", "[", 
                  RowBox[{"Thread", "[", 
                   RowBox[{"blankPositions", "\[Rule]", "#"}], "]"}], "]"}]}],
                 ",", "variables"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "&"}], ")"}]}], ",", "\n", "\n",
           "\t", 
          RowBox[{"(*", 
           RowBox[{
           "figure", " ", "out", " ", "the", " ", "energy", " ", "we", " ", 
            "want", " ", "to", " ", "use"}], "*)"}], "\n", "\t", 
          RowBox[{"constraintEnergy", "=", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"energy", "===", "False"}], ",", " ", 
             RowBox[{"fullConstraints", " ", ".", " ", "fullConstraints"}], 
             ",", "\n", "\t\t", 
             RowBox[{"energy", "===", "True"}], ",", " ", 
             RowBox[{"compiledMechanismEnergy", "[", 
              RowBox[{
               RowBox[{"{", "}"}], ",", "\n", "\t\t\t", 
               RowBox[{"compileEnergy", "[", 
                RowBox[{"m", ",", 
                 RowBox[{
                 "fullConstraints", " ", ".", " ", "fullConstraints"}], ",", 
                 RowBox[{"{", "}"}], ",", "$compilationTarget"}], "]"}], ",", 
               "\n", "\t\t\t", 
               RowBox[{"compileGradient", "[", 
                RowBox[{"m", ",", 
                 RowBox[{
                 "fullConstraints", " ", ".", " ", "fullConstraints"}], ",", 
                 RowBox[{"{", "}"}], ",", "$compilationTarget"}], "]"}]}], 
              "]"}], ",", "\n", "\t\t", "True", ",", " ", "energy"}], " ", 
            RowBox[{"(*", 
             RowBox[{
             "user", " ", "may", " ", "be", " ", "passing", " ", "an", " ", 
              "energy"}], "*)"}], "\n", "\t\t", "]"}]}]}], "\n", "}"}], ",", 
        "\n", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"ArrayReshape", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], ",", 
              RowBox[{"MeshCellCount", "[", 
               RowBox[{"m", ",", "0"}], "]"}], ",", 
              RowBox[{"embeddingDimension", "[", "m", "]"}]}], "}"}]}], "]"}],
           "&"}], "[", " ", "\n", "\t\t", 
         RowBox[{
          RowBox[{"FoldList", "[", "\n", "\t\t\t", 
           RowBox[{"(*", 
            RowBox[{"take", " ", "one", " ", "step"}], "*)"}], "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"(", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"energyTemp", "=", 
                RowBox[{"evaluateEnergy", "[", 
                 RowBox[{"m", ",", " ", 
                  RowBox[{"#1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                  "constraintEnergy"}], "]"}]}], ";", "\n", "\t\t\t", 
               RowBox[{"isometricTrajectoryStep", "[", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"method", ",", "stepsize", ",", "tolerance"}], 
                  "}"}], ",", "\n", "\t\t\t\t", "m", ",", "\n", "\t\t\t\t", 
                 "#1", ",", " ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "the", " ", "latest", " ", "position", " ", "and", " ", 
                   "step", " ", "direction"}], "*)"}], "\n", "\t\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"constraintMatFunction", "[", 
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                   "constraintEnergy"}], "}"}], ",", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "the", " ", "matrix", " ", "of", " ", "linear", " ", 
                    "constraints"}], ",", " ", 
                    RowBox[{
                    "an", " ", "energy", " ", "associated", " ", "with", " ", 
                    "the", " ", "constraints"}]}], "}"}], " ", "*)"}], "\n", 
                 "\t\t\t\t", "variables", ",", "\n", "\t\t\t\t", 
                 "stepOptions"}], "]"}]}], "\n", "\t\t\t", ")"}], "&"}], ",", 
            "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{"positions", ",", "initialDirectionNormalized"}], "}"}], 
            ",", "\n", "\t\t", 
            RowBox[{"Range", "[", "steps", "]"}]}], "\n", "\t\t", "]"}], "[", 
          
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "\n", "\t", "]"}]}], "\n",
        "]"}]}], "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[6989]:=",ExpressionUUID->"0eac91ae-7451-41aa-9cbb-65adae11b2f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectoryStep", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Minimization\>\"", ",", "stepsize_", ",", "tolerance_"}], 
      "}"}], ",", "m_", ",", 
     RowBox[{"{", 
      RowBox[{"positions_", ",", "lastDirection_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"constraintMat_", ",", "constraintEnergy_"}], "}"}], ",", 
     "var_", ",", "stepOptions_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"nullspaceBasis", "=", 
        RowBox[{"Orthogonalize", "[", 
         RowBox[{"NullSpace", "[", 
          RowBox[{"constraintMat", ",", 
           RowBox[{"FilterRules", "[", 
            RowBox[{"stepOptions", ",", 
             RowBox[{"Options", "[", "NullSpace", "]"}]}], "]"}]}], "]"}], 
         "]"}]}], ",", "\n", "\t", "newDirection", ",", "\n", "\t", 
       "trialStep", " ", ",", " ", "test"}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"newDirection", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "nullspaceBasis", "]"}], ">", "0"}], ",", 
         "\n", "\t\t", 
         RowBox[{"Normalize", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "nullspaceBasis", "]"}], " ", ".", " ", 
           "nullspaceBasis", " ", ".", " ", "lastDirection"}], "]"}], ",", 
         "\n", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"isometricTrajectory", "::", "dirns"}], ",", 
            "positions"}], "]"}], ";", "\n", "\t\t", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"Length", "[", "positions", "]"}]}], "]"}]}]}], "\n", 
        "\t", "]"}]}], ";", "\n", "\t", 
      RowBox[{"trialStep", "=", 
       RowBox[{"positions", "+", " ", 
        RowBox[{"stepsize", " ", "newDirection"}]}]}], ";", "\n", "\n", "\t", 
      
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"evaluateEnergy", "[", 
            RowBox[{
            "m", ",", " ", "trialStep", ",", " ", "constraintEnergy"}], "]"}],
            " ", ">", " ", "tolerance"}], ",", "\n", "\t\t", 
          RowBox[{"Flatten", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"minimizeEnergyInternal", "[", 
             RowBox[{"m", ",", " ", "constraintEnergy", ",", " ", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"positions", "+", 
                 RowBox[{"stepsize", " ", "newDirection"}]}], ",", 
                RowBox[{"embeddingDimension", "[", "m", "]"}]}], "]"}], ",", 
              " ", 
              RowBox[{"FilterRules", "[", 
               RowBox[{"stepOptions", ",", " ", 
                RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], 
             "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "\n", "\t\t", "]"}], ",", "\n", 
          "\t\t", "trialStep"}], "\n", "\t", "]"}], ",", "\n", "\t", 
        "newDirection"}], "\n", "\t", "}"}]}]}], "\n", "]"}]}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectoryStep", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<RandomWalk\>\"", ",", "stepsize_", ",", "tolerance_"}], 
      "}"}], ",", "m_", ",", 
     RowBox[{"{", 
      RowBox[{"positions_", ",", "lastDirection_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"constraintMat_", ",", "constraintEnergy_"}], "}"}], ",", 
     "var_", ",", "stepOptions_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"nullspaceBasis", "=", 
        RowBox[{"Orthogonalize", "[", 
         RowBox[{"NullSpace", "[", 
          RowBox[{"constraintMat", ",", 
           RowBox[{"FilterRules", "[", 
            RowBox[{"stepOptions", ",", 
             RowBox[{"Options", "[", "NullSpace", "]"}]}], "]"}]}], "]"}], 
         "]"}]}], ",", "\n", "newDirection", ",", "trialStep"}], "\n", "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"newDirection", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "nullspaceBasis", "]"}], ">", "0"}], ",", 
         "\n", "\t\t", 
         RowBox[{"Normalize", "[", 
          RowBox[{
           RowBox[{"RandomReal", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "stepsize"}], ",", "stepsize"}], "}"}], ",", 
             RowBox[{"Length", "[", "nullspaceBasis", "]"}]}], "]"}], " ", 
           ".", " ", "nullspaceBasis"}], "]"}], ",", "\n", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"isometricTrajectory", "::", "dirns"}], ",", 
            "positions"}], "]"}], ";", "\n", "\t\t", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"Length", "[", "positions", "]"}]}], "]"}]}]}], "\n", 
        "\t", "]"}]}], ";", "\n", "\t", 
      RowBox[{"trialStep", "=", 
       RowBox[{"positions", "+", " ", 
        RowBox[{"stepsize", " ", "newDirection"}]}]}], ";", "\n", "\t", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"evaluateEnergy", "[", 
            RowBox[{
            "m", ",", " ", "trialStep", ",", " ", "constraintEnergy"}], "]"}],
            " ", ">", " ", "tolerance"}], ",", "\n", "\t\t", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"minimizeEnergyInternal", "[", 
             RowBox[{"m", ",", "constraintEnergy", ",", " ", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"positions", "+", 
                 RowBox[{"stepsize", " ", "newDirection"}]}], ",", 
                RowBox[{"embeddingDimension", "[", "m", "]"}]}], "]"}], ",", 
              " ", 
              RowBox[{"FilterRules", "[", 
               RowBox[{"stepOptions", ",", 
                RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], 
             "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\n", "\t\t", 
          "trialStep"}], "\n", "\t", "]"}], ",", "\n", "\t", "newDirection"}],
        "\n", "\t", "}"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"isometricTrajectoryStep", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"None", ",", "stepsize_", ",", "tolerance_"}], "}"}], ",", "m_", 
    ",", 
    RowBox[{"{", 
     RowBox[{"positions_", ",", "lastDirection_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"constraintMat_", ",", "constraintEnergy_"}], "}"}], ",", "var_",
     ",", "stepOptions_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"nullspaceBasis", "=", 
       RowBox[{"Orthogonalize", "[", 
        RowBox[{"NullSpace", "[", 
         RowBox[{"constraintMat", ",", 
          RowBox[{"FilterRules", "[", 
           RowBox[{"stepOptions", ",", 
            RowBox[{"Options", "[", "NullSpace", "]"}]}], "]"}]}], "]"}], 
        "]"}]}], ",", "\n", "\t", "newDirection"}], "\n", "}"}], ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"newDirection", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "nullspaceBasis", "]"}], ">", "0"}], ",", 
        "\n", "\t\t", 
        RowBox[{"Normalize", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "nullspaceBasis", "]"}], " ", ".", " ", 
          "nullspaceBasis", " ", ".", " ", "lastDirection"}], "]"}], ",", 
        "\n", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"isometricTrajectory", "::", "dirns"}], ",", "positions"}],
           "]"}], ";", "\n", "\t\t", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Length", "[", "positions", "]"}]}], "]"}]}]}], "\n", "\t",
        "]"}]}], ";", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"positions", "+", 
        RowBox[{"stepsize", " ", "newDirection"}]}], ",", "newDirection"}], 
      "}"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6990]:=",ExpressionUUID->"37ffa1ef-c32e-45a9-8b39-8215cca0dac2"]
}, Closed]],

Cell[CellGroupData[{

Cell["findMinimalTrajectory[]", "Subsection",ExpressionUUID->"f701af98-4573-44ce-bac9-9fc083472d2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "findMinimalTrajectory", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<additional\>\"", "->", "0"}], ",", "\n", "\t", 
     RowBox[{"\"\<constraints\>\"", "\[Rule]", "None"}], ",", "\n", "\t", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<ElasticBand\>\"", ",", " ", 
        RowBox[{"MaxIterations", "\[Rule]", 
         RowBox[{"10", "^", "5"}]}], ",", " ", 
        RowBox[{"\"\<stiffness\>\"", " ", "\[Rule]", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "4"}], ")"}]}]}]}], "}"}]}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[6993]:=",ExpressionUUID->"c0491458-47ed-4612-a97b-234998126d75"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"findMinimalTrajectory", "[", "\"\<Methods\>\"", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\"\<ElasticBand\>\"", ",", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<stiffness\>\"", "\[Rule]", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "4"}], ")"}]}]}], "}"}], ",", 
         "\"\<Options[FindMinimum]\>\""}], "]"}]}], "}"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findMinimalTrajectory", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "start_", ",", " ", "end_", 
     ",", " ", "steps_", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"method", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"OptionValue", "[", "Method", "]"}], "}"}], "]"}]}], ",", 
       " ", "res"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"First", "[", "method", "]"}], ",", "\n", "\t\t", 
         "\"\<ElasticBand\>\"", ",", "\n", "\t\t\t", 
         RowBox[{"findMinimalTrajectoryElasticBand", "[", 
          RowBox[{
          "m", ",", " ", "start", ",", " ", "end", ",", " ", "steps", ",", 
           " ", 
           RowBox[{
            RowBox[{"mechanismEnergy", "[", 
             RowBox[{"m", ",", " ", 
              RowBox[{"\"\<constraints\>\"", "->", 
               RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}]}]}], 
             "]"}], "+", 
            RowBox[{"OptionValue", "[", "\"\<additional\>\"", "]"}]}], ",", 
           " ", 
           RowBox[{"Sequence", " ", "@@", " ", 
            RowBox[{"Rest", "[", "method", "]"}]}]}], " ", "]"}], ",", "\n", 
         "\t\t", "_", ",", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"findMinimalTrajectory", "::", "meth"}], "]"}], ";", "\n", 
          "\t\t\t", "$Failed"}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", "\n",
       "\t", 
      RowBox[{"res", " ", "/;", " ", 
       RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findMinimalTrajectory", "::", "method"}], "=", 
   "\"\<`1` is not a recognized method. Only \\\"ElasticBand\\\" is currently \
recognized.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[6994]:=",ExpressionUUID->"258d98b1-596a-4353-9b32-6afddc286af6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"findMinimalTrajectory", "::", "ebstiff"}], "=", 
   "\"\<Stiffness in \\\"ElasticBand\\\" method must be a positive numerical \
value.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findMinimalTrajectory", "::", "ebstart"}], "=", 
   "\"\<Start positions are not numeric coordinates corresponding to \
mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findMinimalTrajectory", "::", "ebend"}], "=", 
   "\"\<End positions are not numeric coordinates corresponding to mechanism.\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"findMinimalTrajectory", "::", "steps"}], "=", 
    "\"\<Number of steps should be a positive integer.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "findMinimalTrajectoryElasticBand", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "findMinimalTrajectoryElasticBand", "]"}], "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<stiffness\>\"", "\[Rule]", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "4"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"findMinimalTrajectoryElasticBand", "[", 
   RowBox[{
   "m_", ",", " ", "startPositions_", ",", "endPositions_", ",", " ", 
    "steps_", ",", " ", "energy_", ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"stiffness", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<stiffness\>\"", "]"}]}], ",", "\n", 
      RowBox[{"fixedVertices", " ", "=", " ", 
       RowBox[{"solveLinearEquations", "[", 
        RowBox[{
         RowBox[{"constraintEquations", "[", 
          RowBox[{"m", ",", "startPositions", ",", "Infinity", ",", 
           RowBox[{"\"\<output\>\"", "\[Rule]", "vertexPosition"}]}], "]"}], 
         ",", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"vertexPosition", "[", "m", "]"}], "]"}]}], " ", "]"}]}], 
      ",", " ", "\n", "variable", ",", " ", "internalVariables", ",", " ", 
      "partialEnergy", ",", " ", "newVariables", ",", " ", "potentialEnergy", 
      ",", " ", "initialConditions", ",", "\n", 
      RowBox[{"minimizationOptions", " ", "=", " ", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "opt", "}"}], ",", 
         RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], ",", " ", 
      "solution"}], "\n", "}"}], ",", "\n", "\n", "\t", 
    RowBox[{
     RowBox[{"Which", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Not", "[", " ", 
        RowBox[{
         RowBox[{"NumericQ", "[", "stiffness", "]"}], " ", "&&", " ", 
         RowBox[{"stiffness", " ", ">", " ", "0"}]}], " ", "]"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"findMinimalTrajectory", "::", "ebstiff"}], "]"}], ";", " ", 
        
        RowBox[{"Return", "[", "$Failed", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"Not", " ", "@", " ", 
        RowBox[{"numericCoordinatesQ", "[", 
         RowBox[{"m", ",", " ", "startPositions"}], "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"findMinimalTrajectory", "::", "ebstart"}], "]"}], ";", " ", 
        
        RowBox[{"Return", "[", "$Failed", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"Not", " ", "@", " ", 
        RowBox[{"numericCoordinatesQ", "[", 
         RowBox[{"m", ",", " ", "endPositions"}], "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"findMinimalTrajectory", "::", "ebend"}], "]"}], ";", " ", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"Not", "[", " ", 
        RowBox[{
         RowBox[{"IntegerQ", "[", "steps", "]"}], " ", "&&", " ", 
         RowBox[{"steps", ">", "0"}]}], " ", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"findMinimalTrajectory", "::", "steps"}], "]"}], ";", " ", 
        RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "\t", "]"}], ";", 
     "\n", "\n", "\t", 
     RowBox[{"internalVariables", "=", " ", 
      RowBox[{"Join", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"positionRules", "[", "startPositions", "]"}], "}"}], ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"MapThread", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", " ", "\[Rule]", " ", "#2"}], "&"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"vertexPosition", "[", "m", "]"}], ",", " ", "#"}], 
               "}"}], ",", " ", "2"}], "]"}], ",", "2"}], "]"}], "&"}], " ", "/@",
          " ", 
         RowBox[{"Array", "[", 
          RowBox[{"variable", ",", " ", 
           RowBox[{"{", 
            RowBox[{"steps", ",", " ", 
             RowBox[{"MeshCellCount", "[", 
              RowBox[{"m", ",", "0"}], "]"}], ",", 
             RowBox[{"embeddingDimension", "[", "m", "]"}]}], "}"}]}], 
          "]"}]}], ",", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"positionRules", "[", "endPositions", "]"}], "}"}]}], "\n", 
       "\t", "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"newVariables", " ", "=", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"vertexPosition", "[", "m", "]"}], " ", "/.", " ", 
         "fixedVertices"}], "]"}], " ", "/.", " ", "internalVariables"}]}], 
     ";", "\n", "\n", "\t", 
     RowBox[{"partialEnergy", " ", "=", " ", 
      RowBox[{"energy", " ", "/.", " ", "fixedVertices"}]}], ";", "\n", "\n", 
     "\t", 
     RowBox[{"potentialEnergy", " ", "=", " ", 
      RowBox[{"Total", " ", "@", " ", 
       RowBox[{"Flatten", " ", "@", " ", 
        RowBox[{"{", "\n", "\t", 
         RowBox[{"(*", 
          RowBox[{"local", " ", "equations"}], "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"partialEnergy", " ", "/.", " ", "#"}], " ", "&"}], 
            ")"}], " ", "/@", " ", "internalVariables"}], ",", "\n", "\n", 
          "\t", 
          RowBox[{"(*", 
           RowBox[{"elastic", " ", "band", " ", "equations"}], "*)"}], "\n", 
          "\t", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"stiffness", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", ".", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "&"}], ")"}], 
           " ", "/@", " ", 
           RowBox[{"Partition", "[", 
            RowBox[{"newVariables", ",", " ", "2", ",", " ", "1"}], "]"}]}]}],
          "\n", "\t", "}"}]}]}]}], ";", "\n", "\n", "\t", 
     RowBox[{"initialConditions", " ", "=", " ", 
      RowBox[{"DeleteCases", "[", " ", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Transpose", " ", "@", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Flatten", "[", " ", 
            RowBox[{"Drop", "[", " ", 
             RowBox[{
              RowBox[{"Rest", " ", "@", " ", "newVariables"}], ",", " ", 
              RowBox[{"-", "1"}]}], "]"}], " ", "]"}], ",", " ", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"startPositions", " ", "+", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"endPositions", " ", "-", " ", "startPositions"}], 
                  ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"steps", "+", "1"}], ")"}]}], " ", "#"}]}], "&"}], 
             " ", "/@", " ", 
             RowBox[{"Range", "[", "steps", "]"}]}], " ", "]"}]}], "}"}]}], 
        ",", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"_", "?", "NumericQ"}], ",", " ", "_"}], "}"}]}], "\n", 
       "\t", "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"solution", " ", "=", " ", 
      RowBox[{"FindMinimum", " ", "@@", " ", 
       RowBox[{"{", 
        RowBox[{
        "potentialEnergy", ",", " ", "initialConditions", ",", " ", 
         "minimizationOptions"}], " ", "}"}]}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "solution", "]"}], " ", "=!=", " ", 
        "FindMinimum"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{"#", ",", 
           RowBox[{"embeddingDimension", "[", "m", "]"}]}], "]"}], "&"}], " ",
         "/@", " ", 
        RowBox[{"(", 
         RowBox[{"newVariables", " ", "/.", " ", 
          RowBox[{"solution", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ",", " ", "$Failed"}], 
      "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[6997]:=",ExpressionUUID->"709fcb9c-08e6-4684-8f67-e39cfa498891"]
}, Closed]],

Cell[CellGroupData[{

Cell["genericGloballyRigidQ[]", "Subsection",ExpressionUUID->"4db4413b-f7dc-4706-99a3-cf121de60a27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "genericGloballyRigidQ", "]"}], "=", 
    RowBox[{"Options", "[", "selfStresses", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"genericGloballyRigidQ", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], ",", " ", 
      RowBox[{"num", " ", "=", " ", 
       RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], "}"}], ",", "\n", 
    "\t", 
    RowBox[{"Or", " ", "@@", " ", 
     RowBox[{"(", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MatrixRank", "[", 
           RowBox[{
            RowBox[{"stressMatrix", "[", 
             RowBox[{"m", ",", " ", "#"}], "]"}], ",", " ", 
            RowBox[{"Tolerance", " ", "\[Rule]", " ", 
             RowBox[{"OptionValue", "[", "Tolerance", "]"}]}]}], " ", "]"}], 
          " ", "\[Equal]", " ", 
          RowBox[{"num", " ", "-", " ", "dim", " ", "-", " ", "1"}]}], ")"}], 
        "&"}], " ", "/@", " ", 
       RowBox[{"selfStresses", "[", 
        RowBox[{"m", ",", " ", "opt"}], "]"}]}], "\n", "\t", ")"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[7004]:=",ExpressionUUID->"2e74c90e-7216-4c80-a620-b44fa8b68c06"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["post", "Section",ExpressionUUID->"a9b198e2-0767-48ac-b046-37bfd6084753"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[7006]:=",ExpressionUUID->"6ac1cc87-b8a2-416f-a747-62b9785cc946"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanisms`origami: specialty functions for origami", "Chapter",ExpressionUUID->"5a8b7cb0-9767-43dc-919a-1b0b391815a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<mechanisms`origami`\>\"", "]"}], 
  ";"}]], "Code",
 CellLabel->
  "In[7008]:=",ExpressionUUID->"98df5a5e-b331-47c0-a64d-450182746a38"],

Cell[CellGroupData[{

Cell["usage", "Section",ExpressionUUID->"16e15631-03bf-4f3b-84e8-5ce1094fae6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"origamiQ", "::", "usage"}], "=", 
   "\"\<origamiQ[ obj ] returns True if obj can be turned into origami \
(perhaps with defects).\>\""}], ";"}]], "Code",
 CellLabel->
  "In[7009]:=",ExpressionUUID->"1b53aab2-8ab9-4869-815e-f8ca47d5626d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kawasakiQ", "::", "usage"}], "=", "\n", 
   "\"\<kawasakiQ[\!\(\*StyleBox[\"origami\",FontSlant->\"Italic\"]\)] \
returns True if it can be determined that the origami satisfies Kawasaki's \
theorem at each vertex.\nUse option ZeroTest to modify how the function tests \
for zero. Use option WorkingPrecision to set a number of digits for the test.\
\>\""}], ";"}]], "Code",
 CellLabel->
  "In[7010]:=",ExpressionUUID->"1fefdd08-ab81-4b03-aab1-7eb192b442a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"foldMatrix", "::", "usage"}], "=", "\n", 
    "\"\<foldMatrix[\!\(\*StyleBox[\"origami\",FontSlant->\"Italic\"]\)] \
returns the fold matrix mapping linear vertex displacements to linear fold \
angle changes.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"angularFoldMatrix", "::", "usage"}], "=", "\n", 
   "\"\<angularFoldMatrix[\!\(\*StyleBox[\"origami\",FontSlant->\"Italic\"]\),\
 (\!\(\*StyleBox[\"positions\",FontSlant->\"Italic\"]\), ) \
\!\(\*StyleBox[\"vertex\",FontSlant->\"Italic\"]\)] returns the angular fold \
matrix of a vertex mapping the angular displacements of the folds from the xy \
plane to the fold angle changes.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7011]:=",ExpressionUUID->"1628f146-b3f2-4871-bccb-7a246f33a144"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"toOrigami", "::", "usage"}], "=", "\n", 
   "\"\<toOrigami[ \!\(\*StyleBox[\"object\",FontSlant->\"Italic\"]\) ] \
converts an object to an origami mechanism. Effectively this only works for \
some MeshRegion[] or framework[] objects.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[7013]:=",ExpressionUUID->"3583d2b8-2386-46fa-a348-7dcfe3f512df"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"singleVertex", "::", "usage"}], "=", "\n", 
    "\"\<singleVertex[ {\!\(\*StyleBox[\"angle\",FontSlant->\"Italic\"]\) 1, \
\!\(\*StyleBox[\"angle\",FontSlant->\"Italic\"]\) 2, ...} ] returns a single \
vertex origami with angles as sector angles.\nsingleVertex[ \
{\!\(\*StyleBox[\"angle\",FontSlant->\"Italic\"]\) 1, \
\!\(\*StyleBox[\"angle\",FontSlant->\"Italic\"]\) 2, ...}, \
{\!\(\*StyleBox[\"length\",FontSlant->\"Italic\"]\) 1, ...} ] returns a \
single vertex origami with angles as sector angles and fold lengths given by \
the list of lengths.\nsingleVertex[ { pt1, pt2, ... } ] returns a single \
vertex origami with vertex at origin and boundary at specified points in 2D \
or 3D.\n\nSee options \\\"angles\\\" and \\\"torsional stiffnesses\\\" to set \
the equilibrium angles and torsional stiffnesses.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomOrigami", "::", "usage"}], "=", "\n", 
    "\"\<randomOrigami[ \!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\) ] \
returns random origami with n internal vertices.\>\""}], ";"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"miuraOri", "::", "usage"}], "=", "\n", 
    "\"\<miuraOri[ {length1, length2}, \
\!\(\*StyleBox[\"angle\",FontSlant->\"Italic\"]\) ] returns a Miura ori unit \
cell at a particular angle and face lengths.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"addFold", "::", "usage"}], "=", 
   "\"\<addFold[ m, edge ] creates an edge across a face.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subdivideFaces", "::", "usage"}], "=", 
   "\"\<subdivideFaces[m] subdivides all the faces of a mechanism until all \
faces are triangles.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7014]:=",ExpressionUUID->"3ff9fc51-09cf-453d-a299-be49bcf9329b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"flatOrigamiQ", "::", "usage"}], "=", "\n", 
   "\"\<flatOrigamiQ[ \!\(\*StyleBox[\"origami\",FontSlant->\"Italic\"]\) ] \
returns True if the origami mechanism is flat.\nUse option ZeroTest to \
specify how to test for zero. Use option WorkingPrecision to choose the \
precision.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[7019]:=",ExpressionUUID->"d62e8121-9030-4117-ab10-ad253752b5f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"yoshimuraOrigami", "::", "usage"}], "=", "\n", 
   "\"\<yoshimuraOrigami[{\!\(\*StyleBox[\"#\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"azimuthal\",FontSlant->\"Italic\"]\
\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"cells\",FontSlant->\"Italic\"]\), \
#\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"of\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"rings\",FontSlant->\
\"Italic\"]\)(, \
\!\(\*StyleBox[\"twist\",FontSlant->\"Italic\"]\))},\!\(\*StyleBox[\"overall\"\
,FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"scale\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"height\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"ratio\",FontSlant->\"Italic\"]\)] \
creates a Yoshimura fold pattern of a particular radius, height, and integer \
twist if specified.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[7020]:=",ExpressionUUID->"1326e1f2-3d36-452d-b09e-f5500f477896"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MVAssignment", "::", "usage"}], " ", "=", " ", 
    "\"\<MVAssignment[ o (, positions), tolerance_ (, assignmentFunction)] \
returns a list of rules assigning a value to mountain or valley folds up to \
the value of tolerance.\nThe function assignmentFunction should take one of \
the values {-1,0,1} for valley, flat, or mountain folds respectively.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flattenOrigami", "::", "usage"}], " ", "=", " ", 
   "\"\<flattenOrigami[m, tolerance] attempts to flatten an origami \
structure.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7021]:=",ExpressionUUID->"e202e950-0e01-4ee2-b0a7-7987cb7e108a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sameFoldAnglesQ", "::", "usage"}], "=", 
   "\"\<sameFoldAnglesQ[ origami, (folds,) (precision) ] is a function that \
compares the positions of two origami structures and returns True if they \
have the same fold angles.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sameMVAnglesQ", "::", "usage"}], "=", 
   "\"\<sameMVAnglesQ[ origami, (folds,) (precision) ] is a function that \
compares the positions of two origami structures and returns True if they \
have the same mountain-valley assignments.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7023]:=",ExpressionUUID->"a41bca8b-ac3e-4dd2-80ef-a0645cc5e5ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"butterflyDecompositionQ", "::", "usage"}], " ", "=", " ", 
   "\"\<butterflyDecompositionQ[ origami ] returns True if origami can be \
decomposed into pairs of \\\"butterfly\\\" faces.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"butterflyDecomposition", "::", "usage"}], " ", "=", " ", 
   "\"\<butterflyDecomposition[ origami ] returns a list of \\\"butterfly\\\" \
face pairs and a non-butterfly-decomposible kernel after removing butterfly \
faces. You can apply deleteDanglingVertices[] to extract the underlying \
origami structure.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7025]:=",ExpressionUUID->"e799e302-d427-4098-ae4e-27d9b8a64416"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deconstructedPlot", "::", "usage"}], "=", 
    "\"\<deconstructedPlot[ origami ] returns a list of vertices for polygons \
corresponding to the individual faces.\nOption \\\"edgeWeights\\\" allows the \
assignment of positive weights that allow some edges to have widths.\nOption \
\\\"defaultWeight\\\" is the default weight on all edges.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extrudedPolygon", "::", "usage"}], "=", 
   "\"\<extrudedPolygon[coords, extrusion vector, (translation vector)] takes \
a Polygon and creates a 3D version.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7027]:=",ExpressionUUID->"83f8a726-efe7-4110-956b-bca1ea384930"]
}, Closed]],

Cell[CellGroupData[{

Cell["global", "Section",ExpressionUUID->"56132169-b503-4fec-ac0f-c8748f365dff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`geometry`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`rigidity`\>\"", "]"}], ";"}]}], "Code",\

 CellLabel->
  "In[7029]:=",ExpressionUUID->"894e1c8a-8944-40bb-90d1-36044a26fac1"]
}, Closed]],

Cell[CellGroupData[{

Cell["new origami structures", "Section",ExpressionUUID->"8f3272e9-4365-46de-a73d-baaa4bf6be97"],

Cell[CellGroupData[{

Cell["origamiQ[]", "Subsection",ExpressionUUID->"8042e1d7-58bf-4a7b-a670-9ef09527dcb3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"origamiQ", "[", " ", "mr_MeshRegion", " ", "]"}], " ", ":=", " ", 
  RowBox[{"And", "[", "\n", "\t", 
   RowBox[{"(*", 
    RowBox[{
    "there", " ", "should", " ", "be", " ", "at", " ", "least", " ", "one", 
     " ", "face"}], "*)"}], "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"RegionDimension", "[", "mr", "]"}], " ", "\[Equal]", " ", "2"}],
     ",", "\n", "\t", 
    RowBox[{"(*", 
     RowBox[{"embedding", " ", "dimension"}], "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[Equal]", "2"}], "||", 
        RowBox[{"#", "\[Equal]", "3"}]}], "&"}], ")"}], " ", "@", " ", 
     RowBox[{"RegionEmbeddingDimension", "[", "mr", "]"}]}]}], "\n", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"origamiQ", "[", " ", "f_framework", " ", "]"}], " ", ":=", " ", 
  "\n", "\t", 
  RowBox[{"And", "[", "\n", "\t\t", 
   RowBox[{"(*", 
    RowBox[{
    "there", " ", "should", " ", "be", " ", "at", " ", "least", " ", "one", 
     " ", "face"}], "*)"}], "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"RegionDimension", "[", " ", 
      RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}], " ", "\[Equal]", 
     " ", "2"}], ",", "\n", "\t\t", 
    RowBox[{"(*", 
     RowBox[{"embedding", " ", "dimension"}], "*)"}], "\n", "\t\t", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[Equal]", "2"}], "||", 
        RowBox[{"#", "\[Equal]", "3"}]}], "&"}], ")"}], " ", "@", " ", 
     RowBox[{"f", "[", "\"\<EmbeddingDimension\>\"", "]"}]}]}], "\n", "\t", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"origamiQ", "[", " ", "o_origami", " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"origamiQ", "[", " ", "_", " ", "]"}], " ", ":=", " ", 
  "False"}]}], "Code",
 CellLabel->
  "In[7033]:=",ExpressionUUID->"5cbe27db-29f9-4589-9b2f-70c34eebdd51"]
}, Closed]],

Cell[CellGroupData[{

Cell["toOrigami[]", "Subsection",ExpressionUUID->"d7afa0ea-aedd-4d0b-a732-2a15366b9ce5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toOrigami", "::", "notsurface"}], "=", 
   "\"\<Input does not seem to be origami compatible because it is not a \
valid surface.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toOrigami", "::", "prec"}], "=", 
   "\"\<Precision must be valid number of digits.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7037]:=",ExpressionUUID->"a12658c6-fc84-44c7-9c81-b4290ef02c78"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", " ", "toOrigami", " ", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"Precision", " ", "\[Rule]", " ", "Automatic"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toOrigami", "[", 
    RowBox[{
     RowBox[{"mr_MeshRegion", "?", "origamiQ"}], ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"origami", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "Precision", "]"}], " ", "===", " ", 
         "Automatic"}], ",", "\n", "\t\t\t", 
        RowBox[{"MeshCoordinates", "[", "mr", "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"N", "[", " ", 
         RowBox[{
          RowBox[{"MeshCoordinates", "[", "mr", "]"}], ",", " ", 
          RowBox[{"OptionValue", "[", "Precision", "]"}]}], " ", "]"}]}], 
       "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"MeshCells", "[", 
          RowBox[{"mr", ",", "2"}], "]"}], " ", "/.", " ", 
         RowBox[{"Polygon", "->", "face"}]}], " ", "}"}], "]"}]}], "\n", "\t",
      "]"}], " ", "/;", " ", 
    RowBox[{"precisionQ", "[", 
     RowBox[{"OptionValue", "[", "Precision", "]"}], "]"}]}]}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"toOrigami", "[", 
    RowBox[{
     RowBox[{"f_framework", "?", "origamiQ"}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"f", "[", "\"\<positions\>\"", "]"}]}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "Precision", "]"}], " ", "===", " ", 
         "Automatic"}], ",", " ", 
        RowBox[{"origami", "@@", "f"}], ",", " ", 
        RowBox[{"N", "[", " ", 
         RowBox[{
          RowBox[{"origami", "@@", "f"}], ",", " ", 
          RowBox[{"OptionValue", "[", "Precision", "]"}]}], " ", "]"}]}], " ",
        "]"}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"precisionQ", "[", " ", 
     RowBox[{"OptionValue", "[", "Precision", "]"}], " ", "]"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"precisionQ", "[", " ", "prec_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"Which", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"prec", " ", "===", " ", "Automatic"}], ",", " ", "True", ",", 
    "\n", "\t", 
    RowBox[{"prec", " ", "===", " ", "MachinePrecision"}], ",", " ", "True", 
    ",", "\n", "\t", 
    RowBox[{
     RowBox[{"NumericQ", "[", " ", "prec", " ", "]"}], " ", "&&", " ", 
     RowBox[{"prec", " ", ">", " ", "0"}]}], ",", " ", "True", ",", "\n", 
    "\t", "True", ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", " ", 
      RowBox[{"toOrigami", "::", "prec"}], " ", "]"}], ";", " ", "False"}]}], 
   "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[7039]:=",ExpressionUUID->"1387a64e-cae7-4ce2-bf6a-8bfc02903e70"],

Cell[BoxData[
 RowBox[{
  RowBox[{"toOrigami", "[", "_", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"toOrigami", "::", "notsurface"}], "]"}]}]}]], "Code",
 CellLabel->
  "In[7043]:=",ExpressionUUID->"e14ea647-8b7f-4eae-a125-7e43a795f52c"]
}, Closed]],

Cell[CellGroupData[{

Cell["singleVertex[]", "Subsection",ExpressionUUID->"f78cb6e6-e17d-4401-b894-51df89a02adc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "singleVertex", "]"}], "=", 
   RowBox[{"Join", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Options", "[", "origami", "]"}], ",", "\n", "\t", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"\"\<angles\>\"", "->", "None"}], ",", "\n", "\t", 
       RowBox[{"\"\<torsionalStiffnesses\>\"", "->", "None"}]}], "\n", "\t", 
      "}"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[7044]:=",ExpressionUUID->"baf9e747-4ee8-4def-a102-84008b907460"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sectorAnglesQ", "[", " ", 
    RowBox[{"an", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "NumericQ"}], "}"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Chop", "[", 
       RowBox[{"Total", "[", "an", "]"}], "]"}], "\[Equal]", 
      RowBox[{"2", " ", "Pi"}]}], ",", "True", ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"singleVertex", "::", "gc"}], "]"}], ";", " ", "False"}]}], 
    " ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sectorAnglesQ", "[", " ", 
    RowBox[{"an_", "?", "VectorQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"singleVertex", "::", "sa"}], "]"}], ";", " ", "False"}], 
    ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "::", "gc"}], " ", "=", " ", 
   "\"\<The sum of sector angles must be 2 Pi.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "::", "sa"}], " ", "=", " ", 
   "\"\<Argument must be a list of sector angles summing to 2 Pi or list of \
boundary vertices.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7045]:=",ExpressionUUID->"0187889d-4dcf-495a-9f9c-ecb3716b1baa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lengthsQ", "[", " ", 
    RowBox[{"s_", ",", " ", 
     RowBox[{"l", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"__", "?", "NumericQ"}], "}"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"AnyTrue", "[", " ", 
      RowBox[{"l", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "\[LessEqual]", " ", "0"}], "&"}]}], " ", "]"}], 
     ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"singleVertex", "::", "l"}], "]"}], ";", " ", "False"}], ",", 
     " ", "\n", "\t", 
     RowBox[{
      RowBox[{"Length", "[", "l", "]"}], "\[NotEqual]", " ", 
      RowBox[{"Length", "[", "s", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"singleVertex", "::", "lsa"}], "]"}], ";", " ", "False"}], ",",
      "\n", "\t", "True", ",", " ", "True"}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "::", "l"}], " ", "=", " ", 
   "\"\<Lengths must be positive numbers.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "::", "lsa"}], "=", 
   "\"\<There must be as many lengths as sector angles.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[7049]:=",ExpressionUUID->"4c9dbcda-77ab-4b27-912f-3e29839f9acd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stiffnessesQ", "[", " ", 
   RowBox[{"sectorAngles_", " ", ",", " ", 
    RowBox[{"angles_", "?", "VectorQ"}], ",", " ", 
    RowBox[{"stiffnesses_", "?", "VectorQ"}]}], " ", "]"}], " ", ":=", "\n", 
  "\t", 
  RowBox[{"Which", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "sectorAngles", "]"}], " ", "\[NotEqual]", "  ", 
     RowBox[{"Length", "[", "angles", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"singleVertex", "::", "folds"}], ",", " ", 
       RowBox[{"Length", "[", "sectorAngles", "]"}]}], " ", "]"}], ";", " ", 
     "False"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Length", "[", "sectorAngles", "]"}], " ", "\[NotEqual]", " ", 
     RowBox[{"Length", "[", "stiffnesses", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"singleVertex", "::", "folds"}], "]"}], ";", " ", "False"}], 
    ",", "\n", "\t\t", 
    RowBox[{"AnyTrue", "[", 
     RowBox[{"stiffnesses", ",", " ", 
      RowBox[{
       RowBox[{"#", "<", "0"}], " ", "&"}]}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"singleVertex", "::", "stiffnesses"}], "]"}], ";", " ", 
     "False"}], ",", "\n", "\t\t", "True", ",", " ", "True"}], "\n", "\t", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"stiffnessesQ", "[", " ", 
   RowBox[{"sectorAngles_", " ", ",", " ", 
    RowBox[{"angles_", "?", "VectorQ"}], ",", " ", "None"}], " ", "]"}], " ", 
  ":=", "\n", "\t", 
  RowBox[{"Which", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "sectorAngles", "]"}], " ", "\[NotEqual]", "  ", 
     RowBox[{"Length", "[", "angles", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"singleVertex", "::", "folds"}], ",", " ", 
       RowBox[{"Length", "[", "sectorAngles", "]"}]}], " ", "]"}], ";", " ", 
     "False"}], ",", "\n", "\t\t", "True", ",", " ", "True"}], "\n", "\t", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"stiffnessesQ", "[", " ", 
   RowBox[{"sectorAngles_", " ", ",", " ", "None", ",", " ", 
    RowBox[{"stiffnesses_", "?", "VectorQ"}]}], " ", "]"}], " ", ":=", "\n", 
  "\t", 
  RowBox[{"Which", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "sectorAngles", "]"}], " ", "\[NotEqual]", " ", 
     RowBox[{"Length", "[", "stiffnesses", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"singleVertex", "::", "folds"}], "]"}], ";", " ", "False"}], 
    ",", "\n", "\t\t", 
    RowBox[{"AnyTrue", "[", 
     RowBox[{"stiffnesses", ",", " ", 
      RowBox[{
       RowBox[{"#", "<", "0"}], " ", "&"}]}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"singleVertex", "::", "stiffnesses"}], "]"}], ";", " ", 
     "False"}], ",", "\n", "\t\t", "True", ",", " ", "True"}], "\n", "\t", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"stiffnessesQ", "[", " ", 
   RowBox[{"sectorAngles_", ",", " ", "None", ",", " ", "None"}], " ", "]"}], 
  " ", ":=", " ", "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stiffnessesQ", "[", " ", 
    RowBox[{"_", ",", "_", ",", "_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"singleVertex", "::", "stiffnesses"}], "]"}], ";", " ", 
     "False"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "::", "folds"}], "=", 
   "\"\<The number of equilibrium angles and stiffnesses must be `1`.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "::", "stiffnesses"}], "=", 
   "\"\<Torsional stiffnesses of the folds must be positive real \
numbers.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "::", "stiffnesses"}], "=", 
   "\"\<Equilibrium angles and torsional stiffnesses should either be None or \
a list of appropriate numbers.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7052]:=",ExpressionUUID->"8bb2c520-afd0-402d-b45f-33fd7e7dce2c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"modifyAngles", "[", " ", 
   RowBox[{"foldIndices_", ",", " ", "None"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{
    RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
    RowBox[{"Length", "[", "foldIndices", "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"modifyAngles", "[", " ", 
   RowBox[{"foldIndices_", ",", " ", "angles_"}], " ", "]"}], " ", ":=", " ", 
  
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "#"}], " ", "&"}], ")"}], 
   " ", "/@", " ", 
   RowBox[{"Mod", "[", 
    RowBox[{"angles", ",", 
     RowBox[{"2", " ", "Pi"}], ",", " ", 
     RowBox[{"-", " ", "Pi"}]}], " ", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"modifyStiffnesses", "[", " ", 
   RowBox[{"foldIndices_", ",", " ", "None"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{
    RowBox[{"\"\<torsionalStiffness\>\"", "\[Rule]", " ", "0"}], ",", " ", 
    RowBox[{"Length", "[", "foldIndices", "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"modifyStiffnesses", "[", " ", 
    RowBox[{"foldIndices_", ",", " ", "s_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\"\<torsionalStiffness\>\"", "\[Rule]", " ", "#"}], " ", "&"}],
      ")"}], " ", "/@", " ", "s"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"createFolds", "[", " ", 
   RowBox[{"foldIndices_", ",", " ", "an_", ",", " ", "stiffnesses_"}], " ", 
   "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"MapThread", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Property", "[", " ", 
      RowBox[{
       RowBox[{"fold", "[", "#1", "]"}], ",", "  ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"#2", ",", "#3"}], "}"}], "]"}]}], " ", "]"}], "&"}], ",", 
    " ", "\n", "\t\t", 
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{"foldIndices", ",", "\n", "\t\t", 
      RowBox[{"modifyAngles", "[", 
       RowBox[{"foldIndices", ",", " ", "an"}], "]"}], ",", " ", "\n", "\t\t", 
      RowBox[{"modifyStiffnesses", "[", 
       RowBox[{"foldIndices", ",", "stiffnesses"}], "]"}]}], "\n", "\t\t", 
     "}"}]}], " ", "\n", "\t", "]"}]}]}], "Code",
 CellLabel->
  "In[7060]:=",ExpressionUUID->"66a40ec3-09ae-4927-af76-1e2ba30e2e51"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"singleVertex", "[", " ", 
   RowBox[{
    RowBox[{"vertices", " ", ":", " ", 
     RowBox[{"_", "?", "numericCoordinatesQ"}]}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"faceSpec", " ", "=", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "vertices", "]"}], "]"}]}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{"deleteCells", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"addCells", "[", 
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"createFolds", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<0\>\"", ",", "#"}], "}"}], "&"}], "/@", 
              "faceSpec"}], ",", " ", 
             RowBox[{"OptionValue", "[", "\"\<angles\>\"", "]"}], ",", 
             RowBox[{
             "OptionValue", "[", "\"\<torsionalStiffnesses\>\"", "]"}]}], " ",
             "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"freeJoint", "[", "\"\<0\>\"", "]"}]}], "\n", "\t\t", 
          "}"}], "]"}], " ", "@", " ", 
        RowBox[{
         RowBox[{"addVertex", "[", 
          RowBox[{"faceSpec", ",", " ", 
           RowBox[{"\"\<0\>\"", " ", "\[Rule]", " ", 
            RowBox[{"PadRight", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"Length", "[", 
               RowBox[{"vertices", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}]}], " ", 
          "]"}], " ", "@", "  ", 
         RowBox[{"origami", "[", " ", 
          RowBox[{"vertices", ",", " ", 
           RowBox[{"{", 
            RowBox[{"face", "[", "faceSpec", "]"}], "}"}]}], "]"}]}]}], ",", 
       "\n", "\t\t", 
       RowBox[{"Point", "[", "_", "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}], 
   " ", "/;", " ", 
   RowBox[{"stiffnessesQ", "[", " ", 
    RowBox[{"vertices", ",", " ", 
     RowBox[{"OptionValue", "[", "\"\<angles\>\"", "]"}], ",", " ", 
     RowBox[{"OptionValue", "[", "\"\<torsionalStiffnesses\>\"", "]"}]}], " ",
     "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "[", " ", 
    RowBox[{
     RowBox[{"vertices", " ", ":", " ", 
      RowBox[{"_", "?", "MatrixQ"}]}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", 
   RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
    RowBox[{"Message", "[", 
     RowBox[{"singleVertex", "::", "sa"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "[", " ", 
    RowBox[{
     RowBox[{"angles_", "?", "sectorAnglesQ"}], " ", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"faceSpec", " ", "=", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "angles", "]"}], "]"}]}], ",", " ", 
        RowBox[{"vertices", " ", "=", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "#", "]"}], ",", 
             RowBox[{"Sin", "[", "#", "]"}]}], "}"}], "&"}], " ", "/@", " ", 
          RowBox[{"Accumulate", "[", "angles", "]"}]}]}]}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{"deleteCells", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"addCells", "[", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"createFolds", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<0\>\"", ",", "#"}], "}"}], "&"}], "/@", 
               "faceSpec"}], ",", " ", 
              RowBox[{"OptionValue", "[", "\"\<angles\>\"", "]"}], ",", 
              RowBox[{
              "OptionValue", "[", "\"\<torsionalStiffnesses\>\"", "]"}]}], 
             " ", "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"freeJoint", "[", "\"\<0\>\"", "]"}]}], "\n", "\t\t\t", 
           "}"}], "]"}], " ", "@", " ", 
         RowBox[{
          RowBox[{"addVertex", "[", 
           RowBox[{"faceSpec", ",", " ", 
            RowBox[{"\"\<0\>\"", " ", "\[Rule]", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}]}], " ", "]"}], " ", "@", "  ", 
          
          RowBox[{"origami", "[", " ", 
           RowBox[{"vertices", ",", " ", 
            RowBox[{"{", 
             RowBox[{"face", "[", "faceSpec", "]"}], "}"}]}], "]"}]}]}], ",", 
        "\n", "\t\t", 
        RowBox[{"Point", "[", "_", "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}], 
    " ", "/;", " ", 
    RowBox[{"stiffnessesQ", "[", " ", 
     RowBox[{"angles", ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<angles\>\"", "]"}], ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<torsionalStiffnesses\>\"", "]"}]}], 
     " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"singleVertex", "[", " ", 
   RowBox[{
    RowBox[{"angles_", "?", "sectorAnglesQ"}], " ", ",", " ", "lengths_", ",",
     " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"faceSpec", " ", "=", " ", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "angles", "]"}], "]"}]}], ",", " ", 
       RowBox[{"vertices", " ", "=", "  ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#2", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "#1", "]"}], ",", 
              RowBox[{"Sin", "[", "#1", "]"}]}], "}"}]}], "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Accumulate", "[", "angles", "]"}], ",", "lengths"}], 
           "}"}]}], "]"}]}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"deleteCells", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"addCells", "[", 
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"createFolds", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<0\>\"", ",", "#"}], "}"}], "&"}], "/@", 
              "faceSpec"}], ",", " ", 
             RowBox[{"OptionValue", "[", "\"\<angles\>\"", "]"}], ",", 
             RowBox[{
             "OptionValue", "[", "\"\<torsionalStiffnesses\>\"", "]"}]}], " ",
             "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"freeJoint", "[", "\"\<0\>\"", "]"}]}], "\n", "\t\t\t", 
          "}"}], "]"}], " ", "@", " ", 
        RowBox[{
         RowBox[{"addVertex", "[", 
          RowBox[{"faceSpec", ",", " ", 
           RowBox[{"\"\<0\>\"", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}]}], " ", "]"}], " ", "@", "  ", 
         RowBox[{"origami", "[", " ", 
          RowBox[{"vertices", ",", " ", 
           RowBox[{"{", 
            RowBox[{"face", "[", "faceSpec", "]"}], "}"}]}], "]"}]}]}], ",", 
       "\n", "\t\t", 
       RowBox[{"Point", "[", "_", "]"}]}], "\n", "\t", "]"}]}], "\n", "\n", 
    "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"stiffnessesQ", "[", " ", 
     RowBox[{"angles", ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<angles\>\"", "]"}], ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<torsionalStiffnesses\>\"", "]"}]}], 
     " ", "]"}], " ", "&&", " ", 
    RowBox[{"lengthsQ", "[", 
     RowBox[{"angles", ",", "lengths"}], "]"}]}]}]}]}], "Code",
 CellLabel->
  "In[7065]:=",ExpressionUUID->"389f07d3-5efb-4b09-9dd7-13b425640f40"]
}, Closed]],

Cell[CellGroupData[{

Cell["miuraOri[]", "Subsection",ExpressionUUID->"b01f488c-40c8-4d7f-bcc9-c39f7a7d7b49"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "miuraOri", "]"}], "=", 
    RowBox[{"{", " ", 
     RowBox[{"\"\<triangulate\>\"", "\[Rule]", "False"}], " ", "}"}]}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"miuraOri", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"l1_", "?", "miuraLengthQ"}], ",", " ", 
       RowBox[{"l2_", "?", "miuraLengthQ"}]}], " ", "}"}], " ", ",", " ", 
     RowBox[{"an_", "?", "miuraAngleQ"}], " ", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", " ", "\n", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", " ", "m", " ", "}"}], ",", 
      RowBox[{"With", "[", "\n", 
       RowBox[{
        RowBox[{"{", "\n", "\t", 
         RowBox[{
          RowBox[{"faces", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "5", ",", "6", ",", "2"}], "}"}]}], "}"}]}], 
          ",", "\n", "\t", 
          RowBox[{"folds", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "7"}], "}"}]}], "}"}]}], ",", "\n", "\t", 
          RowBox[{"coordinates", " ", "=", " ", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "\n", "\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"l1", "/", "2"}], ",", "0"}], "}"}], ",", "\n", "\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"l1", "/", "2"}], " ", "-", " ", 
                RowBox[{"l2", " ", 
                 RowBox[{
                  RowBox[{"Cot", "[", "an", "]"}], "/", "2"}]}]}], ",", 
               RowBox[{"l2", "/", "2"}]}], "}"}], ",", "\n", "\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "l2"}], " ", 
                RowBox[{
                 RowBox[{"Cot", "[", "an", "]"}], "/", "2"}]}], ",", " ", 
               RowBox[{"l2", "/", "2"}]}], "}"}], ",", "\n", "\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "l2"}], " ", 
                RowBox[{
                 RowBox[{"Cot", "[", "an", "]"}], "/", "2"}]}], ",", " ", 
               RowBox[{
                RowBox[{"-", "l2"}], "/", "2"}]}], " ", "}"}], ",", "\n", 
             "\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"l1", "/", "2"}], "-", 
                RowBox[{"l2", " ", 
                 RowBox[{
                  RowBox[{"Cot", "[", "an", "]"}], "/", "2"}]}]}], ",", " ", 
               RowBox[{
                RowBox[{"-", "l2"}], "/", "2"}]}], " ", "}"}]}], "\n", "\t", 
            "}"}]}]}], "\n", "}"}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"m", " ", "=", " ", 
          RowBox[{"origami", "[", 
           RowBox[{"coordinates", ",", 
            RowBox[{"face", "/@", "faces"}]}], "]"}]}], ";", "\n", "\t", 
         RowBox[{"tesselateMechanism", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"If", "[", " ", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<triangulate\>\"", "]"}], ",", 
             " ", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"addCells", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"fold", "[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "3"}], "}"}], "]"}], ",", 
                 RowBox[{"fold", "[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "6"}], "}"}], "]"}]}], "}"}], "]"}], " ",
               "@", " ", 
              RowBox[{
               RowBox[{"addFold", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], "]"}], " ", "@", " ", 
               RowBox[{
                RowBox[{"addFold", "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "6"}], "}"}], "]"}], " ", "@", " ", 
                "m"}]}]}], ",", " ", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"addLabel", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "\[Rule]", "\"\<back\>\""}], ",", 
                 RowBox[{"2", "\[Rule]", "\"\<front\>\""}], ",", 
                 RowBox[{"3", "\[Rule]", "\"\<top-front\>\""}], ",", 
                 RowBox[{"4", "\[Rule]", "\"\<top-back\>\""}], ",", 
                 RowBox[{"5", "\[Rule]", "\"\<bottom-back\>\""}], ",", 
                 RowBox[{"6", "\[Rule]", "\"\<bottom-front\>\""}]}], "}"}], 
               "]"}], " ", "@", " ", "m"}]}], "\n", "\t\t", "]"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "/", "2"}], ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "\n", "\t", "]"}]}]}], "\n", 
       "]"}]}], "]"}], " ", "/;", " ", 
    RowBox[{"miuraOptionsQ", "[", " ", 
     RowBox[{"OptionValue", "[", "\"\<triangulate\>\"", "]"}], " ", "]"}]}]}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"miuraLengthQ", "[", " ", "l_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"NumericQ", "[", "l", "]"}], " ", "&&", " ", 
     RowBox[{"l", " ", ">", " ", "0"}]}], ",", " ", "True", ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"miuraOri", "::", "length"}], "]"}], ";", " ", "False"}]}], " ",
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{"miuraAngleQ", "[", " ", "a_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"NumericQ", "[", "a", "]"}], " ", "&&", " ", 
     RowBox[{"0", " ", "<", " ", 
      RowBox[{"N", "[", "a", "]"}], " ", "<", " ", "Pi"}]}], ",", " ", "True",
     ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"miuraOri", "::", "angle"}], "]"}], ";", " ", "False"}]}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"miuraOptionsQ", "[", " ", "b_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{"BooleanQ", "[", "b", "]"}], ",", " ", "True", ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"miuraOri", "::", "t"}], "]"}], ";", " ", "False"}]}], " ", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"miuraOri", "::", "length"}], " ", "=", " ", 
   "\"\<Length must be a positive numeric value.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"miuraOri", "::", "angle"}], " ", "=", " ", 
   "\"\<Angle must be a numeric value between 0 and \[Pi].\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"miuraOri", "::", "t"}], " ", "=", " ", 
   "\"\<Option \\\"triangulate\\\" should be a boolean variable.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[7069]:=",ExpressionUUID->"df661cfd-ae0b-44c1-87df-b4da3007a4a3"]
}, Closed]],

Cell[CellGroupData[{

Cell["yoshimura[]", "Subsection",ExpressionUUID->"6510e159-2aac-4e44-9dbd-d54c70d36be2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "yoshimuraOrigami", "]"}], "=", 
   RowBox[{"Options", "[", "origami", "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[7077]:=",ExpressionUUID->"74c13a49-d78f-409b-8cae-4ac581199fcd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yoshimuraOrigami", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numTriangles_Integer", ",", "numHeight_Integer", ",", 
      RowBox[{"twist_Integer", ":", "0"}]}], "}"}], ",", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"yoshimuraOrigami", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numTriangles", ",", "numHeight", ",", "twist"}], "}"}], ",", 
    "1", ",", "1", ",", "opt"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"yoshimuraOrigami", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numTriangles_Integer", ",", "numHeight_Integer", ",", 
      RowBox[{"twist_Integer", ":", "0"}]}], "}"}], ",", 
    RowBox[{"radius_", "?", "NumericQ"}], ",", 
    RowBox[{"heightScale_", "?", "NumericQ"}], ",", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "i", "}"}], ",", "\n", 
     RowBox[{"With", "[", "\n", 
      RowBox[{
       RowBox[{"{", "\n", 
        RowBox[{"height", "=", 
         RowBox[{"heightScale", " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"Pi", "/", "numTriangles"}], "]"}], "-", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"Pi", "/", "numTriangles"}]}], "]"}]}], ")"}]}], 
           "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
       RowBox[{"origami", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"radius", " ", 
          RowBox[{"Join", "@@", 
           RowBox[{"Table", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"2", " ", "Pi", " ", 
                    RowBox[{"#", "/", "numTriangles"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}]}], ")"}], " ", 
                    RowBox[{
                    RowBox[{"Pi", "/", "numTriangles"}], "/", "2"}]}]}], 
                  "]"}], ",", "\n", "\t\t\t", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   RowBox[{"2", " ", "Pi", " ", 
                    RowBox[{"#", "/", "numTriangles"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}]}], ")"}], " ", 
                    RowBox[{
                    RowBox[{"Pi", "/", "numTriangles"}], "/", "2"}]}]}], 
                  "]"}], ",", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], " ", "height"}]}], "\n", 
                "\t\t\t", "}"}], "&"}], "/@", 
              RowBox[{"Range", "[", "numTriangles", "]"}]}], ",", "\n", 
             "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"numHeight", "+", "1"}]}], "}"}]}], "]"}]}]}], ",", 
         "\n", "\t\t", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"face", "[", "\n", "\t\t\t\t", 
                RowBox[{"{", "\n", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{"#", "+", 
                   RowBox[{"i", " ", "numTriangles"}]}], ",", "\n", 
                  "\t\t\t\t", 
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"#", "+", 
                    RowBox[{"i", " ", "numTriangles"}], "+", "1"}], ",", 
                    "numTriangles", ",", 
                    RowBox[{
                    RowBox[{"i", " ", "numTriangles"}], "+", "1"}]}], "]"}], 
                  ",", "\n", "\t\t\t\t", 
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", "i"}]}], ")"}], "/", 
                    "2"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "+", "1"}], ")"}], " ", "numTriangles"}], 
                    "+", "twist"}], ",", "numTriangles", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "+", "1"}], ")"}], " ", "numTriangles"}], 
                    "+", "1"}]}], "]"}]}], "\n", "\t\t\t\t", "}"}], "\n", 
                "\t\t\t", "]"}], "&"}], "/@", 
              RowBox[{"Range", "[", "numTriangles", "]"}]}], ",", "\n", 
             "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"face", "[", "\n", "\t\t\t\t", 
                RowBox[{"{", "\n", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{"#", "+", 
                   RowBox[{"i", " ", "numTriangles"}]}], ",", "\n", 
                  "\t\t\t\t", 
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "+", "1"}], ")"}], " ", "numTriangles"}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", "i"}]}], ")"}], "/", 
                    "2"}], "+", "twist"}], ",", "numTriangles", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "+", "1"}], ")"}], "numTriangles"}], "+", 
                    "1"}]}], "]"}], ",", "\n", "\t\t\t\t", 
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "+", "1"}], ")"}], " ", "numTriangles"}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", "i"}]}], ")"}], "/", 
                    "2"}], "-", "1", "+", "twist"}], ",", "numTriangles", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "+", "1"}], ")"}], "numTriangles"}], "+", 
                    "1"}]}], "]"}]}], "\n", "\t\t\t\t", "}"}], "\n", "\t\t\t",
                 "]"}], "&"}], "/@", 
              RowBox[{"Range", "[", "numTriangles", "]"}]}]}], "\n", "\t\t", 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{"numHeight", "-", "1"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t", "opt"}], "\n", "\t", "]"}]}], "\n", "]"}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"numTriangles", ">=", "2"}], "&&", 
    RowBox[{"numHeight", ">=", "1"}]}]}]}]}], "Code",
 CellLabel->
  "In[7078]:=",ExpressionUUID->"6e9c878d-02b2-4132-96ce-e8e66b822e4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "=", 
  RowBox[{"yoshimuraOrigami", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"8", ",", "2", ",", "1"}], "}"}], ",", 
    RowBox[{"MeshCellLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", "\[Rule]", "\"\<Index\>\""}], "}"}]}]}], "]"}]}]], "Input",\

 CellLabel->
  "In[1250]:=",ExpressionUUID->"f325d84e-8b1c-4353-a4a7-917cc61544f8"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {Properties -> {{1, 1} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 2} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 3} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 4} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 5} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 6} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 7} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 8} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 9} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 10} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 11} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 12} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 13} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 14} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 15} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 16} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 17} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 18} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 19} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 20} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 21} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 22} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 23} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 24} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 25} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 26} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 27} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 28} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 29} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 30} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 31} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 32} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 33} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 34} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 35} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 36} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 37} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 38} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 39} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 40} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 41} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 42} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 43} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 44} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 45} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 46} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 47} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 48} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 49} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 50} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 51} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 52} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 53} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 54} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 55} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, 56} -> (MeshCellStyle -> {
           Thickness[0.0025], 
           GrayLevel[0]}), {1, Default} -> (MeshCellStyle -> Automatic), {
         0, Default} -> (MeshCellLabel -> "Index")}, 
      Method -> {"CoplanarityTolerance" -> 100}}}}, 
    TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAGJmID6Rsc7S+vhD+8UL+TTTZr+yZ4ACrmWZNjt+nNi/
Ieb7+elJ7+HiUHX7Yfpg4lB1+2H6YOJQdfth+tDMt4fpQzPfHqYPzXx7mD4c
6u3jX0cmfBF8ao9mPlwczT1wcTT3w8XR/LsfzXxY+OxHMx+uD818uD4c6qH2
fkU3Hy6OHv4wcfTwh4mjhz+a+fao7oebb4/q36/o7ofbCwB/1Bu6
      "], 
      {Hue[0.6, 0.3, 0.85], Opacity[0.7], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        Polygon3DBox[{{1, 2, 11}, {2, 3, 12}, {3, 4, 13}, {4, 5, 14}, {5, 6, 
         15}, {6, 7, 16}, {7, 8, 9}, {8, 1, 10}, {1, 11, 10}, {2, 12, 11}, {3,
          13, 12}, {4, 14, 13}, {5, 15, 14}, {6, 16, 15}, {7, 9, 16}, {8, 10, 
         9}, {9, 10, 18}, {10, 11, 19}, {11, 12, 20}, {12, 13, 21}, {13, 14, 
         22}, {14, 15, 23}, {15, 16, 24}, {16, 9, 17}, {9, 18, 17}, {10, 19, 
         18}, {11, 20, 19}, {12, 21, 20}, {13, 22, 21}, {14, 23, 22}, {15, 24,
          23}, {16, 17, 24}}],
        Annotation[#, "Geometry"]& ], 
       {GrayLevel[0], Thickness[0.0025], 
        Line3DBox[{{1, 2}, {2, 11}, {11, 1}, {2, 3}, {3, 12}, {12, 2}, {3, 
         4}, {4, 13}, {13, 3}, {4, 5}, {5, 14}, {14, 4}, {5, 6}, {6, 15}, {15,
          5}, {6, 7}, {7, 16}, {16, 6}, {7, 8}, {8, 9}, {9, 7}, {8, 1}, {1, 
         10}, {10, 8}, {11, 10}, {12, 11}, {13, 12}, {14, 13}, {15, 14}, {16, 
         15}, {9, 16}, {10, 9}, {10, 18}, {18, 9}, {11, 19}, {19, 10}, {12, 
         20}, {20, 11}, {13, 21}, {21, 12}, {14, 22}, {22, 13}, {15, 23}, {23,
          14}, {16, 24}, {24, 15}, {9, 17}, {17, 16}, {18, 17}, {19, 18}, {20,
          19}, {21, 20}, {22, 21}, {23, 22}, {24, 23}, {17, 24}}]}, {{
         Point3DBox[{1}], 
         Inset3DBox["1", {0.5555702330196022, 0.8314696123025452, 0.}, {-1, -1},
          
          BaseStyle->"Graphics"]}, {Point3DBox[{2}], 
         Inset3DBox["2", {-0.19509032201612825`, 0.9807852804032304, 0.}, {-1, -1},
          
          BaseStyle->"Graphics"]}, {Point3DBox[{3}], 
         Inset3DBox["3", {-0.8314696123025452, 0.5555702330196022, 0.}, {-1, -1},
          
          BaseStyle->"Graphics"]}, {Point3DBox[{4}], 
         Inset3DBox["4", {-0.9807852804032304, -0.19509032201612825`, 0.}, {-1, -1},
          
          BaseStyle->"Graphics"]}, {Point3DBox[{5}], 
         Inset3DBox["5", {-0.5555702330196022, -0.8314696123025452, 0.}, {-1, -1},
          
          BaseStyle->"Graphics"]}, {Point3DBox[{6}], 
         Inset3DBox["6", {0.19509032201612825`, -0.9807852804032304, 0.}, {-1, -1},
          
          BaseStyle->"Graphics"]}, {Point3DBox[{7}], 
         Inset3DBox["7", {0.8314696123025452, -0.5555702330196022, 0.}, {-1, -1},
          
          BaseStyle->"Graphics"]}, {Point3DBox[{8}], 
         Inset3DBox["8", {0.9807852804032304, 0.19509032201612825`, 0.}, {-1, -1},
          
          BaseStyle->"Graphics"]}, {Point3DBox[{9}], 
         Inset3DBox["9", {0.8314696123025452, 0.5555702330196022, 
          0.6584417230472858}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{10}], 
         Inset3DBox["10", {0.19509032201612825`, 0.9807852804032304, 
          0.6584417230472858}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{11}], 
         Inset3DBox["11", {-0.5555702330196022, 0.8314696123025452, 
          0.6584417230472858}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{12}], 
         Inset3DBox["12", {-0.9807852804032304, 0.19509032201612825`, 
          0.6584417230472858}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{13}], 
         Inset3DBox["13", {-0.8314696123025452, -0.5555702330196022, 
          0.6584417230472858}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{14}], 
         Inset3DBox["14", {-0.19509032201612825`, -0.9807852804032304, 
          0.6584417230472858}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{15}], 
         Inset3DBox["15", {0.5555702330196022, -0.8314696123025452, 
          0.6584417230472858}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{16}], 
         Inset3DBox["16", {0.9807852804032304, -0.19509032201612825`, 
          0.6584417230472858}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{17}], 
         Inset3DBox["17", {0.5555702330196022, 0.8314696123025452, 
          1.3168834460945715`}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{18}], 
         Inset3DBox["18", {-0.19509032201612825`, 0.9807852804032304, 
          1.3168834460945715`}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{19}], 
         Inset3DBox["19", {-0.8314696123025452, 0.5555702330196022, 
          1.3168834460945715`}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{20}], 
         Inset3DBox["20", {-0.9807852804032304, -0.19509032201612825`, 
          1.3168834460945715`}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{21}], 
         Inset3DBox["21", {-0.5555702330196022, -0.8314696123025452, 
          1.3168834460945715`}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{22}], 
         Inset3DBox["22", {0.19509032201612825`, -0.9807852804032304, 
          1.3168834460945715`}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{23}], 
         Inset3DBox["23", {0.8314696123025452, -0.5555702330196022, 
          1.3168834460945715`}, {-1, -1},
          BaseStyle->"Graphics"]}, {Point3DBox[{24}], 
         Inset3DBox["24", {0.9807852804032304, 0.19509032201612825`, 
          1.3168834460945715`}, {-1, -1},
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics3D",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  ImageSize->{365.84716085088616`, 354.1967171904828},
  ImageSizeRaw->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  ViewPoint->{1.1969232879592, -2.279747559887293, 2.1954784685641697`},
  ViewVertical->{-0.04725614614043552, 0.05822357643666488, 
   1.4853612978130926`}]], "Output",
 CellLabel->
  "Out[1250]=",ExpressionUUID->"81a5acf0-2ec5-467c-86a2-c9168823fa90"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["randomOrigami[]", "Subsection",ExpressionUUID->"fd1f8c0d-8cd5-461d-a1bd-d14c472d45ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "randomOrigami", "]"}], "=", 
   RowBox[{"Join", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Options", "[", "origami", "]"}], ",", "\n", "\t", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"Precision", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
       RowBox[{"MaxIterations", "->", "20"}], ",", "\n", "\t", 
       RowBox[{"\"\<minimumFolds\>\"", "->", "4"}], ",", "\n", "\t", 
       RowBox[{"\"\<boundary\>\"", "->", 
        RowBox[{"CirclePoints", "[", "4", "]"}]}]}], "\n", "\t", "}"}]}], 
    "\n", "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[7080]:=",ExpressionUUID->"cc6d6793-71d5-4e73-a480-e2ed6df579d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"randomOrigami", "[", " ", 
    RowBox[{"numberOfVertices_", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", " ", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"ctr", " ", "=", " ", "1"}], ",", "\n", 
        RowBox[{"firstMesh", " ", "=", " ", 
         RowBox[{"randomMesh", "[", " ", 
          RowBox[{"numberOfVertices", ",", " ", 
           RowBox[{"OptionValue", "[", "Precision", "]"}], ",", " ", 
           RowBox[{"OptionValue", "[", "\"\<boundary\>\"", "]"}]}], " ", 
          "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"(", "\n", "\t", 
        RowBox[{
         RowBox[{"meshTry", " ", "=", " ", 
          RowBox[{"toOrigami", "[", " ", 
           RowBox[{"firstMesh", " ", ",", " ", 
            RowBox[{"Precision", " ", "\[Rule]", " ", 
             RowBox[{"OptionValue", "[", "Precision", "]"}]}]}], " ", "]"}]}],
          ";", "\n", "\t", 
         RowBox[{"While", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Not", " ", "@", " ", 
             RowBox[{"validrandomOrigamiQ", "[", " ", 
              RowBox[{"numberOfVertices", ",", " ", "meshTry", ",", " ", 
               RowBox[{"OptionValue", "[", "\"\<minimumFolds\>\"", "]"}], ",",
                " ", 
               RowBox[{"Length", "[", 
                RowBox[{"OptionValue", "[", "\"\<boundary\>\"", "]"}], 
                "]"}]}], " ", "]"}]}], " ", "&&", " ", 
            RowBox[{"ctr", " ", "\[LessEqual]", " ", 
             RowBox[{"OptionValue", "[", "MaxIterations", "]"}]}]}], ",", 
           "\n", "\t\t", 
           RowBox[{
            RowBox[{"meshTry", " ", "=", " ", 
             RowBox[{"toOrigami", "[", " ", 
              RowBox[{
               RowBox[{"randomMesh", "[", " ", 
                RowBox[{"numberOfVertices", ",", " ", 
                 RowBox[{"OptionValue", "[", "Precision", "]"}], ",", " ", 
                 RowBox[{"OptionValue", "[", "\"\<boundary\>\"", "]"}]}], " ",
                 "]"}], ",", " ", 
               RowBox[{"Precision", " ", "\[Rule]", " ", 
                RowBox[{"OptionValue", "[", "Precision", "]"}]}]}], " ", 
              "]"}]}], ";", " ", 
            RowBox[{"ctr", "++"}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{"ctr", " ", ">", " ", 
            RowBox[{"OptionValue", "[", "MaxIterations", "]"}]}], ",", " ", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"randomOrigami", "::", "max"}], ",", " ", 
             RowBox[{"ctr", " ", "-", " ", "1"}]}], "]"}]}], " ", "]"}], ";", 
         "\n", "\t", "\n", "\t", 
         RowBox[{"origami", "[", " ", 
          RowBox[{"meshTry", ",", " ", 
           RowBox[{"FilterRules", "[", 
            RowBox[{
             RowBox[{"{", "opt", "}"}], ",", " ", 
             RowBox[{"Options", "[", "origami", "]"}]}], "]"}]}], " ", 
          "]"}]}], "\n", "\t", ")"}], " ", "/;", " ", 
       RowBox[{"MeshRegionQ", "[", "firstMesh", "]"}]}]}], "\n", "\n", "]"}], 
    " ", "/;", " ", 
    RowBox[{
     RowBox[{"randomOrigamiMinFoldsQ", "[", " ", 
      RowBox[{"OptionValue", "[", " ", "\"\<minimumFolds\>\"", " ", "]"}], 
      " ", "]"}], " ", "&&", " ", 
     RowBox[{"randomOrigamiMaxIterationsQ", "[", " ", 
      RowBox[{"OptionValue", "[", " ", "MaxIterations", " ", "]"}], " ", 
      "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomOrigami", "::", "max"}], "=", 
    "\"\<Maximum number of iterations reached at `1` without finding a \
suitable random origami.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validrandomOrigamiQ", "[", " ", 
    RowBox[{"numberOfVertices_", ",", " ", 
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "minimumFolds_", ",", " ", 
     "boundarySize_"}], " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"AllTrue", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Length", " ", "/@", " ", 
       RowBox[{"Drop", "[", " ", 
        RowBox[{
         RowBox[{"connectivity", "[", 
          RowBox[{"m", ",", " ", 
           RowBox[{
           "\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<edges\>\""}]}], 
          "]"}], ",", " ", "boundarySize"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"#", " ", "\[GreaterEqual]", " ", "minimumFolds"}], " ", 
       "&"}]}], "\n", "\t", "]"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], "-", "boundarySize"}], 
     " ", "\[Equal]", " ", "numberOfVertices"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randomOrigami", "::", "mfold"}], "=", 
   "\"\<Minimum number of folds, `1`,  must be a position integer.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"randomOrigamiMinFoldsQ", "[", " ", 
   RowBox[{"_Integer", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], ")"}]}], " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randomOrigamiMinFoldsQ", "[", " ", "f_", " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"randomOrigami", "::", "mfold"}], ",", " ", "f"}], "]"}], ";", 
     " ", "False"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randomOrigami", "::", "miter"}], "=", 
   "\"\<Maximum number of iterations, `1`, must be a position integer.\>\""}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"randomOrigamiMaxIterationsQ", "[", " ", 
   RowBox[{"_Integer", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], ")"}]}], " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"randomOrigamiMaxIterationsQ", "[", " ", "f_", " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"randomOrigami", "::", "miter"}], ",", " ", "f"}], "]"}], ";", 
    " ", "False"}], ")"}]}]}], "Code",
 CellLabel->
  "In[7081]:=",ExpressionUUID->"66b5c38e-1661-4fc1-b3bb-2fc79ff6c3b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "get", " ", "a", " ", "Delaunay", " ", "triangulation", " ", "from", " ", 
    "a", " ", "set", " ", "of", " ", "random", " ", "points"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"randomMesh", "[", 
     RowBox[{
      RowBox[{"numberOfVertices_Integer", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ",", " ", 
      RowBox[{"precision", " ", ":", " ", 
       RowBox[{
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"NumericQ", "[", "#", "]"}], " ", "&&", " ", 
            RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], "|", "Automatic", "|", 
        "MachinePrecision"}]}], ",", " ", 
      RowBox[{"boundary_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "points", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"points", "=", 
         RowBox[{"Join", "[", "\n", "\t\t", 
          RowBox[{"boundary", ",", "\n", "\t\t", 
           RowBox[{"Select", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"RandomVariate", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"UniformDistribution", "[", 
                RowBox[{"RegionBounds", "[", 
                 RowBox[{"Polygon", "[", "boundary", "]"}], "]"}], "]"}], ",",
                "\n", "\t\t\t\t", "numberOfVertices", ",", "\n", "\t\t\t\t", 
               RowBox[{"WorkingPrecision", "->", "precision"}]}], "\n", 
              "\t\t\t", "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"RegionMember", "[", 
              RowBox[{"Polygon", "[", "boundary", "]"}], "]"}]}], "\n", 
            "\t\t", "]"}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
        RowBox[{"DelaunayMesh", "[", "points", "]"}]}]}], "\n", "]"}], " ", "/;",
      " ", 
     RowBox[{
      RowBox[{"Last", "[", " ", 
       RowBox[{"Dimensions", "[", " ", "boundary", " ", "]"}], " ", "]"}], 
      " ", "\[Equal]", " ", "2"}]}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomOrigami", "::", "vnum"}], "=", 
     "\"\<Number of vertices `1` should be a positive integer.\>\""}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomOrigami", "::", "prec"}], "=", 
     "\"\<Option Precision must be a positive number.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomOrigami", "::", "bound"}], "=", 
     "\"\<Boundary points should be a list of vertices in 2D.\>\""}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"randomMesh", "[", " ", 
     RowBox[{
     "numberOfVertices_", ",", " ", "precision_", ",", " ", "boundary_"}], 
     " ", "]"}], " ", ":=", " ", 
    RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
     RowBox[{"(", "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"Not", "[", " ", 
          RowBox[{
           RowBox[{"IntegerQ", "[", "numberOfVertices", "]"}], " ", "&&", " ", 
           RowBox[{"numberOfVertices", " ", "\[GreaterEqual]", " ", "1"}]}], 
          " ", "]"}], ",", " ", 
         RowBox[{"Message", "[", " ", 
          RowBox[{
           RowBox[{"randomOrigami", "::", "vnum"}], ",", " ", 
           "numberOfVertices"}], " ", "]"}]}], " ", "]"}], ";", "\n", "\t", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Not", "[", " ", 
           RowBox[{
            RowBox[{"NumericQ", "[", " ", "precision", " ", "]"}], " ", "&&", 
            " ", 
            RowBox[{"precision", " ", ">", " ", "0"}]}], " ", "]"}], " ", "&&",
           " ", 
          RowBox[{"Not", "[", " ", 
           RowBox[{"precision", " ", "===", " ", "Automatic"}], " ", "]"}]}], 
         ",", " ", 
         RowBox[{"Message", "[", " ", 
          RowBox[{
           RowBox[{"randomOrigami", "::", "prec"}], ",", " ", "precision"}], 
          " ", "]"}]}], " ", "]"}], ";", "\n", "\t", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"Not", "[", " ", 
          RowBox[{
           RowBox[{"MatrixQ", "[", " ", 
            RowBox[{"boundary", ",", " ", "NumericQ"}], " ", "]"}], " ", "&&",
            " ", 
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"Dimensions", "[", " ", "boundary", " ", "]"}], "]"}], 
            " ", "\[Equal]", " ", "2"}]}], " ", "]"}], ",", " ", 
         RowBox[{"Message", "[", " ", 
          RowBox[{"randomOrigami", "::", "bound"}], " ", "]"}]}], " ", "]"}], 
       ";", "\n", "\t", "False"}], "\n", ")"}]}]}]}]}]], "Code",
 CellLabel->
  "In[7090]:=",ExpressionUUID->"2869981c-2b14-4190-aed6-de2de17b05d7"]
}, Closed]],

Cell[CellGroupData[{

Cell["addFold[]", "Subsection",ExpressionUUID->"b5299508-8322-4271-9afb-f5f337741415"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"addFold", "[", " ", 
    RowBox[{"{", 
     RowBox[{"v1_", ",", "v2_"}], "}"}], " ", "]"}], "[", " ", 
   RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"mapCells", "[", " ", 
    RowBox[{
     RowBox[{"splitFace", "[", 
      RowBox[{"#", ",", " ", 
       RowBox[{"{", 
        RowBox[{"v1", ",", "v2"}], "}"}]}], "]"}], "&"}], " ", "]"}], " ", 
   "@", " ", "m"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"addFold", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"v1_", ",", "v2_"}], "}"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"mapCells", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"splitFace", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{"{", 
         RowBox[{"v1", ",", "v2"}], "}"}]}], "]"}], "&"}], ",", " ", "m"}], 
    " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"splitFace", "[", " ", 
   RowBox[{
    RowBox[{"cell", ":", " ", 
     RowBox[{"{", 
      RowBox[{"head_", ",", " ", 
       RowBox[{"{", 
        RowBox[{"v1_", ",", "l___", ",", " ", "v2_"}], "}"}], ",", " ", 
       "data_", ",", " ", "display_"}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", " ", "v2_Integer"}], "}"}]}], " ", "]"}], " ",
   ":=", " ", "cell"}], "\n", 
 RowBox[{
  RowBox[{"splitFace", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"head_", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
       "l1___", ",", " ", "v1_", ",", " ", "l2__", ",", " ", "v2_", ",", " ", 
        "l3___"}], "}"}], " ", ",", " ", "data_", ",", " ", "display_"}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", " ", "v2_Integer"}], "}"}]}], " ", "]"}], " ",
   ":=", "\[IndentingNewLine]", "\t", 
  RowBox[{"Sequence", "[", "\[IndentingNewLine]", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"head", ",", " ", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "l2", ",", "v2"}], "}"}], ",", "data", ",", " ", 
      "display"}], "}"}], ",", "\[IndentingNewLine]", "\t\t", 
    RowBox[{"{", 
     RowBox[{"head", ",", " ", 
      RowBox[{"{", 
       RowBox[{"v2", ",", " ", "l3", ",", " ", "l1", ",", " ", "v1"}], "}"}], 
      ",", " ", "data", ",", " ", "display"}], "}"}], ",", 
    "\[IndentingNewLine]", "\t\t", 
    RowBox[{"{", 
     RowBox[{"rigidBar", ",", " ", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2"}], "}"}], ",", " ", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], "\[IndentingNewLine]", "\t", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"splitFace", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"head_", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
       "l1___", ",", " ", "v1_", ",", " ", "l2__", ",", " ", "v2_", ",", " ", 
        "l3___"}], "}"}], " ", ",", " ", "data_", ",", " ", "display_"}], 
     "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v2_Integer", ",", " ", "v1_Integer"}], "}"}]}], " ", "]"}], " ",
   ":=", "\[IndentingNewLine]", "\t", 
  RowBox[{"Sequence", "[", "\[IndentingNewLine]", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"head", ",", " ", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "l2", ",", "v2"}], "}"}], ",", "data", ",", " ", 
      "display"}], "}"}], ",", "\[IndentingNewLine]", "\t\t", 
    RowBox[{"{", 
     RowBox[{"head", ",", " ", 
      RowBox[{"{", 
       RowBox[{"v2", ",", " ", "l3", ",", " ", "l1", ",", " ", "v1"}], "}"}], 
      ",", " ", "data", ",", " ", "display"}], "}"}], ",", 
    "\[IndentingNewLine]", "\t\t", 
    RowBox[{"{", 
     RowBox[{"rigidBar", ",", " ", 
      RowBox[{"{", 
       RowBox[{"v2", ",", "v1"}], "}"}], ",", " ", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], "\[IndentingNewLine]", "\t", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"splitFace", "[", " ", 
   RowBox[{"cell_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", " ", "v2_Integer"}], "}"}]}], " ", "]"}], " ",
   ":=", " ", "cell"}]}], "Code",
 CellLabel->
  "In[7095]:=",ExpressionUUID->"c88252b2-ffad-4dd1-859c-2bd8cba16a86"]
}, Closed]],

Cell[CellGroupData[{

Cell["subdivideFaces[]", "Subsection",ExpressionUUID->"8f6d6aa2-a5f3-44bd-b466-85e186e748fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "polygonDiagonals", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"polygonDiagonals", "[", " ", "vertices_", " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"guesses", " ", "=", " ", 
        RowBox[{"Tuples", "[", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "vertices", "]"}], "]"}], ",", " ", "2"}], 
         " ", "]"}]}], ",", " ", 
       RowBox[{"l", " ", "=", " ", 
        RowBox[{"Length", "[", "vertices", "]"}]}]}], "}"}], ",", "\n", "\t", 
     
     RowBox[{"DeleteDuplicatesBy", "[", " ", 
      RowBox[{
       RowBox[{"Map", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"vertices", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", " ", 
         RowBox[{"Select", "[", " ", 
          RowBox[{"guesses", ",", " ", 
           RowBox[{
            RowBox[{"Between", "[", " ", 
             RowBox[{
              RowBox[{"Abs", "[", " ", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", "  ", 
              RowBox[{"{", 
               RowBox[{"2", ",", " ", 
                RowBox[{
                 RowBox[{"Length", "[", "vertices", "]"}], "-", "2"}]}], 
               "}"}]}], " ", "]"}], " ", "&"}]}], " ", "]"}], ",", " ", 
         RowBox[{"{", "2", "}"}]}], " ", "]"}], ",", " ", "Sort"}], "]"}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findShortestDiagonal", "[", " ", 
    RowBox[{"coordinates_", ",", " ", 
     RowBox[{"vertices", " ", ":", " ", 
      RowBox[{"{", "__Integer", "}"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"diagonals", " ", "=", " ", 
       RowBox[{"polygonDiagonals", "[", " ", "vertices", " ", "]"}]}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"MinimalBy", "[", " ", 
       RowBox[{
        RowBox[{"Transpose", "[", " ", 
         RowBox[{"{", " ", 
          RowBox[{"diagonals", " ", ",", " ", 
           RowBox[{"displacementLength", "[", " ", 
            RowBox[{"coordinates", ",", " ", "diagonals"}], " ", "]"}]}], " ",
           "}"}], " ", "]"}], " ", ",", " ", "Last"}], " ", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "addFoldToFace", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"addFoldToFace", "[", " ", 
   RowBox[{
   "coordinates_", ",", " ", "dataNew_", ",", " ", "displayNew_", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
     "face", " ", ",", " ", "indices_", ",", " ", "data_", ",", " ", 
      "display_"}], " ", "}"}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"Sequence", " ", "@@", " ", 
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"shortestDiagonal", " ", "=", " ", 
        RowBox[{"findShortestDiagonal", "[", " ", 
         RowBox[{"coordinates", ",", " ", "indices"}], " ", "]"}]}], "}"}], 
      ",", "\n", "\t", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"splitFace", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "face", ",", " ", "indices", ",", " ", "data", ",", " ", 
            "display"}], "}"}], " ", ",", " ", "shortestDiagonal"}], " ", 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{"{", " ", 
         RowBox[{
         "fold", ",", " ", "shortestDiagonal", ",", " ", "dataNew", ",", " ", 
          "displayNew"}], " ", "}"}]}], "\n", "\t", "}"}]}], "\n", "]"}]}], 
   " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "indices", "]"}], " ", ">", " ", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"addFoldToFace", "[", " ", 
    RowBox[{
    "coordinates_", ",", " ", "data_", ",", " ", "display_", ",", " ", 
     "cell_"}], " ", "]"}], " ", ":=", " ", "cell"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "subdivideFaces", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<display\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", "}"}]}], ",", " ", 
     RowBox[{"\"\<data\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "0"}], " ", ",", " ", 
        RowBox[{
        "\"\<torsionalStiffness\>\"", " ", "\[Rule]", " ", "Infinity"}]}], 
       " ", "}"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"subdivideFaces", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"coordinates", " ", "=", " ", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], ",", " ", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<data\>\"", "]"}]}], ",", " ", 
      RowBox[{"display", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<display\>\"", "]"}]}]}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{"FixedPoint", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"mapCells", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"addFoldToFace", "[", " ", 
           RowBox[{
           "coordinates", ",", " ", "data", ",", " ", "display", " ", ",", 
            " ", "#"}], " ", "]"}], "&"}], ",", " ", "#"}], " ", "]"}], " ", 
       "&"}], ",", " ", "m"}], " ", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[7101]:=",ExpressionUUID->"992ac084-622b-46f9-88a6-1e6f80acfc8a"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["origami queries", "Section",ExpressionUUID->"8d4f30a8-a409-44fe-b780-83c10cec7e9b"],

Cell[CellGroupData[{

Cell["flatOrigamiQ[]", "Subsection",ExpressionUUID->"dec2368f-a749-4c44-a564-d70303dc01af"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "flatOrigamiQ", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"ZeroTest", "->", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"Precision", "->", "Infinity"}]}], "\n", "}"}]}], ";"}]], "Code",\

 CellLabel->
  "In[7109]:=",ExpressionUUID->"e213c25d-86fb-46a8-bed2-db9cf4e00176"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"flatOrigamiQ", "::", "precision"}], "=", 
   "\"\<Precision is not a positive real number or Infinity.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flatOrigamiQ", "::", "zerotest"}], "=", 
   "\"\<ZeroTest function must return True or False.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7110]:=",ExpressionUUID->"27d9771e-c049-4d42-a05c-24f8aa65a359"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"computePrecision", "[", 
   RowBox[{"m_", ",", "Infinity"}], "]"}], " ", ":=", " ", 
  RowBox[{"Precision", "[", "m", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"computePrecision", "[", 
   RowBox[{"m_", ",", 
    RowBox[{"precision_", "?", "NumericQ"}]}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"Precision", "[", "m", "]"}], ",", "precision"}], "]"}], " ", "/;",
    " ", 
   RowBox[{"precision", ">", "0"}]}]}], "\n", 
 RowBox[{
  RowBox[{"computePrecision", "[", 
   RowBox[{"m_", ",", "_"}], "]"}], " ", ":=", " ", "$Failed"}]}], "Code",
 CellLabel->
  "In[7112]:=",ExpressionUUID->"66c6af84-bc13-4556-a25c-ac0eee18a80e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"computeZeroTestFunction", "[", 
   RowBox[{"Automatic", ",", "Infinity"}], "]"}], " ", ":=", " ", 
  "PossibleZeroQ"}], "\n", 
 RowBox[{
  RowBox[{"computeZeroTestFunction", "[", 
   RowBox[{"Automatic", ",", " ", 
    RowBox[{"precision", " ", ":", " ", 
     RowBox[{"_", "?", "NumericQ"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "#", "]"}], "<=", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "precision"}], "+", "1"}], ")"}]}]}], "&"}], 
   ")"}]}], "\n", 
 RowBox[{
  RowBox[{"computeZeroTestFunction", "[", 
   RowBox[{"f_", ",", "_"}], "]"}], " ", ":=", " ", "f"}]}], "Code",
 CellLabel->
  "In[7115]:=",ExpressionUUID->"47d6ebf0-41ed-4fd2-a121-92c8d4158186"],

Cell[BoxData[
 RowBox[{
  RowBox[{"flatOrigamiQ", "[", 
   RowBox[{"m_origami", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"actualPrecision", " ", "=", " ", 
       RowBox[{"computePrecision", "[", 
        RowBox[{"m", ",", 
         RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], ",", " ", 
      "zerotestFunction", ",", " ", "res"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"zerotestFunction", "=", 
      RowBox[{"computeZeroTestFunction", "[", " ", 
       RowBox[{
        RowBox[{"OptionValue", "[", "ZeroTest", "]"}], ",", " ", 
        "actualPrecision"}], "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"res", "=", 
      RowBox[{"flatOrigamiInternalQ", "[", 
       RowBox[{"m", ",", "actualPrecision", ",", "zerotestFunction"}], 
       "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"res", "/;", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "res", "]"}], "=!=", "flatOrigamiInternalQ"}], 
        ",", "\n", "\t\t\t", "True", ",", "\n", "\t\t", 
        RowBox[{"Not", "[", 
         RowBox[{"BooleanQ", "[", 
          RowBox[{"zerotestFunction", "[", "0", "]"}], "]"}], "]"}], ",", 
        "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"flatOrigamiQ", "::", "zerotest"}], "]"}], ";", " ", 
         "False"}], ",", "\n", "\t\t", 
        RowBox[{"actualPrecision", "===", "$Failed"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"flatOrigamiQ", "::", "precision"}], "]"}], ";", " ", 
         "False"}], ",", "\n", "\t\t", "True", ",", "False"}], "\n", "\t", 
       "]"}]}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[7118]:=",ExpressionUUID->"e3d20717-cfab-4fd4-94cc-77bbf18c68a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"flatOrigamiInternalQ", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"precision", " ", ":", " ", 
     RowBox[{
      RowBox[{"_", "?", "NumericQ"}], " ", "|", " ", "Infinity"}]}], ",", " ", 
    RowBox[{"zerotestFunction_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"BooleanQ", "[", 
        RowBox[{"#", "[", "0", "]"}], "]"}], "&"}], ")"}]}]}], "]"}], ":=", 
  "\n", "\t", 
  RowBox[{"AllTrue", "[", 
   RowBox[{
    RowBox[{"gaussianCurvature", "[", 
     RowBox[{"m", ",", " ", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "precision"}],
        "]"}], " ", ",", " ", 
      RowBox[{"interiorVertices", "[", "m", "]"}]}], " ", "]"}], ",", " ", 
    "zerotestFunction"}], "]"}]}]], "Code",
 CellLabel->
  "In[7119]:=",ExpressionUUID->"05eabc87-f7ca-4d0e-a158-8006e36d6e80"]
}, Closed]],

Cell[CellGroupData[{

Cell["kawasakiQ[]", "Subsection",ExpressionUUID->"008e53a8-5623-407a-9675-c744ce0ab295"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "kawasakiQ", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"ZeroTest", "->", "PossibleZeroQ"}], ",", "\n", "\t", 
     RowBox[{"WorkingPrecision", "->", "Infinity"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[7120]:=",ExpressionUUID->"a68525df-606e-4297-940a-d09936ce44be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kawasakiQ", "[", 
   RowBox[{"m_origami", ",", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"v", "=", 
        RowBox[{"interiorVertices", "[", "m", "]"}]}], ",", "\n", "\t", 
       RowBox[{"mNum", "=", 
        RowBox[{"N", "[", 
         RowBox[{"m", ",", 
          RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}]}], "]"}]}]}], 
      "\n", "}"}], ",", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"flatOrigamiQ", "[", 
        RowBox[{"m", ",", "opt"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"And", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "ZeroTest", "]"}], "[", 
            RowBox[{"kawasakiAlternatingSum", "[", 
             RowBox[{"mNum", ",", "#"}], "]"}], "]"}], "&"}], "/@", "v"}], 
         ")"}]}], ",", "\n", "\t\t", "False"}], "\n", "\t", "]"}]}], "\n", 
    "]"}], "/;", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"NumericQ", "[", 
          RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], "]"}], "&&", 
         
         RowBox[{
          RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ">", "0"}]}],
         ")"}], "||", "\n", "\t", 
       RowBox[{
        RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], "===", 
        "Infinity"}]}], ")"}], "&&", "\n", "\t", 
     RowBox[{"BooleanQ", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "ZeroTest", "]"}], "[", "0", "]"}], 
      "]"}]}], "\n", ")"}]}]}]], "Code",
 CellLabel->
  "In[7121]:=",ExpressionUUID->"a41842bb-7ef0-4b81-9c7f-a828a6df6b23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kawasakiAlternatingSum", "[", 
   RowBox[{"m_", ",", "v_Integer"}], "]"}], ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"faces", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"RotateRight", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
       RowBox[{"listFaces", "[", 
        RowBox[{"m", ",", "v"}], "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"OddQ", "[", 
       RowBox[{"Length", "[", "faces", "]"}], "]"}], ",", "\n", "\t\t", "1", 
      ",", "\n", "\t\t", 
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "^", "#"}], " ", "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "faces", "]"}], "]"}]}], "]"}], " ", ".", 
        " ", 
        RowBox[{"planarAngle", "[", 
         RowBox[{"m", ",", "faces"}], "]"}]}], "]"}]}], "\n", "\t", "]"}]}], 
   "\n", "]"}]}]], "Code",
 CellLabel->
  "In[7122]:=",ExpressionUUID->"7e7cf3b5-db57-47e6-b6f1-c9d792881662"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"kawasakiQ", "::", "workingprecision"}], "=", 
   "\"\<Working precesion must be a real value larger than 0.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"kawasakiQ", "::", "zerotest"}], "=", 
    "\"\<Zero test does not return True or False.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"kawasakiQ", "[", 
   RowBox[{"m_origami", ",", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Not", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"NumericQ", "[", 
          RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], "]"}], "&&", 
         
         RowBox[{
          RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ">", "0"}]}],
         ")"}], "||", 
       RowBox[{
        RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], "===", 
        "Infinity"}]}], "]"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"kawasakiQ", "::", "workingprecision"}], "]"}], ";", "\n", 
      "\t\t", "False"}], ",", "\n", "\t", 
     RowBox[{"Not", "[", 
      RowBox[{"BooleanQ", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "ZeroTest", "]"}], "[", "0", "]"}], "]"}],
       "]"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"kawasakiQ", "::", "zerotest"}], "]"}], ";", "\n", "\t\t", 
      "False"}], ",", "\n", "\t", "True", ",", "False"}], "\n", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[7123]:=",ExpressionUUID->"32dba077-af38-4697-a75e-e017261a5468"]
}, Closed]],

Cell[CellGroupData[{

Cell["sameFoldAnglesQ[]", "Subsection",ExpressionUUID->"6f211a16-7cb3-4d11-8722-57c01e19ff28"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sameFoldAnglesQ", "[", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"folds_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
     RowBox[{"precision", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], " ", ":", " ", "0.1"}]}],
     " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"pos1_", "?", "MatrixQ"}], ",", " ", 
    RowBox[{"pos2_", "?", "MatrixQ"}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"angles1", " ", "=", " ", 
        RowBox[{"foldAngle", "[", " ", 
         RowBox[{"m", ",", " ", "pos1", ",", " ", "folds"}], " ", "]"}]}], 
       ",", "\n", "\t", 
       RowBox[{"angles2", " ", "=", " ", 
        RowBox[{"foldAngle", "[", " ", 
         RowBox[{"m", ",", " ", "pos2", ",", " ", "folds"}], " ", "]"}]}]}], 
      "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"angles1", " ", "-", " ", "angles2"}], ")"}], " ", ".", " ", 
       RowBox[{"(", 
        RowBox[{"angles1", " ", "-", " ", "angles2"}], ")"}]}], " ", "<", " ", 
      RowBox[{"precision", "^", "2"}]}]}], "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"Dimensions", "[", "pos2", "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MeshCellCount", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<mesh\>\"", "]"}], ",", "0"}], "]"}], ",", 
       RowBox[{"embeddingDimension", "[", "m", "]"}]}], "}"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sameFoldAnglesQ", "[", 
     RowBox[{"m_origami", ",", " ", 
      RowBox[{"folds_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
      RowBox[{"precision", " ", ":", " ", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
           RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], " ", ":", " ", 
       "0.1"}]}], "]"}], "[", 
    RowBox[{"_", ",", "_"}], "]"}], " ", ":=", " ", "False"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sameFoldAnglesQ", "[", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"precision", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], " ", ":", " ", "0.1"}]}],
     " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"pos1_", "?", "MatrixQ"}], ",", " ", 
    RowBox[{"pos2_", "?", "MatrixQ"}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"folds", " ", "=", " ", 
       RowBox[{"interiorEdges", "[", "m", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"With", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t", 
        RowBox[{
         RowBox[{"angles1", " ", "=", " ", 
          RowBox[{"foldAngle", "[", " ", 
           RowBox[{"m", ",", " ", "pos1", ",", " ", "folds"}], " ", "]"}]}], 
         ",", "\n", "\t", 
         RowBox[{"angles2", " ", "=", " ", 
          RowBox[{"foldAngle", "[", " ", 
           RowBox[{"m", ",", " ", "pos2", ",", " ", "folds"}], " ", "]"}]}]}],
         "\n", "\t", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"angles1", " ", "-", " ", "angles2"}], ")"}], " ", ".", " ", 
         RowBox[{"(", 
          RowBox[{"angles1", " ", "-", " ", "angles2"}], ")"}]}], " ", "<", 
        " ", 
        RowBox[{"precision", "^", "2"}]}]}], "\n", "\t", "]"}]}], "\n", "]"}],
    " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"Dimensions", "[", "pos2", "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MeshCellCount", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<mesh\>\"", "]"}], ",", "0"}], "]"}], ",", 
       RowBox[{"embeddingDimension", "[", "m", "]"}]}], "}"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sameFoldAnglesQ", "[", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"precision", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], " ", ":", " ", "0.1"}]}],
     "]"}], "[", 
   RowBox[{"_", ",", "_"}], "]"}], " ", ":=", " ", "False"}]}], "Code",
 CellLabel->
  "In[7126]:=",ExpressionUUID->"e0bb26a5-0f3a-4748-bdb8-8c1e259c4ad9"]
}, Closed]],

Cell[CellGroupData[{

Cell["sameMVAnglesQ[]", "Subsection",ExpressionUUID->"5e6046c4-fd4b-49b0-b1c7-87f237226e76"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sameMVAnglesQ", "[", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"folds_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
     RowBox[{"precision", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], " ", ":", " ", 
      "0.1"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"pos1_", "?", "MatrixQ"}], ",", " ", 
    RowBox[{"pos2_", "?", "MatrixQ"}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"angles1", " ", "=", " ", 
        RowBox[{"Sign", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], "<", "precision"}], ",", "0", 
             ",", "#"}], "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"foldAngle", "[", " ", 
           RowBox[{"m", ",", " ", "pos1", ",", " ", "folds"}], " ", "]"}]}], 
         " ", "]"}]}], ",", "\n", "\t", 
       RowBox[{"angles2", " ", "=", " ", 
        RowBox[{"Sign", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], "<", "precision"}], ",", "0", 
             ",", "#"}], "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"foldAngle", "[", " ", 
           RowBox[{"m", ",", " ", "pos2", ",", " ", "folds"}], " ", "]"}]}], 
         " ", "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{"And", " ", "@@", " ", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "\[Equal]", "#2"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"angles1", ",", "angles2"}], "}"}]}], "]"}]}]}], "\n", "]"}],
    " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"Dimensions", "[", "pos2", "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MeshCellCount", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<mesh\>\"", "]"}], ",", "0"}], "]"}], ",", 
       RowBox[{"embeddingDimension", "[", "m", "]"}]}], "}"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sameMVAnglesQ", "[", 
     RowBox[{"m_origami", ",", " ", 
      RowBox[{"folds_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", "Integer"}], "]"}], "&"}], ")"}]}], ",", " ", 
      RowBox[{"precision", " ", ":", " ", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
           RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], " ", ":", " ", 
       "0.1"}]}], "]"}], "[", 
    RowBox[{"_", ",", "_"}], "]"}], " ", ":=", " ", "False"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sameMVAnglesQ", "[", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"precision", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], " ", ":", " ", "0.1"}]}],
     " ", "]"}], "[", 
   RowBox[{
    RowBox[{"pos1_", "?", "MatrixQ"}], ",", " ", 
    RowBox[{"pos2_", "?", "MatrixQ"}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"folds", " ", "=", " ", 
       RowBox[{"interiorEdges", "[", "m", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"With", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t", 
        RowBox[{
         RowBox[{"angles1", " ", "=", " ", 
          RowBox[{"Sign", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", "#", "]"}], "<", "precision"}], ",", "0", 
               ",", "#"}], "]"}], "&"}], " ", "/@", " ", 
            RowBox[{"foldAngle", "[", " ", 
             RowBox[{"m", ",", " ", "pos1", ",", " ", "folds"}], " ", "]"}]}],
            " ", "]"}]}], ",", "\n", "\t", 
         RowBox[{"angles2", " ", "=", " ", 
          RowBox[{"Sign", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", "#", "]"}], "<", "precision"}], ",", "0", 
               ",", "#"}], "]"}], "&"}], " ", "/@", " ", 
            RowBox[{"foldAngle", "[", " ", 
             RowBox[{"m", ",", " ", "pos2", ",", " ", "folds"}], " ", "]"}]}],
            " ", "]"}]}]}], "\n", "\t", "}"}], ",", "\n", "\t", 
       RowBox[{"And", " ", "@@", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#1", "\[Equal]", "#2"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"angles1", ",", "angles2"}], "}"}]}], "]"}]}]}], "\n", 
      "\t", "]"}]}], "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"Dimensions", "[", "pos2", "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MeshCellCount", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<mesh\>\"", "]"}], ",", "0"}], "]"}], ",", 
       RowBox[{"embeddingDimension", "[", "m", "]"}]}], "}"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sameMVAnglesQ", "[", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"precision", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], " ", ":", " ", "0.1"}]}],
     "]"}], "[", 
   RowBox[{"_", ",", "_"}], "]"}], " ", ":=", " ", "False"}]}], "Code",
 CellLabel->
  "In[7130]:=",ExpressionUUID->"e7f3cc07-671b-468a-9786-71394929206f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["origami data", "Section",ExpressionUUID->"98b2155f-f47a-45bb-8fb7-4b6980d727fb"],

Cell[CellGroupData[{

Cell["foldMatrix[]", "Subsection",ExpressionUUID->"1a122a28-32d1-4a27-90a9-a1528906c8c0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"foldMatrix", "[", "m_origami", "]"}], ":=", 
  RowBox[{"foldMatrixInternal", "[", 
   RowBox[{"m", ",", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
    RowBox[{"interiorEdges", "[", "m", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"foldMatrix", "[", 
   RowBox[{"m_origami", ",", "positions_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"foldMatrixInternal", "[", 
    RowBox[{"m", ",", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
     RowBox[{"interiorEdges", "[", "m", "]"}]}], "]"}], "/;", 
   RowBox[{"vertexCoordinatesQ", "[", 
    RowBox[{"m", ",", "positions"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"foldMatrix", "[", 
   RowBox[{"m_origami", ",", "positions_", ",", 
    RowBox[{"indices_", "?", "edgeListQ"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"foldMatrixInternal", "[", 
    RowBox[{"m", ",", "positions", ",", "indices"}], "]"}], "/;", 
   RowBox[{"vertexCoordinatesQ", "[", 
    RowBox[{"m", ",", "positions"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[7134]:=",ExpressionUUID->"5a272a8d-b37b-477f-a024-ee728ce8ca49"],

Cell[BoxData[
 RowBox[{
  RowBox[{"foldMatrixInternal", "[", 
   RowBox[{"m_", ",", "positions_", ",", 
    RowBox[{"indices_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}]}], "]"}], ":=", 
  " ", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"displacements", "=", 
      RowBox[{"vertexDisplacement", "[", "m", "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"foldAngle", "[", 
        RowBox[{"m", ",", 
         RowBox[{"positions", "+", "displacements"}], ",", "indices"}], "]"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"Flatten", "[", "displacements", "]"}], "}"}]}], "]"}], "/.", 
     
     RowBox[{"Dispatch", "[", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "displacements", "]"}], "->", "0"}], "]"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[7137]:=",ExpressionUUID->"436752b5-19a3-4653-b22e-045e8ecc949c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"foldMatrix", "::", "notorig"}], "=", 
   "\"\<Mechanism is not origami.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"foldMatrix", "::", "pos"}], "=", 
   "\"\<Positions do not correspond to the mechanism provided.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"foldMatrix", "::", "indices"}], "=", 
    "\"\<Indices provided do not correspond to a list of edges.\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"foldMatrix", "[", "m_", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"foldMatrix", "::", "notorig"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"foldMatrix", "[", 
   RowBox[{"m_", ",", "positions_"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "=!=", "origami"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"foldMatrix", "::", "notorig"}], "]"}], ",", "\n", "\t", 
     RowBox[{"Not", "[", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "positions"}], "]"}], "]"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"foldMatrix", "::", "pos"}], "]"}], ",", "\n", "\t", "True", 
     ",", "False"}], "\n", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"foldMatrix", "[", 
   RowBox[{"m_", ",", "positions_", ",", "indices_"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "=!=", "origami"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"foldMatrix", "::", "notorig"}], "]"}], ",", "\n", "\t", 
     RowBox[{"Not", "[", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "positions"}], "]"}], "]"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"foldMatrix", "::", "pos"}], "]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Last", "[", 
       RowBox[{"Dimensions", "[", "indices", "]"}], "]"}], "!=", "2"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"foldMatrix", "::", "indices"}], "]"}], ",", "\n", "\t", "True",
      ",", "False"}], "\n", "]"}]}]}]}], "Code",
 CellLabel->
  "In[7138]:=",ExpressionUUID->"0f22cd14-f2c6-414f-9ee6-3d896ed5cfcc"]
}, Closed]],

Cell[CellGroupData[{

Cell["angularFoldMatrix[]", "Subsection",ExpressionUUID->"1b1feca1-c8a4-423e-ae6b-4d0242a1bd3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"angularFoldMatrix", "[", 
   RowBox[{"m_origami", ",", "vertex_Integer"}], "]"}], ":=", 
  RowBox[{"angularFoldMatrix", "[", 
   RowBox[{"m", ",", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "vertex"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"angularFoldMatrix", "[", 
   RowBox[{"m_origami", ",", 
    RowBox[{"positions_", "?", "MatrixQ"}], ",", "vertex_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"vertices", "=", 
        RowBox[{"listVertices", "[", 
         RowBox[{"m", ",", "vertex"}], "]"}]}], ",", "foldLengths", ",", 
       "angles", ",", "heights"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"foldLengths", "=", 
       RowBox[{"displacementLength", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", "vertex"}], "}"}], "&"}], "/@", "vertices"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"heights", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"vertexDisplacement", "[", 
          RowBox[{"vertices", ",", "\"\<z\>\""}], "]"}], "->", 
         RowBox[{"foldLengths", " ", 
          RowBox[{"Array", "[", 
           RowBox[{"angles", ",", 
            RowBox[{"Length", "[", "vertices", "]"}]}], "]"}]}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"Last", "@", 
       RowBox[{"CoefficientArrays", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             RowBox[{"foldMatrixInternal", "[", 
              RowBox[{"m", ",", "positions", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "vertex"}], "}"}], "&"}], "/@", 
                "vertices"}]}], "]"}], " ", ".", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{"vertexDisplacement", "[", 
               RowBox[{"m", ",", 
                RowBox[{"All", "[", "3", "]"}]}], "]"}], "]"}]}]}], "/.", 
           "heights"}], "/.", 
          RowBox[{
           RowBox[{"vertexDisplacement", "[", 
            RowBox[{"_", ",", "_"}], "]"}], "->", "0"}]}], ",", "\n", "\t\t", 
         
         RowBox[{"Array", "[", 
          RowBox[{"angles", ",", 
           RowBox[{"Length", "[", "vertices", "]"}]}], "]"}]}], "\n", "\t", 
        "]"}]}]}]}], "\n", "]"}], "/;", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
     RowBox[{"interiorVertices", "[", "m", "]"}], ",", "vertex"}], 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[7144]:=",ExpressionUUID->"9464b0a7-e384-4ae5-9af9-43a3e239bf92"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"angularFoldMatrix", "::", "notintv"}], "=", 
   "\"\<Vertex should be an interior vertex.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"angularFoldMatrix", "::", "orig"}], "=", 
   "\"\<Mechanism is not origami.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"angularFoldMatrix", "::", "pos"}], "=", 
    "\"\<Positions do not correspond to the mechanism provided.\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"angularFoldMatrix", "[", 
   RowBox[{"m_origami", ",", "_"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"angularFoldMatrix", "::", "notintv"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"angularFoldMatrix", "[", 
   RowBox[{"m_", ",", "positions_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "=!=", "origami"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"angularFoldMatrix", "::", "orig"}], "]"}], ",", "\n", "\t", 
     RowBox[{"Not", "[", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "positions"}], "]"}], "]"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"angularFoldMatrix", "::", "pos"}], "]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Not", "[", 
       RowBox[{"IntegerQ", "[", "v", "]"}], "]"}], "||", 
      RowBox[{"Not", "[", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"interiorVertices", "[", "m", "]"}], ",", "v"}], "]"}], 
       "]"}]}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"angularFoldMatrix", "::", "notintv"}], "]"}], ",", "\n", "\t", 
     "True", ",", "False"}], "\n", "]"}]}]}]}], "Code",
 CellLabel->
  "In[7146]:=",ExpressionUUID->"abf836c2-0f64-4bef-a1a6-0c0029eb66ae"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["graphics and geometry", "Section",ExpressionUUID->"3a223d20-fd00-4681-bb34-d0d67287ba5a"],

Cell[CellGroupData[{

Cell["butterflyDecomposition[], butterflyDecomposableQ[]", "Subsection",ExpressionUUID->"cdb85ba4-fcc4-4d47-bebf-3f42f4284e57"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"butterflyDecomposition", "[", " ", "o_origami", " ", "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"results", " ", "=", " ", 
        RowBox[{"FixedPointList", "[", " ", 
         RowBox[{"butterflyDecompositionStep", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "o"}], "}"}]}], " ", "]"}]}], ",", " ", 
       "remainingOrigami"}], " ", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"remainingOrigami", " ", "=", " ", 
       RowBox[{
        RowBox[{"Last", "[", "results", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"Drop", "[", " ", 
         RowBox[{
          RowBox[{"Drop", "[", " ", 
           RowBox[{
            RowBox[{"results", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", 
            RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}], ",", " ", 
        "remainingOrigami"}], " ", "}"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"butterflyDecompositionStep", "[", " ", 
   RowBox[{"{", 
    RowBox[{"facepair_", ",", " ", "o_origami"}], "}"}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"boundary", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"boundaryVertices", "[", "o", "]"}], "]"}]}], ",", " ", 
       "faces", ",", " ", "possibleButterflies", ",", " ", "butterfly"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"faces", " ", "=", " ", 
       RowBox[{
        RowBox[{"connectivity", "[", " ", 
         RowBox[{"o", ",", " ", 
          RowBox[{
          "\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], "]"}],
         "[", 
        RowBox[{"[", " ", "boundary", " ", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"possibleButterflies", " ", "=", " ", 
       RowBox[{"Select", "[", " ", 
        RowBox[{
         RowBox[{"Transpose", "[", " ", 
          RowBox[{"{", 
           RowBox[{"boundary", ",", " ", "faces"}], "}"}], " ", "]"}], ",", 
         " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Last", "[", "#", "]"}], "]"}], " ", "\[Equal]", " ", 
           "2"}], " ", "&"}]}], " ", "]"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "possibleButterflies", "]"}], ">", "0"}], ",",
         "\n", "\t\t", 
        RowBox[{
         RowBox[{"butterfly", " ", "=", " ", 
          RowBox[{"RandomChoice", "[", "possibleButterflies", "]"}]}], ";", 
         " ", "\n", "\t\t", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"butterfly", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
           RowBox[{"deleteCells", "[", 
            RowBox[{"o", ",", " ", 
             RowBox[{"Alternatives", "@@", 
              RowBox[{"(", " ", 
               RowBox[{"face", " ", "/@", " ", 
                RowBox[{"butterfly", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], " ", ")"}]}]}], " ", 
            "]"}]}], " ", "}"}]}], ",", "\n", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"facepair", ",", " ", "o"}], "}"}]}], "\n", "\t", "]"}]}]}], 
    "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"o", "[", "\"\<faces\>\"", "]"}], "]"}], "\[GreaterEqual]", 
    "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"butterflyDecompositionStep", "[", " ", 
    RowBox[{"{", 
     RowBox[{"facepair_", ",", "o_origami"}], "}"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"{", 
    RowBox[{"facepair", ",", "o"}], "}"}]}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "version", " ", "shows", " ", "little", " ", "speed", " ", 
    "improvements", " ", "over", " ", "solving", " ", "everything", " ", 
    "explicitly"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"butterflyDecompositionQ", "[", " ", "o_origami", " ", "]"}], " ", 
   ":=", " ", 
   RowBox[{"FixedPoint", "[", " ", 
    RowBox[{"butterflyDecompositionStepQ", ",", " ", "o"}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"butterflyDecompositionStepQ", "[", " ", 
   RowBox[{"f_", "?", "BooleanQ"}], " ", "]"}], " ", ":=", " ", "f"}], "\n", 
 RowBox[{
  RowBox[{"butterflyDecompositionStepQ", "[", " ", "o_origami", " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"boundary", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"boundaryVertices", "[", "o", "]"}], "]"}]}], ",", " ", 
       "faces", ",", " ", "possibleButterflies", ",", " ", "butterfly"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"faces", " ", "=", " ", 
       RowBox[{
        RowBox[{"connectivity", "[", " ", 
         RowBox[{"o", ",", " ", 
          RowBox[{
          "\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], "]"}],
         "[", 
        RowBox[{"[", " ", "boundary", " ", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"possibleButterflies", " ", "=", " ", 
       RowBox[{"Select", "[", " ", 
        RowBox[{
         RowBox[{"Transpose", "[", " ", 
          RowBox[{"{", 
           RowBox[{"boundary", ",", " ", "faces"}], "}"}], " ", "]"}], ",", 
         " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Last", "[", "#", "]"}], "]"}], " ", "\[Equal]", " ", 
           "2"}], " ", "&"}]}], " ", "]"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "possibleButterflies", "]"}], ">", "0"}], ",",
         "\n", "\t\t", 
        RowBox[{
         RowBox[{"butterfly", " ", "=", " ", 
          RowBox[{"RandomChoice", "[", "possibleButterflies", "]"}]}], ";", 
         " ", "\n", "\t\t", 
         RowBox[{"deleteVertices", "[", 
          RowBox[{"o", ",", " ", 
           RowBox[{"{", 
            RowBox[{"butterfly", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}]}], ",", "\n", 
        "\n", "\t\t", "False"}], "\n", "\t", "]"}]}]}], "\n", "]"}], " ", "/;",
    " ", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"o", "[", "\"\<faces\>\"", "]"}], "]"}], "\[GreaterEqual]", 
    "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"butterflyDecompositionStepQ", "[", " ", "o_origami", " ", "]"}], 
  " ", ":=", " ", "True"}]}], "Code",
 CellLabel->
  "In[7151]:=",ExpressionUUID->"86475d85-9a3f-4989-ab14-6a6455a4d8d0"]
}, Closed]],

Cell[CellGroupData[{

Cell["flattenOrigami[]", "Subsection",ExpressionUUID->"1d7082d6-fe88-456f-bbee-ec48dcda4795"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unfoldOrigami", "[", " ", "m_origami", " ", "]"}], " ", ":=", " ", 
  "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"folds", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Property", "[", " ", 
          RowBox[{
           RowBox[{"fold", "[", "#", "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "0"}], "}"}]}], " ",
           "]"}], "&"}], " ", "/@", " ", 
        RowBox[{"interiorEdges", "[", "m", "]"}]}]}], ",", "\n", "\t", 
      "selfflatteningOrigami", ",", " ", "res"}], "\n", "}"}], ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"selfflatteningOrigami", " ", "=", " ", 
      RowBox[{"addCells", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"deleteCells", "[", " ", "_joint", " ", "]"}], " ", "@", " ", 
         RowBox[{
          RowBox[{"deleteCells", "[", " ", "_fold", " ", "]"}], " ", "@", " ",
           "m"}]}], ",", " ", "folds"}], "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"minimizeEnergy", "[", " ", 
       RowBox[{"selfflatteningOrigami", ",", " ", 
        RowBox[{"MaxIterations", " ", "\[Rule]", " ", 
         RowBox[{"10", "^", "6"}]}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "res", "]"}], "===", "List"}], ",", " ", "res", 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"Infinity", ",", " ", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "}"}]}], " ", 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[7158]:=",ExpressionUUID->"ca0f7ad4-e8c5-4fea-9b64-31539691bedf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"chooseBoundaryFace", "[", " ", "m_origami", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"First", " ", "@", " ", 
   RowBox[{"SelectFirst", "[", " ", 
    RowBox[{
     RowBox[{"connectivity", "[", 
      RowBox[{"m", ",", " ", 
       RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], " ",
       "]"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], " ", "&"}]}], 
    " ", "]"}]}]}]], "Code",
 CellLabel->
  "In[7159]:=",ExpressionUUID->"cfb7c4f0-3b35-4092-90e4-9984e62ee69e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rotateFaceToXYPlane", "[", " ", 
    RowBox[{"positions_", ",", " ", 
     RowBox[{"face", " ", ":", " ", 
      RowBox[{"{", "__Integer", "}"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"initialPoints", " ", "=", " ", 
        RowBox[{"positions", "[", 
         RowBox[{"[", " ", 
          RowBox[{"face", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}], " ", "]"}], "]"}]}], ",", 
       " ", "lengths", ",", " ", "angle", ",", " ", "newPointLocations", ",", 
       " ", "residual", ",", " ", "transform"}], " ", "}"}], ",", " ", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"lengths", " ", "=", " ", 
       RowBox[{"displacementLength", "[", 
        RowBox[{"positions", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"face", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
           RowBox[{"face", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", "3"}], "]"}], "]"}]}], "}"}]}], " ", "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"angle", " ", "=", " ", 
       RowBox[{"First", " ", "@", " ", 
        RowBox[{"planarAngle", "[", " ", 
         RowBox[{"positions", ",", " ", 
          RowBox[{"{", 
           RowBox[{"face", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "3"}], "]"}], "]"}], "}"}]}], " ", "]"}]}]}], 
      ";", "\t", "\n", "\t", 
      RowBox[{"newPointLocations", " ", "=", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"lengths", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", "0"}], "}"}], ",", 
         "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"lengths", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", " ", "angle", " ", "]"}], ",", " ", 
            RowBox[{"Sin", "[", " ", "angle", " ", "]"}], ",", " ", "0"}], 
           " ", "}"}]}]}], "\n", "\t", "}"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"residual", ",", " ", "transform"}], " ", "}"}], " ", "=", 
       " ", 
       RowBox[{"FindGeometricTransform", "[", " ", 
        RowBox[{"newPointLocations", ",", "initialPoints", ",", " ", 
         RowBox[{
         "TransformationClass", " ", "\[Rule]", " ", "\"\<Rigid\>\""}], ",", 
         " ", 
         RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Linear\>\""}]}], " ", 
        "]"}]}], ";", "\n", "\n", "\t", "transform"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flattenOrigami", "::", "face"}], "=", 
   "\"\<Unable to identify faces.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rotateFaceToXYPlane", "[", " ", 
   RowBox[{"m_origami", ",", " ", "_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"flattenOrigami", "::", "face"}], "]"}], ";", " ", "Identity"}], 
   ")"}]}]}], "Code",
 CellLabel->
  "In[7160]:=",ExpressionUUID->"e70b599e-0dc7-4b77-90cb-c44e0bd5f445"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "flattenOrigami", "]"}], " ", "=", " ", 
    RowBox[{"Options", "[", "MeshRegion", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flattenOrigami", "[", " ", 
    RowBox[{"m_origami", " ", ",", " ", 
     RowBox[{"tol_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericQ", "[", "#", "]"}], " ", "&&", " ", 
         RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
      "unfoldedEnergy", ",", " ", "unfoldedPositions", ",", " ", "transform", 
       ",", " ", "xyPositions", ",", " ", "newOrigami"}], " ", "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"flatOrigamiQ", "[", 
          RowBox[{"m", ",", " ", 
           RowBox[{"Precision", " ", "\[Rule]", " ", "tol"}]}], " ", "]"}], 
         "]"}], ",", " ", 
        RowBox[{"Message", "[", 
         RowBox[{"flattenOrigami", "::", "flat"}], "]"}]}], " ", "]"}], ";", 
      "\n", "\n", "\t", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"unfoldedEnergy", ",", " ", "unfoldedPositions"}], " ", "}"}],
        " ", "=", " ", 
       RowBox[{"unfoldOrigami", "[", "m", "]"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", " ", ".", " ", "#"}], " ", "&"}], ")"}], " ", "@", 
          " ", 
          RowBox[{"foldAngle", "[", 
           RowBox[{"m", ",", " ", "unfoldedPositions", ",", " ", 
            RowBox[{"interiorEdges", "[", "m", "]"}]}], "]"}]}], " ", ">", 
         " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "4"}], ")"}]}]}], ",", " ", 
        RowBox[{"Message", "[", " ", 
         RowBox[{"flattenOrigami", "::", "notflt"}], " ", "]"}]}], " ", "]"}],
       ";", "\n", "\n", "\t", 
      RowBox[{"transform", " ", "=", " ", 
       RowBox[{"rotateFaceToXYPlane", "[", " ", 
        RowBox[{"unfoldedPositions", ",", " ", 
         RowBox[{"chooseBoundaryFace", "[", "m", "]"}]}], " ", "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"xyPositions", " ", "=", " ", 
       RowBox[{"PadRight", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"transform", "[", " ", "unfoldedPositions", " ", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", "unfoldedPositions", "]"}], ",", " ", "3"}],
           " ", "}"}]}], " ", "]"}]}], ";", "\n", "\t\t\t", "\n", "\t", 
      RowBox[{"mechanisms`Private`addMeshRegion", "[", " ", 
       RowBox[{
        RowBox[{"origami", "[", " ", 
         RowBox[{"xyPositions", ",", " ", 
          RowBox[{"{", "}"}], ",", " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}], ",", " ", 
        "Automatic", ",", " ", "opt"}], " ", "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flattenOrigami", "::", "notflt"}], "=", 
   "\"\<Origami flat energy may be too large to get good results.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flattenOrigami", "::", "flat"}], "=", 
   "\"\<Gaussian curvature of vertices is not flat to desired tolerance \
`1`.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flattenOrigami", "::", "tol"}], " ", "=", " ", 
   "\"\<Tolerance `1` should be a positive number.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"flattenOrigami", "::", "tol2"}], " ", "=", " ", 
    "\"\<Second argument should be a tolerance.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"flattenOrigami", "[", " ", 
   RowBox[{"m_origami", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"flattenOrigami", "::", "tol2"}], " ", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"flattenOrigami", "[", " ", 
   RowBox[{"m_origami", ",", " ", "tol_", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{
     RowBox[{"flattenOrigami", "::", "tol"}], ",", " ", "tol"}], " ", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[7163]:=",ExpressionUUID->"259c06f9-b5bb-48b2-afaf-c7bb31292e07"]
}, Closed]],

Cell[CellGroupData[{

Cell["MVAssignment[]", "Subsection",ExpressionUUID->"dd9e02cb-40b4-433d-a473-cad5e51bf190"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MVAssignment", "[", " ", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"positions_", " ", ":", " ", "Automatic"}], ",", " ", 
     RowBox[{"tol", " ", ":", " ", 
      RowBox[{"_", "?", "NumericQ"}]}], ",", " ", 
     RowBox[{"color_", " ", ":", " ", "Automatic"}]}], " ", "]"}], " ", ":=", 
   " ", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"pos", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"positions", " ", "===", " ", "Automatic"}], ",", " ", 
          RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
          "positions"}], "]"}]}], ",", " ", "\n", "\t", 
       RowBox[{"colorFunction", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"color", " ", "===", " ", "Automatic"}], ",", " ", 
          "MVdefaultColor", ",", " ", "color"}], " ", "]"}]}], ",", " ", "\n",
        "\t", 
       RowBox[{"edges", " ", "=", " ", 
        RowBox[{"interiorEdges", "[", "m", "]"}]}]}], "\n", "}"}], ",", "\n", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"angles", " ", "=", " ", 
          RowBox[{"foldAngle", "[", 
           RowBox[{"m", ",", " ", "pos", ",", " ", "edges"}], "]"}]}], " ", 
         "}"}], ",", "\n", "\t\t", 
        RowBox[{"MapThread", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#1", " ", "\[Rule]", " ", 
             RowBox[{"colorFunction", "[", " ", 
              RowBox[{"assignMVForFold", "[", " ", 
               RowBox[{"#2", ",", " ", "tol"}], " ", "]"}], " ", "]"}]}], " ",
             ")"}], " ", "&"}], " ", ",", " ", 
          RowBox[{"{", " ", 
           RowBox[{"edges", ",", " ", "angles"}], " ", "}"}]}], " ", "]"}]}], 
       "\n", "\t", "]"}], " ", "/;", " ", 
      RowBox[{"numericCoordinatesQ", "[", 
       RowBox[{"m", ",", " ", "pos"}], "]"}]}]}], "\n", "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"assignMVForFold", "[", 
   RowBox[{"angle_", ",", " ", "tol_"}], "]"}], ":=", " ", 
  RowBox[{"1", " ", "/;", " ", 
   RowBox[{"angle", " ", ">", " ", 
    RowBox[{"Abs", "[", "tol", "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"assignMVForFold", "[", 
   RowBox[{"angle_", ",", " ", "tol_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"-", "1"}], " ", "/;", " ", 
   RowBox[{"angle", " ", "<", " ", 
    RowBox[{"-", 
     RowBox[{"Abs", "[", "tol", "]"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"assignMVForFold", "[", 
    RowBox[{"_", ",", "_"}], "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"MVdefaultColor", "[", "1", "]"}], " ", ":=", " ", "Red"}], "\n", 
 RowBox[{
  RowBox[{"MVdefaultColor", "[", 
   RowBox[{"-", "1"}], "]"}], " ", ":=", " ", "Blue"}], "\n", 
 RowBox[{
  RowBox[{"MVdefaultColor", "[", "0", "]"}], " ", ":=", " ", 
  "Black"}]}], "Code",
 CellLabel->
  "In[7171]:=",ExpressionUUID->"3a4da837-219c-420b-a290-9b7db76205bb"]
}, Closed]],

Cell[CellGroupData[{

Cell["SurfaceArea[], RegionMeasure[], RegionMoment[]", "Subsection",ExpressionUUID->"f1b04111-e3f7-4385-ae18-0bacd274da7e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SurfaceArea", "[", 
   RowBox[{"o_origami", ",", " ", "r___"}], "]"}], " ", "^:=", " ", 
  RowBox[{"SurfaceArea", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionMeasure", "[", 
   RowBox[{"o_origami", ",", " ", "r___"}], "]"}], " ", "^:=", " ", 
  RowBox[{"RegionMeasure", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionMoment", "[", 
   RowBox[{"o_origami", ",", " ", "r___"}], "]"}], " ", "^:=", " ", 
  RowBox[{"RegionMoment", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[7178]:=",ExpressionUUID->"5d8708fa-cf07-414f-8126-ace947a8f0e8"]
}, Closed]],

Cell[CellGroupData[{

Cell["texture[]", "Subsection",ExpressionUUID->"ca8bfc39-6cbe-49cd-916b-27aa904950fa"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"texture", "[", "]"}], " ", ":=", " ", 
     RowBox[{"{", " ", 
      RowBox[{
      "\"\<WhitePaper\>\"", ",", " ", "\"\<GrayPaper\>\"", ",", " ", 
       "\"\<WrinkledPaper\>\""}], " ", "}"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"$dataDirectory", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"First", "@", 
           RowBox[{"PacletFind", "[", "\"\<Mechanisms\>\"", "]"}]}], ")"}], 
         "[", "\"\<Location\>\"", "]"}], ",", "\"\<Resources\>\"", ",", 
        "\"\<Textures\>\""}], "}"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"texture", "[", "\"\<WrinkledPaper\>\"", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"texture", "[", "\"\<WrinkledPaper\>\"", "]"}], " ", "=", " ", 
     RowBox[{"Texture", " ", "@", " ", 
      RowBox[{"Normal", "[", 
       RowBox[{"Import", "[", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{"$dataDirectory", ",", "\"\<crinkled-paper.jpg\>\""}], 
          "}"}], "]"}], "]"}], "]"}]}]}]}], "\n", 
   RowBox[{
    RowBox[{"texture", "[", "\"\<WhitePaper\>\"", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"texture", "[", "\"\<WhitePaper\>\"", "]"}], " ", "=", " ", 
     RowBox[{"Texture", " ", "@", " ", 
      RowBox[{"Normal", "[", 
       RowBox[{"Import", "[", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{"$dataDirectory", ",", "\"\<white-paper.jpg\>\""}], "}"}], 
         "]"}], "]"}], "]"}]}]}]}], "\n", 
   RowBox[{
    RowBox[{"texture", "[", "\"\<GrayPaper\>\"", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"texture", "[", "\"\<GrayPaper\>\"", "]"}], " ", "=", " ", 
     RowBox[{"Texture", " ", "@", " ", 
      RowBox[{"Normal", "[", 
       RowBox[{"Import", "[", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{"$dataDirectory", ",", "\"\<blue-paper.jpeg\>\""}], "}"}], 
         "]"}], "]"}], "]"}]}]}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"texture", "::", "bad"}], "=", 
     "\"\<Unrecognized texture `1`.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"texture", "[", "s_", "]"}], " ", ":=", " ", 
    RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"texture", "::", "bad"}], ",", " ", "s"}], "]"}]}]}]}], 
  "*)"}]], "Code",
 CellLabel->
  "In[7181]:=",ExpressionUUID->"21760ea9-beff-44aa-baf4-aa7dded604cf"]
}, Closed]],

Cell[CellGroupData[{

Cell["plotOrigami[]", "Subsection",ExpressionUUID->"0d47f488-fc16-43ad-8fe4-3fc44f943dcd"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Options", "[", " ", "plotOrigami", " ", "]"}], " ", "=", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"\"\<folds\>\"", " ", "\[Rule]", " ", "None"}], ",", "  ", 
        RowBox[{
        "\"\<face\>\"", " ", "\[Rule]", " ", "\"\<WrinkledPaper\>\""}], ",", 
        " ", 
        RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0.003"}]}], " ", 
       "}"}]}], ";"}], "\n", "\n", 
    RowBox[{
     RowBox[{"plotOrigami", "[", " ", 
      RowBox[{"m_origami", ",", " ", 
       RowBox[{"opt", " ", ":", " ", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
     
     RowBox[{"plotOrigami", "[", " ", 
      RowBox[{"m", ",", " ", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "opt"}], " ", 
      "]"}]}], "\n", 
    RowBox[{"plotOrigami", "[", " ", 
     RowBox[{"m_origami", ",", " ", 
      RowBox[{"pos_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}]}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Module", "[", "\n", 
      RowBox[{
       RowBox[{"{", "\n", "\t", 
        RowBox[{"faces", ",", " ", "positions", " ", ",", "\n", "\t", 
         RowBox[{"folds", " ", "=", " ", 
          RowBox[{"interiorEdges", "[", "m", "]"}]}], ",", "\n", "\t", 
         RowBox[{"boundary", " ", "=", " ", 
          RowBox[{"Flatten", "[", " ", 
           RowBox[{
            RowBox[{"boundaryEdges", "[", "m", "]"}], " ", ",", " ", "1"}], 
           " ", "]"}]}], ",", "\n", "\t", 
         RowBox[{"d", " ", "=", " ", 
          RowBox[{"displayDimension", "[", "m", "]"}]}], ",", "\n", "\t", 
         "positionMap"}], "\n", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"positions", " ", "=", " ", 
         RowBox[{"PadRight", "[", " ", 
          RowBox[{"pos", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "pos", "]"}], ",", " ", "d"}], "}"}]}], 
          " ", "]"}]}], ";", "\n", "\t", 
        RowBox[{"positionMap", " ", "=", " ", 
         RowBox[{"Dispatch", "[", " ", 
          RowBox[{"Thread", "[", " ", 
           RowBox[{
            RowBox[{"Range", "[", " ", 
             RowBox[{"Length", "[", "pos", "]"}], " ", "]"}], " ", "\[Rule]", 
            " ", "positions"}], " ", "]"}], " ", "]"}]}], ";", "\n", "\t", 
        RowBox[{"faces", " ", "=", " ", 
         RowBox[{"toGraphics", "[", " ", 
          RowBox[{"m", ",", " ", "positions", ",", " ", "2", ",", " ", 
           RowBox[{
           "VertexTextureCoordinates", " ", "\[Rule]", " ", "positions"}]}], 
          " ", "]"}]}], ";", "\n", "\n", "\t", 
        RowBox[{"Show", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"d", "\[Equal]", "2"}], ",", " ", "Graphics", ",", " ", 
             "Graphics3D"}], " ", "]"}], " ", "/@", "\n", "\t\t", 
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"{", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"Check", "[", " ", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"StringQ", "[", " ", 
                    RowBox[{"OptionValue", "[", "\"\<face\>\"", "]"}], " ", 
                    "]"}], ",", " ", 
                   RowBox[{"texture", "[", 
                    RowBox[{"OptionValue", "[", "\"\<face\>\"", "]"}], "]"}], 
                   " ", ",", " ", 
                   RowBox[{"OptionValue", "[", "\"\<face\>\"", "]"}]}], " ", 
                  "]"}], " ", ",", " ", "Nothing"}], " ", "]"}], ",", "\n", 
               "\t\t\t", "faces"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
             "\n", "\t\t\t", 
             RowBox[{"Flatten", " ", "@", " ", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"Thickness", "[", " ", 
                 RowBox[{"2", " ", 
                  RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}], 
                 " ", "]"}], ",", " ", "Black", ",", " ", 
                RowBox[{"Line", " ", "/@", " ", 
                 RowBox[{"(", 
                  RowBox[{"boundary", " ", "/.", " ", "positionMap"}], 
                  ")"}]}]}], " ", "}"}]}], ",", "\n", "\t\t\t", 
             RowBox[{"Check", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"MapThread", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", " ", 
                    RowBox[{"#1", ",", " ", 
                    RowBox[{"Thickness", "[", " ", 
                    RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}], 
                    " ", "]"}], ",", "  ", 
                    RowBox[{"Line", "[", "#2", "]"}]}], " ", "}"}], "]"}], 
                  " ", "&"}], " ", ",", " ", 
                 RowBox[{"{", " ", 
                  RowBox[{
                   RowBox[{"foldStyleGraphics", "[", " ", 
                    RowBox[{"folds", ",", " ", 
                    RowBox[{"OptionValue", "[", "\"\<folds\>\"", "]"}]}], " ",
                     "]"}], ",", "  ", 
                   RowBox[{"(", 
                    RowBox[{"folds", " ", "/.", " ", "positionMap"}], ")"}]}],
                   "}"}]}], " ", "]"}], ",", "\n", "\t\t\t\t", "Nothing"}], 
              "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "}"}]}], ",", "\n", 
          "\t\t", 
          RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
          RowBox[{"BoxRatios", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
          RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "\n", "\t", 
         "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"lineThicknessQ", "[", " ", 
        RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}], " ", "]"}], 
       " ", "&&", " ", 
       RowBox[{"checkVertexNumberQ", "[", " ", 
        RowBox[{
         RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], " ", "\[Equal]", 
         " ", 
         RowBox[{"Length", "[", "pos", "]"}]}], " ", "]"}]}], "\n", "\n", 
      RowBox[{
       RowBox[{
        RowBox[{"plotOrigami", "::", "vert"}], " ", "=", " ", 
        "\"\<Number of vertices does not match number of vertex positions \
provided.\>\""}], ";"}], "\n", 
      RowBox[{
       RowBox[{"checkVertexNumberQ", "[", " ", 
        RowBox[{"b_", "?", "BooleanQ"}], " ", "]"}], " ", ":=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{"Not", "[", "b", "]"}], ",", " ", 
           RowBox[{"Message", "[", 
            RowBox[{"plotOrigami", "::", "vert"}], "]"}]}], " ", "]"}], ";", 
         " ", "b"}], ")"}]}], "\n", "\n", 
      RowBox[{
       RowBox[{
        RowBox[{"plotOrigami", "::", "thick"}], " ", "=", " ", 
        "\"\<Line thickness, `1`, should be a positive real number.\>\""}], 
       ";"}], "\n", 
      RowBox[{
       RowBox[{"lineThicknessQ", "[", " ", 
        RowBox[{"t_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"NumericQ", "[", "#", "]"}], " ", "&&", " ", 
            RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], " ", "]"}], " ", ":=",
        " ", "True"}], "\n", 
      RowBox[{
       RowBox[{"lineThicknessQ", "[", " ", "t_", " ", "]"}], " ", ":=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"plotOrigami", "::", "thick"}], ",", " ", "t"}], "]"}], 
         ";", " ", "False"}], ")"}]}], "\n", "\n", 
      RowBox[{
       RowBox[{
        RowBox[{"plotOrigami", "::", "folds"}], " ", "=", " ", 
        "\"\<Folds should be of the form {{v1,v2}, ... } -> { style1, ... \
}.\>\""}], ";"}], "\n", 
      RowBox[{
       RowBox[{"foldStyleGraphics", "[", " ", 
        RowBox[{"allFolds_", ",", " ", "None"}], " ", "]"}], " ", ":=", " ", 
       RowBox[{"ConstantArray", "[", " ", 
        RowBox[{"Black", ",", " ", 
         RowBox[{"Length", "[", "allFolds", "]"}]}], " ", "]"}]}], "\n", 
      RowBox[{
       RowBox[{"foldStyleGraphics", "[", " ", 
        RowBox[{"allFolds_", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"folds_", "?", "MatrixQ"}], " ", "\[Rule]", " ", 
           "style_List"}], "}"}]}], " ", "]"}], " ", ":=", " ", 
       RowBox[{"foldStyleGraphics", "[", " ", 
        RowBox[{"allFolds", ",", " ", 
         RowBox[{"folds", " ", "\[Rule]", " ", "style"}]}], " ", "]"}]}], 
      "\n", 
      RowBox[{"foldStyleGraphics", "[", " ", 
       RowBox[{"allFolds_", ",", " ", 
        RowBox[{
         RowBox[{"folds_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MatrixQ", "[", 
             RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], " ", 
         "\[Rule]", " ", "style_List"}]}], " ", "]"}]}]}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"With", "[", " ", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"rules", " ", "=", " ", 
         RowBox[{"Dispatch", " ", "@", " ", 
          RowBox[{"Thread", "[", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Sort", " ", "/@", " ", "folds"}], ")"}], " ", "\[Rule]",
             " ", "style"}], " ", "]"}]}]}], " ", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Sort", "/@", "allFolds"}], ")"}], " ", "/.", " ", 
         "rules"}], " ", "/.", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], " ", "\[Rule]", 
         " ", "Black"}]}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Last", "[", 
         RowBox[{"Dimensions", "[", " ", "folds", " ", "]"}], "]"}], " ", 
        "\[Equal]", " ", "2"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Length", "[", "folds", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"Length", "[", "style", "]"}]}]}], "\n", 
      RowBox[{
       RowBox[{"foldStyleGraphics", "[", " ", 
        RowBox[{"_", " ", ",", " ", "_"}], " ", "]"}], " ", ":=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"plotOrigami", "::", "folds"}], "]"}], ";", " ", 
         "$Failed"}], ")"}]}]}]}]}]}], "*)"}]], "Code",
 CellLabel->
  "In[7182]:=",ExpressionUUID->"f4fe01d3-4232-4330-ba99-4aa4a3d2ab06"]
}, Closed]],

Cell[CellGroupData[{

Cell["deconstructedPlot[]", "Subsection",ExpressionUUID->"e536bc67-8dac-439c-9b64-663526d4bf1d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "deconstructedPlot", "]"}], "=", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<edgeWeights\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", "}"}]}], ",", "\n", "\t", 
      RowBox[{"\"\<defaultWeight\>\"", " ", "\[Rule]", " ", "0"}]}], "\n", 
     "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "[", " ", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", "\t", 
   
   RowBox[{"deconstructedPlot", "[", 
    RowBox[{"m", ",", " ", 
     RowBox[{"mechanismPositions", "[", "m", "]"}], ",", " ", "opt"}], " ", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "[", " ", 
    RowBox[{"m_origami", ",", " ", "coords_", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"faces", " ", "=", " ", 
         RowBox[{"listFaces", "[", "m", "]"}]}], ",", " ", "\n", "\t", 
        RowBox[{"widths", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"connectivity", "[", 
            RowBox[{"m", ",", 
             RowBox[{
             "\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<edges\>\""}]}], "]"}],
            " ", "/.", " ", 
           RowBox[{"OptionValue", "[", "\"\<edgeWeights\>\"", "]"}]}], " ", "/.",
           " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"_Integer", ",", "_Integer"}], "}"}], " ", "\[Rule]", " ", 
           RowBox[{"OptionValue", "[", "\"\<defaultWeight\>\"", "]"}]}]}]}]}],
        "\n", "}"}], ",", "\n", "\t", 
      RowBox[{"MapThread", "[", " ", 
       RowBox[{"shrinkPolygon", " ", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"coords", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "&"}], " ", "/@", " ", "faces"}],
           ",", "widths"}], "}"}]}], " ", "]"}]}], "\n", "]"}], " ", "/;", 
    " ", 
    RowBox[{"deconstructedPlotQ", "[", 
     RowBox[{"m", " ", ",", " ", "coords", ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<edgeWeights\>\"", "]"}], ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<defaultWeight\>\"", "]"}]}], " ", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlotQ", "[", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "rules_", ",", " ", "default_"}], 
    " ", "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "positions"}], "]"}], ",", " ", "True", ",", " ", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"deconstructedPlot", "::", "pos"}], "]"}], ";", " ", 
       "False"}]}], "]"}], " ", "&&", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"NumericQ", "[", "default", "]"}], "&&", 
       RowBox[{"default", " ", "\[GreaterEqual]", " ", "0"}]}], ",", " ", 
      "True", ",", " ", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"deconstructedPlot", "::", "defaultweight"}], "]"}], ";", " ",
        "False"}]}], " ", "]"}], " ", "&&", " ", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"MatchQ", "[", " ", 
       RowBox[{"rules", ",", " ", 
        RowBox[{"{", "___Rule", "}"}]}], " ", "]"}], ",", " ", "True", ",", 
      " ", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"deconstructedPlot", "::", "weightRules"}], "]"}], ";", " ", 
       "False"}]}], " ", "]"}], " ", "&&", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"VectorQ", "[", " ", 
       RowBox[{
        RowBox[{"rules", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", "\[GreaterEqual]", "0"}]}], "&"}]}], " ", "]"}], ",", 
      " ", "True", ",", " ", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"deconstructedPlot", "::", "weightrules"}], "]"}], ";", " ", 
       "False"}]}], " ", "]"}], " ", "&&", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"MatchQ", "[", " ", 
       RowBox[{
        RowBox[{"rules", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_Integer", ",", "_Integer"}], "}"}], "..."}], "}"}]}], 
       " ", "]"}], ",", " ", "True", ",", " ", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"deconstructedPlot", "::", "weights"}], "]"}], ";", " ", 
       "False"}]}], " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "::", "pos"}], "=", 
   "\"\<The positions do not correspond to the mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "::", "weights"}], "=", 
   "\"\<The weights must be positive numbers.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "::", "defaultweight"}], "=", 
   "\"\<The default weight must be a positive number.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "::", "edges"}], "=", 
   "\"\<The left hand side of the rules must be well-formed edges.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "::", "weightrules"}], "=", 
   "\"\<Option \\\"edgeWeights\\\" must be a list of rules of the form edge \
-> positive weight.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7183]:=",ExpressionUUID->"a2cd35af-dbac-415c-ae7f-35b450b3699e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"shrinkPolygon", "[", " ", 
    RowBox[{"pts_", ",", " ", "widths_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"pts", " ", "+", " ", 
    RowBox[{"Total", " ", "@", " ", 
     RowBox[{"MapIndexed", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"shrinkPolygonSide", "[", " ", 
         RowBox[{"pts", ",", " ", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", "#1"}], " ", "]"}], 
        "&"}], ",", " ", "widths"}], " ", "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"shrinkPolygonSide", "[", " ", 
   RowBox[{"pts_", ",", " ", "v1_", ",", " ", "width_"}], " ", "]"}], " ", ":=",
   "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "pts", "]"}]}], ",", " ", "v2", ",", " ", 
      "future", ",", " ", "past", ",", " ", "futureEdge", ",", " ", "edge", 
      ",", " ", "pastEdge"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"v2", "=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"v1", "+", "1"}], ",", " ", "n", ",", " ", "1"}], "]"}]}], 
     ";", " ", 
     RowBox[{"future", "=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"v2", "+", "1"}], ",", " ", "n", ",", " ", "1"}], "]"}]}], 
     ";", " ", 
     RowBox[{"past", " ", "=", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"v1", "-", "1"}], ",", "n", ",", "1"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"edge", "=", 
      RowBox[{"Normalize", "[", " ", 
       RowBox[{
        RowBox[{"pts", "[", 
         RowBox[{"[", "v2", "]"}], "]"}], " ", "-", " ", 
        RowBox[{"pts", "[", 
         RowBox[{"[", "v1", "]"}], "]"}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"futureEdge", " ", "=", " ", 
      RowBox[{"Normalize", "[", " ", 
       RowBox[{
        RowBox[{"pts", "[", 
         RowBox[{"[", "future", "]"}], "]"}], " ", "-", " ", 
        RowBox[{"pts", "[", 
         RowBox[{"[", "v2", "]"}], "]"}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"pastEdge", " ", "=", " ", 
      RowBox[{"Normalize", "[", " ", 
       RowBox[{
        RowBox[{"pts", "[", 
         RowBox[{"[", "past", "]"}], "]"}], " ", "-", " ", 
        RowBox[{"pts", "[", 
         RowBox[{"[", "v1", "]"}], "]"}]}], " ", "]"}]}], ";", "\n", "\t", 
     "\n", "\t", 
     RowBox[{"RotateRight", "[", 
      RowBox[{
       RowBox[{"Join", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"width", "*", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"pastEdge", "/", 
             RowBox[{"Norm", "[", " ", 
              RowBox[{"Cross", "[", " ", 
               RowBox[{"pastEdge", ",", " ", "edge"}], " ", "]"}], " ", 
              "]"}]}], ",", "\n", "\t\t\t", 
            RowBox[{"futureEdge", "/", 
             RowBox[{"Norm", "[", " ", 
              RowBox[{"Cross", "[", " ", 
               RowBox[{"futureEdge", ",", " ", "edge"}], " ", "]"}], " ", 
              "]"}]}]}], "\n", "\t\t", "}"}]}], ",", "\n", "\t\t", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"n", "-", "2"}]}], "]"}]}], "\n", "\t", "]"}], ",", " ", 
       RowBox[{"v1", "-", "1"}]}], "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[7192]:=",ExpressionUUID->"26dfeae0-7a2f-41aa-bacf-11526f181415"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experimental code", "Section",ExpressionUUID->"29af4a10-169e-44ed-ab80-d4d19498fc3c"],

Cell[CellGroupData[{

Cell["scalePolygon[]", "Subsection",ExpressionUUID->"8c3bbadf-3053-457d-a892-f02c18c44a69"],

Cell[BoxData[
 RowBox[{
  RowBox[{"scalePolygon", "[", 
   RowBox[{"coords_", " ", ",", " ", "shrinkBy_"}], " ", "]"}], ":=", "\n", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{"center", " ", "=", " ", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"Mean", "[", "coords", "]"}], ",", 
        RowBox[{"Length", "[", "coords", "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"center", " ", "+", " ", 
     RowBox[{
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{"1", "-", "shrinkBy"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"coords", "-", "center"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellLabel->
  "In[7194]:=",ExpressionUUID->"2b53e07e-c571-4e4c-9ac7-257cb21e8424"]
}, Closed]],

Cell[CellGroupData[{

Cell["extrudedPolygon[]", "Subsection",ExpressionUUID->"6e90e6cc-3c8b-4b20-b7df-90c3b932e22e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"extrudedPolygon", "[", 
    RowBox[{
     RowBox[{"Polygon", "[", "rawCoords_", "]"}], ",", " ", 
     "extrusionVector_", ",", " ", 
     RowBox[{"translationVector_", ":", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"extrudedPolygon", "[", " ", 
    RowBox[{
    "rawCoords", ",", " ", "extrusionVector", ",", " ", "translationVector"}],
     " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extrudedPolygon", "[", 
    RowBox[{"rawCoords_", ",", " ", "extrusionVector_", ",", " ", 
     RowBox[{"translationVector_", ":", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], " ", "]"}], ":=", "\n", 
   "\t", 
   RowBox[{
    RowBox[{"extrudedPolygon", "[", 
     RowBox[{
      RowBox[{"PadRight", "[", 
       RowBox[{"rawCoords", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "[", "rawCoords", "]"}], ",", "3"}], "}"}]}], 
       "]"}], ",", "extrusionVector", ",", "translationVector"}], "]"}], " ", 
    "/;", " ", 
    RowBox[{
     RowBox[{"MatrixQ", "[", "rawCoords", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", "rawCoords", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", "2"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"extrudedPolygon", "[", 
   RowBox[{"rawCoords_", ",", " ", 
    RowBox[{"extrusionVector", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_", "?", "NumericQ"}], ",", " ", 
       RowBox[{"_", "?", "NumericQ"}], ",", " ", 
       RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], " ", ",", " ", 
    RowBox[{"translationVector", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_", "?", "NumericQ"}], ",", " ", 
       RowBox[{"_", "?", "NumericQ"}], ",", " ", 
       RowBox[{"_", "?", "NumericQ"}]}], "}"}], " ", ":", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], " ", "]"}], " ", ":=", 
  "\n", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"coords", " ", "=", " ", 
       RowBox[{"rawCoords", " ", "+", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"translationVector", ",", 
          RowBox[{"Length", "[", "rawCoords", "]"}]}], "]"}]}]}], "}"}], ",", 
     "\n", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"extrudedCoords", " ", "=", " ", 
         RowBox[{"coords", " ", "+", " ", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"extrusionVector", " ", ",", " ", 
            RowBox[{"Length", "[", "coords", "]"}]}], "]"}]}]}], " ", "}"}], 
       ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"Polyhedron", " ", "@", " ", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
          "{", "\[IndentingNewLine]", "\t\t", "coords", "\[IndentingNewLine]",
            "\t\t", "}"}], ",", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{"#1", ",", 
               RowBox[{"Reverse", "[", "#2", "]"}]}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{"coords", ",", "2", ",", "1", ",", "1"}], "]"}], ",", 
              RowBox[{"Partition", "[", 
               RowBox[{"extrudedCoords", ",", "2", ",", "1", ",", "1"}], 
               "]"}]}], "}"}]}], "]"}], ",", "\n", "\t\t", 
          RowBox[{"{", "\n", "\t\t", 
           RowBox[{"Reverse", " ", "@", " ", "extrudedCoords"}], "\n", "\t\t",
            "}"}]}], "\[IndentingNewLine]", "\t", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"MatrixQ", "[", "rawCoords", "]"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Dimensions", "[", "rawCoords", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", 
     "3"}]}]}]}]}], "Code",
 CellLabel->
  "In[7195]:=",ExpressionUUID->"061bec92-a2db-49e7-8283-a614e229a28a"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["post", "Section",ExpressionUUID->"6ab0f874-d874-4315-8392-aaaebc7a8913"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[7198]:=",ExpressionUUID->"4519db25-af3d-4f88-99eb-7a5b387934cb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanisms`graphics", "Chapter",ExpressionUUID->"4e117d75-efd0-4fbb-9ab5-54303adb6974"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<mechanisms`graphics`\>\"", "]"}], 
  ";"}]], "Code",
 CellLabel->
  "In[7200]:=",ExpressionUUID->"e14f7419-89e3-4783-9198-ab1d0a95c1b9"],

Cell[CellGroupData[{

Cell["usage", "Section",ExpressionUUID->"6034899b-68aa-4037-b918-fc414503a490"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotDisplacement", "::", "usage"}], "=", "\n", 
    "\"\<plotDisplacement[ mechanism, vertex displacements ] plots mechanism \
with arrows correspond to vertex displacements overlayed.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"angleMarker", "::", "usage"}], "=", 
   "\"\<angleMarker[m, {v1,v2,v3}, (radius) ] creates an arc around an angle \
spanning (v1,v2) to (v3,v2).\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"angleText", "::", "usage"}], "=", 
    "\"\<angleTest[m, {v1,v2,v3}, (distance) ] adds a text label to the angle \
spanning (v1,v2) to (v3,v2).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitives", "::", "usage"}], " ", "=", " ", 
   "\"\<mechanismPrimitives[ m, (positions) ] returns a list of mechanism \
primitives.\>\""}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toGraphicsComplex", "::", "usage"}], " ", "=", " ", 
   "\"\<toGraphicsComplex[ m, (positions) ] returns a GraphicsComplex object \
identical to mechanismPrimitives[].\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7201]:=",ExpressionUUID->"2cf6321a-3523-4f5a-99bf-84c1ba3196fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pinnedJointShape", "::", "usage"}], "=", 
   "\"\<pinnedJointShape[] is a triangular pinned joint in 2D.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"springShape", "::", "usage"}], "=", 
   "\"\<springShape[] represents a spring shape function with a particular \
thickness and number of jags.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jointShape", "::", "usage"}], "=", 
   "\"\<jointShape[] represents a joint shape distinguishing pinned joints \
from free joints.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"chromoElasticShape", "::", "usage"}], "=", 
   "\"\<chromoElasticShape[]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rigidBarShape", "::", "usage"}], "=", 
   "\"\<rigidBarShape[] represents the shape of a rigidBar\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"freeJointShape", "::", "usage"}], "=", 
   "\"\<freeJointShape[] represents the shape of a freeJoint.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"faceShape", "::", "usage"}], "=", "\"\<faceShape[]\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[7206]:=",ExpressionUUID->"3cf79f62-832f-451c-8e21-d75c262e0170"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "usage"}], "=", "\n", 
   "\"\<plotMechanism[ mechanism, positions ] plots a mechanism using \
positions.\nplotMechanism[mechanism, {positions 1, positions 2,...}] creates \
a list of plotted mechanisms with uniform size.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[7213]:=",ExpressionUUID->"fec2b29f-ac6a-4f61-b198-9ada7c9935e9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"texture", "::", "usage"}], "=", 
   "\"\<texture[ s ] returns a texture having the name s. Use texture[] to \
see examples.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotOrigami", "::", "usage"}], " ", "=", " ", 
   "\"\<plotOrigami[ o ] plots an origami.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7214]:=",ExpressionUUID->"e7452ff7-4a1b-486f-843f-361c8ea558a0"]
}, Closed]],

Cell[CellGroupData[{

Cell["global", "Section",ExpressionUUID->"0f8e42dc-5f2f-405a-b230-3b1f2fd2dc43"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`geometry`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`rigidity`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`origami`\>\"", "]"}], ";"}]}], "Code",\

 CellLabel->
  "In[7216]:=",ExpressionUUID->"3298ad3f-9fe1-4719-b9e0-a54361a0a019"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
some functions for extracting graphics information from mechanisms\
\>", "Section",ExpressionUUID->"264055aa-257e-4658-8e88-c7a82054dd0f"],

Cell[CellGroupData[{

Cell["defaultGraphicsPrimitive[]", "Subsection",ExpressionUUID->"7e843407-88e6-42e6-a7fb-0d90b64f932d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "what", " ", "should", " ", "the", " ", "default", " ", "primitive", " ", 
    "be", " ", "for", " ", "our", " ", "plotting", " ", 
    RowBox[{"functions", "?"}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"defaultGraphicsPrimitive", "[", 
     RowBox[{
      RowBox[{"rigidBar", "|", "Line"}], ",", " ", "framework"}], "]"}], " ", 
    ":=", " ", 
    RowBox[{"rigidBarShape", "[", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"defaultGraphicsPrimitive", "[", 
     RowBox[{
      RowBox[{"rigidBar", "|", "Line"}], ",", " ", "origami"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"rigidBarShape", "[", 
     RowBox[{"\"\<width\>\"", "\[Rule]", "0.015"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"defaultGraphicsPrimitive", "[", 
     RowBox[{"spring", ",", " ", "_"}], "]"}], " ", ":=", 
    RowBox[{"springShape", "[", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"defaultGraphicsPrimitive", "[", 
     RowBox[{"joint", ",", " ", "framework"}], "]"}], " ", ":=", " ", 
    RowBox[{"jointShape", "[", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"defaultGraphicsPrimitive", "[", 
     RowBox[{"joint", ",", " ", "origami"}], "]"}], " ", ":=", " ", 
    RowBox[{"jointShape", "[", 
     RowBox[{"\"\<diameter\>\"", "\[Rule]", "0.03"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"defaultGraphicsPrimitive", "[", 
     RowBox[{"face", ",", "_"}], "]"}], " ", ":=", " ", 
    RowBox[{"faceShape", "[", 
     RowBox[{"\"\<thickness\>\"", "\[Rule]", "0.01"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultGraphicsPrimitive", "[", 
      RowBox[{"Polygon", ",", "_"}], "]"}], "[", 
     RowBox[{"x_", ",", "_", ",", "_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Polygon", "[", "x", "]"}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultGraphicsPrimitive", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "[", " ", 
     RowBox[{"x_", ",", " ", "_", ",", " ", "_"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"{", "}"}]}]}]}]], "Code",
 CellLabel->
  "In[7221]:=",ExpressionUUID->"6387c029-df63-4edd-b7e3-3056df6c830d"]
}, Closed]],

Cell[CellGroupData[{

Cell["specifiedGraphicsElements[]", "Subsection",ExpressionUUID->"525005b9-0e31-4cdc-8823-308e24296256"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "find", " ", "the", " ", "user", " ", "specified", " ", "graphics", " ", 
    "elements", " ", "we", " ", "may", " ", "want", " ", "to", " ", "deal", 
    " ", "with"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"specifiedGraphicsElements", "[", " ", 
     RowBox[{"m_", ",", " ", "spec_"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"mesh", " ", "=", " ", 
         RowBox[{"m", "[", "\"\<mesh\>\"", "]"}]}], ",", " ", 
        RowBox[{"components", " ", "=", " ", 
         RowBox[{"cellData", "[", 
          RowBox[{"m", ",", "spec"}], "]"}]}]}], " ", "}"}], ",", "\n", "\t", 
      
      RowBox[{"MapThread", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "#2"}], "]"}]}], "}"}], 
         "&"}], " ", ",", " ", 
        RowBox[{"{", 
         RowBox[{"components", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"getProperties", "[", " ", 
             RowBox[{"mesh", ",", " ", "#"}], " ", "]"}], "&"}], " ", "/@", 
           " ", "components"}]}], " ", "}"}]}], " ", "]"}]}], "\n", "]"}]}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"getProperties", "[", " ", 
     RowBox[{"mr_", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cellSpec", " ", ":", " ", "joint"}], ",", " ", 
        "association_"}], "}"}]}], " ", "]"}], " ", ":=", " ", "\n", 
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"indices", " ", "=", " ", 
        RowBox[{"association", "[", "\"\<indices\>\"", "]"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Association", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"\"\<style\>\"", " ", "\[Rule]", " ", 
         RowBox[{"PropertyValue", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mr", ",", " ", 
             RowBox[{"Point", "[", "indices", "]"}]}], "}"}], " ", ",", " ", 
           "MeshCellStyle"}], " ", "]"}]}], ",", "\n", "\t", 
        RowBox[{"\"\<shape\>\"", " ", "\[Rule]", " ", 
         RowBox[{"PropertyValue", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mr", ",", " ", 
             RowBox[{"Point", "[", "indices", "]"}]}], "}"}], " ", ",", " ", 
           "MeshCellShapeFunction"}], " ", "]"}]}], ",", "\n", "\t", 
        RowBox[{"\"\<label\>\"", " ", "\[Rule]", " ", 
         RowBox[{"PropertyValue", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mr", ",", " ", 
             RowBox[{"Point", "[", "indices", "]"}]}], "}"}], " ", ",", " ", 
           "MeshCellLabel"}], " ", "]"}]}]}], "\n", "\t", "]"}]}], "\n", 
     "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"getProperties", "[", " ", 
     RowBox[{"mr_", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cellSpec", " ", ":", " ", 
         RowBox[{"rigidBar", "|", "spring"}]}], ",", " ", "association_"}], 
       "}"}]}], " ", "]"}], " ", ":=", " ", "\n", 
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"indices", " ", "=", " ", 
        RowBox[{"association", "[", "\"\<indices\>\"", "]"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Association", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"\"\<style\>\"", " ", "\[Rule]", " ", 
         RowBox[{"PropertyValue", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mr", ",", " ", 
             RowBox[{"Line", "[", "indices", "]"}]}], "}"}], " ", ",", " ", 
           "MeshCellStyle"}], " ", "]"}]}], ",", "\n", "\t", 
        RowBox[{"\"\<shape\>\"", " ", "\[Rule]", " ", 
         RowBox[{"PropertyValue", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mr", ",", " ", 
             RowBox[{"Line", "[", "indices", "]"}]}], "}"}], " ", ",", " ", 
           "MeshCellShapeFunction"}], " ", "]"}]}], ",", "\n", "\t", 
        RowBox[{"\"\<label\>\"", " ", "\[Rule]", " ", 
         RowBox[{"PropertyValue", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mr", ",", " ", 
             RowBox[{"Line", "[", "indices", "]"}]}], "}"}], " ", ",", " ", 
           "MeshCellLabel"}], " ", "]"}]}]}], "\n", "\t", "]"}]}], "\n", 
     "]"}]}], "\n", 
   RowBox[{
    RowBox[{"getProperties", "[", " ", 
     RowBox[{"mr_", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cellSpec", " ", ":", " ", "face"}], ",", " ", 
        "association_"}], "}"}]}], " ", "]"}], " ", ":=", " ", "\n", 
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"indices", " ", "=", " ", 
        RowBox[{"association", "[", "\"\<indices\>\"", "]"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Association", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"\"\<style\>\"", " ", "\[Rule]", " ", 
         RowBox[{"PropertyValue", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mr", ",", " ", 
             RowBox[{"Polygon", "[", "indices", "]"}]}], "}"}], " ", ",", " ",
            "MeshCellStyle"}], " ", "]"}]}], ",", "\n", "\t", 
        RowBox[{"\"\<shape\>\"", " ", "\[Rule]", " ", 
         RowBox[{"PropertyValue", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mr", ",", " ", 
             RowBox[{"Polygon", "[", "indices", "]"}]}], "}"}], " ", ",", " ",
            "MeshCellShapeFunction"}], " ", "]"}]}], ",", "\n", "\t", 
        RowBox[{"\"\<label\>\"", " ", "\[Rule]", " ", 
         RowBox[{"PropertyValue", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mr", ",", " ", 
             RowBox[{"Polygon", "[", "indices", "]"}]}], "}"}], " ", ",", " ",
            "MeshCellLabel"}], " ", "]"}]}]}], "\n", "\t", "]"}]}], "\n", 
     "]"}]}]}]}]], "Code",
 CellLabel->
  "In[7229]:=",ExpressionUUID->"ebb41bdf-03c2-44de-845f-e9adc58d77ac"]
}, Closed]],

Cell[CellGroupData[{

Cell["positionDimension[]", "Subsection",ExpressionUUID->"7263b898-abdd-4b74-bf48-8401d5363cb9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dimension", "[", " ", 
   RowBox[{"position_", "?", "MatrixQ"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{"position", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dimension", "[", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "MatrixQ"}], "}"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Max", "[", 
    RowBox[{"Length", " ", "/@", " ", 
     RowBox[{"positions", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"sameVertexNumberQ", "[", " ", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"position_", "?", "MatrixQ"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], " ", "\[Equal]", " ", 
   RowBox[{"Length", "[", "position", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"sameVertexNumberQ", "[", " ", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "MatrixQ"}], "}"}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], "}"}], ",", " ", 
    RowBox[{"AllTrue", "[", 
     RowBox[{
      RowBox[{"Length", " ", "/@", " ", "positions"}], " ", ",", " ", 
      RowBox[{
       RowBox[{"#", "\[Equal]", "n"}], "&"}]}], " ", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sameVertexNumberQ", "[", " ", 
    RowBox[{"m_", ",", " ", "Automatic"}], " ", "]"}], " ", ":=", " ", 
   "True"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"flatEnoughQ", "[", " ", 
   RowBox[{"position_", "?", "MatrixQ"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Chop", "[", " ", 
    RowBox[{"Max", "[", " ", 
     RowBox[{"Abs", "[", " ", 
      RowBox[{"position", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", "]"}], " ", "]"}], " ", 
    "]"}], " ", "\[Equal]", " ", "0"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flatEnoughQ", "[", " ", 
    RowBox[{"positions", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "MatrixQ"}], "}"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Chop", "[", " ", 
     RowBox[{"Max", "[", " ", 
      RowBox[{"Abs", "[", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"positions", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", "3"}], "]"}], "]"}], "]"}], " ", 
       "]"}], " ", "]"}], " ", "]"}], " ", "\[Equal]", " ", "0"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"recastDimension", "[", " ", 
   RowBox[{
    RowBox[{"position_", "?", "MatrixQ"}], " ", ",", " ", "dim_"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"PadRight", "[", 
   RowBox[{"position", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Length", "[", "position", "]"}], ",", "dim"}], "}"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"recastDimension", "[", " ", 
   RowBox[{
    RowBox[{"position", ":", 
     RowBox[{"{", 
      RowBox[{"__", "?", "MatrixQ"}], "}"}]}], " ", ",", " ", "dim_"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"PadRight", "[", 
   RowBox[{"position", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Length", "[", "position", "]"}], ",", 
      RowBox[{"Length", "[", 
       RowBox[{"position", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "dim"}], "}"}]}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[7233]:=",ExpressionUUID->"987031ba-a53c-4f11-a7e4-bcab36c04d09"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"positionDimension", "[", " ", 
    RowBox[{"m_", ",", " ", "Automatic", ",", " ", "dim_"}], " ", "]"}], ":=",
    "\n", "\t", 
   RowBox[{"Switch", "[", " ", 
    RowBox[{"dim", ",", "\n", "\t\t", "Automatic", ",", "\n", "\t\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"embeddingDimension", "[", "m", "]"}], "\[Equal]", "3"}], 
        " ", "&&", " ", 
        RowBox[{
         RowBox[{"displayDimension", "[", "m", "]"}], "\[Equal]", "2"}]}], 
       ",", "\n", "\t\t\t\t", 
       RowBox[{"recastDimension", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "2"}], "]"}], ",",
        "\n", "\t\t\t\t", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "\n", "\t\t\t", "]"}], 
     ",", "\n", "\t\t", "2", ",", " ", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"embeddingDimension", "[", "m", "]"}], "\[Equal]", "3"}], 
        " ", "&&", " ", 
        RowBox[{"Not", "@", 
         RowBox[{"flatEnoughQ", "[", 
          RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"mechanism", "::", "notflat"}], "]"}], ";", " ", 
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"recastDimension", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "2"}], "]"}]}], 
      "\n", "\t\t\t", "]"}], ",", "\n", "\t\t", "3", ",", " ", 
     RowBox[{"recastDimension", "[", 
      RowBox[{
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "3"}], "]"}], ",", 
     "\n", "\t\t", "_", ",", " ", "$Failed"}], "\n", "\t", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"positionDimension", "[", " ", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{
      RowBox[{"_", "?", "vertexCoordinatesQ"}], "|", 
      RowBox[{"{", 
       RowBox[{"__", "?", "vertexCoordinatesQ"}], "}"}]}]}], ",", " ", 
    "dim_"}], " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"Switch", "[", " ", 
    RowBox[{"dim", ",", "\n", "\t\t", "Automatic", ",", "\n", "\t\t\t", 
     RowBox[{"recastDimension", "[", " ", 
      RowBox[{"positions", ",", " ", 
       RowBox[{"dimension", "[", "positions", "]"}]}], " ", "]"}], ",", "\n", 
     "\t\t", "2", ",", "\n", "\t\t\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"dimension", "[", "positions", "]"}], " ", "\[Equal]", " ", 
         "3"}], " ", "&&", " ", 
        RowBox[{"Not", "@", 
         RowBox[{"flatEnoughQ", "[", "positions", "]"}]}]}], ",", "\n", 
       "\t\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"mechanism", "::", "notflat"}], "]"}], ";", "\n", "\t\t\t\t", 
        RowBox[{"recastDimension", "[", " ", 
         RowBox[{"positions", ",", " ", "3"}], "]"}]}], ",", "\n", "\t\t\t\t", 
       RowBox[{"recastDimension", "[", " ", 
        RowBox[{"positions", ",", " ", "2"}], "]"}]}], "\n", "\t\t\t", "]"}], 
     ",", "\n", "\t\t", "3", ",", " ", 
     RowBox[{"recastDimension", "[", " ", 
      RowBox[{"positions", ",", " ", "3"}], "]"}], ",", "\n", "\t\t", "_", 
     ",", " ", "$Failed"}], "\n", "\t", "]"}], " ", "/;", " ", 
   RowBox[{"sameVertexNumberQ", "[", " ", 
    RowBox[{"m", ",", " ", "positions"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"positionDimension", "[", " ", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{
      RowBox[{"_", "?", "vertexCoordinatesQ"}], "|", 
      RowBox[{"{", 
       RowBox[{"__", "?", "vertexCoordinatesQ"}], "}"}]}]}], ",", " ", 
    "dim_"}], " ", "]"}], ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"mechanism", "::", "vn"}], ",", " ", 
      RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], " ", "]"}], ";", " ",
     "$Failed"}], ")"}]}]}], "Code",
 CellLabel->
  "In[7242]:=",ExpressionUUID->"4df19566-3b22-4178-9883-43f4afe6f65f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "notflat"}], " ", "=", " ", 
   "\"\<Cannot project a fully 3D mechanism into 2D.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "vn"}], " ", "=", " ", 
   "\"\<Number of vertices `1` does not agree with number of vertex \
positions.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7245]:=",ExpressionUUID->"de3fa5c5-4fe7-44c1-9fce-7504364314cd"]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanismPrimitives[]", "Subsection",ExpressionUUID->"180e9407-b203-4d4a-b001-0e9302edeaaf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mechanismPrimitives", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"dimension", " ", ":", " ", 
     RowBox[{"2", "|", "3", "|", "Automatic"}], " ", ":", " ", 
     "Automatic"}]}], " ", "]"}], " ", ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pos", "=", 
      RowBox[{"positionDimension", "[", 
       RowBox[{"m", ",", " ", "Automatic", ",", " ", "dimension"}], "]"}]}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"mechanismPrimitivesInternal", "[", " ", 
      RowBox[{"m", ",", " ", "pos"}], " ", "]"}], " ", "/;", " ", 
     RowBox[{"pos", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitives", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "numericCoordinatesQ"}], ",", " ", 
     RowBox[{"dimension", " ", ":", " ", 
      RowBox[{"2", "|", "3", "|", "Automatic"}], " ", ":", " ", 
      "Automatic"}]}], " ", "]"}], " ", ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"pos", "=", 
       RowBox[{"positionDimension", "[", 
        RowBox[{"m", ",", " ", "positions", ",", " ", "dimension"}], "]"}]}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"mechanismPrimitivesInternal", "[", " ", 
       RowBox[{"m", ",", " ", "pos"}], "]"}], " ", "/;", " ", 
      RowBox[{"pos", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"mechanismPrimitives", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions_", "?", "numericCoordinatesQ"}], ",", " ", 
    RowBox[{"dimension", " ", ":", " ", 
     RowBox[{"2", "|", "3", "|", "Automatic"}], " ", ":", " ", 
     "Automatic"}]}], " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{
     RowBox[{"mechanismPrimitives", "::", "coord"}], ",", " ", 
     RowBox[{"Length", "[", "positions", "]"}], ",", " ", 
     RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"mechanismPrimitives", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions_", "?", "numericCoordinatesQ"}], ",", " ", 
    "dimension_"}], " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"mechanismPrimitives", "::", "dim"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitives", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"dimension", " ", ":", " ", 
      RowBox[{"2", "|", "3", "|", "Automatic"}], " ", ":", " ", 
      "Automatic"}]}], " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
    RowBox[{"Message", "[", 
     RowBox[{"mechanismPrimitives", "::", "num"}], "]"}]}]}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitives", "::", "coord"}], " ", "=", " ", 
   "\"\<Number of vertices in second argument, `1`, does not match number of \
vertices in mechanism, `2`.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitives", "::", "dim"}], " ", "=", " ", 
   "\"\<Number of dimensions requested is not 2, 3, or Automatic.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitives", "::", "num"}], " ", "=", " ", 
   "\"\<Vertices should be numeric.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[7247]:=",ExpressionUUID->"475af5c7-e1c8-4503-81f4-44acaf834316"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitivesInternal", "[", " ", 
    RowBox[{"m_", ",", " ", "positions_"}], " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"mechanismPrimitivesFromComponent", "[", " ", 
       RowBox[{"m", ",", " ", "positions", ",", " ", "#"}], " ", "]"}], "&"}],
      " ", "/@", " ", 
     RowBox[{"sortComponentsForGraphics", "[", 
      RowBox[{"componentData", "[", 
       RowBox[{"m", ",", "\"\<display\>\"", ",", "_"}], "]"}], "]"}]}], " ", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitivesFromComponent", "[", " ", 
    RowBox[{"m_", ",", " ", "positions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"head_", "[", " ", "indices_", " ", "]"}], ",", " ", 
       "styleDirectives_"}], " ", "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"coordinates", " ", "=", " ", 
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"positions", "[", 
            RowBox[{"[", " ", "#", " ", "]"}], "]"}], " ", "&"}], " ", "/@", 
          " ", "indices"}], "]"}]}], ",", " ", "\n", "\t", 
       RowBox[{"primitive", " ", "=", " ", 
        RowBox[{"getPrim", "[", "head", "]"}]}], ",", " ", "\n", "\t", 
       RowBox[{"data", " ", "=", " ", 
        RowBox[{"getData", "[", 
         RowBox[{
         "m", ",", " ", "positions", ",", " ", "head", ",", " ", "indices"}], 
         "]"}]}], ",", "\n", "\t", 
       RowBox[{"labels", " ", "=", " ", 
        RowBox[{"styleDirectives", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"shapes", " ", "=", " ", 
        RowBox[{
         RowBox[{"styleDirectives", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Automatic", " ", "\[Rule]", " ", 
            RowBox[{"defaultGraphicsPrimitive", "[", 
             RowBox[{"head", ",", " ", 
              RowBox[{"Head", "[", "m", "]"}]}], "]"}]}], ",", " ", 
           RowBox[{"None", " ", "\[Rule]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"{", "}"}], "&"}], ")"}]}]}], " ", "}"}]}]}], ",", "\n",
        "\t", 
       RowBox[{"style", " ", "=", " ", 
        RowBox[{"styleDirectives", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "\n", "}"}], ",", "\n",
      "\t", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{"applyFunction", " ", ",", "\n", "\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
          "shapes", ",", " ", "\n", "\t\t\t", "coordinates", ",", " ", "\n", 
           "\t\t\t", "data", ",", "\n", "\t\t\t", 
           RowBox[{"head", " ", "/@", " ", "indices"}], ",", "\n", "\t\t\t", 
           "style"}], "\n", "\t\t\t", "}"}]}], "\n", "\t\t", "]"}], ",", "\n",
        "\n", "\t\t", 
       RowBox[{"Flatten", " ", "@", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"applyLabel", ",", "\n", "\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{"MatrixQ", "[", "coordinates", "]"}], ",", " ", 
              "coordinates", ",", " ", 
              RowBox[{"Mean", " ", "/@", " ", "coordinates"}]}], " ", "]"}], 
            ",", "\n", "\t\t\t", "indices", ",", "\n", "\t\t\t", "labels"}], 
           "\n", "\t\t\t", "}"}]}], "\n", "\t\t", "]"}]}]}], "\n", "\t", 
      "}"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"$textOffset", " ", "=", " ", "0.05"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"applyLabel", "[", " ", 
   RowBox[{"coordinates_", ",", " ", "_", ",", " ", "None"}], " ", "]"}], " ",
   ":=", " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"applyLabel", "[", " ", 
   RowBox[{"coordinates_", ",", " ", "label_", ",", " ", "\"\<Index\>\""}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Text", "[", 
   RowBox[{"label", ",", " ", 
    RowBox[{"coordinates", " ", "+", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"$textOffset", ",", 
       RowBox[{"Length", "[", "coordinates", "]"}]}], "]"}]}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"applyLabel", "[", " ", 
   RowBox[{"coordinates_", ",", " ", "_", ",", " ", "lab_"}], " ", "]"}], " ",
   ":=", " ", 
  RowBox[{
   RowBox[{"Text", "[", " ", 
    RowBox[{"lab", ",", " ", 
     RowBox[{"coordinates", " ", "+", " ", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"$textOffset", ",", 
        RowBox[{"Length", "[", "coordinates", "]"}]}], "]"}]}]}], " ", "]"}], 
   " ", "/;", " ", 
   RowBox[{
    RowBox[{"Head", "[", "lab", "]"}], " ", "=!=", " ", "Text"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"applyLabel", "[", " ", 
    RowBox[{"coordinates_", ",", " ", "_", ",", " ", 
     RowBox[{"Text", "[", 
      RowBox[{"lab_", ",", " ", "coord_", ",", " ", "other___"}], "]"}]}], 
    " ", "]"}], " ", ":=", " ", 
   RowBox[{"Text", "[", " ", 
    RowBox[{"lab", ",", " ", 
     RowBox[{"coord", " ", "+", " ", "coordinates"}], ",", " ", "other"}], 
    " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"applyFunction", "[", " ", 
   RowBox[{
   "None", ",", " ", "coordinates_", ",", " ", "primitive_", ",", " ", 
    "data_", ",", " ", "style_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"applyFunction", "[", " ", 
    RowBox[{
    "shapeFunction_", ",", " ", "coordinates_", ",", " ", "primitive_", ",", 
     " ", "data_", ",", " ", "style_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Flatten", "[", " ", 
    RowBox[{"{", 
     RowBox[{"style", ",", " ", 
      RowBox[{"shapeFunction", "[", 
       RowBox[{"coordinates", ",", "primitive", ",", "data"}], "]"}]}], "}"}],
     " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"getPrim", "[", 
   RowBox[{"rigidBar", "|", "spring", "|", "fold", "|", "Line"}], "]"}], ":=",
   "Line"}], "\n", 
 RowBox[{
  RowBox[{"getPrim", "[", 
   RowBox[{"joint", "|", "Point"}], "]"}], ":=", "Point"}], "\n", 
 RowBox[{
  RowBox[{"getPrim", "[", 
   RowBox[{"face", "|", "Polygon"}], "]"}], ":=", "Polygon"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getPrim", "[", "_", "]"}], ":=", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"getData", "[", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "face", ",", " ", "indices_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"embeddingDimension", "[", "m", "]"}], ",", "0"}], "}"}], ",", 
    RowBox[{"Length", "[", "indices", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"getData", "[", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "head_", ",", " ", "indices_"}], 
   " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Transpose", "[", "\n", "\t\t", 
   RowBox[{"Join", "[", "\n", "\t\t\t", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"embeddingDimension", "[", "m", "]"}], ",", 
        RowBox[{"Length", "[", "indices", "]"}]}], "]"}], " ", "}"}], ",", 
     " ", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"cellData", "[", " ", 
       RowBox[{"m", " ", ",", " ", 
        RowBox[{"{", 
         RowBox[{"head", ",", " ", "All"}], "}"}]}], " ", "]"}], "/@", " ", 
      RowBox[{"mechanisms`Private`dataForm", "[", "head", "]"}]}]}], "\n", 
    "\t\t", "]"}], "\n", "\t", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"getData", "[", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "angleJoint", " ", ",", " ", 
    "indices_"}], "]"}], " ", ":=", " ", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"embeddingDimension", "[", "m", "]"}], ",", "0"}], "}"}], ",", 
    RowBox[{"Length", "[", "indices", "]"}]}], "]"}]}]}], "Code",
 CellLabel->
  "In[7255]:=",ExpressionUUID->"36d192d4-81bd-4706-ab71-98a7e1bbfd1e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sortComponentsForGraphics", "[", " ", "components_", " ", "]"}], ":=", 
  RowBox[{"SortBy", "[", " ", 
   RowBox[{"components", ",", " ", 
    RowBox[{
     RowBox[{"graphicsOrder", "[", 
      RowBox[{"Head", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "&"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"graphicsOrder", "[", " ", 
   RowBox[{"joint", "|", "Point"}], " ", "]"}], ":=", "2"}], "\n", 
 RowBox[{
  RowBox[{"graphicsOrder", "[", " ", 
   RowBox[{"rigidBar", "|", "spring"}], " ", "]"}], ":=", "1"}], "\n", 
 RowBox[{
  RowBox[{"graphicsOrder", "[", " ", 
   RowBox[{"face", "|", "Polygon"}], " ", "]"}], ":=", "0"}], "\n", 
 RowBox[{
  RowBox[{"graphicsOrder", "[", " ", "_", " ", "]"}], ":=", "3"}]}], "Code",
 CellLabel->
  "In[7271]:=",ExpressionUUID->"511a5fd5-e74f-4419-bf75-8c444440d319"]
}, Closed]],

Cell[CellGroupData[{

Cell["toGraphicsComplex[]", "Subsection",ExpressionUUID->"999e6f09-3bf2-414c-b3fc-0ebce2164f6e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "toGraphicsComplex", "]"}], " ", "=", " ", 
    RowBox[{"Options", "[", "GraphicsComplex", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"toGraphicsComplex", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"dimension", " ", ":", " ", 
     RowBox[{"2", "|", "3", "|", "Automatic"}], " ", ":", " ", "Automatic"}], 
    ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", "=", 
      RowBox[{"toGraphicsComplexInternal", "[", " ", 
       RowBox[{"m", ",", " ", 
        RowBox[{"positionDimension", "[", 
         RowBox[{"m", ",", " ", "Automatic", ",", " ", "dimension"}], "]"}], 
        ",", " ", "dimension", ",", " ", 
        RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"res", " ", "/;", " ", 
     RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"toGraphicsComplex", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
    RowBox[{"dimension", " ", ":", " ", 
     RowBox[{"2", "|", "3", "|", "Automatic"}], " ", ":", " ", "Automatic"}], 
    ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"toGraphicsComplexInternal", "[", " ", 
        RowBox[{"m", ",", " ", 
         RowBox[{"positionDimension", "[", 
          RowBox[{"m", ",", " ", "positions", ",", " ", "dimension"}], "]"}], 
         ",", " ", "dimension", ",", " ", 
         RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", " ", "]"}], " ", 
   "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "positions", "]"}], " ", "\[Equal]", " ", 
    RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}]}]}], "Code",
 CellLabel->
  "In[7276]:=",ExpressionUUID->"4527b9b8-c59b-40fe-ac46-8b880e1d29af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"canonicalizePrimitiveRules", " ", "=", " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"p", " ", ":", " ", 
        RowBox[{"_Polyhedron", "|", "_Parallelepiped", "|", "_Cuboid"}]}], 
       " ", "\[RuleDelayed]", " ", 
       RowBox[{"CanonicalizePolyhedron", "[", "p", "]"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"p", " ", ":", " ", "_Polygon"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"CanonicalizePolygon", "[", "p", "]"}]}]}], "\n", "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"extractVertexCoordinates", "[", "primitives_", "]"}], " ", ":=", 
  " ", "\n", 
  RowBox[{"DeleteDuplicates", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Flatten", "[", " ", 
     RowBox[{
      RowBox[{"Cases", "[", " ", 
       RowBox[{
        RowBox[{"Flatten", "[", "primitives", "]"}], " ", ",", 
        RowBox[{
         RowBox[{"_", "?", "RegionQ"}], "|", "_Text"}]}], "]"}], " ", "/.", 
      " ", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"p_Polygon", " ", "\[RuleDelayed]", " ", 
         RowBox[{"(", 
          RowBox[{"Point", " ", "/@", " ", 
           RowBox[{"PolygonCoordinates", "[", "p", "]"}]}], ")"}]}], ",", 
        "\n", "\t\t", 
        RowBox[{"p_Polyhedron", " ", "\[RuleDelayed]", " ", 
         RowBox[{"(", 
          RowBox[{"Point", " ", "/@", " ", 
           RowBox[{"PolyhedronCoordinates", "[", "p", "]"}]}], ")"}]}], ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"p_", " ", "/;", " ", 
           RowBox[{"RegionQ", "[", "p", "]"}]}], ")"}], " ", "\[RuleDelayed]",
          " ", 
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"Dimensions", "[", " ", 
              RowBox[{"p", "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", "]"}], " ", 
            "\[Equal]", " ", "1"}], ",", " ", 
           RowBox[{"Point", "[", 
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", ",", " ", 
           RowBox[{"Point", "/@", 
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}], ",", "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{"_", ",", "p_", ",", "___"}], "]"}], " ", "\[RuleDelayed]", 
         " ", 
         RowBox[{"Point", "[", "p", "]"}]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{"_", ",", "x_", ",", "y_", ",", "___"}], "]"}], " ", 
         "\[RuleDelayed]", " ", 
         RowBox[{"Point", "[", 
          RowBox[{"x", "+", "y"}], "]"}]}]}], "\n", "\t", "}"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[7279]:=",ExpressionUUID->"f4924735-3c86-45f4-9002-8e27c84aebac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"toGraphicsComplexInternal", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "dimension_", ",", " ", 
    "options_"}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "prims", ",", " ", "modifiedPrimitives", ",", " ", "coordinates", ",", 
      " ", "coordinateRules", ",", " ", "x"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"prims", " ", "=", " ", 
      RowBox[{
       RowBox[{"mechanismPrimitivesInternal", "[", 
        RowBox[{"m", " ", ",", " ", "positions"}], " ", "]"}], " ", "/.", " ",
        "canonicalizePrimitiveRules"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "prims", "]"}], " ", "===", " ", 
        "mechanismPrimitives"}], ",", "\n", "\t\t", "$Failed", ",", "\n", 
       "\n", "\t\t", 
       RowBox[{
        RowBox[{"coordinates", "=", 
         RowBox[{"extractVertexCoordinates", "[", "prims", "]"}]}], ";", "\n",
         "\t\t", 
        RowBox[{"coordinateRules", " ", "=", " ", 
         RowBox[{"Dispatch", "[", 
          RowBox[{"Thread", "[", 
           RowBox[{"coordinates", " ", "\[Rule]", " ", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "coordinates", "]"}], "]"}]}], "]"}], 
          "]"}]}], ";", "\n", "\n", "\t\t", 
        RowBox[{"modifiedPrimitives", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"prims", " ", "/.", " ", 
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"Polygon", "[", 
                RowBox[{"x_", ",", "y_"}], "]"}], " ", "\[RuleDelayed]", " ", 
               
               RowBox[{"Polygon", "[", " ", 
                RowBox[{"x", "[", 
                 RowBox[{"[", "y", "]"}], "]"}], "  ", "]"}]}], ",", "\n", 
              "\t\t\t", 
              RowBox[{
               RowBox[{"Polyhedron", "[", 
                RowBox[{"x_", ",", "y_"}], "]"}], " ", "\[RuleDelayed]", " ", 
               
               RowBox[{"Polyhedron", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "y"}], " ", 
                "]"}]}]}], "\n", "\t\t", "}"}]}], " ", "/.", " ", 
           "coordinateRules"}], " ", "/.", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"CanonicalizePolyhedron", "[", 
              RowBox[{"Polyhedron", "[", "x_", "]"}], "]"}], " ", 
             "\[RuleDelayed]", " ", 
             RowBox[{"Polyhedron", "[", "x", "]"}]}], ",", 
            RowBox[{
             RowBox[{"CanonicalizePolygon", "[", 
              RowBox[{"Polygon", "[", "x_", "]"}], "]"}], " ", 
             "\[RuleDelayed]", " ", 
             RowBox[{"Polygon", "[", "x", "]"}]}]}], "}"}]}]}], ";", "\n", 
        "\n", "\t\t", 
        RowBox[{"GraphicsComplex", "[", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
         "coordinates", ",", "\n", "\t\t\t", "modifiedPrimitives", ",", "\n", 
          "\t\t\t", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"options", ",", 
             RowBox[{
             "VertexTextureCoordinates", " ", "\[Rule]", " ", 
              "coordinates"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
         "\t\t", "]"}]}]}], "\n", "\t", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[7281]:=",ExpressionUUID->"e79c1415-df48-46af-8022-f0d3c2db1b85"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["graphics elements", "Section",ExpressionUUID->"efa38391-2c04-4250-a9ce-7f700dc2e797"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"coordinate2D", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"_", "?", "NumericQ"}], ",", " ", 
     RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coordinate3D", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"_", "?", "NumericQ"}], ",", 
     RowBox[{"_", "?", "NumericQ"}], ",", 
     RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meshAccessQ", "=", 
   RowBox[{"_Integer", "|", 
    RowBox[{"{", "__Integer", "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plotAccessQ", "=", 
   RowBox[{"_Line", "|", "_Point", "|", "_Polygon"}]}], ";"}]}], "Code",
 CellLabel->
  "In[7282]:=",ExpressionUUID->"c7b53360-ca73-4d43-a302-859f8055c0aa"],

Cell[CellGroupData[{

Cell["rigidBarShape[]", "Subsection",ExpressionUUID->"30beb824-411a-4da9-84d9-c2ad57b065a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "rigidBarShape", "]"}], " ", "=", " ", "\n", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<width\>\"", " ", "\[Rule]", " ", "0.01"}], ",", "\n", "\t", 
     
     RowBox[{"\"\<aspectRatio\>\"", " ", "\[Rule]", " ", "0.5"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0.025"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<startShift\>\"", " ", "\[Rule]", " ", "0"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<endShift\>\"", " ", "\[Rule]", " ", "0"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[7286]:=",ExpressionUUID->"00471e94-dc32-4777-a8a8-0f8d241e12c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rigidBarShape", "[", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", 
      RowBox[{"y", " ", ":", " ", "coordinate2D"}]}], "}"}], ",", " ", "_", 
    " ", ",", " ", 
    RowBox[{"_rigidBar", "|", "_Line"}]}], " ", "]"}], " ", ":=", " ", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"length", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{"y", "-", "x"}], "]"}]}], ",", " ", 
      RowBox[{"width", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}]}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{
     RowBox[{"TranslationTransform", "[", "x", "]"}], " ", "/@", " ", 
     RowBox[{
      RowBox[{"RotationTransform", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"y", "-", "x"}]}], "}"}], "]"}], " ", "/@", " ", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Polygon", "[", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", "width"}], "/", "2"}]}], "}"}], ",", " ", 
           RowBox[{"{", " ", 
            RowBox[{"length", ",", " ", 
             RowBox[{
              RowBox[{"-", "width"}], "/", "2"}]}], " ", "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"length", ",", " ", 
             RowBox[{"width", "/", "2"}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"width", "/", "2"}]}], "}"}]}], " ", "}"}], " ", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"Disk", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], " ", ",", " ", 
          RowBox[{"width", "/", "2"}], ",", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"Pi", "/", "2"}], ",", " ", 
            RowBox[{"3", " ", 
             RowBox[{"Pi", "/", "2"}]}]}], " ", "}"}]}], "  ", "]"}], ",", 
        "\n", "\t\t", 
        RowBox[{"Disk", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"length", ",", "0"}], "}"}], " ", ",", " ", 
          RowBox[{"width", "/", "2"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
            RowBox[{"Pi", "/", "2"}]}], "}"}]}], " ", "]"}]}], "\n", "\t", 
       "}"}]}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[7287]:=",ExpressionUUID->"f7ed61a7-d5b6-4982-aed2-6305ff1b8542"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"embedded", " ", "in", " ", "3", "D"}], ",", " ", 
    RowBox[{"plotted", " ", "in", " ", "3", "D"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"rigidBarShape", "[", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
        RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"3", ",", "___"}], "}"}], ",", " ", "_rigidBar"}], " ", "]"}], 
    " ", ":=", " ", 
    RowBox[{"Tube", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], " ", "]"}]}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"rigidBarShape", "[", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
        RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], " ", ",", " ", 
      "_", ",", " ", "_Line"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"Tube", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], " ", "]"}]}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"embedded", " ", "in", " ", "2", "D"}], ",", " ", 
     RowBox[{"plotted", " ", "in", " ", "3", "D"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"rigidBarShape", "[", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
        RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"2", ",", "___"}], "}"}], ",", " ", "_rigidBar"}], " ", "]"}], 
    " ", ":=", "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"length", " ", "=", " ", 
         RowBox[{"Norm", "[", " ", 
          RowBox[{"y", "-", "x"}], " ", "]"}]}], ",", " ", 
        RowBox[{"width", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], ",", " ", 
        RowBox[{"shift1", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "\"\<startShift\>\"", "]"}]}], ",", " ", 
        
        RowBox[{"shift2", "=", 
         RowBox[{"OptionValue", "[", "\"\<endShift\>\"", "]"}]}], ",", " ", 
        RowBox[{"thickness", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}]}], " ", 
       "}"}], ",", "\n", "\t", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"EdgeForm", "[", "None", "]"}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"TranslationTransform", "[", " ", "x", " ", "]"}], "[", 
         RowBox[{
          RowBox[{"RotationTransform", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1.", ",", "0.", ",", "0."}], "}"}], ",", " ", 
             RowBox[{"y", "-", "x"}]}], " ", "}"}], "]"}], "[", "\n", "\t\t", 
          
          RowBox[{"Cuboid", "[", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"shift1", "*", "length"}], ",", 
              RowBox[{
               RowBox[{"-", "width"}], "/", "2."}], ",", 
              RowBox[{
               RowBox[{"-", "thickness"}], "/", "2."}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.", "-", "shift2"}], ")"}], "*", "length"}], ",", 
              " ", 
              RowBox[{"width", "/", "2."}], ",", " ", 
              RowBox[{"thickness", "/", "2."}]}], "}"}]}], " ", "]"}], "\n", 
          "\t", "]"}], "]"}]}], "\n", "\t", "}"}]}], "\n", 
     "]"}]}]}]}]], "Code",
 CellLabel->
  "In[7288]:=",ExpressionUUID->"29f39365-7b52-4650-bc5f-963e58ea8fee"]
}, Closed]],

Cell[CellGroupData[{

Cell["freeJointShape[]", "Subsection",ExpressionUUID->"df9a98e6-583c-4e1c-9c5e-9329e90e0833"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "freeJointShape", "]"}], " ", "=", " ", "\n", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<diameter\>\"", " ", "\[Rule]", " ", "0.01"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0.026"}]}], "\n", 
    "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[7291]:=",ExpressionUUID->"3198f40c-a3af-4947-b0c8-cbc49f1ca5e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"freeJointShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", "_", ",", " ", 
    "_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"circleRadius", " ", "=", " ", 
      RowBox[{
       RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "2"}]}], 
     "}"}], ",", " ", 
    RowBox[{"Disk", "[", 
     RowBox[{"x", ",", " ", "circleRadius"}], "]"}]}], " ", "]"}]}]], "Code",
 CellLabel->
  "In[7292]:=",ExpressionUUID->"d5b36931-6876-4fc2-b980-03428a6a3ff4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"freeJointShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "___"}], "}"}], ",", " ", "_joint"}], "]"}], ":=", 
  "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"circleRadius", " ", "=", " ", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "2"}]}], 
      " ", ",", " ", 
      RowBox[{"thickness", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}]}], "}"}], ",",
     "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
      RowBox[{"Cylinder", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", " ", "-", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"thickness", "/", "2"}]}], "}"}]}], ",", 
          RowBox[{"x", "+", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"thickness", "/", "2"}]}], "}"}]}]}], "}"}], ",", " ", 
        "circleRadius"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"freeJointShape", "[", " ", 
     RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"3", ",", "___"}], "}"}], " ", ",", " ", "_"}], " ", "]"}], " ",
    ":=", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sphereRadius", " ", "=", " ", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "2"}]}], 
      "}"}], ",", " ", 
     RowBox[{"Sphere", "[", " ", 
      RowBox[{"x", ",", " ", "sphereRadius"}], "]"}]}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"freeJointShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "_"}], "}"}], " ", ",", " ", "_Point"}], " ", "]"}], 
  " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sphereRadius", " ", "=", " ", 
      RowBox[{
       RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "2"}]}], 
     "}"}], ",", " ", 
    RowBox[{"Sphere", "[", " ", 
     RowBox[{"x", ",", " ", "sphereRadius"}], "]"}]}], " ", "]"}]}]}], "Code",\

 CellLabel->
  "In[7293]:=",ExpressionUUID->"cdcda5f5-532c-463b-899d-7293e5112f81"]
}, Closed]],

Cell[CellGroupData[{

Cell["pinnedJointShape[]", "Subsection",ExpressionUUID->"530308ab-a7d1-4a5c-86d3-f3a59af21d94"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "pinnedJointShape", "]"}], " ", "=", "\n", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<diameter\>\"", " ", "\[Rule]", " ", "0.02"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "0"}], ",", "\n", "\t", 
     RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0.026"}]}], "\n", 
    "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[7296]:=",ExpressionUUID->"3a0274b7-99dd-44b8-a623-57f7847ae21b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pinnedJointShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"pt", " ", ":", " ", "coordinate2D"}], ",", " ", "_", ",", "_"}], 
   "]"}], ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"circleRadius", " ", "=", " ", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "5"}]}], 
      ",", " ", 
      RowBox[{"x", " ", "=", " ", 
       RowBox[{"pt", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
      RowBox[{"y", " ", "=", " ", 
       RowBox[{"pt", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
      RowBox[{"angle", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<angle\>\"", "]"}]}], ",", " ", 
      RowBox[{"size", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}]}]}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"mat", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "angle", "]"}], ",", 
             RowBox[{"-", 
              RowBox[{"Sin", "[", "angle", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "angle", "]"}], ",", 
             RowBox[{"Cos", "[", "angle", "]"}]}], "}"}]}], "}"}]}], ",", 
        "\n", "\t\t", 
        RowBox[{"translation1", " ", "=", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", "4"}], "]"}]}], ",", " ", 
        RowBox[{"translation2", " ", "=", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", "2"}], "]"}]}]}], "\n", "\t",
        "}"}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Circle", "[", " ", 
         RowBox[{"pt", " ", ",", " ", "circleRadius"}], "]"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"Line", "[", 
         RowBox[{"translation1", " ", "+", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"0", "-", "circleRadius"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0", "-", "size"}], ",", 
               RowBox[{"0", "-", "circleRadius", "-", "size"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0", "+", "size"}], ",", 
               RowBox[{"0", "-", "circleRadius", "-", "size"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"0", "-", "circleRadius"}]}], "}"}]}], "}"}], " ", ".",
            " ", "mat"}]}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"Line", "[", 
         RowBox[{"translation2", " ", "+", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0", "-", 
                RowBox[{"2", " ", "size"}]}], ",", 
               RowBox[{"0", "-", "circleRadius", "-", "size"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0", "+", 
                RowBox[{"2", " ", "size"}]}], ",", " ", 
               RowBox[{"0", "-", "circleRadius", "-", "size"}]}], "}"}]}], 
            "}"}], " ", ".", " ", "mat"}]}], "]"}]}], "\n", "\t\t", "}"}]}], 
     "\n", "\t", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Code",
 CellLabel->
  "In[7297]:=",ExpressionUUID->"a0387762-529b-4db0-94ff-175060d25b6c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pinnedJointShape", "[", 
     RowBox[{"OptionsPattern", "[", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", "___"}], "}"}], ",", " ", "_joint"}], " ", "]"}], " ",
    ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"circleRadius", " ", "=", " ", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], " ", "+", " ",
          "0.02"}]}], " ", ",", " ", 
       RowBox[{"thickness", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}]}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"EdgeForm", "[", "None", "]"}], ",", "\n", "\t", 
       RowBox[{"Cylinder", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", " ", "-", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"thickness", "/", "2"}]}], "}"}]}], ",", 
           RowBox[{"x", "+", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"thickness", "/", "2"}]}], "}"}]}]}], "}"}], ",", " ", 
         RowBox[{"circleRadius", "/", "2"}]}], "]"}], ",", "\n", "\t", 
       RowBox[{"Cylinder", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", " ", "-", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"2", " ", "thickness"}]}], "}"}]}], ",", 
           RowBox[{"x", " ", "-", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"thickness", "/", "2"}]}], "}"}]}]}], " ", "}"}], ",", 
         " ", 
         RowBox[{"circleRadius", "/", "4"}]}], "]"}]}], "\n", "\t", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pinnedJointShape", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], "[", 
   RowBox[{
    RowBox[{"pt", " ", ":", " ", "coordinate3D"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"3", ",", "___"}], "}"}], ",", " ", "_joint"}], " ", "]"}], ":=",
   " ", 
  RowBox[{"Sphere", "[", 
   RowBox[{"pt", ",", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "2"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pinnedJointShape", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], "[", 
   RowBox[{
    RowBox[{"pt", " ", ":", " ", "coordinate3D"}], ",", " ", "_", " ", ",", 
    " ", "_Point"}], " ", "]"}], ":=", " ", 
  RowBox[{"Sphere", "[", 
   RowBox[{"pt", ",", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "2"}]}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[7298]:=",ExpressionUUID->"7d80a007-6464-43b3-9ff2-00f8fc73da18"]
}, Closed]],

Cell[CellGroupData[{

Cell["jointShape[]", "Subsection",ExpressionUUID->"616abae0-499a-42ac-9be1-54c477240393"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "jointShape", "]"}], " ", "=", "\n", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<diameter\>\"", " ", "\[Rule]", " ", "0.01"}], ",", "\n", 
      "\t", 
      RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "0"}], ",", "\n", "\t", 
      RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0.026"}]}], "\n", 
     "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jointShape", "[", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", "a_", ",", " ", 
    "b_Point"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"freeJointShape", "[", " ", 
    RowBox[{"FilterRules", "[", 
     RowBox[{
      RowBox[{"{", "opt", "}"}], ",", 
      RowBox[{"Options", "[", "freeJointShape", "]"}]}], "]"}], " ", "]"}], 
   "[", 
   RowBox[{"x", ",", "a", ",", "b"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"jointShape", "[", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", "a_", ",", " ", 
     "b_Point"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"freeJointShape", "[", " ", 
     RowBox[{"FilterRules", "[", 
      RowBox[{
       RowBox[{"{", "opt", "}"}], ",", 
       RowBox[{"Options", "[", "freeJointShape", "]"}]}], "]"}], " ", "]"}], 
    "[", 
    RowBox[{"x", ",", "a", ",", "b"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jointShape", "[", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", 
    RowBox[{"a", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"_", ",", " ", "Infinity", ",", " ", "___"}], " ", "}"}]}], " ",
     ",", " ", 
    RowBox[{"b", " ", ":", " ", "_joint"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"pinnedJointShape", "[", " ", 
    RowBox[{"FilterRules", "[", 
     RowBox[{
      RowBox[{"{", "opt", "}"}], ",", 
      RowBox[{"Options", "[", "pinnedJointShape", "]"}]}], "]"}], " ", "]"}], 
   "[", 
   RowBox[{"x", ",", "a", ",", "b"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"jointShape", "[", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
     RowBox[{"a", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"_", ",", " ", "Infinity", ",", " ", "___"}], " ", "}"}]}], 
     " ", ",", " ", 
     RowBox[{"b", " ", ":", " ", "_joint"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"pinnedJointShape", "[", " ", 
     RowBox[{"FilterRules", "[", 
      RowBox[{
       RowBox[{"{", "opt", "}"}], ",", 
       RowBox[{"Options", "[", "pinnedJointShape", "]"}]}], "]"}], " ", "]"}],
     "[", 
    RowBox[{"x", ",", "a", ",", "b"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jointShape", "[", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", 
    RowBox[{"a", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"_", ",", " ", "_", ",", " ", "___"}], " ", "}"}]}], " ", ",", 
    " ", 
    RowBox[{"b", " ", ":", " ", "_joint"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"freeJointShape", "[", " ", 
    RowBox[{"FilterRules", "[", 
     RowBox[{
      RowBox[{"{", "opt", "}"}], ",", 
      RowBox[{"Options", "[", "freeJointShape", "]"}]}], "]"}], " ", "]"}], 
   "[", 
   RowBox[{"x", ",", "a", ",", "b"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jointShape", "[", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
    RowBox[{"a", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"_", ",", " ", "_", ",", " ", "___"}], " ", "}"}]}], " ", ",", 
    " ", 
    RowBox[{"b", " ", ":", " ", "_joint"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"freeJointShape", "[", " ", 
    RowBox[{"FilterRules", "[", 
     RowBox[{
      RowBox[{"{", "opt", "}"}], ",", 
      RowBox[{"Options", "[", "freeJointShape", "]"}]}], "]"}], " ", "]"}], 
   "[", 
   RowBox[{"x", ",", "a", ",", "b"}], "]"}]}]}], "Code",
 CellLabel->
  "In[7301]:=",ExpressionUUID->"f42eb97c-a4fa-4783-8190-ace6cf11e7a8"]
}, Closed]],

Cell[CellGroupData[{

Cell["springShape[]", "Subsection",ExpressionUUID->"21ae16eb-fe33-4b07-a637-3a56dfc61929"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "springShape", "]"}], " ", "=", "\n", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<width\>\"", " ", "\[Rule]", " ", "0.005"}], ",", "\n", "\t", 
     RowBox[{"\"\<number\>\"", " ", "\[Rule]", " ", "10"}], ",", "\n", "\t", 
     RowBox[{"\"\<resolution\>\"", " ", "\[Rule]", " ", "26"}]}], "\n", 
    "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[7308]:=",ExpressionUUID->"0523084d-4d4b-4a9e-8f47-5ce789825232"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"springShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", 
      RowBox[{"y", " ", ":", " ", "coordinate2D"}]}], " ", "}"}], ",", " ", 
    "_", ",", " ", "_"}], " ", "]"}], ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", " ", "\n", 
     RowBox[{
      RowBox[{"length", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{"y", "-", "x"}], "]"}]}], ",", " ", "\n", 
      RowBox[{"width", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], ",", " ", "\n", 
      RowBox[{"period", " ", "=", " ", 
       RowBox[{"2", " ", 
        RowBox[{"OptionValue", "[", "\"\<number\>\"", "]"}]}]}], ",", " ", 
      "\n", 
      RowBox[{"nPoints", " ", "=", " ", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<resolution\>\"", "]"}], "*", 
         RowBox[{"OptionValue", "[", "\"\<number\>\"", "]"}]}], "]"}]}], ",", 
      "\n", 
      RowBox[{"rotMat", " ", "=", " ", 
       RowBox[{"RotationMatrix", "[", " ", 
        RowBox[{"N", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"y", "-", "x"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], " ", "]"}]}]}], 
     "\n", "}"}], ",", "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"delta", " ", "=", " ", 
        RowBox[{"N", "[", 
         RowBox[{"length", "/", "nPoints"}], "]"}]}], "}"}], ",", "\n", "\t", 
      
      RowBox[{"BezierCurve", "[", "\n", "\t\t", 
       RowBox[{"N", "@", 
        RowBox[{"Join", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"{", "x", "}"}], ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"x", ",", 
             RowBox[{"nPoints", "-", "3"}]}], "]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"#", " ", "+", " ", 
                  RowBox[{"width", " ", 
                   RowBox[{"Cos", "[", " ", 
                    RowBox[{"period", " ", "Pi", " ", 
                    RowBox[{"#", "/", "length"}]}], " ", "]"}]}]}], ",", "\n",
                  "\t\t\t\t", 
                 RowBox[{"width", " ", 
                  RowBox[{"Sin", "[", " ", 
                   RowBox[{"period", " ", "Pi", " ", 
                    RowBox[{"#", "/", "length"}]}], " ", "]"}]}]}], "\n", 
                "\t\t\t\t", "}"}], "&"}], " ", "/@", " ", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"2", " ", "delta"}], ",", " ", 
                RowBox[{"length", " ", "-", " ", 
                 RowBox[{"2", " ", "delta"}]}], ",", " ", "delta"}], "]"}]}], 
             ")"}], " ", ".", " ", "rotMat"}]}], ",", "\n", "\t\t\t", 
          RowBox[{"{", "y", "}"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", 
       "]"}]}], "\n", "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[7309]:=",ExpressionUUID->"deeff8cc-8a0f-4967-8ab0-c5317f85b6a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"springShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
      RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], ",", " ", "_", 
    ",", " ", "_"}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"rotMat", " ", "=", " ", 
       RowBox[{"RotationMatrix", "[", 
        RowBox[{"N", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"x", "-", "y"}]}], "}"}], "]"}], "]"}]}], ",", "\n", 
      RowBox[{"length", "=", 
       RowBox[{"Norm", "[", " ", 
        RowBox[{"y", "-", "x"}], " ", "]"}]}], ",", " ", "\n", 
      RowBox[{"numPoints", " ", "=", " ", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<resolution\>\"", "]"}], "*", 
         RowBox[{"OptionValue", "[", "\"\<number\>\"", "]"}]}], "]"}]}], ",", 
      " ", "\n", 
      RowBox[{"number", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<number\>\"", "]"}]}], ",", "\n", 
      RowBox[{"thickness", " ", "=", " ", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}], "/", "2"}]}]}], 
     "\n", "}"}], ",", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"delta", " ", "=", " ", 
        RowBox[{"N", "[", 
         RowBox[{"length", "/", "numPoints"}], "]"}]}], " ", "}"}], ",", "\n",
       "\t", 
      RowBox[{"BezierCurve", "[", "\n", "\t\t", 
       RowBox[{"N", "@", 
        RowBox[{"Join", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", "x", "}"}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"x", ",", 
             RowBox[{"numPoints", "-", "3"}]}], "]"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"{", " ", 
                RowBox[{
                 RowBox[{"thickness", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"number", " ", "2", " ", "Pi", " ", 
                    RowBox[{"#", "/", "length"}]}], "]"}]}], ",", 
                 RowBox[{"thickness", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"number", " ", "2", " ", "Pi", " ", 
                    RowBox[{"#", "/", "length"}]}], "]"}]}], ",", " ", "#"}], 
                " ", "}"}], "&"}], " ", "/@", " ", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"2", " ", "delta"}], ",", 
                RowBox[{"length", "-", 
                 RowBox[{"2", " ", "delta"}]}], ",", "delta"}], "]"}]}], "\n",
              "\t\t", ")"}], " ", ".", " ", "rotMat"}]}], ",", "\n", "\t\t", 
          RowBox[{"{", "y", "}"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", 
       "]"}]}], "\n", "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[7310]:=",ExpressionUUID->"b0a2f514-7a30-4fc7-9f56-23c511b2ec1b"]
}, Closed]],

Cell[CellGroupData[{

Cell["chromoElasticShape[]", "Subsection",ExpressionUUID->"97403945-b908-4eb2-a9b5-f7ad77935592"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "chromoElasticShape", "]"}], " ", "=", " ", "\n", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<width\>\"", " ", "\[Rule]", " ", "0.05"}], ",", "\n", "\t", 
     
     RowBox[{"\"\<aspectRatio\>\"", " ", "\[Rule]", " ", "0.5"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0.025"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<startShift\>\"", " ", "\[Rule]", " ", "0"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<endShift\>\"", " ", "\[Rule]", " ", "0"}], ",", "\n", "\t", 
     
     RowBox[{"\"\<color\>\"", " ", "\[Rule]", " ", 
      RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}]}], ",", "\n", "\t", 
     RowBox[{"\"\<colorScale\>\"", "\[Rule]", "1"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[7311]:=",ExpressionUUID->"fa2a1883-8f1a-41a0-8fcd-0125b96b94cb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"chromoElasticShape", "[", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", 
      RowBox[{"y", " ", ":", " ", "coordinate2D"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"_", ",", " ", "equil_", ",", "___"}], "}"}], " ", ",", " ", 
    RowBox[{"_rigidBar", "|", "_spring"}]}], " ", "]"}], " ", ":=", " ", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"length", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{"y", "-", "x"}], "]"}]}], ",", " ", 
      RowBox[{"width", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], ",", " ", 
      RowBox[{"color", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<color\>\"", "]"}]}], ",", " ", 
      RowBox[{"scale", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<colorScale\>\"", "]"}]}]}], " ", 
     "}"}], ",", "\n", "\t", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"color", "[", " ", 
       RowBox[{"0.5", " ", "+", " ", 
        RowBox[{"scale", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"length", " ", "-", " ", "equil"}], ")"}], "/", 
          "equil"}]}]}], " ", "]"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"TranslationTransform", "[", "x", "]"}], " ", "/@", " ", 
       RowBox[{
        RowBox[{"RotationTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"y", "-", "x"}]}], "}"}], "]"}], " ", "/@", " ", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Disk", "[", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], " ", ",", " ", 
            RowBox[{"width", "/", "2"}], ",", " ", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Pi", "/", "2"}], ",", " ", 
              RowBox[{"3", " ", 
               RowBox[{"Pi", "/", "2"}]}]}], " ", "}"}]}], "  ", "]"}], ",", 
          "\n", "\t\t", 
          RowBox[{"Disk", "[", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"length", ",", "0"}], "}"}], " ", ",", " ", 
            RowBox[{"width", "/", "2"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
              RowBox[{"Pi", "/", "2"}]}], "}"}]}], " ", "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{"Polygon", "[", " ", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"-", "width"}], "/", "2"}]}], "}"}], ",", " ", 
             RowBox[{"{", " ", 
              RowBox[{"length", ",", " ", 
               RowBox[{
                RowBox[{"-", "width"}], "/", "2"}]}], " ", "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"length", ",", " ", 
               RowBox[{"width", "/", "2"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"width", "/", "2"}]}], "}"}]}], " ", "}"}], " ", 
           "]"}]}], "\n", "\t", "}"}]}]}]}], "\n", "\t", "}"}]}], "\n", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chromoElasticShape", "[", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", 
       RowBox[{"y", " ", ":", " ", "coordinate2D"}]}], "}"}], ",", " ", "_", 
     " ", ",", " ", "_Line"}], " ", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"length", " ", "=", " ", 
        RowBox[{"Norm", "[", 
         RowBox[{"y", "-", "x"}], "]"}]}], ",", " ", 
       RowBox[{"width", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}]}], " ", "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"TranslationTransform", "[", "x", "]"}], " ", "/@", " ", 
      RowBox[{
       RowBox[{"RotationTransform", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"y", "-", "x"}]}], "}"}], "]"}], " ", "/@", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Disk", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], " ", ",", " ", 
           RowBox[{"width", "/", "2"}], ",", " ", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"Pi", "/", "2"}], ",", " ", 
             RowBox[{"3", " ", 
              RowBox[{"Pi", "/", "2"}]}]}], " ", "}"}]}], "  ", "]"}], ",", 
         "\n", "\t\t", 
         RowBox[{"Disk", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"length", ",", "0"}], "}"}], " ", ",", " ", 
           RowBox[{"width", "/", "2"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
             RowBox[{"Pi", "/", "2"}]}], "}"}]}], " ", "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"Polygon", "[", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", "width"}], "/", "2"}]}], "}"}], ",", " ", 
            RowBox[{"{", " ", 
             RowBox[{"length", ",", " ", 
              RowBox[{
               RowBox[{"-", "width"}], "/", "2"}]}], " ", "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"length", ",", " ", 
              RowBox[{"width", "/", "2"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"width", "/", "2"}]}], "}"}]}], " ", "}"}], " ", 
          "]"}]}], "\n", "\t", "}"}]}]}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"embedded", " ", "in", " ", "3", "D"}], ",", " ", 
    RowBox[{"plotted", " ", "in", " ", "3", "D"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chromoElasticShape", "[", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
       RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"3", ",", "equil_", ",", "___"}], "}"}], ",", " ", 
     RowBox[{"_rigidBar", "|", "_spring"}]}], " ", "]"}], " ", ":=", " ", 
   "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"color", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "\"\<color\>\"", "]"}]}], ",", " ", 
       RowBox[{"length", " ", "=", " ", 
        RowBox[{"Norm", "[", " ", 
         RowBox[{"y", "-", "x"}], " ", "]"}]}], " ", ",", " ", 
       RowBox[{"scale", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "\"\<colorScale\>\"", "]"}]}]}], " ", 
      "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"color", "[", " ", 
        RowBox[{"0.5", " ", "+", " ", 
         RowBox[{"scale", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"length", " ", "-", " ", "equil"}], ")"}], "/", 
           "equil"}]}]}], "]"}], ",", " ", 
       RowBox[{"Tube", "[", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], " ", "]"}]}], 
      "}"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chromoElasticShape", "[", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
       RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], " ", ",", " ", 
     "_", ",", " ", "_Line"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Tube", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", " ", 
     RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], " ", "]"}]}], "\n",
   "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"embedded", " ", "in", " ", "2", "D"}], ",", " ", 
    RowBox[{"plotted", " ", "in", " ", "3", "D"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"chromoElasticShape", "[", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
      RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "equil_", ",", "___"}], "}"}], ",", " ", 
    RowBox[{"_rigidBar", "|", "_spring"}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", " ", "\n", 
     RowBox[{
      RowBox[{"length", " ", "=", " ", 
       RowBox[{"Norm", "[", " ", 
        RowBox[{"y", "-", "x"}], " ", "]"}]}], ",", " ", "\n", 
      RowBox[{"width", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], ",", " ", "\n", 
      RowBox[{"shift1", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<startShift\>\"", "]"}]}], ",", " ", 
      "\n", 
      RowBox[{"shift2", "=", 
       RowBox[{"OptionValue", "[", "\"\<endShift\>\"", "]"}]}], ",", " ", 
      "\n", 
      RowBox[{"thickness", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}], ",", " ", 
      "\n", 
      RowBox[{"color", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<color\>\"", "]"}]}], ",", "\n", 
      RowBox[{"scale", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<colorScale\>\"", "]"}]}]}], " ", 
     "}"}], ",", "\n", "\t", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "None", "]"}], ",", "\n", "\t", 
      RowBox[{"color", "[", " ", 
       RowBox[{"0.5", "+", 
        RowBox[{"scale", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"length", " ", "-", " ", "equil"}], ")"}], "/", 
          "equil"}]}]}], " ", "]"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"TranslationTransform", "[", " ", "x", " ", "]"}], "[", 
       RowBox[{
        RowBox[{"RotationTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.", ",", "0.", ",", "0."}], "}"}], ",", " ", 
           RowBox[{"y", "-", "x"}]}], " ", "}"}], "]"}], "[", "\n", "\t\t", 
        RowBox[{"Cuboid", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"shift1", "*", "length"}], ",", 
            RowBox[{
             RowBox[{"-", "width"}], "/", "2."}], ",", 
            RowBox[{
             RowBox[{"-", "thickness"}], "/", "2."}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1.", "-", "shift2"}], ")"}], "*", "length"}], ",", " ", 
            RowBox[{"width", "/", "2."}], ",", " ", 
            RowBox[{"thickness", "/", "2."}]}], "}"}]}], " ", "]"}], "\n", 
        "\t", "]"}], "]"}]}], "\n", "\t", "}"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[7312]:=",ExpressionUUID->"9fdcc750-d6d7-4c7a-9b64-f69b9f25c428"]
}, Closed]],

Cell[CellGroupData[{

Cell["faceShape[]", "Subsection",ExpressionUUID->"a7a35632-47d0-4342-be07-daf07f198317"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "faceShape", "]"}], " ", "=", " ", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0"}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[7317]:=",ExpressionUUID->"e55e08fa-9d58-42bc-abfc-669219f4ba55"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"faceShape", "[", " ", 
     RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"x", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"coordinate2D", ".."}], "}"}]}], ",", " ", "_", ",", " ", 
     "_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Polygon", "[", " ", "x", " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"faceShape", "[", " ", 
     RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"x", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"coordinate3D", ".."}], "}"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "|", "3"}], ",", " ", "___"}], " ", "}"}], " ", ",", " ", 
     "_face"}], " ", "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}], " ", "\[Equal]",
       " ", "0"}], ",", "\n", "\t\t", 
     RowBox[{"Polygon", "[", " ", "x", " ", "]"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"extrudedPolygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}], ",", " ", 
         
         RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}], "}"}], 
       "]"}], "[", "x", "]"}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"faceShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"coordinate3D", ".."}], "}"}]}], ",", " ", "_", ",", " ", 
    "_Polygon"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Polygon", "[", " ", "x", " ", "]"}]}]}], "Code",
 CellLabel->
  "In[7318]:=",ExpressionUUID->"7befbc49-c359-459d-b8be-4c03a3cd4cbc"]
}, Closed]],

Cell[CellGroupData[{

Cell["angleMarker[], angleText[]", "Subsection",ExpressionUUID->"a4787621-3d48-4ae3-bf4b-6c35d714056b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"angleText", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", "v2_Integer", ",", "v3_Integer"}], "}"}], ",",
     " ", 
    RowBox[{"label_", " ", ":", " ", "\"\<\>\""}], ",", 
    RowBox[{"distance", " ", ":", " ", 
     RowBox[{"_", "?", "NumericQ"}], " ", ":", " ", "0"}]}], "]"}], ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"angleLocation", "=", 
       RowBox[{
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"v2", ",", 
          RowBox[{"1", ";;", 
           RowBox[{"displayDimension", "[", "m", "]"}]}]}], "]"}], "]"}]}], 
      ",", "\n", "\t", 
      RowBox[{"vectors", "=", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"displacementVector", "[", 
          RowBox[{
           RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"v3", ",", "v2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}]}], "}"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"1", ";;", 
            RowBox[{"displayDimension", "[", "m", "]"}]}]}], "]"}], 
         "]"}]}]}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"Text", "[", 
     RowBox[{"label", ",", 
      RowBox[{"angleLocation", " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"distance", "+", "0.12"}], ")"}], " ", 
        RowBox[{"Mean", "[", "vectors", "]"}]}]}]}], "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[7321]:=",ExpressionUUID->"321114ce-c1c2-4259-8f91-54d2a33d7886"],

Cell[BoxData[
 RowBox[{
  RowBox[{"angleMarker", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", "v2_Integer", ",", "v3_Integer"}], "}"}], ",",
     " ", 
    RowBox[{"radius", " ", ":", " ", 
     RowBox[{"_", "?", "NumericQ"}], " ", ":", " ", 
     RowBox[{"1", "/", "10"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "project", " ", "the", " ", "vectors", " ", "making", " ", "this", 
         " ", "angle", " ", "to", " ", "the", " ", "xy"}], "-", "plane"}], 
       "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"angleLocation", "=", 
        RowBox[{
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"v2", ",", 
           RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"vectors", "=", 
        RowBox[{
         RowBox[{"displacementVector", "[", 
          RowBox[{
           RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"v2", ",", "v1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"v2", ",", "v3"}], "}"}]}], "}"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], "\n", "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Circle", "[", 
      RowBox[{"angleLocation", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Abs", "[", "radius", "]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"vectors", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", ".", " ", 
            RowBox[{"vectors", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"vectors", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", ".", " ", 
            RowBox[{"vectors", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}]}], ",", "\n", 
       "\t\t", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Pi", "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "<", 
             RowBox[{"Pi", "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", "Pi"}]}], "}"}], "+", "#"}], ",", "#"}], "]"}], 
          "&"}], ")"}], "[", 
        RowBox[{"ArcTan", "@@@", "vectors"}], "]"}]}], "\n", "\t", "]"}]}], 
    "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"displayDimension", "[", "m", "]"}], "\[Equal]", "2"}], " ", "&&",
     " ", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "]"}], "\[LessEqual]", 
     RowBox[{"MeshCellCount", "[", 
      RowBox[{"m", ",", "0"}], "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "]"}], ">", 
     "0"}]}]}]}]], "Code",
 CellLabel->
  "In[7322]:=",ExpressionUUID->"521bc9c5-de42-41dd-9770-013f3407e73d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Code", " ", "borrowed", " ", "from", " ", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
        "questions"}], "/", "10957"}], "/", "an"}], "-", "efficient", "-", 
     "circular", "-", "arc", "-", "primitive", "-", "for", "-", 
     "graphics3d"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "splineCircle2", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"splineCircle", "[", 
     RowBox[{"m_List", ",", " ", "r_", ",", " ", 
      RowBox[{"angles_List", ":", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", 
         RowBox[{"2.", " ", "\[Pi]"}]}], "}"}]}]}], "]"}], " ", ":=", " ", 
    "\n", " ", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "seg", ",", " ", "\[Phi]", ",", " ", "start", ",", " ", "end", ",", 
         " ", "pts", ",", " ", "w", ",", " ", "k", ",", " ", "pihalf"}], 
        "}"}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{"pihalf", " ", "=", " ", 
         RowBox[{"0.5", " ", "\[Pi]"}]}], ";", "\n", "   ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"start", ",", " ", "end"}], "}"}], " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"N", "[", "angles", "]"}], ",", " ", 
           RowBox[{"2.", " ", "\[Pi]"}]}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"end", " ", "<=", " ", "start"}], ",", " ", 
          RowBox[{"end", " ", "+=", " ", 
           RowBox[{"2.", " ", "\[Pi]"}]}]}], "]"}], ";", "\n", "   ", 
        RowBox[{"seg", " ", "=", " ", 
         RowBox[{"Quotient", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"end", " ", "-", " ", "start"}], "]"}], ",", " ", 
           "pihalf"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"\[Phi]", " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"end", " ", "-", " ", "start"}], "]"}], ",", " ", 
           "pihalf"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"seg", " ", "==", " ", "4"}], ",", " ", 
          RowBox[{
           RowBox[{"seg", " ", "=", " ", "3"}], ";", " ", 
           RowBox[{"\[Phi]", " ", "=", " ", "pihalf"}]}]}], "]"}], ";", "\n", 
        "   ", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", "\n", "     ", 
           RowBox[{
            RowBox[{"cseg", " ", "=", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"pihalf", " ", "seg"}], "]"}]}], ",", " ", 
            RowBox[{"sseg", " ", "=", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"pihalf", " ", "seg"}], "]"}]}], ",", "\n", "     ", 
            RowBox[{"c\[Phi]", " ", "=", " ", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", " ", 
            RowBox[{"s\[Phi]", " ", "=", " ", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", " ", "\n", "     ", 
            RowBox[{"t\[Phi]", " ", "=", " ", 
             RowBox[{"Tan", "[", 
              RowBox[{"0.5", " ", "\[Phi]"}], "]"}]}], ",", "\n", "     ", 
            RowBox[{"rcs", " ", "=", " ", 
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", "start", "]"}]}]}], ",", " ", 
            RowBox[{"rss", " ", "=", " ", 
             RowBox[{"r", " ", 
              RowBox[{"Sin", "[", "start", "]"}]}]}]}], "\n", "     ", "}"}], 
          ",", "\n", "    ", 
          RowBox[{"pts", " ", "=", " ", 
           RowBox[{
            RowBox[{"Join", "[", "\n", "       ", 
             RowBox[{
              RowBox[{"Take", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"1.", ",", " ", "1."}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1."}], ",", " ", "1."}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1."}], ",", " ", "0."}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1."}], ",", " ", 
                    RowBox[{"-", "1."}]}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"0.", ",", " ", 
                    RowBox[{"-", "1."}]}], "}"}]}], "}"}], ",", " ", 
                RowBox[{
                 RowBox[{"2", " ", "seg"}], " ", "+", " ", "1"}]}], "]"}], 
              ",", "\n", "       ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"cseg", " ", "-", " ", 
                   RowBox[{"sseg", " ", "t\[Phi]"}]}], ",", " ", 
                  RowBox[{"sseg", " ", "+", " ", 
                   RowBox[{"cseg", " ", "t\[Phi]"}]}]}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"cseg", " ", "c\[Phi]"}], " ", "-", " ", 
                   RowBox[{"sseg", " ", "s\[Phi]"}]}], ",", " ", 
                  RowBox[{
                   RowBox[{"c\[Phi]", " ", "sseg"}], " ", "+", " ", 
                   RowBox[{"cseg", " ", "s\[Phi]"}]}]}], "}"}]}], "}"}]}], 
             "\n", "       ", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"rcs", ",", " ", "rss"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "rss"}], ",", " ", "rcs"}], "}"}]}], "}"}]}]}]}],
          "\n", "    ", "]"}], ";", "\n", "   ", 
        RowBox[{"pts", " ", "=", " ", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"m", ",", " ", 
            RowBox[{"Length", "[", "pts", "]"}]}], "]"}], " ", "+", " ", "\n",
           "     ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "m", "]"}], " ", "==", " ", "2"}], ",", 
            " ", "\n", "      ", "pts", ",", " ", "\n", "      ", 
            RowBox[{"Join", "[", 
             RowBox[{"pts", ",", " ", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"{", "0.", "}"}], ",", " ", 
                RowBox[{"Length", "[", "pts", "]"}]}], "]"}], ",", " ", "2"}],
              "]"}]}], "\n", "     ", "]"}]}]}], ";", "\n", "   ", 
        RowBox[{"w", " ", "=", " ", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"c", " ", "=", " ", 
             RowBox[{"1.", "/", 
              RowBox[{"Sqrt", "[", "2.", "]"}]}]}], "}"}], ",", " ", "\n", 
           "     ", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "1.", ",", " ", "c", ",", " ", "1.", ",", " ", "c", ",", " ", 
                 "1.", ",", " ", "c", ",", " ", "1."}], "}"}], ",", " ", 
               RowBox[{
                RowBox[{"2", " ", "seg"}], " ", "+", " ", "1"}]}], "]"}], ",",
              " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"0.5", " ", "\[Phi]"}], "]"}], ",", " ", "1."}], 
              "}"}]}], "]"}]}], "\n", "     ", "]"}]}], ";", "\n", "   ", 
        RowBox[{"k", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Riffle", "[", 
              RowBox[{"#", ",", " ", "#"}], "]"}], " ", "&"}], "@", 
            RowBox[{"Range", "[", 
             RowBox[{"seg", " ", "+", " ", "1"}], "]"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"seg", " ", "+", " ", "1"}], "}"}]}], "]"}]}], ";", "\n", 
        "   ", 
        RowBox[{"BSplineCurve", "[", 
         RowBox[{"pts", ",", " ", 
          RowBox[{"SplineDegree", " ", "->", " ", "2"}], ",", " ", 
          RowBox[{"SplineKnots", " ", "->", " ", "k"}], ",", " ", 
          RowBox[{"SplineWeights", " ", "->", " ", "w"}]}], "]"}]}]}], "\n", 
      "   ", "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "m", "]"}], " ", "==", " ", "2"}], " ", "||", 
      " ", 
      RowBox[{
       RowBox[{"Length", "[", "m", "]"}], " ", "==", " ", "3"}]}]}]}], "\n", 
   " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "circleFromPoints", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"arc", " ", "->", " ", "False"}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"circleFromPoints", "[", 
     RowBox[{
      RowBox[{"m", " ", ":", " ", 
       RowBox[{"{", 
        RowBox[{"q1_", ",", " ", "q2_", ",", " ", "q3_"}], "}"}]}], ",", " ", 
      
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", "\n", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "c", ",", " ", "r", ",", " ", "\[Phi]1", ",", " ", "\[Phi]2", ",", 
         " ", "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "h", ",", " ", 
         "\n", "        ", 
         RowBox[{"rot", " ", "=", " ", 
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
                RowBox[{"Cross", "[", 
                 RowBox[{
                  RowBox[{"#1", " ", "-", " ", "#2"}], ",", " ", 
                  RowBox[{"#3", " ", "-", " ", "#2"}]}], "]"}]}], "}"}], 
              "]"}], ",", 
             RowBox[{"RotationMatrix", "::", "spln"}]}], "]"}], " ", 
           "&"}]}]}], "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], " ", "=", 
         " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q1", ",", " ", "q2", ",", " ", "q3"}], "}"}], ".", 
          RowBox[{"rot", "[", 
           RowBox[{"q1", ",", " ", "q2", ",", " ", "q3"}], "]"}]}]}], ";", 
        "\n", "  ", 
        RowBox[{"h", " ", "=", " ", 
         RowBox[{"p1", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], " ", "=", 
         " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{";;", " ", "2"}]}], "]"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c", ",", " ", "r"}], "}"}], " ", "=", " ", 
         RowBox[{"List", " ", "@@", " ", 
          RowBox[{"Circumsphere", "[", 
           RowBox[{"{", 
            RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], "]"}]}]}], 
        ";", "\n", "  ", 
        RowBox[{"\[Phi]1", " ", "=", " ", 
         RowBox[{"ArcTan", " ", "@@", " ", 
          RowBox[{"(", 
           RowBox[{"p3", " ", "-", " ", "c"}], ")"}]}]}], ";", "\n", "  ", 
        RowBox[{"\[Phi]2", " ", "=", " ", 
         RowBox[{"ArcTan", " ", "@@", " ", 
          RowBox[{"(", 
           RowBox[{"p1", " ", "-", " ", "c"}], ")"}]}]}], ";", "\n", "  ", 
        RowBox[{"c", " ", "=", " ", 
         RowBox[{"Append", "[", 
          RowBox[{"c", ",", " ", "h"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "arc", "]"}], " ", "//", " ", 
           "TrueQ"}], ",", "\n", "    ", 
          RowBox[{"MapAt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Function", "[", 
               RowBox[{
                RowBox[{"{", "p", "}"}], ",", " ", 
                RowBox[{
                 RowBox[{"rot", "[", 
                  RowBox[{"q1", ",", " ", "q2", ",", " ", "q3"}], "]"}], ".", 
                 "p"}]}], "]"}], " ", "/@", " ", "#"}], " ", "&"}], ",", " ", 
            
            RowBox[{"splineCircle", "[", 
             RowBox[{"c", ",", " ", "r", ",", " ", 
              RowBox[{"{", 
               RowBox[{"\[Phi]1", ",", " ", "\[Phi]2"}], "}"}]}], "]"}], ",", 
            " ", 
            RowBox[{"{", "1", "}"}]}], "]"}], ",", "\n", "    ", 
          RowBox[{"MapAt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Function", "[", 
               RowBox[{
                RowBox[{"{", "p", "}"}], ",", " ", 
                RowBox[{
                 RowBox[{"rot", "[", 
                  RowBox[{"q1", ",", " ", "q2", ",", " ", "q3"}], "]"}], ".", 
                 "p"}]}], "]"}], " ", "/@", " ", "#"}], " ", "&"}], ",", " ", 
            
            RowBox[{"splineCircle", "[", 
             RowBox[{"c", ",", " ", "r"}], "]"}], ",", " ", 
            RowBox[{"{", "1", "}"}]}], "]"}]}], "\n", "  ", "]"}]}]}], "\n", 
      "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{"MatrixQ", "[", 
       RowBox[{"m", ",", " ", "NumericQ"}], "]"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"Dimensions", "[", "m", "]"}], " ", "==", " ", 
       RowBox[{"{", 
        RowBox[{"3", ",", " ", "3"}], "}"}]}]}]}]}]}]}]], "Code",
 CellLabel->
  "In[7323]:=",ExpressionUUID->"8a094d13-8b63-400b-b159-c54a5fd2ee60"],

Cell[BoxData[
 RowBox[{
  RowBox[{"angleMarker", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", "v2_Integer", ",", "v3_Integer"}], "}"}], ",",
     " ", 
    RowBox[{"radius", " ", ":", " ", 
     RowBox[{"_", "?", "NumericQ"}], " ", ":", " ", 
     RowBox[{"1", "/", "10"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"angleLocation", "=", 
        RowBox[{
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "[", 
         RowBox[{"[", "v2", "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "project", " ", "the", " ", "vectors", " ", "making", " ", "this", 
          " ", "angle", " ", "to", " ", "the", " ", "xy"}], "-", "plane"}], 
        "*)"}], "\n", "\t", 
       RowBox[{"vectors", "=", 
        RowBox[{"displacementVector", "[", 
         RowBox[{
          RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"v2", ",", "v1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"v2", ",", "v3"}], "}"}]}], "}"}]}], "]"}]}]}], "\n", 
      "}"}], ",", "\n", "\t", 
     RowBox[{"circleFromPoints", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"angleLocation", "+", 
          RowBox[{"radius", " ", 
           RowBox[{"vectors", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
         RowBox[{"angleLocation", "+", 
          RowBox[{"radius", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"vectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "+", 
              RowBox[{"vectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
            RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], ",", 
         RowBox[{"angleLocation", "+", 
          RowBox[{"radius", " ", 
           RowBox[{"vectors", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
       RowBox[{"arc", " ", "\[Rule]", "True"}]}], "]"}]}], "\n", "]"}], " ", "/;",
    " ", 
   RowBox[{
    RowBox[{
     RowBox[{"displayDimension", "[", "m", "]"}], "\[Equal]", "3"}], " ", "&&",
     " ", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "]"}], "\[LessEqual]", 
     RowBox[{"MeshCellCount", "[", 
      RowBox[{"m", ",", "0"}], "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "]"}], ">", 
     "0"}]}]}]}]], "Code",
 CellLabel->
  "In[7327]:=",ExpressionUUID->"bd7f0e33-5f80-428a-989f-41e32909c8eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"angleMarker", "::", "bounds"}], "=", 
   "\"\<Vertices are out of bounds.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"angleMarker", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", "v2_Integer", ",", "v3_Integer"}], "}"}]}], 
   "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"angleMarker", "::", "bounds"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"angleMarker", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", "v2_Integer", ",", "v3_Integer"}], "}"}], ",",
     "_"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"angleMarker", "::", "bounds"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"angleMarker", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", "v2_Integer", ",", "v3_Integer"}], "}"}], ",",
     "_", ",", 
    RowBox[{"_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"angleMarker", "::", "bounds"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[7328]:=",ExpressionUUID->"6430d36e-973c-44ca-a619-b4932b524083"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["plotMechanism[]", "Section",ExpressionUUID->"39bcb497-250e-4ccc-b5cc-cc185dc1e82d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "plotMechanism", "]"}], " ", "=", " ", 
   RowBox[{"Join", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Options", "[", "Graphics3D", "]"}], ",", "\n", "\t", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"\"\<displacement\>\"", " ", "\[Rule]", " ", "None"}], ",", 
       "\n", "\t\t", 
       RowBox[{"\"\<stress\>\"", " ", "\[Rule]", " ", "None"}], ",", "\n", 
       "\t\t", 
       RowBox[{"\"\<stressStyle\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Red", " ", ",", " ", 
            RowBox[{"AbsoluteThickness", "[", "4", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Blue", " ", ",", " ", 
            RowBox[{"AbsoluteThickness", "[", "4", "]"}]}], "}"}]}], " ", 
         "}"}]}], ",", "\n", "\t\t", 
       RowBox[{"\"\<displacementStyle\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", "Black", "}"}]}], ",", "\n", "\t\t", 
       RowBox[{"\"\<displacementScale\>\"", " ", "\[Rule]", " ", "0.25"}], 
       ",", "\n", "\t\t", 
       RowBox[{
       "\"\<displayDimension\>\"", " ", "\[Rule]", " ", "Automatic"}]}], "\n",
       "\t", "}"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[7332]:=",ExpressionUUID->"47c05290-a89e-4761-b409-233504c8abb9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   "\t", 
   RowBox[{"plotMechanism", "[", " ", 
    RowBox[{"m", ",", "\n", "\t\t", 
     RowBox[{"positionDimension", "[", " ", 
      RowBox[{"m", " ", ",", " ", "Automatic", " ", ",", " ", 
       RowBox[{"OptionValue", "[", "\"\<displayDimension\>\"", "]"}]}], " ", 
      "]"}], ",", " ", "\n", "\t\t", "opt"}], "\n", "\t", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions", " ", ":", " ", 
      RowBox[{"_", "?", "numericCoordinatesQ"}]}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "organize", " ", "all", " ", "the", " ", "coordinates", " ", "into", 
        " ", "proper", " ", "form"}], "*)"}], "\n", 
      RowBox[{
       RowBox[{"coordinates", " ", "=", " ", 
        RowBox[{"positionDimension", "[", " ", 
         RowBox[{"m", " ", ",", " ", 
          RowBox[{"{", "positions", "}"}], " ", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<displayDimension\>\"", "]"}]}], 
         " ", "]"}]}], " ", ",", " ", "\n", "graphics", ",", " ", "dimension",
        ",", " ", "directive", ",", " ", "options", ",", " ", "stresses", ",",
        " ", "displacements"}], "\n", "}"}], ",", " ", "\n", "\t", 
     RowBox[{
      RowBox[{"graphics", " ", "=", " ", 
       RowBox[{"createMechanismGraphics", "[", 
        RowBox[{"m", ",", " ", "coordinates", ",", " ", 
         RowBox[{"Length", "[", " ", 
          RowBox[{"coordinates", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", "]"}], ",", " ", 
         RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], ";", "\n", "\t", 
      RowBox[{"directive", " ", "=", " ", 
       RowBox[{"graphicsDirective", "[", " ", 
        RowBox[{"m", ",", " ", "graphics"}], " ", "]"}]}], ";", "\n", "\t", 
      RowBox[{"options", " ", "=", " ", 
       RowBox[{"graphicsOptions", "[", " ", 
        RowBox[{
         RowBox[{"{", "opt", "}"}], ",", " ", "directive", ",", " ", 
         RowBox[{"boundingRegions", "[", 
          RowBox[{"m", ",", " ", "graphics"}], "]"}]}], " ", "]"}]}], ";", 
      "\n", "\n", "\t", 
      RowBox[{"stresses", " ", "=", " ", 
       RowBox[{"createStressGraphics", "[", " ", 
        RowBox[{
         RowBox[{"listEdges", "[", "m", "]"}], ",", " ", "coordinates", ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"OptionValue", "[", "\"\<stress\>\"", "]"}], "}"}], ",", 
         " ", 
         RowBox[{"OptionValue", "[", "\"\<stressStyle\>\"", "]"}]}], " ", 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"displacements", " ", "=", " ", 
       RowBox[{"createDisplacementGraphics", "[", " ", 
        RowBox[{"coordinates", ",", " ", 
         RowBox[{"{", 
          RowBox[{"OptionValue", "[", "\"\<displacement\>\"", "]"}], "}"}], 
         ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<displacementScale\>\"", "]"}], ",", 
         " ", 
         RowBox[{"OptionValue", "[", "\"\<displacementStyle\>\"", "]"}]}], 
        " ", "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"First", "@", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"directive", "[", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "}"}], ",", " ", 
            "options"}], " ", "]"}], "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "graphics", ",", " ", "stresses", ",", " ", "displacements"}], 
          "}"}]}], " ", "]"}]}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"plotMechanism", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "numericCoordinatesQ"}], "}"}]}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", "\n", 
     RowBox[{"(*", 
      RowBox[{
      "organize", " ", "all", " ", "the", " ", "coordinates", " ", "into", 
       " ", "proper", " ", "form"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"coordinates", " ", "=", " ", 
       RowBox[{"positionDimension", "[", " ", 
        RowBox[{"m", " ", ",", " ", "positions", " ", ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<displayDimension\>\"", "]"}]}], " ",
         "]"}]}], " ", ",", " ", "\n", "graphics", ",", " ", "dimension", ",",
       " ", "directive", ",", " ", "options", ",", " ", "stresses", ",", " ", 
      "displacements"}], "\n", "}"}], ",", " ", "\n", "\t", 
    RowBox[{
     RowBox[{"graphics", " ", "=", " ", 
      RowBox[{"createMechanismGraphics", "[", 
       RowBox[{"m", ",", " ", "coordinates", ",", " ", 
        RowBox[{"Length", "[", " ", 
         RowBox[{"coordinates", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", "]"}], ",", " ", 
        RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"directive", " ", "=", " ", 
      RowBox[{"graphicsDirective", "[", " ", 
       RowBox[{"m", ",", " ", "graphics"}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"options", " ", "=", " ", 
      RowBox[{"graphicsOptions", "[", " ", 
       RowBox[{
        RowBox[{"{", "opt", "}"}], ",", " ", "directive", ",", " ", 
        RowBox[{"boundingRegions", "[", 
         RowBox[{"m", ",", " ", "graphics"}], "]"}]}], " ", "]"}]}], ";", 
     "\n", "\n", "\t", 
     RowBox[{"stresses", " ", "=", " ", 
      RowBox[{"createStressGraphics", "[", " ", 
       RowBox[{
        RowBox[{"listEdges", "[", "m", "]"}], ",", " ", "coordinates", ",", 
        " ", 
        RowBox[{"OptionValue", "[", "\"\<stress\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<stressStyle\>\"", "]"}]}], " ", 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"displacements", " ", "=", " ", 
      RowBox[{"createDisplacementGraphics", "[", " ", 
       RowBox[{"coordinates", ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<displacement\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<displacementScale\>\"", "]"}], ",", 
        " ", 
        RowBox[{"OptionValue", "[", "\"\<displacementStyle\>\"", "]"}]}], " ",
        "]"}]}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"MapThread", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"directive", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "}"}], ",", " ", 
          "options"}], " ", "]"}], "&"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"graphics", ",", " ", "stresses", ",", " ", "displacements"}],
         "}"}]}], " ", "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[7333]:=",ExpressionUUID->"d0c0ab08-9f98-424a-87df-306817a5ca19"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"createMechanismGraphics", "[", " ", 
   RowBox[{
   "m_", ",", " ", "$Failed", ",", " ", "dimension_", ",", " ", 
    "inputOptions_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", " ", 
     RowBox[{"plotMechanism", "::", "pos"}], " ", "]"}], ";", " ", 
    RowBox[{"{", "}"}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"createMechanismGraphics", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "dimension_", ",", " ", 
    "inputOptions_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"toGraphicsComplex", "[", " ", 
     RowBox[{"m", ",", " ", "#", ",", " ", "dimension"}], " ", "]"}], " ", 
    "&"}], " ", "/@", " ", "positions"}]}]}], "Code",
 CellLabel->
  "In[7336]:=",ExpressionUUID->"e7b9a2a5-9af3-4abb-88e6-2d4aac3f3e98"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "numstress"}], "=", 
   "\"\<Stress should be a numeric list of stresses.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "stressmatch"}], "=", 
   "\"\<Stresses should agree with the number of edges.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "stressstyle"}], " ", "=", " ", 
   "\"\<Stress style should be of the form { positive stress style, negative \
stress style }.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotMechanism", "::", "numinst"}], " ", "=", " ", 
    "\"\<There must be as many stresses as positions provided.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "numdisp"}], "=", 
   "\"\<Displacements must be a vector of numerical displacements.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "numdispl"}], "=", 
   "\"\<Each vertex needs corresponding displacement in the correct \
dimension.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "displscale"}], "=", 
   "\"\<The displacement scale must be a positive real number.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "numinstdisp"}], " ", "=", " ", 
   "\"\<There must be as many displacements as positions provided.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[7338]:=",ExpressionUUID->"c147ed39-8949-4292-be7f-d71a91d02de6"],

Cell[CellGroupData[{

Cell["plotSizes[]", "Subsubsection",ExpressionUUID->"41036322-b489-45d6-a4a8-c4b2fc22031e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clip", " ", "the", " ", "bounding", " ", "box", " ", "to", " ", "a", " ", 
    "minimum", " ", "size"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"$minsize", "=", "0.25"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"minSize", "[", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"x", "-", "$minsize"}], ",", " ", 
       RowBox[{"x", "+", "$minsize"}]}], " ", "}"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"y", "-", "x"}], "]"}], " ", "<", " ", "$minsize"}]}]}], "\n", 
   
   RowBox[{
    RowBox[{"minSize", "[", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "-", "$minsize"}], ",", " ", 
      RowBox[{"y", "+", "$minsize"}]}], "}"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "figure", " ", "out", " ", "plot", " ", "range", " ", "and", " ", 
     "ratios"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"plotSizes", "[", "positions_", "]"}], " ", ":=", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"boundingRegion", ",", " ", "boundingBoxRatios"}], "\n", "}"}],
       ",", "\n", "\t", 
      RowBox[{
       RowBox[{"boundingRegion", " ", "=", " ", "\n", "\t\t", 
        RowBox[{"minSize", " ", "/@", " ", 
         RowBox[{"(", 
          RowBox[{"Transpose", " ", "@", "  ", 
           RowBox[{"CoordinateBoundingBox", "[", "positions", "]"}]}], 
          ")"}]}]}], ";", "\n", "\t", 
       RowBox[{"boundingBoxRatios", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], " ", "&"}], ")"}], " ", "/@", 
         " ", "boundingRegion"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"boundingRegion", ",", " ", "boundingBoxRatios"}], "}"}]}]}], 
     "\n", "]"}]}]}]}]], "Code",
 CellLabel->
  "In[7346]:=",ExpressionUUID->"1e65c65e-c390-4436-963f-5839fb0f2d6f"]
}, Closed]],

Cell[CellGroupData[{

Cell["boundingRegions[], graphicsDirective[], graphicsOptions[]", \
"Subsubsection",ExpressionUUID->"3158cbe2-8da5-435f-9855-4818c97962d4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"boundingRegions", "[", " ", 
   RowBox[{"m_", ",", " ", "$Failed"}], "]"}], " ", ":=", " ", 
  "$Failed"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"boundingRegions", "[", " ", 
    RowBox[{"m_", ",", " ", 
     RowBox[{"graphics", " ", ":", " ", 
      RowBox[{"{", "__GraphicsComplex", "}"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"plotSizes", "[", " ", 
    RowBox[{"Flatten", "[", " ", 
     RowBox[{
      RowBox[{"graphics", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", "1"}], " ", "]"}], 
    " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"graphicsDirective", "[", " ", 
   RowBox[{"m_", ",", " ", "$Failed"}], " ", "]"}], " ", ":=", " ", 
  "Identity"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"graphicsDirective", "[", " ", 
    RowBox[{"m_", ",", " ", 
     RowBox[{"graphics", " ", ":", " ", 
      RowBox[{"{", "__GraphicsComplex", "}"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dims", " ", "=", " ", 
       RowBox[{"Length", " ", "/@", " ", 
        RowBox[{"graphics", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Which", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Not", "[", " ", 
        RowBox[{"Equal", " ", "@@", " ", "dims"}], " ", "]"}], ",", " ", 
       "Identity", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"dims", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "2"}], ",", " ", 
       "Graphics", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"dims", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "3"}], ",", " ", 
       "Graphics3D", ",", "\n", "\t\t", "True", ",", " ", "Identity"}], "\n", 
      "\t", "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"graphicsOptions", "[", " ", 
   RowBox[{"options_", ",", " ", "directive_", ",", " ", "$Failed"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"graphicsOptions", "[", " ", 
   RowBox[{"options_", ",", " ", "directive_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"boundingRegion_", ",", " ", "boundingRatios_"}], "}"}]}], " ", 
   "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Join", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"FilterRules", "[", 
     RowBox[{
      RowBox[{"{", "options", "}"}], ",", 
      RowBox[{"Options", "[", "Graphics3D", "]"}]}], "]"}], ",", " ", "\n", 
    "\t\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Boxed", " ", "\[Rule]", " ", "False"}], ",", " ", 
      RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
      RowBox[{"PlotRange", " ", "\[Rule]", " ", "boundingRegion"}], ",", " ", 
      
      RowBox[{"BoxRatios", " ", "\[Rule]", " ", "boundingRatios"}]}], "}"}]}],
    "\n", "\t", "]"}]}]}], "Code",
 CellLabel->
  "In[7350]:=",ExpressionUUID->"274ece50-9947-4d40-9f3e-6f0f5cb59add"]
}, Closed]],

Cell[CellGroupData[{

Cell["createStressGraphics[]", "Subsubsection",ExpressionUUID->"6db47837-09f4-490d-be89-995898f5d632"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createStressGraphics", "[", " ", 
   RowBox[{"edges_", ",", " ", "coordinates_", ",", " ", 
    RowBox[{"None", "|", 
     RowBox[{"{", "None", "}"}]}], ",", " ", "_"}], " ", "]"}], ":=", 
  RowBox[{"ConstantArray", "[", " ", 
   RowBox[{
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"Length", "[", "coordinates", "]"}]}], " ", "]"}]}]], "Code",
 CellLabel->
  "In[7356]:=",ExpressionUUID->"d0e19af4-16c0-4707-b689-be8f8be442e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"createStressGraphics", "[", " ", 
    RowBox[{"edges_", " ", ",", " ", "coordinates_", " ", ",", " ", 
     RowBox[{"stress", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], ",", " ", 
     RowBox[{"style", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"_", ",", "_"}], "}"}]}]}], "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"stressScale", " ", "=", " ", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"stress", ",", "0"}], "]"}], ",", " ", 
          RowBox[{"Abs", " ", "@", " ", 
           RowBox[{"Min", "[", 
            RowBox[{"stress", ",", "0"}], "]"}]}]}], "]"}]}], "\n", "}"}], 
      ",", "\n", "\t", 
      RowBox[{"MapThread", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"plotStresses", "[", " ", 
          RowBox[{
          "stressScale", ",", " ", "edges", ",", " ", "#1", ",", " ", "#2", 
           ",", " ", "style"}], " ", "]"}], "&"}], ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{"coordinates", ",", " ", "stress"}], " ", "}"}]}], " ", 
       "]"}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "stress", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Length", "[", " ", "coordinates", " ", "]"}], ",", " ", 
       RowBox[{"Length", "[", "edges", "]"}]}], " ", "}"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"createStressGraphics", "[", " ", 
   RowBox[{
   "edges_", ",", " ", "coordinates_", ",", " ", "stress_", ",", " ", 
    "style_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"Not", " ", "@", " ", 
       RowBox[{"MatrixQ", "[", " ", 
        RowBox[{"stress", ",", " ", "NumericQ"}], " ", "]"}]}], ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "numstress"}], "]"}]}], "]"}], ";", 
    "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "stress", "]"}], " ", "\[NotEqual]", " ", 
       RowBox[{"Length", "[", " ", "coordinates", " ", "]"}]}], ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "numinst"}], "]"}]}], "]"}], ";", "\n", 
    "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"stress", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "\[NotEqual]", " ", 
       RowBox[{"Length", "[", "edges", "]"}]}], ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "stressmatch"}], "]"}]}], " ", "]"}], 
    ";", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "style", "]"}], " ", "\[NotEqual]", " ", "2"}], 
      ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "stressstyle"}], "]"}]}], " ", "]"}], 
    ";", "\n", "\n", "\t", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"Length", "[", "coordinates", "]"}]}], "]"}]}], "\n", 
   ")"}]}]}], "Code",
 CellLabel->
  "In[7357]:=",ExpressionUUID->"6e3dd12b-7fe5-467b-932c-23f1811752d3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotStresses", "[", " ", 
    RowBox[{
    "stressScale_", ",", " ", "edges_", ",", " ", "coordinates_", ",", " ", 
     "stress_", ",", " ", "style_"}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"padding", " ", "=", " ", "0.9"}], "}"}], ",", "\n", "\t", 
     RowBox[{"Flatten", " ", "@", " ", 
      RowBox[{"MapThread", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"stressGraphic", "[", " ", "style", " ", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "2"}], ",", 
               " ", 
               RowBox[{"padding", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "2"}]}]}], 
              "}"}], " ", "&"}], ")"}], " ", "/@", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"coordinates", "[", 
               RowBox[{"[", " ", "#", " ", "]"}], "]"}], "&"}], " ", "/@", 
             " ", "edges"}], ")"}]}], ",", "\n", "\t\t\t", 
          RowBox[{"stress", "/", "stressScale"}]}], "\n", "\t\t", "}"}]}], 
       "\n", "\t", "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stressGraphic", "[", 
     RowBox[{"{", 
      RowBox[{"posStyle_", " ", ",", " ", "_"}], "}"}], "]"}], "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"center_", ",", " ", "displacement_"}], "}"}], ",", " ", 
     RowBox[{"stress_", "?", "NumericQ"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"posStyle", ",", "\n", "\t", 
      RowBox[{"Arrow", "[", " ", 
       RowBox[{"{", " ", 
        RowBox[{"center", ",", "  ", 
         RowBox[{"center", " ", "+", " ", 
          RowBox[{"stress", " ", "displacement"}]}]}], " ", "}"}], "]"}], " ",
       ",", "\n", "\t", 
      RowBox[{"Arrow", "[", " ", 
       RowBox[{"{", " ", 
        RowBox[{"center", ",", "  ", 
         RowBox[{"center", " ", "-", " ", 
          RowBox[{"stress", " ", "displacement"}]}]}], " ", "}"}], "]"}]}], 
     "\n", "}"}], " ", "/;", " ", 
    RowBox[{"stress", " ", ">", " ", "0"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stressGraphic", "[", 
     RowBox[{"{", 
      RowBox[{"_", " ", ",", " ", "negStyle_"}], "}"}], "]"}], "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"center_", ",", " ", "displacement_"}], "}"}], ",", " ", 
     RowBox[{"stress_", "?", "NumericQ"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"negStyle", ",", "\n", "\t", 
      RowBox[{"Arrow", "[", " ", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"center", " ", "+", " ", 
          RowBox[{"stress", " ", "displacement"}]}], " ", ",", " ", 
         "center"}], " ", "}"}], "]"}], " ", ",", "\n", "\t", 
      RowBox[{"Arrow", "[", " ", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"center", " ", "-", " ", 
          RowBox[{"stress", " ", "displacement"}]}], " ", ",", " ", 
         "center"}], "  ", "}"}], "]"}]}], "\n", "}"}], " ", "/;", " ", 
    RowBox[{"stress", " ", "<", " ", "0"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"stressGraphic", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"center_", ",", " ", "displacement_"}], "}"}], ",", " ", 
    RowBox[{"stress_", "?", "NumericQ"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"{", "}"}], " ", "/;", " ", 
   RowBox[{"stress", " ", "==", " ", "0"}]}]}]}], "Code",
 CellLabel->
  "In[7359]:=",ExpressionUUID->"253b5d60-3713-4c03-a4d8-b6afae02180c"]
}, Closed]],

Cell[CellGroupData[{

Cell["createDisplacementGraphics[]", "Subsubsection",ExpressionUUID->"b5eb9bb4-86b7-4453-beb7-26e0f999bb46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createDisplacementGraphics", "[", " ", 
   RowBox[{"coordinates_", ",", " ", 
    RowBox[{"None", "|", 
     RowBox[{"{", "None", "}"}]}], ",", " ", "_", " ", ",", " ", "_"}], "]"}],
   ":=", " ", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"Length", "[", "coordinates", "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[7363]:=",ExpressionUUID->"fe4484fa-0682-4b65-83b1-f4a7594958f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"createDisplacementGraphics", "[", " ", 
    RowBox[{"coordinates_", ",", " ", 
     RowBox[{"displacements", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"__", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MatrixQ", "[", 
           RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], "}"}]}], 
     ",", " ", 
     RowBox[{"displacementScale_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
         RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], ",", " ", "style_"}], " ",
     "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"maxDisplacement", " ", "=", " ", 
        RowBox[{"Max", "[", " ", 
         RowBox[{"Map", "[", 
          RowBox[{"Norm", " ", ",", " ", "displacements", ",", " ", 
           RowBox[{"{", "2", "}"}]}], " ", "]"}], " ", "]"}]}], " ", "}"}], 
      ",", "\n", "\t", 
      RowBox[{"MapThread", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"plotDisplacements", "[", " ", 
          RowBox[{
          "maxDisplacement", ",", " ", "#1", ",", " ", "#2", ",", " ", 
           "displacementScale", ",", " ", "style"}], " ", "]"}], "&"}], ",", 
        " ", 
        RowBox[{"{", " ", 
         RowBox[{"coordinates", ",", " ", "displacements"}], " ", "}"}]}], 
       " ", "]"}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", " ", "coordinates", " ", "]"}], " ", 
     "\[Equal]", " ", 
     RowBox[{"Dimensions", "[", " ", "displacements", " ", "]"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"createDisplacementGraphics", "[", " ", 
   RowBox[{
   "coordinates_", ",", " ", "displacements_", ",", " ", "displacementScale_",
     ",", " ", "style_"}], " ", "]"}], " ", ":=", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"Not", " ", "@", " ", 
       RowBox[{"And", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"MatrixQ", "[", 
           RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], " ", "/@", " ", 
         "displacements"}], " ", "]"}]}], ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "numdisp"}], "]"}]}], " ", "]"}], ";", 
    "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"NumericQ", "[", "displacementScale", "]"}]}], " ", "||", 
        " ", 
        RowBox[{"#", " ", "\[LessEqual]", " ", "0"}]}], "&"}], ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "displscale"}], "]"}]}], " ", "]"}], 
    ";", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", " ", "coordinates", " ", "]"}], " ", 
       "\[NotEqual]", " ", 
       RowBox[{"Dimensions", "[", " ", "displacements", " ", "]"}]}], ",", 
      " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "numinstdisp"}], "]"}]}], " ", "]"}], 
    ";", "\n", "\n", "\t", 
    RowBox[{"ConstantArray", "[", " ", 
     RowBox[{
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"Length", "[", "coordinates", "]"}]}], " ", "]"}]}], "\n", 
   ")"}]}]}], "Code",
 CellLabel->
  "In[7364]:=",ExpressionUUID->"2cc02ac0-f0e0-44be-9b08-7afececde616"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotDisplacements", "[", " ", 
    RowBox[{
    "maxDisplacement_", ",", " ", "coordinates_", ",", " ", "displacement_", 
     ",", " ", "displacementScale_", ",", " ", "style_"}], "]"}], " ", ":=", 
   "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"padding", " ", "=", " ", "0.9"}], "}"}], ",", "\n", "\t", 
     RowBox[{"Flatten", " ", "@", " ", 
      RowBox[{"MapThread", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"displacementGraphic", "[", " ", "style", " ", "]"}], ",", 
        "\n", "\t\t", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{"coordinates", ",", "\n", "\t\t\t", 
          RowBox[{"displacementScale", " ", "*", " ", 
           RowBox[{"displacement", "/", "maxDisplacement"}]}]}], "\n", "\t\t",
          "}"}]}], "\n", "\t", "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementGraphic", "[", " ", "style_", " ", "]"}], "[", " ", 
   RowBox[{"vertexLocation_", ",", " ", "displacement_"}], " ", "]"}], " ", ":=",
   " ", "\n", "\t", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"style", ",", "\n", "\t", 
    RowBox[{"Arrow", "[", " ", 
     RowBox[{"{", 
      RowBox[{"vertexLocation", ",", " ", 
       RowBox[{"vertexLocation", " ", "+", " ", "displacement"}]}], "}"}], 
     " ", "]"}]}], "\n", "\t", "}"}]}]}], "Code",
 CellLabel->
  "In[7366]:=",ExpressionUUID->"55774fc6-ee2b-44c0-b416-d3132ebf9238"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["plotOrigami[]", "Section",ExpressionUUID->"22a76298-877b-4f82-9647-137ccd36f0ff"],

Cell[CellGroupData[{

Cell["texture[]", "Subsection",ExpressionUUID->"9b4913e6-0b4a-4a08-b7bd-200f6bcf7b03"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"texture", "[", "]"}], " ", ":=", " ", 
    RowBox[{"{", " ", 
     RowBox[{
     "\"\<WhitePaper\>\"", ",", " ", "\"\<GrayPaper\>\"", ",", " ", 
      "\"\<WrinkledPaper\>\""}], " ", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$dataDirectory", "=", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"First", "@", 
          RowBox[{"PacletFind", "[", "\"\<Mechanisms\>\"", "]"}]}], ")"}], 
        "[", "\"\<Location\>\"", "]"}], ",", "\"\<Resources\>\"", ",", 
       "\"\<Textures\>\""}], "}"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"texture", "[", "\"\<WrinkledPaper\>\"", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"texture", "[", "\"\<WrinkledPaper\>\"", "]"}], " ", "=", " ", 
   RowBox[{"Texture", " ", "@", " ", 
    RowBox[{"Normal", "[", 
     RowBox[{"Import", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$dataDirectory", ",", "\"\<crinkled-paper.jpg\>\""}], "}"}], 
       "]"}], "]"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"texture", "[", "\"\<WhitePaper\>\"", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"texture", "[", "\"\<WhitePaper\>\"", "]"}], " ", "=", " ", 
   RowBox[{"Texture", " ", "@", " ", 
    RowBox[{"Normal", "[", 
     RowBox[{"Import", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$dataDirectory", ",", "\"\<white-paper.jpg\>\""}], "}"}], 
       "]"}], "]"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"texture", "[", "\"\<GrayPaper\>\"", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"texture", "[", "\"\<GrayPaper\>\"", "]"}], " ", "=", " ", 
    RowBox[{"Texture", " ", "@", " ", 
     RowBox[{"Normal", "[", 
      RowBox[{"Import", "[", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"$dataDirectory", ",", "\"\<blue-paper.jpeg\>\""}], "}"}], 
        "]"}], "]"}], "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"texture", "::", "bad"}], "=", 
   "\"\<Unrecognized texture `1`.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"texture", "[", "s_", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{
     RowBox[{"texture", "::", "bad"}], ",", " ", "s"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[7368]:=",ExpressionUUID->"9c7cd542-6131-452b-a5de-cf7d5aa66e54"]
}, Closed]],

Cell[CellGroupData[{

Cell["plotOrigami[]", "Subsection",ExpressionUUID->"1fce4c2a-3ad9-4a55-ae6b-d262e817dc47"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", " ", "plotOrigami", " ", "]"}], " ", "=", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"\"\<folds\>\"", " ", "\[Rule]", " ", "None"}], ",", "  ", 
      RowBox[{"\"\<face\>\"", " ", "\[Rule]", " ", "\"\<WrinkledPaper\>\""}], 
      ",", " ", 
      RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0.003"}]}], " ", 
     "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"plotOrigami", "[", " ", 
   RowBox[{"m_origami", ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"plotOrigami", "[", " ", 
   RowBox[{"m", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "opt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotOrigami", "[", " ", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"pos_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"faces", ",", " ", "positions", " ", ",", "\n", "\t", 
        RowBox[{"folds", " ", "=", " ", 
         RowBox[{"interiorEdges", "[", "m", "]"}]}], ",", "\n", "\t", 
        RowBox[{"boundary", " ", "=", " ", 
         RowBox[{"Flatten", "[", " ", 
          RowBox[{
           RowBox[{"boundaryEdges", "[", "m", "]"}], " ", ",", " ", "1"}], 
          " ", "]"}]}], ",", "\n", "\t", 
        RowBox[{"d", " ", "=", " ", 
         RowBox[{"displayDimension", "[", "m", "]"}]}], ",", "\n", "\t", 
        "positionMap"}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"PadRight", "[", " ", 
         RowBox[{"pos", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "pos", "]"}], ",", " ", "d"}], "}"}]}], 
         " ", "]"}]}], ";", "\n", "\t", 
       RowBox[{"positionMap", " ", "=", " ", 
        RowBox[{"Dispatch", "[", " ", 
         RowBox[{"Thread", "[", " ", 
          RowBox[{
           RowBox[{"Range", "[", " ", 
            RowBox[{"Length", "[", "pos", "]"}], " ", "]"}], " ", "\[Rule]", 
           " ", "positions"}], " ", "]"}], " ", "]"}]}], ";", "\n", "\t", 
       RowBox[{"faces", " ", "=", " ", 
        RowBox[{"toGraphicsComplex", "[", " ", 
         RowBox[{
          RowBox[{"embeddingDimension", "[", 
           RowBox[{"m", "\[Rule]", "2"}], "]"}], ",", " ", "positions"}], " ",
          "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"Show", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"d", "\[Equal]", "2"}], ",", " ", "Graphics", ",", " ", 
            "Graphics3D"}], " ", "]"}], " ", "/@", "\n", "\t\t", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"Check", "[", " ", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"StringQ", "[", " ", 
                   RowBox[{"OptionValue", "[", "\"\<face\>\"", "]"}], " ", 
                   "]"}], ",", " ", 
                  RowBox[{"texture", "[", 
                   RowBox[{"OptionValue", "[", "\"\<face\>\"", "]"}], "]"}], 
                  " ", ",", " ", 
                  RowBox[{"OptionValue", "[", "\"\<face\>\"", "]"}]}], " ", 
                 "]"}], " ", ",", " ", "Nothing"}], " ", "]"}], ",", "\n", 
              "\t\t\t", "faces"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
            "\n", "\t\t\t", 
            RowBox[{"Flatten", " ", "@", " ", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"Thickness", "[", " ", 
                RowBox[{"2", " ", 
                 RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}], 
                " ", "]"}], ",", " ", "Black", ",", " ", 
               RowBox[{"Line", " ", "/@", " ", 
                RowBox[{"(", 
                 RowBox[{"boundary", " ", "/.", " ", "positionMap"}], 
                 ")"}]}]}], " ", "}"}]}], ",", "\n", "\t\t\t", 
            RowBox[{"Check", "[", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"MapThread", "[", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", " ", 
                   RowBox[{"#1", ",", " ", 
                    RowBox[{"Thickness", "[", " ", 
                    RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}], 
                    " ", "]"}], ",", "  ", 
                    RowBox[{"Line", "[", "#2", "]"}]}], " ", "}"}], "]"}], 
                 " ", "&"}], " ", ",", " ", 
                RowBox[{"{", " ", 
                 RowBox[{
                  RowBox[{"foldStyleGraphics", "[", " ", 
                   RowBox[{"folds", ",", " ", 
                    RowBox[{"OptionValue", "[", "\"\<folds\>\"", "]"}]}], " ",
                    "]"}], ",", "  ", 
                  RowBox[{"(", 
                   RowBox[{"folds", " ", "/.", " ", "positionMap"}], ")"}]}], 
                 "}"}]}], " ", "]"}], ",", "\n", "\t\t\t\t", "Nothing"}], 
             "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "}"}]}], ",", "\n", 
         "\t\t", 
         RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"BoxRatios", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
         RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "\n", "\t", 
        "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"lineThicknessQ", "[", " ", 
      RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}], " ", "]"}], " ",
      "&&", " ", 
     RowBox[{"checkVertexNumberQ", "[", " ", 
      RowBox[{
       RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], " ", "\[Equal]", " ", 
       
       RowBox[{"Length", "[", "pos", "]"}]}], " ", "]"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotOrigami", "::", "vert"}], " ", "=", " ", 
   "\"\<Number of vertices does not match number of vertex positions \
provided.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkVertexNumberQ", "[", " ", 
    RowBox[{"b_", "?", "BooleanQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{"Not", "[", "b", "]"}], ",", " ", 
       RowBox[{"Message", "[", 
        RowBox[{"plotOrigami", "::", "vert"}], "]"}]}], " ", "]"}], ";", " ", 
     "b"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotOrigami", "::", "thick"}], " ", "=", " ", 
   "\"\<Line thickness, `1`, should be a positive real number.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"lineThicknessQ", "[", " ", 
   RowBox[{"t_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"NumericQ", "[", "#", "]"}], " ", "&&", " ", 
       RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], " ", "]"}], " ", ":=", 
  " ", "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lineThicknessQ", "[", " ", "t_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"plotOrigami", "::", "thick"}], ",", " ", "t"}], "]"}], ";", 
     " ", "False"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotOrigami", "::", "folds"}], " ", "=", " ", 
   "\"\<Folds should be of the form {{v1,v2}, ... } -> { style1, ... \
}.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"foldStyleGraphics", "[", " ", 
   RowBox[{"allFolds_", ",", " ", "None"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"ConstantArray", "[", " ", 
   RowBox[{"Black", ",", " ", 
    RowBox[{"Length", "[", "allFolds", "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"foldStyleGraphics", "[", " ", 
   RowBox[{"allFolds_", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"folds_", "?", "MatrixQ"}], " ", "\[Rule]", " ", "style_List"}],
      "}"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"foldStyleGraphics", "[", " ", 
   RowBox[{"allFolds", ",", " ", 
    RowBox[{"folds", " ", "\[Rule]", " ", "style"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"foldStyleGraphics", "[", " ", 
   RowBox[{"allFolds_", ",", " ", 
    RowBox[{
     RowBox[{"folds_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], " ", 
     "\[Rule]", " ", "style_List"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"rules", " ", "=", " ", 
       RowBox[{"Dispatch", " ", "@", " ", 
        RowBox[{"Thread", "[", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Sort", " ", "/@", " ", "folds"}], ")"}], " ", "\[Rule]", 
          " ", "style"}], " ", "]"}]}]}], " ", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Sort", "/@", "allFolds"}], ")"}], " ", "/.", " ", "rules"}], 
      " ", "/.", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], " ", "\[Rule]", 
       " ", "Black"}]}]}], "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Last", "[", 
      RowBox[{"Dimensions", "[", " ", "folds", " ", "]"}], "]"}], " ", 
     "\[Equal]", " ", "2"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Length", "[", "folds", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"Length", "[", "style", "]"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"foldStyleGraphics", "[", " ", 
   RowBox[{"_", " ", ",", " ", "_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"plotOrigami", "::", "folds"}], "]"}], ";", " ", "$Failed"}], 
   ")"}]}]}], "Code",
 CellLabel->
  "In[7375]:=",ExpressionUUID->"d9f2b206-4c71-4b1c-8742-4ad30c3dcdbb"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Experimental code", "Section",ExpressionUUID->"3efe547a-f1ac-4ffb-8444-d2b58598608b"],

Cell[CellGroupData[{

Cell["scalePolygon[]", "Subsection",ExpressionUUID->"030fa22e-305a-45e4-b6b6-74f92db2e39b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"scalePolygon", "[", 
   RowBox[{"coords_", " ", ",", " ", "shrinkBy_"}], " ", "]"}], ":=", "\n", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{"center", " ", "=", " ", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"Mean", "[", "coords", "]"}], ",", 
        RowBox[{"Length", "[", "coords", "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"center", " ", "+", " ", 
     RowBox[{
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{"1", "-", "shrinkBy"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"coords", "-", "center"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellLabel->
  "In[7388]:=",ExpressionUUID->"580bd134-fe46-489b-be75-aa685f0fcd22"]
}, Closed]],

Cell[CellGroupData[{

Cell["extrudedPolygon[]", "Subsection",ExpressionUUID->"50641957-a476-4037-b81c-36b8b7785b1b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extrudedPolygon", "[", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"thickness1_", "?", "NumericQ"}], ",", " ", 
       RowBox[{"thickness2_", "?", "NumericQ"}]}], " ", "}"}], " ", "]"}], 
    "[", "coords_", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"extrusionVector", " ", "=", " ", 
        RowBox[{"First", " ", "@", " ", 
         RowBox[{"normalVector", "[", 
          RowBox[{"coords", ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}]}], "]"}]}]}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"face1", " ", "=", " ", 
           RowBox[{"coords", " ", "+", " ", 
            RowBox[{"thickness1", " ", 
             RowBox[{"ConstantArray", "[", " ", 
              RowBox[{"extrusionVector", ",", " ", 
               RowBox[{"Length", "[", "coords", "]"}]}], " ", "]"}]}]}]}], 
          ",", "\n", "\t\t", 
          RowBox[{"face2", " ", "=", " ", 
           RowBox[{"coords", " ", "+", " ", 
            RowBox[{"thickness2", " ", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{"extrusionVector", " ", ",", " ", 
               RowBox[{"Length", "[", "coords", "]"}]}], " ", "]"}]}]}]}]}], 
         "\n", "\t\t", "}"}], ",", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Polyhedron", " ", "@", " ", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{
           RowBox[{
           "{", "\[IndentingNewLine]", "\t\t\t", "face1", 
            "\[IndentingNewLine]", "\t\t\t", "}"}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"MapThread", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"#1", ",", 
                RowBox[{"Reverse", "[", "#2", "]"}]}], "]"}], "&"}], " ", ",",
              " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Partition", "[", 
                RowBox[{"face1", ",", "2", ",", "1", ",", "1"}], "]"}], ",", 
               RowBox[{"Partition", "[", 
                RowBox[{"face2", ",", "2", ",", "1", ",", "1"}], "]"}]}], 
              "}"}]}], " ", "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{"Reverse", " ", "@", " ", "face2"}], "\n", "\t\t\t", 
            "}"}]}], "\[IndentingNewLine]", "\t\t", "]"}]}]}], 
       "\[IndentingNewLine]", "\t", "]"}]}], " ", "\n", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"MatrixQ", "[", "coords", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", "coords", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", "3"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extrudedPolygon", "[", " ", 
     RowBox[{
      RowBox[{"extrusionVector", " ", ":", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumericQ"}], ",", " ", 
         RowBox[{"_", "?", "NumericQ"}], ",", " ", 
         RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], " ", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"thickness1_", "?", "NumericQ"}], ",", " ", 
        RowBox[{"thickness2_", "?", "NumericQ"}]}], " ", "}"}]}], " ", "]"}], 
    "[", "coords_", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"face1", " ", "=", " ", 
         RowBox[{"coords", " ", "+", " ", 
          RowBox[{"thickness1", " ", 
           RowBox[{"ConstantArray", "[", " ", 
            RowBox[{"extrusionVector", ",", " ", 
             RowBox[{"Length", "[", "coords", "]"}]}], " ", "]"}]}]}]}], ",", 
        "\n", "\t\t", 
        RowBox[{"face2", " ", "=", " ", 
         RowBox[{"coords", " ", "+", " ", 
          RowBox[{"thickness2", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"extrusionVector", " ", ",", " ", 
             RowBox[{"Length", "[", "coords", "]"}]}], " ", "]"}]}]}]}]}], 
       "\n", "\t\t", "}"}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"Polyhedron", " ", "@", " ", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{
         "{", "\[IndentingNewLine]", "\t\t\t", "face1", "\[IndentingNewLine]",
           "\t\t\t", "}"}], ",", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{"MapThread", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"Reverse", "[", "#2", "]"}]}], "]"}], "&"}], " ", ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Partition", "[", 
              RowBox[{"face1", ",", "2", ",", "1", ",", "1"}], "]"}], ",", 
             RowBox[{"Partition", "[", 
              RowBox[{"face2", ",", "2", ",", "1", ",", "1"}], "]"}]}], 
            "}"}]}], " ", "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{"Reverse", " ", "@", " ", "face2"}], "\n", "\t\t\t", 
          "}"}]}], "\[IndentingNewLine]", "\t\t", "]"}]}]}], 
     "\[IndentingNewLine]", "\t", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"MatrixQ", "[", "coords", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", "coords", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", "3"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extrudedPolygon", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"thickness1_", "?", "NumericQ"}], ",", " ", 
      RowBox[{"thickness2_", "?", "NumericQ"}]}], "}"}], "]"}], "[", 
   "coords_", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"coords2", " ", "=", " ", 
       RowBox[{"PadRight", "[", " ", 
        RowBox[{"coords", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", "coords", "]"}], ",", "3"}], "}"}]}], " ", 
        "]"}]}], " ", "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"face1", " ", "=", " ", 
          RowBox[{"coords2", " ", "+", " ", 
           RowBox[{"thickness1", " ", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}], " ", ",", " ", 
              RowBox[{"Length", "[", "coords", "]"}]}], " ", "]"}]}]}]}], ",",
          "\n", "\t\t", 
         RowBox[{"face2", " ", "=", " ", 
          RowBox[{"coords2", " ", "+", " ", 
           RowBox[{"thickness2", " ", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}], " ", ",", " ", 
              RowBox[{"Length", "[", "coords", "]"}]}], " ", "]"}]}]}]}]}], 
        "\n", "\t\t", "}"}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"Polyhedron", " ", "@", " ", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{
          "{", "\[IndentingNewLine]", "\t\t\t", "face1", 
           "\[IndentingNewLine]", "\t\t\t", "}"}], ",", "\[IndentingNewLine]",
           "\t\t\t", 
          RowBox[{"MapThread", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{"#1", ",", 
               RowBox[{"Reverse", "[", "#2", "]"}]}], "]"}], "&"}], " ", ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{"face1", ",", "2", ",", "1", ",", "1"}], "]"}], ",", 
              RowBox[{"Partition", "[", 
               RowBox[{"face2", ",", "2", ",", "1", ",", "1"}], "]"}]}], 
             "}"}]}], " ", "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{"Reverse", " ", "@", " ", "face2"}], "\n", "\t\t\t", 
           "}"}]}], "\[IndentingNewLine]", "\t\t", "]"}]}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"MatrixQ", "[", "coords", "]"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Dimensions", "[", "coords", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", 
     "2"}]}]}]}]}], "Code",
 CellLabel->
  "In[7389]:=",ExpressionUUID->"da7e70de-e1ad-47c1-a2cd-4e867b497a28"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["post", "Section",ExpressionUUID->"a1375d4f-d82f-42cf-9eb3-c76f31ebb81e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[7392]:=",ExpressionUUID->"0f6f47a1-2047-4f40-a070-b68748d33cb4"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1239, 805},
WindowMargins->{{76, Automatic}, {Automatic, -98}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"10003f09-38cd-4dfb-802f-fa234ab7339b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 107, 0, 98, "Title",ExpressionUUID->"130b3787-7aa9-48f9-8ced-30b05119f93a"],
Cell[690, 24, 167, 4, 81, "Text",ExpressionUUID->"a287b323-0ec1-4bfc-ac7b-b122cce5f6f7"],
Cell[CellGroupData[{
Cell[882, 32, 100, 0, 45, "Subsubsection",ExpressionUUID->"6d3b1798-1603-4e1f-a3fb-a831a45b5512"],
Cell[985, 34, 222, 5, 35, "Text",ExpressionUUID->"fd552589-5b13-4cba-8060-e04008711b7b"],
Cell[1210, 41, 164, 4, 35, "Text",ExpressionUUID->"5b61e7c9-2ff5-4e08-9046-4fe654d2bc7d"],
Cell[1377, 47, 234, 5, 35, "Text",ExpressionUUID->"47c99494-6580-4a80-9766-1a2595a00f8d"],
Cell[1614, 54, 202, 4, 35, "Text",ExpressionUUID->"5b4fb190-7420-4fe6-b9ee-0710831e0b2a"],
Cell[1819, 60, 235, 3, 35, "Text",ExpressionUUID->"e4ef7bb6-5622-4ec5-8d97-20b894f9d806"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2091, 68, 109, 0, 45, "Subsubsection",ExpressionUUID->"5effce6f-d2fc-4343-8138-d788d00f2d13"],
Cell[2203, 70, 387, 7, 58, "Text",ExpressionUUID->"01e0f39a-cdd3-4398-9885-4e9122d860da"],
Cell[2593, 79, 229, 3, 35, "Text",ExpressionUUID->"7e24a6a5-4355-4ea6-b4d0-8c0c5dce255e"],
Cell[2825, 84, 229, 3, 35, "Text",ExpressionUUID->"b0da8786-151d-4068-a6a6-bf2a39ac060a"],
Cell[3057, 89, 188, 3, 35, "Text",ExpressionUUID->"a7694424-f247-427e-a125-b114ca2d333b"],
Cell[3248, 94, 254, 4, 35, "Text",ExpressionUUID->"3c29e79e-c97c-45d3-a1ea-174eedb8cf96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3539, 103, 123, 0, 69, "Chapter",ExpressionUUID->"1007bea5-8919-43d5-b2b7-1d591eacbee8"],
Cell[3665, 105, 397, 9, 91, "Code",ExpressionUUID->"79322a72-1ef5-40c5-8b71-24d04e2c58a5"],
Cell[CellGroupData[{
Cell[4087, 118, 79, 0, 67, "Section",ExpressionUUID->"86495105-a446-474d-bbe6-03bd1334054f"],
Cell[4169, 120, 484, 12, 72, "Code",ExpressionUUID->"83532984-f8e5-44f9-a21e-beb9bdc10ddf"],
Cell[4656, 134, 1870, 50, 224, "Code",ExpressionUUID->"6058a131-dea1-48d0-a8b1-9755094b2f70"],
Cell[6529, 186, 2306, 43, 490, "Code",ExpressionUUID->"91875964-7201-4edd-b967-73869fbe7944"],
Cell[8838, 231, 1003, 23, 129, "Code",ExpressionUUID->"7445fe50-3c2c-4866-8fe2-7eea17dc51c4"],
Cell[9844, 256, 4141, 105, 737, "Code",ExpressionUUID->"1541dce7-e5b5-40a8-8bd4-290f6eff1d3f"],
Cell[13988, 363, 1948, 44, 281, "Code",ExpressionUUID->"9273de87-effd-4686-9b2e-608fcb430619"],
Cell[15939, 409, 531, 10, 72, "Code",ExpressionUUID->"186f7969-7d96-47c8-96e9-fa6761c66af2"],
Cell[16473, 421, 271, 7, 52, "Code",ExpressionUUID->"1e4167c3-01ad-404a-90d1-cf374df1ec7c"],
Cell[16747, 430, 842, 19, 129, "Code",ExpressionUUID->"e4d10adb-f929-4d10-82bc-4b12de09613d"],
Cell[17592, 451, 292, 7, 52, "Code",ExpressionUUID->"8a5b3047-fa4b-4ede-b897-9e13bbea5c78"]
}, Closed]],
Cell[CellGroupData[{
Cell[17921, 463, 98, 0, 53, "Section",ExpressionUUID->"cfa1c0f4-94af-49a0-98cd-e435294e26f2"],
Cell[18022, 465, 175, 4, 52, "Code",ExpressionUUID->"06fc029e-a0bb-4bdb-9997-a62c8c544d33"],
Cell[18200, 471, 1177, 36, 226, "Code",ExpressionUUID->"dc607867-c94e-46c7-a9ad-2c0f7a10f245"],
Cell[CellGroupData[{
Cell[19402, 511, 115, 0, 54, "Subsection",ExpressionUUID->"5cf74a85-b4c1-4085-b474-db69e3569d24"],
Cell[19520, 513, 2319, 64, 186, "Code",ExpressionUUID->"f5ce23c9-dd88-49e3-8ce9-d15ea2f4a0f2"],
Cell[21842, 579, 3605, 88, 224, "Code",ExpressionUUID->"e1f4995f-8f7d-4b00-976f-472aab646d03"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[25496, 673, 103, 0, 53, "Section",ExpressionUUID->"32abf7e8-c1c3-4c59-b203-2f531969c22b"],
Cell[CellGroupData[{
Cell[25624, 677, 93, 0, 54, "Subsection",ExpressionUUID->"6a6ee04e-2c60-4f5a-b37a-5e10a53bec4e"],
Cell[25720, 679, 496, 15, 72, "Code",ExpressionUUID->"bdd8b560-ee02-4e7f-8bd0-e33588051856"]
}, Closed]],
Cell[CellGroupData[{
Cell[26253, 699, 172, 3, 38, "Subsection",ExpressionUUID->"3a62cea0-f038-4adb-a593-ac467d6f5691"],
Cell[26428, 704, 264, 5, 81, "Text",ExpressionUUID->"8d04be23-411e-432c-bfe4-e1647b5aaadf"],
Cell[26695, 711, 283, 7, 52, "Code",ExpressionUUID->"022feccc-d73c-4d71-afbc-a207e971c81e"],
Cell[26981, 720, 275, 4, 58, "Text",ExpressionUUID->"75640f95-d395-4c2e-81a3-afdc486d3894"],
Cell[27259, 726, 524, 14, 72, "Code",ExpressionUUID->"e944af2f-9d8c-4fa3-bcad-637d078b0c80"],
Cell[27786, 742, 169, 3, 35, "Text",ExpressionUUID->"f15bb337-74f4-455e-b915-8ac882564f6d"],
Cell[27958, 747, 1478, 40, 186, "Code",ExpressionUUID->"27abfe07-3333-4d75-99de-2470311256dd"],
Cell[CellGroupData[{
Cell[29461, 791, 100, 0, 45, "Subsubsection",ExpressionUUID->"fda6f661-73bc-46fe-be37-a4b3cb886af7"],
Cell[29564, 793, 2271, 58, 300, "Code",ExpressionUUID->"ebd339af-0b19-4dba-9be4-fdea3199aaf7"]
}, Closed]],
Cell[CellGroupData[{
Cell[31872, 856, 102, 0, 37, "Subsubsection",ExpressionUUID->"aba4fc63-3ce6-43e8-8941-92720f4fb43e"],
Cell[31977, 858, 1800, 47, 224, "Code",ExpressionUUID->"e60888f0-96b1-4856-a58b-14732cbca0c6"]
}, Closed]],
Cell[CellGroupData[{
Cell[33814, 910, 95, 0, 37, "Subsubsection",ExpressionUUID->"ad11b15b-e272-4c4c-84c2-283593cd31f2"],
Cell[33912, 912, 6242, 146, 927, "Code",ExpressionUUID->"f3037e78-242f-4ef4-8cf8-1e4845b0d8f1"]
}, Closed]],
Cell[CellGroupData[{
Cell[40191, 1063, 102, 0, 37, "Subsubsection",ExpressionUUID->"fe9593fb-9d46-4790-81fa-64eb8f36438e"],
Cell[40296, 1065, 1640, 44, 129, "Code",ExpressionUUID->"d0d9de9b-10e4-483e-9ac8-37c0d9460b6a"],
Cell[41939, 1111, 2158, 57, 225, "Code",ExpressionUUID->"196af4ee-3c4d-4a8c-aea6-a3666286ecf2"]
}, Closed]],
Cell[CellGroupData[{
Cell[44134, 1173, 98, 0, 37, "Subsubsection",ExpressionUUID->"e4a12696-50f0-4df8-96ad-7441d5db9633"],
Cell[44235, 1175, 1388, 36, 243, "Code",ExpressionUUID->"465be40e-9f76-4b1b-9734-e762bad5ddca"]
}, Closed]],
Cell[CellGroupData[{
Cell[45660, 1216, 111, 0, 37, "Subsubsection",ExpressionUUID->"5c626c82-ded5-48ce-a2bb-b2f39430000f"],
Cell[45774, 1218, 780, 20, 167, "Code",ExpressionUUID->"41987400-ea7c-4197-8020-a38f577992f0"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[46603, 1244, 110, 0, 38, "Subsection",ExpressionUUID->"732c18fc-515b-4842-b168-c8f2ecbbfe56"],
Cell[46716, 1246, 177, 3, 35, "Text",ExpressionUUID->"ce7524de-e1a1-4a7a-bd48-392ed7009d2d"],
Cell[46896, 1251, 2027, 56, 167, "Code",ExpressionUUID->"0bf45db9-7619-45bc-b186-38923d0a0307"],
Cell[48926, 1309, 2673, 74, 262, "Code",ExpressionUUID->"ec426106-5275-44e5-a09e-d44cc50595d8"]
}, Closed]],
Cell[CellGroupData[{
Cell[51636, 1388, 99, 0, 38, "Subsection",ExpressionUUID->"e2629fb7-9d1d-43f3-bf65-3eef685b1359"],
Cell[51738, 1390, 2360, 65, 205, "Code",ExpressionUUID->"234639ac-ea1e-4bb7-a2eb-b8edc3acb6eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[54135, 1460, 100, 0, 38, "Subsection",ExpressionUUID->"31a2a4ca-20a8-4cbc-b01c-74d8e07dc5cb"],
Cell[54238, 1462, 2370, 66, 224, "Code",ExpressionUUID->"0a895eca-c68c-4041-b86b-8579247034b0"]
}, Closed]],
Cell[CellGroupData[{
Cell[56645, 1533, 102, 0, 38, "Subsection",ExpressionUUID->"530c0200-8cec-4ba0-ac9d-8bb8ee2048af"],
Cell[56750, 1535, 1046, 28, 110, "Code",ExpressionUUID->"3dcbb299-d60d-4ccd-b0a6-8765b702245a"],
Cell[57799, 1565, 782, 22, 72, "Code",ExpressionUUID->"102c4a3c-1dcf-48e5-af1a-6ac1cb37098a"]
}, Closed]],
Cell[CellGroupData[{
Cell[58618, 1592, 154, 2, 38, "Subsection",ExpressionUUID->"df7a1f65-a32e-49cc-8c27-29579d1205e6"],
Cell[58775, 1596, 4206, 117, 395, "Code",ExpressionUUID->"2553df87-0843-40e9-9b50-dcbdea5eaf4a"],
Cell[62984, 1715, 4134, 112, 566, "Code",ExpressionUUID->"c9202516-8006-40a6-bb3c-8907e6d4a898"]
}, Closed]],
Cell[CellGroupData[{
Cell[67155, 1832, 138, 1, 38, "Subsection",ExpressionUUID->"b47f0046-da3c-4283-8228-29f1a5615f84"],
Cell[67296, 1835, 1928, 51, 205, "Code",ExpressionUUID->"0ff05a13-c239-4798-89ca-6d3f02a331ca"],
Cell[69227, 1888, 4327, 112, 490, "Code",ExpressionUUID->"1f00d229-04f4-4a9f-9953-92a56ddcdcb8"],
Cell[73557, 2002, 4047, 104, 395, "Code",ExpressionUUID->"6db92788-a167-4c04-a0c8-42d1ff845760"]
}, Closed]],
Cell[CellGroupData[{
Cell[77641, 2111, 103, 0, 38, "Subsection",ExpressionUUID->"5de5a8d3-e193-443c-8f31-f2cec7f5741d"],
Cell[77747, 2113, 1449, 36, 300, "Code",ExpressionUUID->"ebd6d1da-3b12-4f71-801c-7e96aa50437e"],
Cell[79199, 2151, 1047, 27, 205, "Code",ExpressionUUID->"0b9eb7cd-cd75-419c-b2e5-5ecb30e634b7"]
}, Closed]],
Cell[CellGroupData[{
Cell[80283, 2183, 89, 0, 38, "Subsection",ExpressionUUID->"4273560f-e54b-4adb-9bee-6b091dbf1483"],
Cell[80375, 2185, 2040, 57, 319, "Code",ExpressionUUID->"1eb45753-deab-496b-bd81-ec8edaa850d6"]
}, Closed]],
Cell[CellGroupData[{
Cell[82452, 2247, 125, 0, 38, "Subsection",ExpressionUUID->"4f1a2276-83b8-453b-a0ab-cc4833ce2963"],
Cell[82580, 2249, 1576, 38, 187, "Code",ExpressionUUID->"b0af7283-f46a-4f8d-96a5-243d87017bd0"],
Cell[84159, 2289, 2746, 69, 377, "Code",ExpressionUUID->"07c56442-9200-48cd-877a-3ca14a40d794"],
Cell[86908, 2360, 1890, 47, 338, "Code",ExpressionUUID->"96accb3a-7d2d-432b-a697-4dc8df23471d"]
}, Closed]],
Cell[CellGroupData[{
Cell[88835, 2412, 117, 0, 38, "Subsection",ExpressionUUID->"3b9c09ba-98e2-48b6-b4f9-47bddd498ea3"],
Cell[88955, 2414, 3878, 98, 358, "Code",ExpressionUUID->"8fb05295-5368-4801-8f75-90c91dd21d9d"],
Cell[92836, 2514, 3051, 79, 319, "Code",ExpressionUUID->"bfb78ab0-7e13-41d2-9c85-b8b58449795e"]
}, Closed]],
Cell[CellGroupData[{
Cell[95924, 2598, 92, 0, 38, "Subsection",ExpressionUUID->"d37ea0da-1dee-450b-b972-925398878608"],
Cell[96019, 2600, 974, 26, 72, "Code",ExpressionUUID->"b8d9c7eb-bb3b-4146-ae25-dfe39c4117d6"]
}, Closed]],
Cell[CellGroupData[{
Cell[97030, 2631, 89, 0, 38, "Subsection",ExpressionUUID->"eadd1bf6-0132-4bb4-8f59-3c816e0f837e"],
Cell[97122, 2633, 8700, 215, 853, "Code",ExpressionUUID->"fac8421b-0907-4aa8-8985-486ee81d1798"],
Cell[105825, 2850, 6695, 155, 492, "Code",ExpressionUUID->"8adeae4f-37d5-4438-a96f-9fdde2cba2b1"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[112569, 3011, 107, 0, 53, "Section",ExpressionUUID->"65c5c4a8-5b60-4f27-b9e3-a8f1d4521cff"],
Cell[CellGroupData[{
Cell[112701, 3015, 92, 0, 54, "Subsection",ExpressionUUID->"5f09f453-d6f6-45f0-b27a-ac57613fc848"],
Cell[112796, 3017, 1365, 35, 186, "Code",ExpressionUUID->"1fd74222-6d18-4923-824c-6b8623c238a1"]
}, Closed]],
Cell[CellGroupData[{
Cell[114198, 3057, 107, 0, 38, "Subsection",ExpressionUUID->"3a62305e-7798-4811-a242-8c9fc5e4aa41"],
Cell[114308, 3059, 3284, 82, 452, "Code",ExpressionUUID->"bbfddab8-6ea8-4120-8eb4-f3216479642f"]
}, Closed]],
Cell[CellGroupData[{
Cell[117629, 3146, 113, 0, 38, "Subsection",ExpressionUUID->"fbf41453-ce16-449c-a7d8-392e16ddcde9"],
Cell[117745, 3148, 601, 13, 72, "Code",ExpressionUUID->"c5fa8e38-81f1-4e35-952b-a5bead4479e6"]
}, Closed]],
Cell[CellGroupData[{
Cell[118383, 3166, 91, 0, 38, "Subsection",ExpressionUUID->"c0a0b487-7f74-48f4-a1f1-dd679b5bc71d"],
Cell[118477, 3168, 2552, 69, 281, "Code",ExpressionUUID->"731da110-bc83-4f8d-b712-4e7c00d0e5ef"]
}, Closed]],
Cell[CellGroupData[{
Cell[121066, 3242, 108, 0, 38, "Subsection",ExpressionUUID->"50aaa118-7aeb-4322-877d-ed8c6a7663fa"],
Cell[121177, 3244, 1643, 39, 243, "Code",ExpressionUUID->"2d410e1a-3b13-4969-8633-a57c72f640aa"],
Cell[122823, 3285, 6787, 178, 700, "Code",ExpressionUUID->"0d89744f-504c-4c93-bb5d-2c78c8866bf1"],
Cell[129613, 3465, 8759, 230, 1061, "Code",ExpressionUUID->"517ca84f-1b48-4167-8dd8-f29e4a199c54"]
}, Closed]],
Cell[CellGroupData[{
Cell[138409, 3700, 88, 0, 38, "Subsection",ExpressionUUID->"770f6e84-4aa1-4881-9af0-1dcf176096a2"],
Cell[138500, 3702, 958, 26, 110, "Code",ExpressionUUID->"b367c3d5-d8eb-4e11-af07-dd6aca45cd64"],
Cell[139461, 3730, 5001, 126, 699, "Code",ExpressionUUID->"77a841d3-eaaf-4cec-a64e-ba0e1f59f1b1"],
Cell[144465, 3858, 8197, 212, 776, "Code",ExpressionUUID->"271ee591-97c5-48b0-9a63-744c8a95ef8b"]
}, Closed]],
Cell[CellGroupData[{
Cell[152699, 4075, 86, 0, 38, "Subsection",ExpressionUUID->"ab454d33-6f2f-4fae-b957-bc3f25e232d1"],
Cell[152788, 4077, 949, 26, 110, "Code",ExpressionUUID->"7aa32004-142e-4398-b75b-5f4e9b58bc92"],
Cell[153740, 4105, 5481, 136, 756, "Code",ExpressionUUID->"bddf89f6-b517-416e-b7e7-6e4fe168a0c1"],
Cell[159224, 4243, 8389, 217, 757, "Code",ExpressionUUID->"e8717162-81c3-408e-ac1b-17b556cd74ba"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[167662, 4466, 108, 0, 53, "Section",ExpressionUUID->"090ed141-5b45-4288-b0a6-e72427c2adbf"],
Cell[CellGroupData[{
Cell[167795, 4470, 116, 0, 54, "Subsection",ExpressionUUID->"412267ca-b4cd-4402-8196-31c933c269a3"],
Cell[167914, 4472, 2189, 60, 244, "Code",ExpressionUUID->"c5ef4898-ae43-4630-a76b-a197f145e229"],
Cell[170106, 4534, 990, 28, 72, "Code",ExpressionUUID->"7769768c-b235-4342-a445-0a19391ae513"],
Cell[171099, 4564, 805, 23, 52, "Code",ExpressionUUID->"d16c86aa-a6dd-47d8-88f1-defaf9598ff8"]
}, Closed]],
Cell[CellGroupData[{
Cell[171941, 4592, 90, 0, 38, "Subsection",ExpressionUUID->"f48760e0-20ae-4bdb-9fec-8e23ae133fad"],
Cell[172034, 4594, 3252, 84, 376, "Code",ExpressionUUID->"abbe108b-1bdd-4ca3-a30c-eb279fb340b4"],
Cell[175289, 4680, 876, 23, 72, "Code",ExpressionUUID->"64bb5b47-556a-4e46-8b4d-f51ef1d8a346"]
}, Closed]],
Cell[CellGroupData[{
Cell[176202, 4708, 93, 0, 38, "Subsection",ExpressionUUID->"901ddd13-737f-4e91-b19e-1ed99e5bece8"],
Cell[176298, 4710, 2899, 80, 377, "Code",ExpressionUUID->"70f625df-561a-4796-a043-b09f24c338ff"],
Cell[179200, 4792, 851, 23, 73, "Code",ExpressionUUID->"125d59ca-1967-4382-af1c-7ee3973c19c1"]
}, Closed]],
Cell[CellGroupData[{
Cell[180088, 4820, 93, 0, 38, "Subsection",ExpressionUUID->"bd42c6b1-50f7-4423-910c-2a3f51c02179"],
Cell[180184, 4822, 3473, 94, 435, "Code",ExpressionUUID->"44fd9c00-60de-4699-902e-26ccee16983e"],
Cell[183660, 4918, 1004, 27, 73, "Code",ExpressionUUID->"37afab49-8fac-4645-8358-cb2bfeee5c7f"]
}, Closed]],
Cell[CellGroupData[{
Cell[184701, 4950, 87, 0, 38, "Subsection",ExpressionUUID->"5fcbe626-6c14-44c5-bab9-9d2d729d4048"],
Cell[184791, 4952, 3026, 82, 263, "Code",ExpressionUUID->"a6ffe01d-8df3-4581-a8a3-67e15d54ebde"]
}, Closed]],
Cell[CellGroupData[{
Cell[187854, 5039, 88, 0, 38, "Subsection",ExpressionUUID->"7a538fa5-fa9c-4a14-a6d0-515b6a2afe6a"],
Cell[187945, 5041, 3256, 86, 319, "Code",ExpressionUUID->"c65134ac-4cdf-46d0-bd2a-6159fae14e73"]
}, Closed]],
Cell[CellGroupData[{
Cell[191238, 5132, 90, 0, 38, "Subsection",ExpressionUUID->"7c158d78-4fa5-4987-8d54-d4f45a2f6c7d"],
Cell[191331, 5134, 1191, 32, 205, "Code",ExpressionUUID->"32f57e85-ddf8-44d8-919a-9bb69ab25708"],
Cell[192525, 5168, 444, 12, 52, "Code",ExpressionUUID->"c0315f13-2705-44fb-a3d4-f24325b79ef7"]
}, Closed]],
Cell[CellGroupData[{
Cell[193006, 5185, 87, 0, 38, "Subsection",ExpressionUUID->"3aff73a6-10d2-421c-a3eb-3899330f45fd"],
Cell[193096, 5187, 2753, 71, 319, "Code",ExpressionUUID->"95bfe1df-9c1b-4d36-a1b9-02340e19ec89"],
Cell[195852, 5260, 571, 15, 52, "Code",ExpressionUUID->"cde68282-69ce-49d3-b164-4a4070393ff2"],
Cell[196426, 5277, 1039, 29, 129, "Code",ExpressionUUID->"39fbf181-116b-4086-9bf3-53d3e3e15741"]
}, Closed]],
Cell[CellGroupData[{
Cell[197502, 5311, 112, 0, 38, "Subsection",ExpressionUUID->"5c30eac8-b497-457e-83bc-5feee9c6f26e"],
Cell[197617, 5313, 5678, 160, 510, "Code",ExpressionUUID->"3b0edd43-f179-414d-aa01-523bd36dc076"],
Cell[203298, 5475, 6499, 179, 586, "Code",ExpressionUUID->"dc6fae3e-0250-465d-b252-f2807af8cf17"],
Cell[209800, 5656, 811, 22, 72, "Code",ExpressionUUID->"e71eaeac-52c8-47a5-808b-97451c4d3a99"]
}, Closed]],
Cell[CellGroupData[{
Cell[210648, 5683, 93, 0, 38, "Subsection",ExpressionUUID->"b8f26f8a-5bdb-43fa-a08b-35a62aaf9744"],
Cell[210744, 5685, 3168, 79, 263, "Code",ExpressionUUID->"ce93bed6-9de0-443b-9529-d0e43a83867e"],
Cell[213915, 5766, 458, 12, 52, "Code",ExpressionUUID->"a153f66e-388f-4c66-aec7-7137116edbba"]
}, Closed]],
Cell[CellGroupData[{
Cell[214410, 5783, 87, 0, 38, "Subsection",ExpressionUUID->"4b83baad-cf9c-4e33-a249-8b29b2e3b88f"],
Cell[214500, 5785, 1909, 54, 281, "Code",ExpressionUUID->"fe916ab9-6145-4201-b3c5-46c8bd2c8e48"]
}, Closed]],
Cell[CellGroupData[{
Cell[216446, 5844, 92, 0, 38, "Subsection",ExpressionUUID->"a36ef963-d8b7-466d-9028-89d0a83d022e"],
Cell[216541, 5846, 5671, 136, 510, "Code",ExpressionUUID->"0d644173-0919-476f-bf16-572cb8c77e51"]
}, Closed]],
Cell[CellGroupData[{
Cell[222249, 5987, 82, 0, 38, "Subsection",ExpressionUUID->"3ab5e732-329f-4489-88fd-99e349e91f19"],
Cell[222334, 5989, 2989, 74, 224, "Code",ExpressionUUID->"716f9373-6de2-4d61-b7b3-deac55ae485c"]
}, Closed]],
Cell[CellGroupData[{
Cell[225360, 6068, 97, 0, 38, "Subsection",ExpressionUUID->"b687de83-cd96-4c03-a6c5-674f5c438ade"],
Cell[225460, 6070, 357, 10, 52, "Code",ExpressionUUID->"76ffc6b0-1698-4435-a9f3-a8e4d85ac1ab"],
Cell[225820, 6082, 2583, 71, 300, "Code",ExpressionUUID->"ca5dc61d-eb9d-4c00-9924-201bee91a182"],
Cell[228406, 6155, 1625, 45, 167, "Code",ExpressionUUID->"721a18ca-3636-47ac-8ec2-4481f8e47919"],
Cell[230034, 6202, 2348, 57, 281, "Code",ExpressionUUID->"52292cab-859e-4526-ad11-c2375d158cee"],
Cell[232385, 6261, 2576, 64, 262, "Code",ExpressionUUID->"d24fd5c7-bb15-4547-9025-38b6386831cb"],
Cell[234964, 6327, 2629, 64, 262, "Code",ExpressionUUID->"2cf05f30-ea55-4528-b268-4f693ccc6344"]
}, Closed]],
Cell[CellGroupData[{
Cell[237630, 6396, 89, 0, 38, "Subsection",ExpressionUUID->"0fa84328-818f-4aa0-9af0-dd5dc45722ec"],
Cell[237722, 6398, 1308, 35, 110, "Code",ExpressionUUID->"230fde4b-20eb-4071-99aa-5c8ad4bd0f21"]
}, Closed]],
Cell[CellGroupData[{
Cell[239067, 6438, 108, 0, 38, "Subsection",ExpressionUUID->"43647b8f-478e-4e7c-9742-557e8dc9a078"],
Cell[239178, 6440, 483, 10, 72, "Code",ExpressionUUID->"a3217d07-b263-49db-8e2b-a299c78b318f"],
Cell[239664, 6452, 907, 24, 72, "Code",ExpressionUUID->"3334406d-4524-4f4f-9a1f-901b483ce449"],
Cell[240574, 6478, 867, 24, 72, "Code",ExpressionUUID->"59f86bc7-1124-49b0-b3e5-f21143d862bd"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[241490, 6508, 122, 0, 53, "Section",ExpressionUUID->"5e1bb1ba-4e01-41e6-bdeb-cab641c995ee"],
Cell[CellGroupData[{
Cell[241637, 6512, 88, 0, 54, "Subsection",ExpressionUUID->"cdd4da67-16db-4c3e-8fda-67bcde70c743"],
Cell[241728, 6514, 2852, 76, 319, "Code",ExpressionUUID->"f5ba25d8-abb2-4a17-9b94-d7776304b74e"]
}, Closed]],
Cell[CellGroupData[{
Cell[244617, 6595, 110, 0, 38, "Subsection",ExpressionUUID->"9ac8c75a-4c63-4e05-9934-61e116371563"],
Cell[244730, 6597, 1355, 37, 72, "Code",ExpressionUUID->"eb4d2ca6-bac8-46f2-bbd5-c654d47af440"]
}, Closed]],
Cell[CellGroupData[{
Cell[246122, 6639, 92, 0, 38, "Subsection",ExpressionUUID->"dea4a3c2-e7ee-4f47-bf96-66929b110d6a"],
Cell[246217, 6641, 1193, 32, 148, "Code",ExpressionUUID->"f646d260-5ae8-4d55-a107-8169291bb17e"],
Cell[247413, 6675, 3191, 84, 224, "Code",ExpressionUUID->"c50f0a14-a3b8-40a7-b419-0f2e1cacac84"]
}, Closed]],
Cell[CellGroupData[{
Cell[250641, 6764, 98, 0, 38, "Subsection",ExpressionUUID->"ee32cfa3-1677-497c-bcdd-41a18a8855c6"],
Cell[250742, 6766, 1940, 52, 148, "Code",ExpressionUUID->"c27dc3fd-0e9b-41f3-aae3-759f9af29b32"]
}, Closed]],
Cell[CellGroupData[{
Cell[252719, 6823, 123, 0, 38, "Subsection",ExpressionUUID->"cc530052-f836-4fca-b7ce-fe5da13a5e96"],
Cell[252845, 6825, 2562, 64, 205, "Code",ExpressionUUID->"c031031c-ffd7-4d83-bcd8-d42371a77d31"],
Cell[255410, 6891, 2456, 66, 243, "Code",ExpressionUUID->"41df8914-964f-4940-a28f-5ee27f20f2bd"]
}, Closed]],
Cell[CellGroupData[{
Cell[257903, 6962, 117, 0, 38, "Subsection",ExpressionUUID->"16160a14-4294-44e2-8cb4-421f6295e059"],
Cell[258023, 6964, 2443, 68, 281, "Code",ExpressionUUID->"f44a31c2-8b21-40ca-a115-2fd8da00a1b5"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[260515, 7038, 78, 0, 53, "Section",ExpressionUUID->"a96ef353-fd5d-425a-9621-3fe4e067febe"],
Cell[260596, 7040, 234, 7, 91, "Code",ExpressionUUID->"947147f2-f482-4741-a59e-b93ede67b4b9"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[260879, 7053, 124, 0, 69, "Chapter",ExpressionUUID->"95c9d13b-445a-4347-87a7-43f7db6e7a5f"],
Cell[261006, 7055, 196, 5, 52, "Code",ExpressionUUID->"ea0a7c8e-7cd5-49d0-8504-8949ad7ad62c"],
Cell[CellGroupData[{
Cell[261227, 7064, 142, 1, 45, "Subsubsection",ExpressionUUID->"6059f1c6-1fbe-45e0-aea7-add255709cee"],
Cell[261372, 7067, 2254, 58, 300, "Code",ExpressionUUID->"f81e2e99-8a33-43c6-9b07-9a18257ed9eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[263663, 7130, 79, 0, 53, "Section",ExpressionUUID->"648a6476-b797-42cf-8e5a-b9bc1a86e610"],
Cell[263745, 7132, 266, 7, 52, "Code",ExpressionUUID->"d786515a-d3bd-4718-b039-f280d0b9f02b"],
Cell[264014, 7141, 295, 7, 52, "Code",ExpressionUUID->"dbb93444-1867-4df8-88d7-4358e4ecd562"],
Cell[264312, 7150, 2410, 54, 281, "Code",ExpressionUUID->"7b3d57d2-d39e-4905-8b4b-bee6117e5212"],
Cell[266725, 7206, 3711, 84, 471, "Code",ExpressionUUID->"a1e26495-b179-4855-8335-4436fa78fd50"],
Cell[270439, 7292, 1013, 19, 167, "Code",ExpressionUUID->"684246ec-df06-4736-b3a7-7c0cdf468e9b"],
Cell[271455, 7313, 6995, 137, 965, "Code",ExpressionUUID->"20d4f0d9-5076-4185-aaa7-f1de3061bd9e"]
}, Closed]],
Cell[CellGroupData[{
Cell[278487, 7455, 98, 0, 53, "Section",ExpressionUUID->"6bc0fc48-688d-4ca9-bac5-3a6645a0cdb0"],
Cell[278588, 7457, 275, 7, 91, "Code",ExpressionUUID->"9f392912-8772-4657-8e12-0dfb8191735b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278900, 7469, 82, 0, 67, "Section",ExpressionUUID->"72e8028f-0cb2-4491-b4a5-832df78eed16"],
Cell[CellGroupData[{
Cell[279007, 7473, 91, 0, 54, "Subsection",ExpressionUUID->"e146d239-1c00-4935-9d62-733890aa073d"],
Cell[CellGroupData[{
Cell[279123, 7477, 92, 0, 45, "Subsubsection",ExpressionUUID->"96f25e17-0c46-43e8-aa86-a343cea151ab"],
Cell[279218, 7479, 337, 8, 127, "Text",ExpressionUUID->"670cccd5-509b-4823-88ac-ff6d4791b777"],
Cell[279558, 7489, 1431, 42, 243, "Code",ExpressionUUID->"fec86841-e1b9-407e-91ed-9bcd2389efbf"],
Cell[280992, 7533, 901, 25, 91, "Code",ExpressionUUID->"b7e701c3-de85-45c2-b52e-9aa223f1ec5f"]
}, Closed]],
Cell[CellGroupData[{
Cell[281930, 7563, 90, 0, 37, "Subsubsection",ExpressionUUID->"dda37c49-20b3-459d-9f34-72d989a2b391"],
Cell[282023, 7565, 877, 27, 72, "Code",ExpressionUUID->"1bd6f123-a777-4f1c-8846-573535afb17e"]
}, Closed]],
Cell[CellGroupData[{
Cell[282937, 7597, 92, 0, 37, "Subsubsection",ExpressionUUID->"d18ddbd8-a5e7-4d3b-9ec8-10b424233e6d"],
Cell[283032, 7599, 493, 15, 52, "Code",ExpressionUUID->"25764a05-dbcb-4169-9936-584628582a73"]
}, Closed]],
Cell[CellGroupData[{
Cell[283562, 7619, 94, 0, 37, "Subsubsection",ExpressionUUID->"cd0203ed-6145-429b-aebb-26a4b4acf7bb"],
Cell[283659, 7621, 552, 16, 52, "Code",ExpressionUUID->"f895924f-63bb-45d4-83c0-970509bfd0f0"],
Cell[284214, 7639, 639, 16, 72, "Code",ExpressionUUID->"6d2abede-f7b3-4efe-a204-8ff504e5f57a"],
Cell[284856, 7657, 2314, 62, 262, "Code",ExpressionUUID->"29675125-fd21-49ee-a583-93961cfab76f"],
Cell[287173, 7721, 1192, 32, 110, "Code",ExpressionUUID->"d4b93424-3000-4189-9724-831b1489b36f"],
Cell[288368, 7755, 3563, 103, 319, "Code",ExpressionUUID->"27e614a4-c2a8-4940-82ad-70b2babd1e0b"],
Cell[291934, 7860, 1039, 29, 110, "Code",ExpressionUUID->"83a6385c-2f36-459e-ab9c-3f8d635ded07"],
Cell[292976, 7891, 2386, 65, 300, "Code",ExpressionUUID->"585ee08c-5fa7-4a7a-a1a7-81f1a9c49466"],
Cell[295365, 7958, 969, 28, 167, "Code",ExpressionUUID->"116e6b48-0fa9-4e1e-a4a5-b2b73fb8e94b"],
Cell[296337, 7988, 575, 17, 52, "Code",ExpressionUUID->"84134194-be7e-4a2f-8524-d78dc34bcbf5"],
Cell[296915, 8007, 581, 15, 72, "Code",ExpressionUUID->"396a376e-926c-47c4-bbd5-12e1440db841"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[297545, 8028, 129, 0, 38, "Subsection",ExpressionUUID->"76374e09-15c0-4285-9873-5b1119f9fbac"],
Cell[297677, 8030, 1556, 41, 281, "Code",ExpressionUUID->"c9b1dabe-f4f7-4958-94d5-a03d27395cf8"],
Cell[299236, 8073, 432, 11, 52, "Code",ExpressionUUID->"7d002678-a532-4bcd-912e-4ff0e5ae48d3"],
Cell[299671, 8086, 1339, 34, 262, "Code",ExpressionUUID->"e8c7d67f-6f52-4ba0-8e76-ccc48f493943"]
}, Closed]],
Cell[CellGroupData[{
Cell[301047, 8125, 112, 0, 38, "Subsection",ExpressionUUID->"1c2c98d9-43ff-4040-a5e0-cf72764ae01b"],
Cell[301162, 8127, 684, 16, 148, "Code",ExpressionUUID->"3068d1eb-a6e1-4120-bfef-ce9fb71e3216"],
Cell[301849, 8145, 540, 14, 129, "Code",ExpressionUUID->"bc5f153c-22ea-4998-8d43-5354d3958a35"]
}, Closed]],
Cell[CellGroupData[{
Cell[302426, 8164, 88, 0, 38, "Subsection",ExpressionUUID->"d44581db-3241-4500-8895-4f9310373c63"],
Cell[302517, 8166, 657, 17, 148, "Code",ExpressionUUID->"8ed6dc61-9ce7-4391-adff-956d7a772019"],
Cell[303177, 8185, 2156, 63, 300, "Code",ExpressionUUID->"62bac1ef-cbd7-4818-bad8-b32d8a0b8cfd"]
}, Closed]],
Cell[CellGroupData[{
Cell[305370, 8253, 117, 0, 38, "Subsection",ExpressionUUID->"0cde69d0-d061-4888-b804-bc8f12ee2607"],
Cell[305490, 8255, 1892, 50, 225, "Code",ExpressionUUID->"69971570-a0ce-4443-96f9-ac9ac653df50"],
Cell[307385, 8307, 1665, 44, 206, "Code",ExpressionUUID->"3546c726-a156-4c7c-afab-f6a3f846e262"]
}, Closed]],
Cell[CellGroupData[{
Cell[309087, 8356, 101, 0, 38, "Subsection",ExpressionUUID->"2b820542-dab3-4d0b-9a97-bb3be4d7c4e1"],
Cell[309191, 8358, 3624, 96, 377, "Code",ExpressionUUID->"96b5897b-36e7-417b-89ca-fc4131507b09"]
}, Closed]],
Cell[CellGroupData[{
Cell[312852, 8459, 147, 2, 38, "Subsection",ExpressionUUID->"92648dd9-fe4b-4454-a084-c84bea5c6cb4"],
Cell[313002, 8463, 1347, 34, 186, "Code",ExpressionUUID->"1bb5502e-b3ac-4710-8ff9-b19fa098d1c7"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[314398, 8503, 108, 0, 67, "Section",ExpressionUUID->"fdebde89-31c1-40e0-a115-f68ade3f301b"],
Cell[CellGroupData[{
Cell[314531, 8507, 112, 0, 54, "Subsection",ExpressionUUID->"993c23a1-4278-4cf3-9ea0-d4f96b7da186"],
Cell[314646, 8509, 530, 15, 52, "Code",ExpressionUUID->"bf84e85d-32d1-4c19-9b38-a35d433a0119"],
Cell[315179, 8526, 2346, 59, 281, "Code",ExpressionUUID->"6ea34ad2-a148-45ae-aa93-a48d3d461e82"]
}, Closed]],
Cell[CellGroupData[{
Cell[317562, 8590, 169, 3, 38, "Subsection",ExpressionUUID->"6f392222-bf5b-4961-95a1-f64ae3271739"],
Cell[317734, 8595, 1103, 30, 110, "Code",ExpressionUUID->"a5ac437a-ac13-4dcc-937b-78f37d29cde8"],
Cell[318840, 8627, 1365, 41, 110, "Code",ExpressionUUID->"d5b5a4b2-1d6e-49b3-81b5-095c109c65b1"],
Cell[320208, 8670, 1383, 39, 110, "Code",ExpressionUUID->"b9a5f3ca-82c9-4e0e-b0f1-f8a346553919"]
}, Closed]],
Cell[CellGroupData[{
Cell[321628, 8714, 105, 0, 38, "Subsection",ExpressionUUID->"702d28ea-9096-4e71-ab44-fc7989355b93"],
Cell[321736, 8716, 1419, 38, 110, "Code",ExpressionUUID->"cc24f4ca-ba03-4371-9cf3-0b9712ccd804"],
Cell[323158, 8756, 954, 24, 129, "Code",ExpressionUUID->"e7080ce3-2904-4c72-bd09-95058f237fa4"]
}, Closed]],
Cell[CellGroupData[{
Cell[324149, 8785, 100, 0, 38, "Subsection",ExpressionUUID->"55d1c213-4bb2-4451-ba1c-fdc21c15bcf2"],
Cell[324252, 8787, 457, 12, 52, "Code",ExpressionUUID->"b074e873-e000-444e-bfd3-912d2da5f9f6"]
}, Closed]],
Cell[CellGroupData[{
Cell[324746, 8804, 134, 0, 38, "Subsection",ExpressionUUID->"3f58e51a-22ea-423b-a461-52f70b313601"],
Cell[324883, 8806, 5830, 179, 549, "Code",ExpressionUUID->"962d6ed6-55b6-443c-89ca-3f41ecb08743"]
}, Closed]],
Cell[CellGroupData[{
Cell[330750, 8990, 113, 0, 38, "Subsection",ExpressionUUID->"8f391a10-04f2-4ed7-aea1-145efce6a5b2"],
Cell[330866, 8992, 4559, 117, 547, "Code",ExpressionUUID->"fc8e80b7-f492-45a8-ad2d-80d222d7c4ab"]
}, Closed]],
Cell[CellGroupData[{
Cell[335462, 9114, 98, 0, 38, "Subsection",ExpressionUUID->"5ef4575d-ff53-410b-b2dc-0721806c9003"],
Cell[335563, 9116, 4512, 114, 623, "Code",ExpressionUUID->"e2d65e56-4673-4c8e-8227-2994bb1c0619"],
Cell[340078, 9232, 1844, 47, 262, "Code",ExpressionUUID->"097af00b-cd95-484d-a8cd-bcd98c53194e"],
Cell[341925, 9281, 8880, 225, 891, "Code",ExpressionUUID->"eb2c692b-8016-46c8-9bbf-9494375f1de4"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[350854, 9512, 93, 0, 67, "Section",ExpressionUUID->"6c87b55b-aadb-402e-9eef-99119af5b41f"],
Cell[CellGroupData[{
Cell[350972, 9516, 101, 0, 54, "Subsection",ExpressionUUID->"60e056ed-a16c-4841-8b4b-dde35c6dcbd9"],
Cell[351076, 9518, 2657, 70, 395, "Code",ExpressionUUID->"894f0b58-5723-4d0e-809d-4ee4d9dc3d49"],
Cell[353736, 9590, 3998, 104, 414, "Code",ExpressionUUID->"b2e7dc4a-fb6d-44f9-b0b0-6d6b222a28ee"],
Cell[357737, 9696, 3205, 80, 243, "Code",ExpressionUUID->"b9b089d6-add9-4269-87bb-d50c23ee1f14"],
Cell[360945, 9778, 3491, 80, 414, "Code",ExpressionUUID->"05b7ff90-ba72-4264-910c-7dcce83fa5b1"]
}, Closed]],
Cell[CellGroupData[{
Cell[364473, 9863, 95, 0, 38, "Subsection",ExpressionUUID->"a08fec2b-4c6d-4ec5-a6c9-19108d52a205"],
Cell[364571, 9865, 4122, 107, 357, "Code",ExpressionUUID->"ffd7ea39-a364-44f4-94e2-69aab71ecae0"],
Cell[368696, 9974, 416, 11, 72, "Code",ExpressionUUID->"f855b1b9-6eff-4966-88ee-3d609bef8039"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[369161, 9991, 82, 0, 67, "Section",ExpressionUUID->"7efcf6d8-4de1-4a1a-8c78-769edd726844"],
Cell[CellGroupData[{
Cell[369268, 9995, 101, 0, 54, "Subsection",ExpressionUUID->"c6c03fa0-3229-4dd7-afc5-2a195b6c78d6"],
Cell[CellGroupData[{
Cell[369394, 9999, 100, 0, 45, "Subsubsection",ExpressionUUID->"4e2ed6ef-c949-4a3f-abd2-7e4ee843fa95"],
Cell[369497, 10001, 2675, 74, 224, "Code",ExpressionUUID->"17b69bef-e499-4349-baa1-daabc117b244"],
Cell[372175, 10077, 2253, 64, 262, "Code",ExpressionUUID->"b3dd01b3-e2b3-4f86-9379-bb750cf02b0f"]
}, Closed]],
Cell[CellGroupData[{
Cell[374465, 10146, 100, 0, 37, "Subsubsection",ExpressionUUID->"ee4062c6-055d-4d98-aa31-c01db58958d2"],
Cell[374568, 10148, 3540, 97, 281, "Code",ExpressionUUID->"4bd86452-df2c-49a9-85be-4186d23886da"],
Cell[378111, 10247, 2720, 67, 414, "Code",ExpressionUUID->"47d503bb-80a8-46f4-adfd-d8e28cca427f"]
}, Closed]],
Cell[CellGroupData[{
Cell[380868, 10319, 107, 0, 37, "Subsubsection",ExpressionUUID->"6e26983a-185e-44bf-ac51-16107024bc44"],
Cell[380978, 10321, 3617, 97, 281, "Code",ExpressionUUID->"d6b7fefc-3c97-48b6-aa3b-634122a7326d"],
Cell[384598, 10420, 2587, 65, 395, "Code",ExpressionUUID->"b38f48e1-50f8-461b-954a-16c4e8e83427"]
}, Closed]],
Cell[CellGroupData[{
Cell[387222, 10490, 94, 0, 37, "Subsubsection",ExpressionUUID->"53909e4a-e9b3-4b91-ba43-6442595c2658"],
Cell[387319, 10492, 3758, 101, 319, "Code",ExpressionUUID->"fe12d61c-c2b8-41f3-93cc-6879d3615206"],
Cell[391080, 10595, 8892, 204, 699, "Code",ExpressionUUID->"c0d5a99a-fc74-4eed-a096-7b22190d0c1a"],
Cell[399975, 10801, 7188, 175, 680, "Code",ExpressionUUID->"f1f67da6-685b-4863-a6e5-867dca6d7d71"]
}, Closed]],
Cell[CellGroupData[{
Cell[407200, 10981, 94, 0, 37, "Subsubsection",ExpressionUUID->"7f555d7d-65ac-41d9-b354-767dbfdea267"],
Cell[407297, 10983, 4443, 123, 319, "Code",ExpressionUUID->"383dd186-4709-4e0c-bd04-18a0c8d007c9"],
Cell[411743, 11108, 28471, 680, 2599, "Code",ExpressionUUID->"457f1a6d-3d7b-48cc-9239-8e3f57cf5799"]
}, Closed]],
Cell[CellGroupData[{
Cell[440251, 11793, 93, 0, 37, "Subsubsection",ExpressionUUID->"e1b81da1-dbc7-4247-b5fd-7c771260b4c4"],
Cell[440347, 11795, 2730, 74, 224, "Code",ExpressionUUID->"39e4fbce-94cb-4ec1-909a-9be6211b734a"],
Cell[443080, 11871, 895, 26, 72, "Code",ExpressionUUID->"c161f406-b316-4337-bc62-09fbc7236f0c"],
Cell[443978, 11899, 9260, 214, 680, "Code",ExpressionUUID->"6969d9a9-f29e-49b1-bd28-24b1e249bfb5"],
Cell[453241, 12115, 3159, 84, 281, "Code",ExpressionUUID->"6e37a092-e53a-4e96-9b44-eafeab8280a0"],
Cell[456403, 12201, 2388, 65, 281, "Code",ExpressionUUID->"eefa33f0-9487-482a-a9f9-75992e7dc134"]
}, Closed]],
Cell[CellGroupData[{
Cell[458828, 12271, 91, 0, 37, "Subsubsection",ExpressionUUID->"43186013-f54c-4925-b767-89869d60a75b"],
Cell[458922, 12273, 5279, 147, 471, "Code",ExpressionUUID->"105425f9-6faa-403b-bf41-cd3b92587bc2"],
Cell[464204, 12422, 19332, 477, 832, "Code",ExpressionUUID->"af3fed59-5075-43ec-8a7e-0533187360f0"]
}, Closed]],
Cell[CellGroupData[{
Cell[483573, 12904, 99, 0, 37, "Subsubsection",ExpressionUUID->"0f8d50f1-afcc-44d1-b384-6e361cf93302"],
Cell[483675, 12906, 2275, 61, 186, "Code",ExpressionUUID->"c2dc76eb-f1f2-4627-94b2-322d01f7c229"],
Cell[485953, 12969, 2227, 60, 281, "Code",ExpressionUUID->"983639bb-e7ad-4ed8-a16b-1a1e153cc30e"],
Cell[488183, 13031, 6897, 148, 452, "Code",ExpressionUUID->"4da8bcf9-f7fc-4baa-a7fe-2d419e79ddc2"],
Cell[495083, 13181, 754, 23, 72, "Code",ExpressionUUID->"856f48e0-31e2-4ceb-a592-f7ee2ce95867"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[495886, 13210, 102, 0, 54, "Subsection",ExpressionUUID->"cb0705f5-6ee7-42ce-bd98-337ea66e1bcf"],
Cell[CellGroupData[{
Cell[496013, 13214, 122, 0, 45, "Subsubsection",ExpressionUUID->"936edf7f-020a-47a7-9d2d-d59ca5691bea"],
Cell[496138, 13216, 1479, 37, 129, "Code",ExpressionUUID->"8d08c533-5aca-4c92-9115-3251c5110c59"],
Cell[497620, 13255, 1303, 32, 110, "Code",ExpressionUUID->"0cd90e14-bdd3-4e77-87ae-322091a59501"],
Cell[498926, 13289, 11150, 280, 870, "Code",ExpressionUUID->"414a48f8-0460-4f16-beb3-5304ae31782f"]
}, Closed]],
Cell[CellGroupData[{
Cell[510113, 13574, 92, 0, 37, "Subsubsection",ExpressionUUID->"ad1bcf64-cd10-4ca6-b1cc-585d731370c7"],
Cell[510208, 13576, 5880, 155, 395, "Code",ExpressionUUID->"2b8c3072-deb2-4963-8d04-f459f5914cdd"]
}, Closed]],
Cell[CellGroupData[{
Cell[516125, 13736, 96, 0, 37, "Subsubsection",ExpressionUUID->"8cce2016-734e-42f2-be2b-cbdd076c933d"],
Cell[516224, 13738, 615, 16, 72, "Code",ExpressionUUID->"a044e23e-1cf7-439c-8988-ba19bc69562f"]
}, Closed]],
Cell[CellGroupData[{
Cell[516876, 13759, 95, 0, 37, "Subsubsection",ExpressionUUID->"82b83af1-364d-4441-ac6f-7d4ab9c93140"],
Cell[516974, 13761, 1035, 26, 129, "Code",ExpressionUUID->"24754796-afb7-45a3-8951-4a536a4a06ac"]
}, Closed]],
Cell[CellGroupData[{
Cell[518046, 13792, 94, 0, 37, "Subsubsection",ExpressionUUID->"40634b5d-5042-457b-b993-97b346712759"],
Cell[518143, 13794, 1030, 27, 129, "Code",ExpressionUUID->"7a361400-0ab0-480a-8540-923e7b45dae0"]
}, Closed]],
Cell[CellGroupData[{
Cell[519210, 13826, 94, 0, 37, "Subsubsection",ExpressionUUID->"b14c81ad-57f2-4d31-b5c8-6ba50d536466"],
Cell[519307, 13828, 632, 17, 72, "Code",ExpressionUUID->"b4b8b7fc-0ce5-405c-bfdc-ceda27c196cd"]
}, Closed]],
Cell[CellGroupData[{
Cell[519976, 13850, 93, 0, 37, "Subsubsection",ExpressionUUID->"5aef37b4-8e7e-4e78-8436-4ba089791318"],
Cell[520072, 13852, 621, 16, 72, "Code",ExpressionUUID->"17113e68-20ca-4fc5-b9c9-b00d33e0fb3d"]
}, Closed]],
Cell[CellGroupData[{
Cell[520730, 13873, 96, 0, 37, "Subsubsection",ExpressionUUID->"51d396bd-59b9-41b5-8132-3e59ac3c087f"],
Cell[520829, 13875, 499, 12, 72, "Code",ExpressionUUID->"39a0c5e5-34c0-48f6-8ad7-a3093cefd676"]
}, Closed]],
Cell[CellGroupData[{
Cell[521365, 13892, 120, 0, 37, "Subsubsection",ExpressionUUID->"72d58bed-db3c-4a7d-9208-04f5cef0b41d"],
Cell[521488, 13894, 625, 16, 72, "Code",ExpressionUUID->"ef666df7-d4d4-42ba-a742-668ead4cc0eb"],
Cell[522116, 13912, 649, 16, 72, "Code",ExpressionUUID->"00cc8537-555f-44c2-a479-a17ad44530f5"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[522826, 13935, 89, 0, 67, "Section",ExpressionUUID->"1057eff9-5f17-4068-acc7-4bffd91fc573"],
Cell[CellGroupData[{
Cell[522940, 13939, 105, 0, 54, "Subsection",ExpressionUUID->"570218bd-49b5-4ca4-b546-bea8c4815be7"],
Cell[523048, 13941, 188, 3, 35, "Text",ExpressionUUID->"7de08b25-a660-4064-8f9f-9c0584610130"],
Cell[523239, 13946, 3521, 84, 452, "Code",ExpressionUUID->"8fc21ec3-bd31-48c7-99a9-e6f2bd594953"],
Cell[526763, 14032, 2101, 55, 357, "Code",ExpressionUUID->"8ac23fb1-7284-4a34-87b9-593e96f3af72"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[528913, 14093, 78, 0, 67, "Section",ExpressionUUID->"6e6b1080-8143-41c2-bf56-a613ed97817c"],
Cell[528994, 14095, 234, 7, 91, "Code",ExpressionUUID->"f4f9e795-777e-433c-97fa-0aa5d3bb0d3a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[529277, 14108, 125, 0, 58, "Chapter",ExpressionUUID->"b2dba352-41ac-4c41-8cd0-89374938bec7"],
Cell[529405, 14110, 196, 5, 52, "Code",ExpressionUUID->"b82d541f-dac9-4957-9bce-6f05e2b763c2"],
Cell[CellGroupData[{
Cell[529626, 14119, 79, 0, 67, "Section",ExpressionUUID->"73915429-1494-4af5-b0a0-500eb7ba478d"],
Cell[529708, 14121, 1305, 29, 224, "Code",ExpressionUUID->"d062486e-3334-4371-b057-cc402806a5aa"],
Cell[531016, 14152, 455, 9, 72, "Code",ExpressionUUID->"54d13d81-bc52-43f3-b92b-77ecb238a8aa"],
Cell[531474, 14163, 2437, 50, 395, "Code",ExpressionUUID->"d3d232a2-d2f0-4edd-811a-e6bfe8f464d3"],
Cell[533914, 14215, 2330, 47, 452, "Code",ExpressionUUID->"9f3c6bc3-e1f2-404a-b458-b61b234f2a0c"],
Cell[536247, 14264, 6620, 117, 547, "Code",ExpressionUUID->"26ac018e-d3cd-4b8e-8be3-ef6964a705fa"],
Cell[542870, 14383, 3358, 56, 281, "Code",ExpressionUUID->"b5932bf9-eb16-4733-95a2-c0d28cbc74eb"],
Cell[546231, 14441, 303, 7, 52, "Code",ExpressionUUID->"7b07195b-81ae-4c6b-b53b-c12da7b91d15"]
}, Closed]],
Cell[CellGroupData[{
Cell[546571, 14453, 85, 0, 53, "Section",ExpressionUUID->"8a9e5486-2df6-4b93-9dc2-b554504ae96d"],
Cell[546659, 14455, 364, 10, 110, "Code",ExpressionUUID->"e1d9d711-2332-45c6-b149-b767382b3d44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547060, 14470, 100, 0, 67, "Section",ExpressionUUID->"9fbb1e8d-4aff-41c8-a1c6-577a2f9fb10e"],
Cell[CellGroupData[{
Cell[547185, 14474, 92, 0, 54, "Subsection",ExpressionUUID->"99d232f2-b91d-458c-a3db-d922760b95e4"],
Cell[547280, 14476, 1381, 36, 205, "Code",ExpressionUUID->"acfcd0c2-af8a-418c-a3d7-96424de01343"]
}, Closed]],
Cell[CellGroupData[{
Cell[548698, 14517, 97, 0, 38, "Subsection",ExpressionUUID->"1dfd8d13-1b68-4298-a629-f270fa825602"],
Cell[548798, 14519, 1472, 37, 129, "Code",ExpressionUUID->"c096df45-35d7-4194-bb7d-c685fc4d292d"]
}, Closed]],
Cell[CellGroupData[{
Cell[550307, 14561, 94, 0, 38, "Subsection",ExpressionUUID->"8488fe5a-cff7-4dfa-ac4b-5654c56b2c7f"],
Cell[550404, 14563, 2764, 78, 262, "Code",ExpressionUUID->"379532fc-ab3b-4100-8b5e-6183b7f55947"],
Cell[553171, 14643, 4871, 134, 585, "Code",ExpressionUUID->"2e6066e1-9346-4cd8-aed9-3d85923df3d3"],
Cell[558045, 14779, 1109, 29, 205, "Code",ExpressionUUID->"1215db5f-4226-4914-976f-95e9ec2bdd56"]
}, Closed]],
Cell[CellGroupData[{
Cell[559191, 14813, 122, 0, 38, "Subsection",ExpressionUUID->"ad6ad24c-4f7b-4beb-92a1-ed99eb40f1e7"],
Cell[559316, 14815, 3186, 82, 395, "Code",ExpressionUUID->"47297589-ee37-43ff-bf7f-7c152204d265"],
Cell[562505, 14899, 2566, 63, 300, "Code",ExpressionUUID->"11766d39-10ef-4cf6-927c-a440d6c8c708"]
}, Closed]],
Cell[CellGroupData[{
Cell[565108, 14967, 190, 3, 38, "Subsection",ExpressionUUID->"af2c53f5-a9de-4109-a13f-82f175ddf7f2"],
Cell[565301, 14972, 2010, 53, 186, "Code",ExpressionUUID->"db6a5df8-19c5-4bab-8ac6-3147ffb02c54"],
Cell[567314, 15027, 5375, 122, 775, "Code",ExpressionUUID->"b298e006-af04-4d16-996b-24e3bd33eb73"],
Cell[572692, 15151, 2233, 55, 281, "Code",ExpressionUUID->"d950c243-7cbd-4fa7-9959-4787123d60ec"]
}, Closed]],
Cell[CellGroupData[{
Cell[574962, 15211, 93, 0, 38, "Subsection",ExpressionUUID->"05958150-2753-49a1-bcff-ad04e453151c"],
Cell[575058, 15213, 3857, 110, 471, "Code",ExpressionUUID->"5e7cf034-611a-4000-a371-7ce6fd7d8af1"]
}, Closed]],
Cell[CellGroupData[{
Cell[578952, 15328, 94, 0, 38, "Subsection",ExpressionUUID->"8bb00a64-b11b-49dc-8019-90801a7f898c"],
Cell[579049, 15330, 1104, 30, 186, "Code",ExpressionUUID->"d5b77de4-6377-4475-99bc-9c004e543f84"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[580202, 15366, 105, 0, 67, "Section",ExpressionUUID->"be412990-58f1-4e3c-bc6b-ba37fa0aa38e"],
Cell[CellGroupData[{
Cell[580332, 15370, 90, 0, 54, "Subsection",ExpressionUUID->"a7008bb2-24cc-448f-8adf-7c2a22dda581"],
Cell[580425, 15372, 2365, 66, 452, "Code",ExpressionUUID->"950dff22-28f0-4fb2-a83f-4d38bd914428"]
}, Closed]],
Cell[CellGroupData[{
Cell[582827, 15443, 96, 0, 38, "Subsection",ExpressionUUID->"544c5086-1df8-4504-beb9-cdd9287aa475"],
Cell[582926, 15445, 7718, 181, 642, "Code",ExpressionUUID->"1ff66576-f1b4-46d1-9239-013556c9f5eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[590681, 15631, 104, 0, 38, "Subsection",ExpressionUUID->"e5fb46ed-8d91-476b-90c1-a5a692e9c7b6"],
Cell[590788, 15633, 7757, 182, 623, "Code",ExpressionUUID->"c1058285-daa4-49c3-b6e6-cf523195583e"]
}, Closed]],
Cell[CellGroupData[{
Cell[598582, 15820, 86, 0, 38, "Subsection",ExpressionUUID->"1d6849e4-8a93-416b-9629-816a8d713505"],
Cell[598671, 15822, 4188, 118, 376, "Code",ExpressionUUID->"83cf1a8f-e72b-4988-9fbc-31a4ee901dc2"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[602908, 15946, 98, 0, 67, "Section",ExpressionUUID->"a179735a-0e92-4be5-8c11-2f14787a7022"],
Cell[CellGroupData[{
Cell[603031, 15950, 87, 0, 54, "Subsection",ExpressionUUID->"9f7f7300-e093-4608-bdc0-515eb88529f0"],
Cell[603121, 15952, 5340, 141, 644, "Code",ExpressionUUID->"5878e7b9-caab-42ce-baf5-731a64551fce"],
Cell[608464, 16095, 8413, 221, 984, "Code",ExpressionUUID->"3255d63f-811d-4016-b5d6-658930f74cf7"]
}, Closed]],
Cell[CellGroupData[{
Cell[616914, 16321, 98, 0, 38, "Subsection",ExpressionUUID->"b7156b33-cb6c-4b74-aacf-f98656168e47"],
Cell[617015, 16323, 4677, 119, 568, "Code",ExpressionUUID->"b0b15184-d1a1-457a-8b95-c43845ad02d9"],
Cell[621695, 16444, 2968, 66, 415, "Code",ExpressionUUID->"1541376a-e966-4f59-8e04-b3265424a372"],
Cell[CellGroupData[{
Cell[624688, 16514, 104, 0, 45, "Subsubsection",ExpressionUUID->"8eb12589-13d0-4db1-8d82-5a7f3627cf24"],
Cell[624795, 16516, 986, 25, 110, "Code",ExpressionUUID->"d23ba088-27d1-4486-af97-c5061397f6ff"],
Cell[625784, 16543, 1470, 37, 110, "Code",ExpressionUUID->"782ed89f-bdb4-4a7a-8b66-41dc46d0a1a5"],
Cell[627257, 16582, 919, 22, 110, "Code",ExpressionUUID->"cca4c994-4bdb-4262-8a73-59346334dcf8"],
Cell[628179, 16606, 1894, 45, 300, "Code",ExpressionUUID->"45528231-7bba-4542-a290-17553f1ce429"],
Cell[630076, 16653, 225, 6, 52, "Code",ExpressionUUID->"49ff6c33-b326-4e81-9f7f-58b38ecac55a"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[630350, 16665, 94, 0, 38, "Subsection",ExpressionUUID->"534dfc5d-c63b-4c6e-ba63-758d27e8d0e1"],
Cell[630447, 16667, 5045, 138, 661, "Code",ExpressionUUID->"f995f568-5603-423b-b92c-73f086e5526e"],
Cell[635495, 16807, 7709, 204, 832, "Code",ExpressionUUID->"b05402af-776c-4acb-bfe9-c46f1bc36e1e"]
}, Closed]],
Cell[CellGroupData[{
Cell[643241, 17016, 102, 0, 38, "Subsection",ExpressionUUID->"fdb08a27-d392-4708-8d7c-e22a50d18359"],
Cell[CellGroupData[{
Cell[643368, 17020, 120, 0, 45, "Subsubsection",ExpressionUUID->"043fba01-a9ed-4a37-9182-6e60ca559505"],
Cell[643491, 17022, 1249, 32, 243, "Code",ExpressionUUID->"066adf50-6828-4aea-a6bb-c6afb7d98a82"],
Cell[644743, 17056, 1942, 58, 148, "Code",ExpressionUUID->"ce6d6f2c-48d8-4ec7-ade0-2516669648a1"]
}, Closed]],
Cell[CellGroupData[{
Cell[646722, 17119, 151, 2, 37, "Subsubsection",ExpressionUUID->"60e19505-c58d-41b9-83e1-93382c6b5f0e"],
Cell[646876, 17123, 912, 24, 129, "Code",ExpressionUUID->"012050bf-af43-467f-8c4c-ab008faf4d1a"]
}, Closed]],
Cell[CellGroupData[{
Cell[647825, 17152, 105, 0, 37, "Subsubsection",ExpressionUUID->"bc228997-732f-4570-80d8-fa2b9bd50f25"],
Cell[647933, 17154, 438, 11, 52, "Code",ExpressionUUID->"b21c5234-5bbb-457a-92fc-46ee4c5f0e27"],
Cell[648374, 17167, 2102, 54, 224, "Code",ExpressionUUID->"7b32ddb1-db56-4cb0-9b8d-da5ec6e9a55b"],
Cell[650479, 17223, 1744, 42, 338, "Code",ExpressionUUID->"a5364f25-eff6-4acb-91ec-f48e03bebed9"],
Cell[652226, 17267, 2342, 62, 357, "Code",ExpressionUUID->"92ffeed0-c3d9-4161-bdf3-36b3e40fc494"],
Cell[654571, 17331, 2449, 65, 357, "Code",ExpressionUUID->"fc66d059-3816-4b04-a69b-80ebdc0fcb74"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[657081, 17403, 88, 0, 67, "Section",ExpressionUUID->"333eb685-a2c4-4c84-bd5e-8615e1631051"],
Cell[CellGroupData[{
Cell[657194, 17407, 95, 0, 54, "Subsection",ExpressionUUID->"7175c9bb-4b34-456a-961e-4df84c76e52c"],
Cell[657292, 17409, 8648, 211, 908, "Code",ExpressionUUID->"d218d248-ce20-48a5-af65-68e0c4272cc5"]
}, Closed]],
Cell[CellGroupData[{
Cell[665977, 17625, 104, 0, 38, "Subsection",ExpressionUUID->"5ea20f50-81a4-427a-bc68-378f73dcb50b"],
Cell[666084, 17627, 4203, 111, 376, "Code",ExpressionUUID->"ae1e713b-def1-4284-a80c-7c15c0aec447"],
Cell[670290, 17740, 3790, 98, 319, "Code",ExpressionUUID->"84c86739-b364-471a-beae-96cff8470e91"]
}, Closed]],
Cell[CellGroupData[{
Cell[674117, 17843, 91, 0, 38, "Subsection",ExpressionUUID->"3fdd0cdc-6a5f-4e8e-92b2-1a97ac4fb176"],
Cell[674211, 17845, 6065, 141, 737, "Code",ExpressionUUID->"bb3a7d49-4ce8-41fc-b235-752e697856ab"]
}, Closed]],
Cell[CellGroupData[{
Cell[680313, 17991, 99, 0, 38, "Subsection",ExpressionUUID->"4943eeb1-0a06-427a-8438-0fa94c25262d"],
Cell[680415, 17993, 496, 14, 52, "Code",ExpressionUUID->"b649267b-3eb7-488c-aa47-6711a6ebdcc9"],
Cell[680914, 18009, 2768, 70, 377, "Code",ExpressionUUID->"83a592c0-4483-4c46-8440-5e3cfc26f34a"],
Cell[683685, 18081, 822, 22, 110, "Code",ExpressionUUID->"52dcd2cd-c194-44c3-a973-37f1d0ee3ac9"],
Cell[684510, 18105, 4886, 117, 756, "Code",ExpressionUUID->"b327d84b-f6fd-4e10-a64a-483813cf0a29"],
Cell[689399, 18224, 6484, 165, 623, "Code",ExpressionUUID->"acf53775-617a-4c64-abce-1ca8d0a00a98"],
Cell[695886, 18391, 1226, 31, 224, "Code",ExpressionUUID->"cc158a20-c3f3-4d03-9644-fc087c2118ee"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[697161, 18428, 93, 0, 67, "Section",ExpressionUUID->"3a07a406-3a93-4f1d-9018-62647c8f04a2"],
Cell[CellGroupData[{
Cell[697279, 18432, 93, 0, 54, "Subsection",ExpressionUUID->"73422a9f-f78f-40d0-b5cf-0b9ca1818700"],
Cell[697375, 18434, 1106, 31, 148, "Code",ExpressionUUID->"3e97a0de-a970-4d5c-ab00-d0691ecf3e87"],
Cell[698484, 18467, 2512, 61, 357, "Code",ExpressionUUID->"cad7656e-ac79-4b74-bd8a-9e72c0644b19"],
Cell[CellGroupData[{
Cell[701021, 18532, 151, 2, 45, "Subsubsection",ExpressionUUID->"ce099429-1333-43b9-b495-fa2b90f21605"],
Cell[701175, 18536, 3698, 93, 357, "Code",ExpressionUUID->"9357dc4e-c4b9-4298-9e85-37d87e5d3ebc"]
}, Closed]],
Cell[CellGroupData[{
Cell[704910, 18634, 104, 0, 37, "Subsubsection",ExpressionUUID->"603d4498-8b6c-4503-933d-b4a9c97b5661"],
Cell[705017, 18636, 9501, 218, 1193, "Code",ExpressionUUID->"9c6a83e3-770d-4c96-b30e-1d9e09063824"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[714567, 18860, 101, 0, 38, "Subsection",ExpressionUUID->"89d07baf-29ff-40b5-a155-6ae60f411f0b"],
Cell[714671, 18862, 458, 12, 52, "Code",ExpressionUUID->"638cc8ea-f6a2-4655-af57-88c8956ec0e0"],
Cell[715132, 18876, 1541, 38, 129, "Code",ExpressionUUID->"bfcda39c-0644-435b-8e52-c73864eff3b0"],
Cell[716676, 18916, 3552, 86, 339, "Code",ExpressionUUID->"57ce5909-974b-48ac-99ba-c0f6a103d000"],
Cell[720231, 19004, 592, 17, 91, "Code",ExpressionUUID->"f5756fcc-4f46-47b4-924b-eae4cdafeb53"]
}, Closed]],
Cell[CellGroupData[{
Cell[720860, 19026, 106, 0, 38, "Subsection",ExpressionUUID->"fdbbe4fd-2f77-4cbe-91b2-9746fc3ae9f9"],
Cell[720969, 19028, 3263, 94, 338, "Code",ExpressionUUID->"db89b083-f6f8-4ef9-be0e-ba614297f87d"]
}, Closed]],
Cell[CellGroupData[{
Cell[724269, 19127, 122, 0, 38, "Subsection",ExpressionUUID->"f771deb2-a4a2-400f-b0c2-7680cc5b00ac"],
Cell[724394, 19129, 1109, 28, 243, "Code",ExpressionUUID->"4315eb56-9425-419f-b071-2e2f797f402d"],
Cell[725506, 19159, 706, 19, 110, "Code",ExpressionUUID->"f36975ed-8d9f-4ec4-babc-cce78e40b1a9"],
Cell[726215, 19180, 3681, 101, 358, "Code",ExpressionUUID->"bd2ebe0c-ce7f-45f7-bfc1-49aa1aec9a95"],
Cell[729899, 19283, 3420, 79, 300, "Code",ExpressionUUID->"1b30499b-3dd1-4129-8c80-b3664c73ca01"],
Cell[733322, 19364, 651, 16, 91, "Code",ExpressionUUID->"e01b2e15-065d-44be-a333-3bb058054274"],
Cell[733976, 19382, 2771, 76, 263, "Code",ExpressionUUID->"a850dc3b-621f-4bd6-aaee-873395b1bb45"],
Cell[736750, 19460, 2453, 68, 226, "Code",ExpressionUUID->"d0b96612-939a-4fb2-8f6e-a03a87c8f541"],
Cell[739206, 19530, 3539, 84, 300, "Code",ExpressionUUID->"d9dde884-5ff3-466a-b915-739df74cc11a"],
Cell[742748, 19616, 4276, 102, 300, "Code",ExpressionUUID->"78b2f67f-dc48-44fe-9713-fc2cd8b3ffff"],
Cell[747027, 19720, 5961, 142, 566, "Code",ExpressionUUID->"e09521af-e51f-454e-acee-9ae42f06aee1"]
}, Closed]],
Cell[CellGroupData[{
Cell[753025, 19867, 92, 0, 38, "Subsection",ExpressionUUID->"70fa9bc8-0774-4c9e-b67f-9bd9be81f808"],
Cell[753120, 19869, 9184, 240, 1079, "Code",ExpressionUUID->"0b3e82e1-9782-44ba-a8ab-6a1e680d3561"],
Cell[762307, 20111, 1940, 45, 281, "Code",ExpressionUUID->"908b3a1d-a33f-4549-ac93-a0bb0355f103"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[764296, 20162, 89, 0, 67, "Section",ExpressionUUID->"10b53468-301a-456a-9396-7a1b3738e486"],
Cell[CellGroupData[{
Cell[764410, 20166, 98, 0, 54, "Subsection",ExpressionUUID->"b2ee595b-130d-48ce-a5ad-4e7ffb538f90"],
Cell[764511, 20168, 4015, 96, 509, "Code",ExpressionUUID->"f766b5d0-2b0a-4658-998d-1d2ffeb53538"],
Cell[768529, 20266, 4537, 124, 642, "Code",ExpressionUUID->"d1684dc1-97c6-4969-af60-093d8fe550b5"],
Cell[773069, 20392, 8043, 177, 1060, "Code",ExpressionUUID->"0eac91ae-7451-41aa-9cbb-65adae11b2f0"],
Cell[781115, 20571, 8365, 208, 1155, "Code",ExpressionUUID->"37ffa1ef-c32e-45a9-8b39-8215cca0dac2"]
}, Closed]],
Cell[CellGroupData[{
Cell[789517, 20784, 100, 0, 38, "Subsection",ExpressionUUID->"f701af98-4573-44ce-bac9-9fc083472d2e"],
Cell[789620, 20786, 764, 19, 129, "Code",ExpressionUUID->"c0491458-47ed-4612-a97b-234998126d75"],
Cell[790387, 20807, 2682, 69, 338, "Code",ExpressionUUID->"258d98b1-596a-4353-9b32-6afddc286af6"],
Cell[793072, 20878, 9536, 237, 1041, "Code",ExpressionUUID->"709fcb9c-08e6-4684-8f67-e39cfa498891"]
}, Closed]],
Cell[CellGroupData[{
Cell[802645, 21120, 100, 0, 38, "Subsection",ExpressionUUID->"4db4413b-f7dc-4706-99a3-cf121de60a27"],
Cell[802748, 21122, 1521, 40, 186, "Code",ExpressionUUID->"2e74c90e-7216-4c80-a620-b44fa8b68c06"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[804318, 21168, 78, 0, 67, "Section",ExpressionUUID->"a9b198e2-0767-48ac-b046-37bfd6084753"],
Cell[804399, 21170, 234, 7, 91, "Code",ExpressionUUID->"6ac1cc87-b8a2-416f-a747-62b9785cc946"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[804682, 21183, 125, 0, 58, "Chapter",ExpressionUUID->"5a8b7cb0-9767-43dc-919a-1b0b391815a1"],
Cell[804810, 21185, 195, 5, 52, "Code",ExpressionUUID->"98df5a5e-b331-47c0-a64d-450182746a38"],
Cell[CellGroupData[{
Cell[805030, 21194, 79, 0, 67, "Section",ExpressionUUID->"16e15631-03bf-4f3b-84e8-5ce1094fae6f"],
Cell[805112, 21196, 285, 7, 52, "Code",ExpressionUUID->"1b53aab2-8ab9-4869-815e-f8ca47d5626d"],
Cell[805400, 21205, 505, 10, 91, "Code",ExpressionUUID->"1fefdd08-ab81-4b03-aab1-7eb192b442a9"],
Cell[805908, 21217, 823, 17, 129, "Code",ExpressionUUID->"1628f146-b3f2-4871-bccb-7a246f33a144"],
Cell[806734, 21236, 389, 8, 72, "Code",ExpressionUUID->"3583d2b8-2386-46fa-a348-7dcfe3f512df"],
Cell[807126, 21246, 1860, 40, 319, "Code",ExpressionUUID->"3ff9fc51-09cf-453d-a299-be49bcf9329b"],
Cell[808989, 21288, 434, 9, 91, "Code",ExpressionUUID->"d62e8121-9030-4117-ab10-ad253752b5f3"],
Cell[809426, 21299, 1128, 21, 72, "Code",ExpressionUUID->"1326e1f2-3d36-452d-b09e-f5500f477896"],
Cell[810557, 21322, 718, 16, 110, "Code",ExpressionUUID->"e202e950-0e01-4ee2-b0a7-7987cb7e108a"],
Cell[811278, 21340, 667, 14, 72, "Code",ExpressionUUID->"a41bca8b-ac3e-4dd2-80ef-a0645cc5e5ce"],
Cell[811948, 21356, 705, 14, 72, "Code",ExpressionUUID->"e799e302-d427-4098-ae4e-27d9b8a64416"],
Cell[812656, 21372, 732, 16, 129, "Code",ExpressionUUID->"83f8a726-efe7-4110-956b-bca1ea384930"]
}, Closed]],
Cell[CellGroupData[{
Cell[813425, 21393, 80, 0, 53, "Section",ExpressionUUID->"56132169-b503-4fec-ac0f-c8748f365dff"],
Cell[813508, 21395, 451, 12, 129, "Code",ExpressionUUID->"894e1c8a-8944-40bb-90d1-36044a26fac1"]
}, Closed]],
Cell[CellGroupData[{
Cell[813996, 21412, 96, 0, 53, "Section",ExpressionUUID->"8f3272e9-4365-46de-a73d-baaa4bf6be97"],
Cell[CellGroupData[{
Cell[814117, 21416, 87, 0, 54, "Subsection",ExpressionUUID->"8042e1d7-58bf-4a7b-a670-9ef09527dcb3"],
Cell[814207, 21418, 1893, 52, 319, "Code",ExpressionUUID->"5cbe27db-29f9-4589-9b2f-70c34eebdd51"]
}, Closed]],
Cell[CellGroupData[{
Cell[816137, 21475, 88, 0, 38, "Subsection",ExpressionUUID->"d7afa0ea-aedd-4d0b-a732-2a15366b9ce5"],
Cell[816228, 21477, 425, 11, 72, "Code",ExpressionUUID->"a12658c6-fc84-44c7-9c81-b4290ef02c78"],
Cell[816656, 21490, 3149, 83, 452, "Code",ExpressionUUID->"1387a64e-cae7-4ce2-bf6a-8bfc02903e70"],
Cell[819808, 21575, 295, 7, 52, "Code",ExpressionUUID->"e14ea647-8b7f-4eae-a125-7e43a795f52c"]
}, Closed]],
Cell[CellGroupData[{
Cell[820140, 21587, 91, 0, 38, "Subsection",ExpressionUUID->"f78cb6e6-e17d-4401-b894-51df89a02adc"],
Cell[820234, 21589, 526, 13, 167, "Code",ExpressionUUID->"baf9e747-4ee8-4def-a102-84008b907460"],
Cell[820763, 21604, 1273, 36, 129, "Code",ExpressionUUID->"0187889d-4dcf-495a-9f9c-ecb3716b1baa"],
Cell[822039, 21642, 1310, 36, 186, "Code",ExpressionUUID->"4c9dbcda-77ab-4b27-912f-3e29839f9acd"],
Cell[823352, 21680, 3999, 103, 490, "Code",ExpressionUUID->"8bb2c520-afd0-402d-b45f-33fd7e7dce2c"],
Cell[827354, 21785, 2307, 59, 281, "Code",ExpressionUUID->"66a40ec3-09ae-4927-af76-1e2ba30e2e51"],
Cell[829664, 21846, 7898, 201, 680, "Code",ExpressionUUID->"389f07d3-5efb-4b09-9dd7-13b425640f40"]
}, Closed]],
Cell[CellGroupData[{
Cell[837599, 22052, 87, 0, 38, "Subsection",ExpressionUUID->"b01f488c-40c8-4d7f-bcc9-c39f7a7d7b49"],
Cell[837689, 22054, 7494, 193, 680, "Code",ExpressionUUID->"df661cfd-ae0b-44c1-87df-b4da3007a4a3"]
}, Closed]],
Cell[CellGroupData[{
Cell[845220, 22252, 88, 0, 38, "Subsection",ExpressionUUID->"6510e159-2aac-4e44-9dbd-d54c70d36be2"],
Cell[845311, 22254, 241, 6, 52, "Code",ExpressionUUID->"74c13a49-d78f-409b-8cae-4ac581199fcd"],
Cell[845555, 22262, 7781, 190, 661, "Code",ExpressionUUID->"6e9c878d-02b2-4132-96ce-e8e66b822e4d"],
Cell[CellGroupData[{
Cell[853361, 22456, 377, 11, 30, "Input",ExpressionUUID->"f325d84e-8b1c-4353-a4a7-917cc61544f8"],
Cell[853741, 22469, 11553, 240, 371, "Output",ExpressionUUID->"81a5acf0-2ec5-467c-86a2-c9168823fa90"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[865343, 22715, 92, 0, 38, "Subsection",ExpressionUUID->"fd1f8c0d-8cd5-461d-a1bd-d14c472d45ea"],
Cell[865438, 22717, 694, 16, 205, "Code",ExpressionUUID->"cc6d6793-71d5-4e73-a480-e2ed6df579d6"],
Cell[866135, 22735, 6200, 154, 642, "Code",ExpressionUUID->"66b5c38e-1661-4fc1-b3bb-2fc79ff6c3b9"],
Cell[872338, 22891, 4797, 120, 510, "Code",ExpressionUUID->"2869981c-2b14-4190-aed6-de2de17b05d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[877172, 23016, 86, 0, 38, "Subsection",ExpressionUUID->"b5299508-8322-4271-9afb-f5f337741415"],
Cell[877261, 23018, 4146, 115, 357, "Code",ExpressionUUID->"c88252b2-ffad-4dd1-859c-2bd8cba16a86"]
}, Closed]],
Cell[CellGroupData[{
Cell[881444, 23138, 93, 0, 38, "Subsection",ExpressionUUID->"8f6d6aa2-a5f3-44bd-b466-85e186e748fc"],
Cell[881540, 23140, 5760, 151, 490, "Code",ExpressionUUID->"992ac084-622b-46f9-88a6-1e6f80acfc8a"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[887349, 23297, 89, 0, 67, "Section",ExpressionUUID->"8d4f30a8-a409-44fe-b780-83c10cec7e9b"],
Cell[CellGroupData[{
Cell[887463, 23301, 91, 0, 54, "Subsection",ExpressionUUID->"dec2368f-a749-4c44-a564-d70303dc01af"],
Cell[887557, 23303, 361, 10, 110, "Code",ExpressionUUID->"e213c25d-86fb-46a8-bed2-db9cf4e00176"],
Cell[887921, 23315, 411, 11, 72, "Code",ExpressionUUID->"27d9771e-c049-4d42-a05c-24f8aa65a359"],
Cell[888335, 23328, 700, 19, 91, "Code",ExpressionUUID->"66c6af84-bc13-4556-a25c-ac0eee18a80e"],
Cell[889038, 23349, 794, 23, 91, "Code",ExpressionUUID->"47d6ebf0-41ed-4fd2-a121-92c8d4158186"],
Cell[889835, 23374, 1902, 45, 357, "Code",ExpressionUUID->"e3d20717-cfab-4fd4-94cc-77bbf18c68a2"],
Cell[891740, 23421, 886, 24, 73, "Code",ExpressionUUID->"05eabc87-f7ca-4d0e-a158-8006e36d6e80"]
}, Closed]],
Cell[CellGroupData[{
Cell[892663, 23450, 88, 0, 38, "Subsection",ExpressionUUID->"008e53a8-5623-407a-9675-c744ce0ab295"],
Cell[892754, 23452, 370, 10, 110, "Code",ExpressionUUID->"a68525df-606e-4297-940a-d09936ce44be"],
Cell[893127, 23464, 1858, 52, 319, "Code",ExpressionUUID->"a41842bb-7ef0-4b81-9c7f-a828a6df6b23"],
Cell[894988, 23518, 1213, 34, 224, "Code",ExpressionUUID->"7e7cf3b5-db57-47e6-b6f1-c9d792881662"],
Cell[896204, 23554, 1691, 47, 262, "Code",ExpressionUUID->"32dba077-af38-4697-a75e-e017261a5468"]
}, Closed]],
Cell[CellGroupData[{
Cell[897932, 23606, 94, 0, 38, "Subsection",ExpressionUUID->"6f211a16-7cb3-4d11-8722-57c01e19ff28"],
Cell[898029, 23608, 5137, 140, 452, "Code",ExpressionUUID->"e0bb26a5-0f3a-4748-bdb8-8c1e259c4ad9"]
}, Closed]],
Cell[CellGroupData[{
Cell[903203, 23753, 92, 0, 38, "Subsection",ExpressionUUID->"5e6046c4-fd4b-49b0-b1c7-87f237226e76"],
Cell[903298, 23755, 6313, 172, 452, "Code",ExpressionUUID->"e7f3cc07-671b-468a-9786-71394929206f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[909660, 23933, 86, 0, 67, "Section",ExpressionUUID->"98b2155f-f47a-45bb-8fb7-4b6980d727fb"],
Cell[CellGroupData[{
Cell[909771, 23937, 89, 0, 54, "Subsection",ExpressionUUID->"1a122a28-32d1-4a27-90a9-a1528906c8c0"],
Cell[909863, 23939, 1093, 27, 91, "Code",ExpressionUUID->"5a272a8d-b37b-477f-a024-ee728ce8ca49"],
Cell[910959, 23968, 1053, 31, 110, "Code",ExpressionUUID->"436752b5-19a3-4653-b22e-045e8ecc949c"],
Cell[912015, 24001, 2267, 59, 338, "Code",ExpressionUUID->"0f22cd14-f2c6-414f-9ee6-3d896ed5cfcc"]
}, Closed]],
Cell[CellGroupData[{
Cell[914319, 24065, 96, 0, 38, "Subsection",ExpressionUUID->"1b1feca1-c8a4-423e-ae6b-4d0242a1bd3f"],
Cell[914418, 24067, 2740, 73, 224, "Code",ExpressionUUID->"9464b0a7-e384-4ae5-9af9-43a3e239bf92"],
Cell[917161, 24142, 1840, 48, 243, "Code",ExpressionUUID->"abf836c2-0f64-4bef-a1a6-0c0029eb66ae"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[919050, 24196, 95, 0, 67, "Section",ExpressionUUID->"3a223d20-fd00-4681-bb34-d0d67287ba5a"],
Cell[CellGroupData[{
Cell[919170, 24200, 127, 0, 54, "Subsection",ExpressionUUID->"cdb85ba4-fcc4-4d47-bebf-3f42f4284e57"],
Cell[919300, 24202, 6682, 177, 718, "Code",ExpressionUUID->"86475d85-9a3f-4989-ab14-6a6455a4d8d0"]
}, Closed]],
Cell[CellGroupData[{
Cell[926019, 24384, 93, 0, 38, "Subsection",ExpressionUUID->"1d7082d6-fe88-456f-bbee-ec48dcda4795"],
Cell[926115, 24386, 1747, 44, 243, "Code",ExpressionUUID->"ca0f7ad4-e8c5-4fea-9b64-31539691bedf"],
Cell[927865, 24432, 582, 16, 52, "Code",ExpressionUUID->"cfb7c4f0-3b35-4092-90e4-9984e62ee69e"],
Cell[928450, 24450, 3307, 85, 357, "Code",ExpressionUUID->"e70b599e-0dc7-4b77-90cb-c44e0bd5f445"],
Cell[931760, 24537, 4780, 124, 452, "Code",ExpressionUUID->"259c06f9-b5bb-48b2-afaf-c7bb31292e07"]
}, Closed]],
Cell[CellGroupData[{
Cell[936577, 24666, 91, 0, 38, "Subsection",ExpressionUUID->"dd9e02cb-40b4-433d-a473-cad5e51bf190"],
Cell[936671, 24668, 3045, 79, 414, "Code",ExpressionUUID->"3a4da837-219c-420b-a290-9b7db76205bb"]
}, Closed]],
Cell[CellGroupData[{
Cell[939753, 24752, 123, 0, 38, "Subsection",ExpressionUUID->"f1b04111-e3f7-4385-ae18-0bacd274da7e"],
Cell[939879, 24754, 842, 23, 91, "Code",ExpressionUUID->"5d8708fa-cf07-414f-8126-ace947a8f0e8"]
}, Closed]],
Cell[CellGroupData[{
Cell[940758, 24782, 86, 0, 38, "Subsection",ExpressionUUID->"ca8bfc39-6cbe-49cd-916b-27aa904950fa"],
Cell[940847, 24784, 2551, 66, 224, "Code",ExpressionUUID->"21760ea9-beff-44aa-baf4-aa7dded604cf"]
}, Closed]],
Cell[CellGroupData[{
Cell[943435, 24855, 90, 0, 38, "Subsection",ExpressionUUID->"0d47f488-fc16-43ad-8fe4-3fc44f943dcd"],
Cell[943528, 24857, 10684, 253, 946, "Code",ExpressionUUID->"f4fe01d3-4232-4330-ba99-4aa4a3d2ab06"]
}, Closed]],
Cell[CellGroupData[{
Cell[954249, 25115, 96, 0, 38, "Subsection",ExpressionUUID->"e536bc67-8dac-439c-9b64-663526d4bf1d"],
Cell[954348, 25117, 5866, 155, 566, "Code",ExpressionUUID->"a2cd35af-dbac-415c-ae7f-35b450b3699e"],
Cell[960217, 25274, 3445, 89, 357, "Code",ExpressionUUID->"26dfeae0-7a2f-41aa-bacf-11526f181415"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[963711, 25369, 91, 0, 67, "Section",ExpressionUUID->"29af4a10-169e-44ed-ab80-d4d19498fc3c"],
Cell[CellGroupData[{
Cell[963827, 25373, 91, 0, 54, "Subsection",ExpressionUUID->"8c3bbadf-3053-457d-a892-f02c18c44a69"],
Cell[963921, 25375, 936, 24, 167, "Code",ExpressionUUID->"2b53e07e-c571-4e4c-9ac7-257cb21e8424"]
}, Closed]],
Cell[CellGroupData[{
Cell[964894, 25404, 94, 0, 38, "Subsection",ExpressionUUID->"6e90e6cc-3c8b-4b20-b7df-90c3b932e22e"],
Cell[964991, 25406, 4155, 107, 376, "Code",ExpressionUUID->"061bec92-a2db-49e7-8283-a614e229a28a"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[969195, 25519, 78, 0, 67, "Section",ExpressionUUID->"6ab0f874-d874-4315-8392-aaaebc7a8913"],
Cell[969276, 25521, 234, 7, 91, "Code",ExpressionUUID->"4519db25-af3d-4f88-99eb-7a5b387934cb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[969559, 25534, 93, 0, 58, "Chapter",ExpressionUUID->"4e117d75-efd0-4fbb-9ab5-54303adb6974"],
Cell[969655, 25536, 196, 5, 52, "Code",ExpressionUUID->"e14f7419-89e3-4783-9198-ab1d0a95c1b9"],
Cell[CellGroupData[{
Cell[969876, 25545, 79, 0, 67, "Section",ExpressionUUID->"6034899b-68aa-4037-b918-fc414503a490"],
Cell[969958, 25547, 1211, 30, 186, "Code",ExpressionUUID->"2cf6321a-3523-4f5a-99bf-84c1ba3196fa"],
Cell[971172, 25579, 1202, 35, 167, "Code",ExpressionUUID->"3cf79f62-832f-451c-8e21-d75c262e0170"],
Cell[972377, 25616, 398, 8, 91, "Code",ExpressionUUID->"fec2b29f-ac6a-4f61-b198-9ada7c9935e9"],
Cell[972778, 25626, 425, 11, 72, "Code",ExpressionUUID->"e7452ff7-4a1b-486f-843f-361c8ea558a0"]
}, Closed]],
Cell[CellGroupData[{
Cell[973240, 25642, 80, 0, 53, "Section",ExpressionUUID->"0f8e42dc-5f2f-405a-b230-3b1f2fd2dc43"],
Cell[973323, 25644, 537, 14, 148, "Code",ExpressionUUID->"3298ad3f-9fe1-4719-b9e0-a54361a0a019"]
}, Open  ]],
Cell[CellGroupData[{
Cell[973897, 25663, 148, 2, 67, "Section",ExpressionUUID->"264055aa-257e-4658-8e88-c7a82054dd0f"],
Cell[CellGroupData[{
Cell[974070, 25669, 103, 0, 54, "Subsection",ExpressionUUID->"7e843407-88e6-42e6-a7fb-0d90b64f932d"],
Cell[974176, 25671, 2085, 52, 226, "Code",ExpressionUUID->"6387c029-df63-4edd-b7e3-3056df6c830d"]
}, Closed]],
Cell[CellGroupData[{
Cell[976298, 25728, 104, 0, 38, "Subsection",ExpressionUUID->"525005b9-0e31-4cdc-8823-308e24296256"],
Cell[976405, 25730, 6153, 154, 605, "Code",ExpressionUUID->"ebb41bdf-03c2-44de-845f-e9adc58d77ac"]
}, Closed]],
Cell[CellGroupData[{
Cell[982595, 25889, 96, 0, 38, "Subsection",ExpressionUUID->"7263b898-abdd-4b74-bf48-8401d5363cb9"],
Cell[982694, 25891, 3570, 101, 262, "Code",ExpressionUUID->"987031ba-a53c-4f11-a7e4-bcab36c04d09"],
Cell[986267, 25994, 4116, 101, 586, "Code",ExpressionUUID->"4df19566-3b22-4178-9883-43f4afe6f65f"],
Cell[990386, 26097, 434, 11, 72, "Code",ExpressionUUID->"de3fa5c5-4fe7-44c1-9fce-7504364314cd"]
}, Closed]],
Cell[CellGroupData[{
Cell[990857, 26113, 98, 0, 38, "Subsection",ExpressionUUID->"180e9407-b203-4d4a-b001-0e9302edeaaf"],
Cell[990958, 26115, 3708, 91, 418, "Code",ExpressionUUID->"475af5c7-e1c8-4503-81f4-44acaf834316"],
Cell[994669, 26208, 8115, 209, 1101, "Code",ExpressionUUID->"36d192d4-81bd-4706-ab71-98a7e1bbfd1e"],
Cell[1002787, 26419, 884, 23, 132, "Code",ExpressionUUID->"511a5fd5-e74f-4419-bf75-8c444440d319"]
}, Closed]],
Cell[CellGroupData[{
Cell[1003708, 26447, 96, 0, 38, "Subsection",ExpressionUUID->"999e6f09-3bf2-414c-b3fc-0ebce2164f6e"],
Cell[1003807, 26449, 2312, 55, 226, "Code",ExpressionUUID->"4527b9b8-c59b-40fe-ac46-8b880e1d29af"],
Cell[1006122, 26506, 2925, 74, 321, "Code",ExpressionUUID->"f4924735-3c86-45f4-9002-8e27c84aebac"],
Cell[1009050, 26582, 3578, 85, 452, "Code",ExpressionUUID->"e79c1415-df48-46af-8022-f0d3c2db1b85"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1012677, 26673, 91, 0, 67, "Section",ExpressionUUID->"efa38391-2c04-4250-a9ce-7f700dc2e797"],
Cell[1012771, 26675, 739, 22, 111, "Code",ExpressionUUID->"c7b53360-ca73-4d43-a302-859f8055c0aa"],
Cell[CellGroupData[{
Cell[1013535, 26701, 92, 0, 54, "Subsection",ExpressionUUID->"30beb824-411a-4da9-84d9-c2ad57b065a2"],
Cell[1013630, 26703, 682, 17, 186, "Code",ExpressionUUID->"00471e94-dc32-4777-a8a8-0f8d241e12c6"],
Cell[1014315, 26722, 2777, 75, 187, "Code",ExpressionUUID->"f7ed61a7-d5b6-4982-aed2-6305ff1b8542"],
Cell[1017095, 26799, 4241, 110, 300, "Code",ExpressionUUID->"29f39365-7b52-4650-bc5f-963e58ea8fee"]
}, Closed]],
Cell[CellGroupData[{
Cell[1021373, 26914, 93, 0, 38, "Subsection",ExpressionUUID->"df9a98e6-583c-4e1c-9c5e-9329e90e0833"],
Cell[1021469, 26916, 426, 11, 129, "Code",ExpressionUUID->"3198f40c-a3af-4947-b0c8-cbc49f1ca5e1"],
Cell[1021898, 26929, 661, 18, 72, "Code",ExpressionUUID->"d5b36931-6876-4fc2-b980-03428a6a3ff4"],
Cell[1022562, 26949, 2688, 78, 205, "Code",ExpressionUUID->"cdcda5f5-532c-463b-899d-7293e5112f81"]
}, Closed]],
Cell[CellGroupData[{
Cell[1025287, 27032, 95, 0, 38, "Subsection",ExpressionUUID->"530308ab-a7d1-4a5c-86d3-f3a59af21d94"],
Cell[1025385, 27034, 499, 12, 148, "Code",ExpressionUUID->"3a0274b7-99dd-44b8-a623-57f7847ae21b"],
Cell[1025887, 27048, 3833, 101, 281, "Code",ExpressionUUID->"a0387762-529b-4db0-94ff-175060d25b6c"],
Cell[1029723, 27151, 2878, 80, 243, "Code",ExpressionUUID->"7d80a007-6464-43b3-9ff2-00f8fc73da18"]
}, Closed]],
Cell[CellGroupData[{
Cell[1032638, 27236, 89, 0, 38, "Subsection",ExpressionUUID->"616abae0-499a-42ac-9be1-54c477240393"],
Cell[1032730, 27238, 4661, 127, 319, "Code",ExpressionUUID->"f42eb97c-a4fa-4783-8190-ace6cf11e7a8"]
}, Closed]],
Cell[CellGroupData[{
Cell[1037428, 27370, 90, 0, 38, "Subsection",ExpressionUUID->"21ae16eb-fe33-4b07-a637-3a56dfc61929"],
Cell[1037521, 27372, 486, 11, 148, "Code",ExpressionUUID->"0523084d-4d4b-4a9e-8f47-5ce789825232"],
Cell[1038010, 27385, 3254, 81, 414, "Code",ExpressionUUID->"deeff8cc-8a0f-4967-8ab0-c5317f85b6a6"],
Cell[1041267, 27468, 3175, 78, 376, "Code",ExpressionUUID->"b0a2f514-7a30-4fc7-9f56-23c511b2ec1b"]
}, Closed]],
Cell[CellGroupData[{
Cell[1044479, 27551, 97, 0, 38, "Subsection",ExpressionUUID->"97403945-b908-4eb2-a9b5-f7ad77935592"],
Cell[1044579, 27553, 894, 21, 224, "Code",ExpressionUUID->"fa2a1883-8f1a-41a0-8fcd-0125b96b94cb"],
Cell[1045476, 27576, 11700, 303, 911, "Code",ExpressionUUID->"9fdcc750-d6d7-4c7a-9b64-f69b9f25c428"]
}, Closed]],
Cell[CellGroupData[{
Cell[1057213, 27884, 88, 0, 38, "Subsection",ExpressionUUID->"a7a35632-47d0-4342-be07-daf07f198317"],
Cell[1057304, 27886, 305, 8, 91, "Code",ExpressionUUID->"e55e08fa-9d58-42bc-abfc-669219f4ba55"],
Cell[1057612, 27896, 1868, 51, 206, "Code",ExpressionUUID->"7befbc49-c359-459d-b8be-4c03a3cd4cbc"]
}, Closed]],
Cell[CellGroupData[{
Cell[1059517, 27952, 103, 0, 38, "Subsection",ExpressionUUID->"a4787621-3d48-4ae3-bf4b-6c35d714056b"],
Cell[1059623, 27954, 1774, 49, 167, "Code",ExpressionUUID->"321114ce-c1c2-4259-8f91-54d2a33d7886"],
Cell[1061400, 28005, 3422, 96, 243, "Code",ExpressionUUID->"521bc9c5-de42-41dd-9770-013f3407e73d"],
Cell[1064825, 28103, 13937, 342, 984, "Code",ExpressionUUID->"8a094d13-8b63-400b-b159-c54a5fd2ee60"],
Cell[1078765, 28447, 2788, 77, 186, "Code",ExpressionUUID->"bd7f0e33-5f80-428a-989f-41e32909c8eb"],
Cell[1081556, 28526, 1320, 37, 110, "Code",ExpressionUUID->"6430d36e-973c-44ca-a619-b4932b524083"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1082925, 28569, 89, 0, 67, "Section",ExpressionUUID->"39bcb497-250e-4ccc-b5cc-cc185dc1e82d"],
Cell[1083017, 28571, 1341, 31, 243, "Code",ExpressionUUID->"47c05290-a89e-4761-b409-233504c8abb9"],
Cell[1084361, 28604, 7286, 165, 737, "Code",ExpressionUUID->"d0c0ab08-9f98-424a-87df-306817a5ca19"],
Cell[1091650, 28771, 844, 22, 72, "Code",ExpressionUUID->"e7b9a2a5-9af3-4abb-88e6-2d4aac3f3e98"],
Cell[1092497, 28795, 1495, 41, 205, "Code",ExpressionUUID->"c147ed39-8949-4292-be7f-d71a91d02de6"],
Cell[CellGroupData[{
Cell[1094017, 28840, 91, 0, 45, "Subsubsection",ExpressionUUID->"41036322-b489-45d6-a4a8-c4b2fc22031e"],
Cell[1094111, 28842, 2245, 62, 338, "Code",ExpressionUUID->"1e65c65e-c390-4436-963f-5839fb0f2d6f"]
}, Closed]],
Cell[CellGroupData[{
Cell[1096393, 28909, 139, 1, 37, "Subsubsection",ExpressionUUID->"3158cbe2-8da5-435f-9855-4818c97962d4"],
Cell[1096535, 28912, 2962, 78, 395, "Code",ExpressionUUID->"274ece50-9947-4d40-9f3e-6f0f5cb59add"]
}, Closed]],
Cell[CellGroupData[{
Cell[1099534, 28995, 102, 0, 37, "Subsubsection",ExpressionUUID->"6db47837-09f4-490d-be89-995898f5d632"],
Cell[1099639, 28997, 466, 11, 53, "Code",ExpressionUUID->"d0e19af4-16c0-4707-b689-be8f8be442e5"],
Cell[1100108, 29010, 3426, 91, 319, "Code",ExpressionUUID->"6e3dd12b-7fe5-467b-932c-23f1811752d3"],
Cell[1103537, 29103, 4235, 110, 490, "Code",ExpressionUUID->"253b5d60-3713-4c03-a4d8-b6afae02180c"]
}, Closed]],
Cell[CellGroupData[{
Cell[1107809, 29218, 108, 0, 37, "Subsubsection",ExpressionUUID->"b5eb9bb4-86b7-4453-beb7-26e0f999bb46"],
Cell[1107920, 29220, 460, 12, 53, "Code",ExpressionUUID->"fe4484fa-0682-4b65-83b1-f4a7594958f2"],
Cell[1108383, 29234, 3379, 92, 262, "Code",ExpressionUUID->"2cc02ac0-f0e0-44be-9b08-7afececde616"],
Cell[1111765, 29328, 1459, 35, 338, "Code",ExpressionUUID->"55774fc6-ee2b-44c0-b416-d3132ebf9238"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1113273, 29369, 87, 0, 53, "Section",ExpressionUUID->"22a76298-877b-4f82-9647-137ccd36f0ff"],
Cell[CellGroupData[{
Cell[1113385, 29373, 86, 0, 54, "Subsection",ExpressionUUID->"9b4913e6-0b4a-4a08-b7bd-200f6bcf7b03"],
Cell[1113474, 29375, 2455, 66, 224, "Code",ExpressionUUID->"9c7cd542-6131-452b-a5de-cf7d5aa66e54"]
}, Closed]],
Cell[CellGroupData[{
Cell[1115966, 29446, 90, 0, 38, "Subsection",ExpressionUUID->"1fce4c2a-3ad9-4a55-ae6b-d262e817dc47"],
Cell[1116059, 29448, 10043, 251, 946, "Code",ExpressionUUID->"d9f2b206-4c71-4b1c-8742-4ad30c3dcdbb"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1126151, 29705, 91, 0, 53, "Section",ExpressionUUID->"3efe547a-f1ac-4ffb-8444-d2b58598608b"],
Cell[CellGroupData[{
Cell[1126267, 29709, 91, 0, 54, "Subsection",ExpressionUUID->"030fa22e-305a-45e4-b6b6-74f92db2e39b"],
Cell[1126361, 29711, 936, 24, 167, "Code",ExpressionUUID->"580bd134-fe46-489b-be75-aa685f0fcd22"]
}, Closed]],
Cell[CellGroupData[{
Cell[1127334, 29740, 94, 0, 38, "Subsection",ExpressionUUID->"50641957-a476-4037-b81c-36b8b7785b1b"],
Cell[1127431, 29742, 8643, 212, 965, "Code",ExpressionUUID->"da7e70de-e1ad-47c1-a2cd-4e867b497a28"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1136123, 29960, 78, 0, 67, "Section",ExpressionUUID->"a1375d4f-d82f-42cf-9eb3-c76f31ebb81e"],
Cell[1136204, 29962, 234, 7, 91, "Code",ExpressionUUID->"0f6f47a1-2047-4f40-a070-b68748d33cb4"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)


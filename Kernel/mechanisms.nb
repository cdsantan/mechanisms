(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1303019,      33617]
NotebookOptionsPosition[   1228948,      32479]
NotebookOutlinePosition[   1229341,      32495]
CellTagsIndexPosition[   1229298,      32492]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mechanisms package", "Title",ExpressionUUID->"130b3787-7aa9-48f9-8ced-30b05119f93a"],

Cell["\<\
version 0.85
Christian Santangelo, Physics Department, Syracuse University
Copyright 2021\
\>", "Text",ExpressionUUID->"a287b323-0ec1-4bfc-ac7b-b122cce5f6f7"],

Cell[CellGroupData[{

Cell["Package organization", "Subsubsection",ExpressionUUID->"6d3b1798-1603-4e1f-a3fb-a831a45b5512"],

Cell[TextData[{
 StyleBox["mechanisms: ",
  FontWeight->"Bold"],
 "The mechanisms main package contains functions for manipulating and using \
mechanisms."
}], "Text",ExpressionUUID->"fd552589-5b13-4cba-8060-e04008711b7b"],

Cell[TextData[{
 StyleBox["geometry ",
  FontWeight->"Bold"],
 ": Mechanism geometry subpackage."
}], "Text",ExpressionUUID->"5b61e7c9-2ff5-4e08-9046-4fe654d2bc7d"],

Cell[TextData[{
 StyleBox["rigidity",
  FontWeight->"Bold"],
 ": This subpackage contains functions for basic rigidity of mechanisms and \
some functions for linkages"
}], "Text",ExpressionUUID->"47c99494-6580-4a80-9766-1a2595a00f8d"],

Cell[TextData[{
 StyleBox["origami",
  FontWeight->"Bold"],
 ": this sub package contains functions for handling origami specifically."
}], "Text",ExpressionUUID->"5b4fb190-7420-4fe6-b9ee-0710831e0b2a"],

Cell[TextData[{
 StyleBox["graphics",
  FontWeight->"Bold"],
 " : this sub package contains functions for handling graphics."
}], "Text",ExpressionUUID->"85ea895a-171e-480f-b701-c119aed055d6"],

Cell["\<\
These packages also use the Mathematica Developer package to take advantage \
of packed arrays when possible. A C compiler is recommended but not necessary.\
\>", "Text",ExpressionUUID->"e4ef7bb6-5622-4ec5-8d97-20b894f9d806"]
}, Open  ]],

Cell[CellGroupData[{

Cell["To do list and known bug list", "Subsubsection",ExpressionUUID->"5effce6f-d2fc-4343-8138-d788d00f2d13"],

Cell[TextData[{
 "Is there a better way to do minimization with compiled functions ",
 StyleBox["and",
  FontSlant->"Italic"],
 " specified constraints? The algorithms are slow and that means fixed joints \
are poorly handled with compiled functions. Unrestrained minimization is \
still faster with compiled functions."
}], "Text",ExpressionUUID->"01e0f39a-cdd3-4398-9885-4e9122d860da"],

Cell["\<\
The function overlappingVertices[] may sometimes fail if two vertices have \
exactly the same distance apart and those distances are within tolerance.\
\>", "Text",ExpressionUUID->"7e24a6a5-4355-4ea6-b4d0-8c0c5dce255e"],

Cell["\<\
Sometimes toGraphicsComplex[] produces something that should be a polyhedron \
but cannot be Canonicalized? I applied a fix that just cleans those up and \
hopes for the best.\
\>", "Text",ExpressionUUID->"3c29e79e-c97c-45d3-a1ea-174eedb8cf96"],

Cell["\<\
Should consider adding a function to make a rigid face by adding rigid bars \
in 3D. This is called blockFaces[] and is still experimental.\
\>", "Text",ExpressionUUID->"33457689-1538-46a7-a7b4-32e05e4d1dbb"],

Cell["\<\
elasticFace[] must check that it is a triangle or expand into several \
triangles.\
\>", "Text",ExpressionUUID->"50f80464-0989-4dbe-adb2-45b20020c8a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["mechanisms: internal code for handling structures", "Chapter",ExpressionUUID->"1007bea5-8919-43d5-b2b7-1d591eacbee8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", 
   RowBox[{"\"\<mechanisms`\>\"", ",", 
    RowBox[{"{", "\"\<Developer`\>\"", "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$mechanismsVersion", "=", "0.85"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "$mechanismsVersionText", "=", "\"\<mechanisms version 0.85 beta\>\""}], 
  ";"}]}], "Code",
 CellLabel->"In[1]:=",ExpressionUUID->"79322a72-1ef5-40c5-8b71-24d04e2c58a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\n", "\t", 
   RowBox[{
   "We", " ", "use", " ", "MeshRegion", " ", "in", " ", "this", " ", 
    "package", " ", "to", " ", "work", " ", "so", " ", "make", " ", "sure", 
    " ", "we", " ", "are", " ", "using", " ", "at", " ", "least", " ", 
    "version", " ", "10", " ", "of", " ", "Mathematica"}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"$VersionNumber", "<", "10"}], ",", " ", 
      RowBox[{
      "Print", "[", "\"\<Mathematica version may be too low.\>\"", "]"}]}], 
     "]"}], ";"}], "\n"}]}]], "Code",
 CellLabel->"In[4]:=",ExpressionUUID->"c3929045-c234-4a87-9c48-8321231dbffe"],

Cell[CellGroupData[{

Cell["Usage", "Section",ExpressionUUID->"86495105-a446-474d-bbe6-03bd1334054f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$mechanismsVersion", "::", "usage"}], " ", "=", " ", 
   "\"\<$mechanismsVersion returns the version number of the package.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$mechanismsVersionText", "::", "usage"}], " ", "=", " ", 
   "\"\<$mechanismsVersionText returns the version number of the package as a \
string.\>\""}], ";"}]}], "Code",
 CellLabel->"In[5]:=",ExpressionUUID->"83532984-f8e5-44f9-a21e-beb9bdc10ddf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rigidBar", "::", "usage"}], "=", 
   "\"\<rigidBar[ {v1, v2} ] is a rigid bar. Use defaultData[ rigidBar ] to \
see its associated data.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"spring", "::", "usage"}], "=", 
   "\"\<spring[ {v1, v2} ] is a spring allowing you to set an arbitrary \
force. Use defaultData[ spring ] to see its associated data.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"face", "::", "usage"}], "=", 
   "\"\<face[ {v1,v2,...} ] is a face. Use defaultData[ face ] to see its \
associated data.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"elasticFace", "::", "usage"}], "=", 
   "\"\<elasticFace[ {v1,v2,...} ] is an elastic face. Use defaultData[ face \
] to see its associated data.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fold", "::", "usage"}], "=", 
   "\"\<fold[ {v1,v2} ] is a fold with torsional spring controlling its \
angle. Use defaultData[ fold ] to see its associated data.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joint", "::", "usage"}], "=", "\"\<joint[v1] is a joint.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"angleJoint", "::", "usage"}], "=", 
   "\"\<angleJoint[v1] is a torsional joint. Use defaultData[ angleJoint ] to \
see its associated data.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pinnedJoint", "::", "usage"}], "=", 
    "\"\<pinnedJoint[v1] is a pinned joint. Use defaultData[ pinnedJoint ] to \
see its associated data.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultData", "::", "usage"}], "=", 
   "\"\<defaultData[ component ] returns the default data associated with a \
component.\>\""}], ";"}]}], "Code",
 CellLabel->"In[7]:=",ExpressionUUID->"6058a131-dea1-48d0-a8b1-9755094b2f70"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mechanism", "::", "usage"}], " ", "=", " ", 
    "\"\<Keyword used to report some errors.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "::", "usage"}], " ", "=", " ", 
    "\"\<framework[ { {x1, y1}, ...}, {cell1[ {i1, i2, ..} ], ... } ] returns \
a linkage in 2D with vertices at {{x1, y1}, ..} and made from the specified \
cells.\nframework[ { {x1, y1, z1}, ...}, {cell1[ {i1, i2, ..} ], ... } ] \
returns a linkage in 3D with vertices at {{x1, y1}, ..} and made from the \
specified cells.\\n\nProperties:\\n\nCell properties can be specified by \
Property[ cell1[ {i1, ...} ], {property1 -> value1, ... } ].\nProperties that \
can be specified include MeshCellStyle, MeshCellLabel, MeshCellShapeFunction. \
Options[cell] will list additional properties that can be specified.\\n\n\
Options:\\n\nframework[] takes the same options as MeshRegion[] as well as an \
option \\\"overlapPrecision\\\" which determines how close vertices need to \
be in order to be mapped onto each other.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "::", "usage"}], "=", "\n", 
    "\"\<origami[ { {x1, y1}, ...}, {cell1[ {i1, i2, ..} ], ... } ] returns \
an origami in 3D (displayed in 2D) with vertices at {{x1, y1}, ..} and made \
from the specified cells.\norigami[ { {x1, y1, z1}, ...}, {cell1[ {i1, i2, \
..} ], ... } ] returns an origami in 3D with vertices at {{x1, y1}, ..} and \
made from the specified cells.\n\nProperties:\n\nCell properties can be \
specified by Property[ cell1[ {i1, ...} ], {property1 -> value1, ... } ].\n\
Properties that can be specified include MeshCellStyle, MeshCellLabel, \
MeshCellShapeFunction. Options[cell] will list additional properties that can \
be specified.\n\nOptions:\n\norigami[] takes the same options as MeshRegion[] \
as well as an option \\\"overlapPrecision\\\" which determines how close \
vertices need to be in order to be mapped onto each other.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismQ", "::", "usage"}], "=", 
   "\"\<mechanismQ[ m ] returns True if m is a mechanism.\>\""}], 
  ";"}]}], "Code",
 CellLabel->"In[16]:=",ExpressionUUID->"91875964-7201-4edd-b967-73869fbe7944"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"vertexPosition", "::", "usage"}], "=", 
   "\"\<vertexPosition[v, c] represents the position of vertex v along a \
particular component d, which is one of \\\"x\\\", \\\"y\\\", or \\\"z\\\" or \
All[d] where d is the dimension.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"vertexPosition", ",", 
    RowBox[{"{", 
     RowBox[{"NHoldAll", ",", "Constant"}], "}"}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vertexDisplacement", "::", "usage"}], "=", 
   "\"\<vertexDisplacement[v, c] represents the displacement of vertex v \
along a particular component d, which is one of \\\"x\\\", \\\"y\\\", or \
\\\"z\\\" or All[d] where d is the dimension.\>\""}], ";"}], "\n", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"vertexDisplacement", ",", 
   RowBox[{"{", 
    RowBox[{"NHoldAll", ",", "Constant"}], "}"}]}], "]"}]}], "Code",
 CellLabel->"In[20]:=",ExpressionUUID->"7445fe50-3c2c-4866-8fe2-7eea17dc51c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"labelCell", "::", "usage"}], "=", " ", 
    "\"\<labelCell[ m , label , {index1, index2,...} ] labels cells with the \
string label.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"listCells", "::", "usage"}], " ", "=", " ", 
    "\"\<listCells[m] lists all labels and cell types. Labels are all \
Strings.\nlistCells[ m, label ] lists cells with a certain label.\nlistCells[ \
m, celltype ] lists cells of a certain cell type.\nlistCells[ m, celltype1, \
celltype2, ... ] lists all cells of a certain cell type.\>\""}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"cell", " ", "modifiers"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"selectCells", "::", "usage"}], "=", "\n", 
    "\"\<selectCells[ m, pattern ] selects a sub-mechanism with cell \
specification matching pattern.\nselectCells[m, pattern, data, f] selects a \
sub-mechanism with cells matching pattern and f evaluating True when applied \
to the data. Use dataForm[] to find data that is available for a given \
component.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deleteCells", "::", "usage"}], "=", 
    "\"\<deleteCells[ m, pattern ] deletes a sub-mechanism with cell \
specification matching pattern.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"addCells", "::", "usage"}], "=", 
    "\"\<addCells[ m, {cell1, cell2, ... } ] adds cells to a \
mechanism.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"changeCellData", "::", "usage"}], " ", "=", " ", 
    "\"\<changeCellData[ m , pattern, { data1 -> value1, ... } ] changes the \
data of cells matching pattern.\nchangeCellData[ m, type, {cell1, cell2, \
...}, data1 -> { value1, value2, ...} ] changes the data of one type \
corresponding to cells.\nchangeCellData[ m , type, {cell1, cell2, ...}, data \
-> value ] changes the data of a number of cells to one value.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subdivideCell", "::", "usage"}], "=", 
   "\"\<subdivideCell[ m, cell list, label ] adds a vertex to a cell at the \
centroid.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"divideFace", "::", "usage"}], "=", 
   "\"\<divideFace[ m, edge list ] divides faces along the listed edges, read \
from left to right.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"triangulateFaces", "::", "usage"}], "=", 
    "\"\<triangulateFaces[m] triangulates all faces along the shortest \
diagonal recursively.\>\""}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"vertex", " ", "modifiers"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"placeVertices", "::", "usage"}], "=", 
    "\"\<placeVertices[m, {v1 -> new position 1, ...} ] moves vertices to new \
positions.\nplaceVertices[m, { pos1, pos2, ... } ] replaces all vertex \
positions by a list of new positions.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displaceVertices", "::", "usage"}], "=", 
    "\"\<displaceVertices[m, {v1 -> displacement 1, ...} ] displaces vertices \
by a displacement.\ndisplaceVertices[m, { disp1, disp2, ... } ] displaces all \
vertices by a list of displacements.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deleteVertices", "::", "usage"}], "=", 
    "\"\<deleteVertices[ m, {v1, ...} ] deletes a list of vertices and all \
cells associated with those vertices.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mapCells", "::", "usage"}], "=", 
    "\"\<mapCells[m, f] applies a map f to a mechanism.\>\""}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"mechanism", " ", "modifiers"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinMechanism", "::", "usage"}], "=", 
   "\"\<joinMechanism[ m1, m2, ... ] joins a list of mechanisms of the same \
type together.\>\""}], ";"}]}], "Code",
 CellLabel->"In[24]:=",ExpressionUUID->"1541dce7-e5b5-40a8-8bd4-290f6eff1d3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mechanismPositions", "::", "usage"}], "=", "\n", 
    "\"\<mechanismPositions[ \
\!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\"Italic\\\"]\) ] returns the \
coordinates of the vertices of \!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\
\"Italic\\\"]\).\nmechanismPositions[ \
\!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\"Italic\\\"]\) -> \
\!\(\*StyleBox[\\\"positions\\\",FontSlant->\\\"Italic\\\"]\) ] returns a new \
mechanism with coordinates given by \
\!\(\*StyleBox[\\\"positions\\\",FontSlant->\\\"Italic\\\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mechanismComponents", "::", "usage"}], "=", 
    "\"\<This has been superceded by mechansimCells[].\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismCells", "::", "usage"}], "=", " ", 
   "\"\<mechanismCells[m] returns all the cells in mechanism m.\n\
mechanismCells[ m , cellSpec ] returns a list of cells matching a certain \
specification.\n  cellSpec can be either {cellType, {index1, index2, ...}} or \
a pattern.\nmechanismCells[ m, cellSpec, dataType -> function ] returns a \
list of cells returning True when function f returns True when applied to \
dataType. f must be a pure function.\nmechanismCells[ m, cellSpec, dataType \
-> pattern ] returns a list of cells whose dataType matches pattern.\>\""}], 
  ";"}]}], "Code",
 CellLabel->"In[38]:=",ExpressionUUID->"9273de87-effd-4686-9b2e-608fcb430619"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tesselateMechanism", "::", "usage"}], "=", "\n", 
   "\"\<tesselateMechanism[mechanism, primitive vector, n1 ], \
tesselateMechanism[mechanism, {vector 1, vector 2}, {n1, n2}],  \
tesselateMechanism[mechanism, {vector 1, vector 2, vector 3}, {n1, n2, n3}] \
tesselates a mechanism using a set of 2D or 3D primitive vectors as an n1, n1 \
x n2 or n1 x n2 x n3 celled mechanism.\>\""}], ";"}]], "Code",
 CellLabel->"In[41]:=",ExpressionUUID->"186f7969-7d96-47c8-96e9-fa6761c66af2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"listFaces", "::", "usage"}], "=", 
   "\"\<listFaces[ m ] returns a list of faces in the mechanism.\nlistFaces[ \
m , {face1, face2, ...} ] returns an index with the location the specific \
face would appear in a list of all faces.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"listEdges", "::", "usage"}], "=", 
   "\"\<listEdges[ m ] returns a list of edges in the mechanism.\nlistEdges[ \
m , {edge1, edge2, ...} ] returns an index with the location the specific \
edge would appear in a list of all edges.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"listVertices", "::", "usage"}], "=", 
    "\"\<listVertices[ m ] returns a list of vertices in the \
mechanism.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"edgeQ", "::", "usage"}], "=", 
   "\"\<edgeQ[m,{{v1,v2},...}] returns True if all edges are in the mechanism \
m.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"faceQ", "::", "usage"}], "=", 
    "\"\<faceQ[m,{{v1,...},...}] returns True if all faces are in the \
mechanism m.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validEdgeQ", "::", "usage"}], "=", 
   "\"\<validEdgeQ[m,{{v1,v2},...}] returns True if all edges could be an \
edge in mechanism m.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validFaceQ", "::", "usage"}], "=", 
    "\"\<validFaceQ[m,{{v1,...},...}] returns True if all faces could be a \
face in mechanism m.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validCellQ", "::", "usage"}], "=", 
   "\"\<validCellQ[ cellSpec ] returns True if cellSpec is a properly \
specified cell.\nvalidCellQ[] returns a pattern that can be used to test if a \
cell has a valid specification.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellHeadQ", "::", "usage"}], "=", 
   "\"\<cellHeadQ[ cell ] returns True if cell is a cell type. Use \
defaultData[] to see a list of cell types.\>\""}], ";"}]}], "Code",
 CellLabel->"In[42]:=",ExpressionUUID->"e4d10adb-f929-4d10-82bc-4b12de09613d"]
}, Closed]],

Cell[CellGroupData[{

Cell["global data and patterns", "Section",ExpressionUUID->"cfa1c0f4-94af-49a0-98cd-e435294e26f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellLabel->"In[51]:=",ExpressionUUID->"06fc029e-a0bb-4bdb-9997-a62c8c544d33"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$meshRegionProperties", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MeshCellStyle", " ", "\[Rule]", " ", "\"\<style\>\""}], ",", 
      " ", 
      RowBox[{"MeshCellLabel", " ", "\[Rule]", " ", "\"\<label\>\""}], " ", 
      ",", " ", 
      RowBox[{
      "MeshCellShapeFunction", " ", "\[Rule]", " ", "\"\<shape\>\""}]}], 
     "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"packedCellPattern", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"_", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "..."}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"labelPattern", " ", "=", " ", 
    RowBox[{"{", "___Rule", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"coordinatePattern2D", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"_", ",", " ", "_"}], "}"}], ".."}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coordinatePattern3D", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"_", ",", " ", "_", ",", " ", "_"}], "}"}], ".."}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"coordinatePattern", " ", "=", " ", 
   RowBox[{"coordinatePattern2D", " ", "|", " ", "coordinatePattern3D"}]}], 
  ";"}]}], "Code",
 CellLabel->"In[52]:=",ExpressionUUID->"dc607867-c94e-46c7-a9ad-2c0f7a10f245"],

Cell[CellGroupData[{

Cell["mechanismQ[]", "Subsection",ExpressionUUID->"eff07146-d872-4431-837d-c7f0a6ec7629"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPattern", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"framework", "|", "origami"}], ")"}], "[", " ", 
     RowBox[{
     "coordinatePattern", ",", " ", "_", " ", ",", " ", "packedCellPattern", 
      ",", " ", "labelPattern"}], " ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"mechanismQ", "[", " ", "mechanismPattern", " ", "]"}], ":=", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"mechanismQ", "[", "_", "]"}], ":=", "False"}]}], "Code",
 CellLabel->"In[58]:=",ExpressionUUID->"a5aa8b49-bcf0-48ef-881c-d1ffc63e1b4c"]
}, Closed]],

Cell[CellGroupData[{

Cell["cellHeadQ[], validCellQ[]", "Subsection",ExpressionUUID->"d1bfb2ec-05b0-4a63-91f8-fcaf3033211d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"celltypePattern", " ", "=", " ", 
   RowBox[{
   "rigidBar", "|", "spring", "|", "face", "|", "elasticFace", "|", "fold", 
    "|", "joint", "|", "pinnedJoint", "|", "angleJoint"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"inputCellPattern", " ", "=", " ", 
   RowBox[{"Alternatives", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"rigidBar", "|", "spring", "|", "fold"}], ")"}], "[", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Except", "[", "_List", "]"}], ",", 
        RowBox[{"Except", "[", "_List", "]"}]}], "}"}], " ", "]"}], ",", "\n",
      "\t", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"elasticFace", "|", "angleJoint"}], ")"}], "[", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Except", "[", "_List", "]"}], ",", 
        RowBox[{"Except", "[", "_List", "]"}], ",", 
        RowBox[{"Except", "[", "_List", "]"}]}], "}"}], " ", "]"}], ",", "\n",
      "\t", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"joint", "|", "pinnedJoint"}], ")"}], "[", " ", 
      RowBox[{"Except", "[", "_List", "]"}], " ", "]"}], ",", "\n", "\t", 
     RowBox[{"face", "[", " ", 
      RowBox[{"_", "?", "VectorQ"}], " ", "]"}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"exactInputCellPattern", " ", "=", " ", 
    RowBox[{"Alternatives", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"rigidBar", "|", "spring", "|", "fold"}], ")"}], "[", " ", 
       RowBox[{"{", 
        RowBox[{"_Integer", ",", "_Integer"}], "}"}], " ", "]"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"elasticFace", "|", "angleJoint"}], ")"}], "[", " ", 
       RowBox[{"{", 
        RowBox[{"_Integer", ",", "_Integer", ",", "_Integer"}], "}"}], " ", 
       "]"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"joint", "|", "pinnedJoint"}], ")"}], "[", " ", "_Integer", 
       " ", "]"}], ",", "\n", "\t", 
      RowBox[{"face", "[", " ", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"VectorQ", "[", 
           RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], " ", 
       "]"}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellHeadQ", "[", " ", "cell_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"MatchQ", "[", " ", 
    RowBox[{"cell", ",", " ", "celltypePattern"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"validCellQ", "[", " ", "cell_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"MatchQ", "[", " ", 
   RowBox[{"cell", ",", " ", "exactInputCellPattern"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"validCellQ", "[", "]"}], " ", ":=", " ", 
  RowBox[{"MatchQ", "[", " ", "exactInputCellPattern", " ", "]"}]}]}], "Code",\

 CellLabel->"In[61]:=",ExpressionUUID->"b000fe75-98e0-4db2-803d-1d40f1814007"]
}, Closed]],

Cell[CellGroupData[{

Cell["defaultData[]", "Subsection",ExpressionUUID->"5cf74a85-b4c1-4085-b474-db69e3569d24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "default", " ", "data", " ", "in", " ", "all", " ", "cell", " ", "types"}],
    " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "rigidBar", ",", " ", "spring", ",", " ", "face", ",", " ", 
       "elasticFace", " ", ",", " ", "fold", ",", " ", "joint", ",", " ", 
       "pinnedJoint", ",", "angleJoint"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "rigidBar", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<length\>\"", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
       RowBox[{"\"\<stiffness\>\"", " ", "\[Rule]", " ", "Infinity"}]}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "spring", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<length\>\"", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
       RowBox[{"\"\<stiffness\>\"", " ", "\[Rule]", " ", "Infinity"}], ",", 
       " ", 
       RowBox[{"\"\<strain\>\"", " ", "\[Rule]", " ", "\"\<linear\>\""}]}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "face", "]"}], " ", "=", " ", 
     RowBox[{"{", " ", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "elasticFace", "]"}], " ", "=", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"\"\<YoungsModulus\>\"", " ", "\[Rule]", " ", "Infinity"}], 
       " ", ",", " ", 
       RowBox[{"\"\<PoissonRatio\>\"", " ", "\[Rule]", " ", 
        RowBox[{"1", "/", "3"}]}]}], " ", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "fold", "]"}], " ", "=", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
       "\"\<torsionalStiffness\>\"", " ", "\[Rule]", " ", "Infinity"}], ",", 
       " ", 
       RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "Automatic"}]}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "joint", "]"}], " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "pinnedJoint", "]"}], " ", "=", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"\"\<pinningStiffness\>\"", " ", "\[Rule]", " ", "Infinity"}], 
       ",", " ", 
       RowBox[{"\"\<constraint\>\"", " ", "\[Rule]", " ", "Automatic"}]}], 
      " ", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "angleJoint", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<angleStiffness\>\"", " ", "\[Rule]", " ", "Infinity"}], 
       ",", " ", 
       RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "Automatic"}]}], " ", 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"defaultData", "[", "_", "]"}], " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}]}]}]], "Code",
 CellLabel->"In[67]:=",ExpressionUUID->"f5ce23c9-dd88-49e3-8ce9-d15ea2f4a0f2"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["private functions to manipulate cells", "Section",ExpressionUUID->"32abf7e8-c1c3-4c59-b203-2f531969c22b"],

Cell["cleanup unpackCells[] commented out code.", "Text",ExpressionUUID->"17f7f43a-1081-4e0c-abe3-d6fe161117b3"],

Cell[CellGroupData[{

Cell["dataForm[]", "Subsection",ExpressionUUID->"af8d39d2-e6d6-4050-8965-bc05f40569d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "data", " ", "that", " ", "will", " ", "be", " ", "stored", " ", "for", 
    " ", "each", " ", "of", " ", "these", " ", "components", " ", "and", " ", 
    "in", " ", "what", " ", "order"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dataForm", "[", "rigidBar", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<stiffness\>\"", ",", "\"\<length\>\"", ",", "\"\<shape\>\"", ",", 
       "\"\<label\>\"", ",", "\"\<style\>\""}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"dataForm", "[", "spring", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<stiffness\>\"", ",", "\"\<length\>\"", ",", "\"\<strain\>\"", ",", 
       "\"\<shape\>\"", ",", "\"\<label\>\"", ",", "\"\<style\>\""}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"dataForm", "[", "face", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<faceStiffness\>\"", ",", "\"\<shape\>\"", ",", "\"\<label\>\"", 
       ",", "\"\<style\>\""}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"dataForm", "[", "elasticFace", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<YoungsModulus\>\"", ",", "\"\<PoissonRatio\>\"", ",", 
       "\"\<shape\>\"", ",", "\"\<label\>\"", ",", "\"\<style\>\""}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"dataForm", "[", "fold", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<torsionalStiffness\>\"", ",", "\"\<angle\>\"", ",", 
       "\"\<shape\>\"", ",", "\"\<label\>\"", ",", "\"\<style\>\""}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"dataForm", "[", "joint", "]"}], " ", "=", " ", 
     RowBox[{"{", " ", 
      RowBox[{"\"\<shape\>\"", ",", "\"\<label\>\"", ",", "\"\<style\>\""}], 
      " ", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"dataForm", "[", "pinnedJoint", "]"}], " ", "=", " ", 
     RowBox[{"{", " ", 
      RowBox[{
      "\"\<pinningStiffness\>\"", ",", " ", "\"\<constraint\>\"", ",", 
       "\"\<shape\>\"", ",", "\"\<label\>\"", ",", "\"\<style\>\""}], " ", 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"dataForm", "[", "angleJoint", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<angleStiffness\>\"", ",", " ", "\"\<angle\>\"", ",", 
       "\"\<shape\>\"", ",", "\"\<label\>\"", ",", "\"\<style\>\""}], " ", 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"dataForm", "[", "_", "]"}], " ", ":=", " ", 
     RowBox[{"{", "}"}]}], ";"}]}]}]], "Code",
 CellLabel->"In[77]:=",ExpressionUUID->"e1c8906d-3061-4fe8-9994-991ef705e42c"]
}, Closed]],

Cell[CellGroupData[{

Cell["packCells[]", "Subsection",ExpressionUUID->"3140d306-2fe3-4d80-8519-e5c1a3a2179c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"packCells", "[", " ", 
    RowBox[{"cells", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_", "[", 
        RowBox[{"_", ",", "_"}], "]"}], "..."}], "}"}]}], " ", "]"}], " ", ":=",
    "\n", "\t", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"groupedCells", " ", "=", " ", 
       RowBox[{"GatherBy", "[", " ", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"pullTags", " ", "/@", " ", "cells"}], "]"}], ",", " ", 
         "Head"}], " ", "]"}]}], " ", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"packCellType", "[", "  ", 
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], " ", "]"}], "&"}], " ", 
      "/@", " ", "groupedCells"}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"packCellType", "[", " ", 
   RowBox[{"s_String", ",", " ", "indices_", ",", " ", "data_"}], " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{"s", "[", 
   RowBox[{
    RowBox[{"ToPackedArray", "[", "indices", "]"}], ",", 
    RowBox[{"{", "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"packCellType", "[", " ", 
   RowBox[{"head_Symbol", ",", " ", "indices_", ",", " ", "data_"}], " ", 
   "]"}], " ", ":=", " ", "\n", "\t", 
  RowBox[{"head", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"ToPackedArray", "[", "indices", "]"}], " ", ",", " ", "\n", 
    "\t\t", 
    RowBox[{"compressCellData", "[", " ", 
     RowBox[{"head", ",", " ", "data"}], " ", "]"}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellLabel->"In[86]:=",ExpressionUUID->"d441c2cb-db4c-4b3c-be58-c401dbbf458e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pullTags", "[", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", ",", " ", "properties_"}], " ", "]"}], " ", "]"}], 
   " ", ":=", " ", 
   RowBox[{"With", "[", " ", "\n", 
    RowBox[{
     RowBox[{"{", " ", "\n", 
      RowBox[{
       RowBox[{"rules", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", " ", "\[Rule]", " ", "_"}], " ", "&"}], ")"}], " ", "/@",
          " ", 
         RowBox[{"dataForm", "[", "head", "]"}]}]}], ",", " ", "\n", 
       RowBox[{"untagged", " ", "=", " ", 
        RowBox[{"DeleteCases", "[", " ", 
         RowBox[{
          RowBox[{"Flatten", " ", "@", " ", 
           RowBox[{"{", "properties", "}"}]}], ",", " ", "_String"}], " ", 
         "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"indices", ",", 
           RowBox[{"{", "}"}]}], "]"}], "&"}], " ", "/@", " ", 
        RowBox[{"Cases", "[", " ", 
         RowBox[{
          RowBox[{"Flatten", "@", 
           RowBox[{"{", "properties", "}"}]}], ",", " ", "_String"}], " ", 
         "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"head", "[", 
        RowBox[{"indices", ",", " ", 
         RowBox[{"FilterRules", "[", " ", 
          RowBox[{"untagged", ",", " ", "rules"}], " ", "]"}]}], " ", "]"}]}],
       "\n", "\t", "}"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "badprop"}], " ", "=", " ", 
   "\"\<Properties `1` do not exist for cell `2`.\>\""}], ";"}]}], "Code",
 CellLabel->"In[89]:=",ExpressionUUID->"c533ba08-40c1-4f85-a5d9-ebd3d51e166d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"combineDataList", "[", " ", 
   RowBox[{"default_", " ", ",", " ", "data_"}], "  ", "]"}], " ", ":=", " ", 
  
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Last", " ", "/@", " ", 
      RowBox[{"GatherBy", "[", " ", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"default", ",", " ", "#"}], "}"}], " ", "]"}], ",", " ", 
        "directiveQ"}], " ", "]"}]}], ")"}], "&"}], " ", "/@", " ", 
   "data"}]}], "\n", 
 RowBox[{
  RowBox[{"directiveQ", "[", " ", 
   RowBox[{"_", "?", "ColorQ"}], " ", "]"}], " ", ":=", " ", 
  "\"\<color\>\""}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"directiveQ", "[", " ", "x_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"Head", "[", "x", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"combineData", "[", " ", 
   RowBox[{
   "dataType_", ",", " ", "defaultData_", ",", " ", "data_", " ", ",", " ", 
    "f_"}], " ", "]"}], " ", ":=", " ", "\n", "\t", 
  RowBox[{"SparseArray", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"f", " ", "/@", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"dataType", " ", "/.", " ", "data"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"dataType", " ", "\[Rule]", " ", 
          RowBox[{"{", "defaultData", "}"}]}], "}"}]}], " ", "/.", " ", 
       RowBox[{"Automatic", " ", "\[Rule]", " ", "\"\<Automatic\>\""}]}], 
      ")"}]}], ",", "\n", "\t\t", 
    RowBox[{"Length", "[", "data", "]"}], ",", "\n", "\t\t", "defaultData"}], 
   "\n", "\t", "]"}]}]}], "Code",
 CellLabel->"In[91]:=",ExpressionUUID->"a16e7b04-ada9-4bb9-a6c0-e1b705fe5e06"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"compressCellData", "[", " ", 
    RowBox[{"rigidBar", ",", " ", "data_"}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", "\n", 
    RowBox[{
     RowBox[{"{", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"mergedData", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Merge", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{
             RowBox[{"Flatten", "[", "#", "]"}], "&"}]}], "]"}], "&"}], " ", "/@",
          " ", "data"}]}], ",", "\n", "\t", 
       RowBox[{"default", " ", "=", " ", 
        RowBox[{"Dispatch", " ", "@", " ", 
         RowBox[{"defaultData", "[", "rigidBar", "]"}]}]}]}], "\n", "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<stiffness\>\"", ",", " ", "Infinity", ",", " ", "mergedData", 
         " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<length\>\"", ",", " ", "\"\<Automatic\>\"", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<shape\>\"", ",", " ", "\"\<Automatic\>\"", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<label\>\"", ",", " ", "None", ",", " ", "mergedData", " ", ",", 
         " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineDataList", "[", " ", 
        RowBox[{
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<style\>\"", " ", "/.", " ", "mergedData"}], " ", "/.",
            " ", "default"}], " ", "/.", " ", 
          RowBox[{"\"\<style\>\"", "\[Rule]", 
           RowBox[{"{", "}"}]}]}]}], " ", "]"}]}], "\n", "\t", "}"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compressCellData", "[", " ", 
    RowBox[{"spring", ",", " ", "data_"}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", "\n", 
    RowBox[{
     RowBox[{"{", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"mergedData", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Merge", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Flatten", "[", "#", "]"}], "]"}], "&"}]}], "]"}], 
          "&"}], " ", "/@", " ", "data"}]}], ",", "\n", "\t", 
       RowBox[{"default", " ", "=", " ", 
        RowBox[{"Dispatch", " ", "@", " ", 
         RowBox[{"defaultData", "[", "spring", "]"}]}]}]}], "\n", "}"}], ",", 
     "\n", "\t", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<stiffness\>\"", ",", " ", "Infinity", ",", " ", "mergedData", 
         " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<length\>\"", ",", " ", "\"\<Automatic\>\"", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{"\"\<strain\>\"", ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#1", "-", "#2"}], ")"}], "/", "#2"}], ")"}], "&"}], ",",
          " ", "mergedData", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<shape\>\"", ",", " ", "\"\<Automatic\>\"", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<label\>\"", ",", " ", "None", ",", " ", "mergedData", " ", ",", 
         " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineDataList", "[", " ", 
        RowBox[{
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<style\>\"", " ", "/.", " ", "mergedData"}], " ", "/.",
            " ", "default"}], " ", "/.", " ", 
          RowBox[{"\"\<style\>\"", "\[Rule]", 
           RowBox[{"{", "}"}]}]}]}], " ", "]"}]}], "\n", "\t", "}"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compressCellData", "[", " ", 
    RowBox[{"joint", ",", " ", "data_"}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", "\n", 
    RowBox[{
     RowBox[{"{", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"mergedData", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Merge", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Flatten", "[", "#", "]"}], "]"}], "&"}]}], "]"}], 
          "&"}], " ", "/@", " ", "data"}]}], ",", "\n", "\t", 
       RowBox[{"default", " ", "=", " ", 
        RowBox[{"Dispatch", " ", "@", " ", 
         RowBox[{"defaultData", "[", "joint", "]"}]}]}]}], "\n", "}"}], ",", 
     "\n", "\t", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<shape\>\"", ",", " ", "\"\<Automatic\>\"", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<label\>\"", ",", " ", "None", ",", " ", "mergedData", " ", ",", 
         " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineDataList", "[", " ", 
        RowBox[{
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<style\>\"", " ", "/.", " ", "mergedData"}], " ", "/.",
            " ", "default"}], " ", "/.", " ", 
          RowBox[{"\"\<style\>\"", "\[Rule]", 
           RowBox[{"{", "}"}]}]}]}], " ", "]"}]}], "\n", "\t", "}"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compressCellData", "[", " ", 
    RowBox[{"pinnedJoint", ",", " ", "data_"}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", "\n", 
    RowBox[{
     RowBox[{"{", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"mergedData", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Merge", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Flatten", "[", "#", "]"}], "]"}], "&"}]}], "]"}], 
          "&"}], " ", "/@", " ", "data"}]}], ",", "\n", "\t", 
       RowBox[{"default", " ", "=", " ", 
        RowBox[{"Dispatch", " ", "@", " ", 
         RowBox[{"defaultData", "[", "pinnedJoint", "]"}]}]}]}], "\n", "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<pinningStiffness\>\"", ",", " ", "Infinity", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<constraint\>\"", ",", " ", "\"\<Automatic\>\"", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<shape\>\"", ",", " ", "\"\<Automatic\>\"", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<label\>\"", ",", " ", "None", ",", " ", "mergedData", " ", ",", 
         " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineDataList", "[", " ", 
        RowBox[{
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<style\>\"", " ", "/.", " ", "mergedData"}], " ", "/.",
            " ", "default"}], " ", "/.", " ", 
          RowBox[{"\"\<style\>\"", "\[Rule]", 
           RowBox[{"{", "}"}]}]}]}], " ", "]"}]}], "\n", "\t", "}"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compressCellData", "[", " ", 
    RowBox[{"fold", ",", " ", "data_"}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", "\n", 
    RowBox[{
     RowBox[{"{", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"mergedData", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Merge", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Flatten", "[", "#", "]"}], "]"}], "&"}]}], "]"}], 
          "&"}], " ", "/@", " ", "data"}]}], ",", "\n", "\t", 
       RowBox[{"default", " ", "=", " ", 
        RowBox[{"Dispatch", " ", "@", " ", 
         RowBox[{"defaultData", "[", "fold", "]"}]}]}]}], "\n", "}"}], ",", 
     "\n", "\t", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<torsionalStiffness\>\"", ",", " ", "Infinity", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<angle\>\"", ",", " ", "\"\<Automatic\>\"", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<shape\>\"", ",", " ", "\"\<Automatic\>\"", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<label\>\"", ",", " ", "None", ",", " ", "mergedData", " ", ",", 
         " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineDataList", "[", " ", 
        RowBox[{
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<style\>\"", " ", "/.", " ", "mergedData"}], " ", "/.",
            " ", "default"}], " ", "/.", " ", 
          RowBox[{"\"\<style\>\"", "\[Rule]", 
           RowBox[{"{", "}"}]}]}]}], " ", "]"}]}], "\n", "\t", "}"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compressCellData", "[", " ", 
    RowBox[{"angleJoint", ",", " ", "data_"}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", "\n", 
    RowBox[{
     RowBox[{"{", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"mergedData", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Merge", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Flatten", "[", "#", "]"}], "]"}], "&"}]}], "]"}], 
          "&"}], " ", "/@", " ", "data"}]}], ",", "\n", "\t", 
       RowBox[{"default", " ", "=", " ", 
        RowBox[{"Dispatch", " ", "@", " ", 
         RowBox[{"defaultData", "[", "fold", "]"}]}]}]}], "\n", "}"}], ",", 
     "\n", "\t", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<angleStiffness\>\"", ",", " ", "Infinity", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<angle\>\"", ",", " ", "\"\<Automatic\>\"", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<shape\>\"", ",", " ", "\"\<Automatic\>\"", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<label\>\"", ",", " ", "None", ",", " ", "mergedData", " ", ",", 
         " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineDataList", "[", " ", 
        RowBox[{
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<style\>\"", " ", "/.", " ", "mergedData"}], " ", "/.",
            " ", "default"}], " ", "/.", " ", 
          RowBox[{"\"\<style\>\"", "\[Rule]", 
           RowBox[{"{", "}"}]}]}]}], " ", "]"}]}], "\n", "\t", "}"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compressCellData", "[", " ", 
    RowBox[{"face", ",", " ", "data_"}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", "\n", 
    RowBox[{
     RowBox[{"{", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"mergedData", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Merge", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Flatten", "[", "#", "]"}], "]"}], "&"}]}], "]"}], 
          "&"}], " ", "/@", " ", "data"}]}], ",", "\n", "\t", 
       RowBox[{"default", " ", "=", " ", 
        RowBox[{"Dispatch", " ", "@", " ", 
         RowBox[{"defaultData", "[", "face", "]"}]}]}]}], "\n", "}"}], ",", 
     "\n", "\t", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<shape\>\"", ",", " ", "0", " ", ",", " ", "mergedData", " ", ",",
          " ", "Last"}], " ", "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<shape\>\"", ",", " ", "\"\<Automatic\>\"", ",", " ", 
         "mergedData", " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineData", "[", " ", 
        RowBox[{
        "\"\<label\>\"", ",", " ", "None", ",", " ", "mergedData", " ", ",", 
         " ", "Last"}], "]"}], ",", "\n", "\t", 
       RowBox[{"combineDataList", "[", " ", 
        RowBox[{
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\"\<style\>\"", " ", "/.", " ", "mergedData"}], " ", "/.",
            " ", "default"}], " ", "/.", " ", 
          RowBox[{"\"\<style\>\"", "\[Rule]", 
           RowBox[{"{", "}"}]}]}]}], " ", "]"}]}], "\n", "\t", "}"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"compressCellData", "[", " ", 
   RowBox[{"elasticFace", ",", " ", "data_"}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", "\n", 
   RowBox[{
    RowBox[{"{", " ", "\n", "\t", 
     RowBox[{
      RowBox[{"mergedData", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Merge", "[", 
          RowBox[{"#", ",", " ", 
           RowBox[{
            RowBox[{"Reverse", "[", 
             RowBox[{"Flatten", "[", "#", "]"}], "]"}], "&"}]}], "]"}], "&"}],
         " ", "/@", " ", "data"}]}], ",", "\n", "\t", 
      RowBox[{"default", " ", "=", " ", 
       RowBox[{"Dispatch", " ", "@", " ", 
        RowBox[{"defaultData", "[", "elasticFace", "]"}]}]}]}], "\n", "}"}], 
    ",", "\n", "\t", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"combineData", "[", " ", 
       RowBox[{
       "\"\<YoungsModulus\>\"", ",", " ", "Infinity", ",", " ", "mergedData", 
        " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
      RowBox[{"combineData", "[", " ", 
       RowBox[{"\"\<PoissonRatio\>\"", ",", " ", 
        RowBox[{"1", "/", "3"}], ",", " ", "mergedData", " ", ",", " ", 
        "Last"}], "]"}], ",", "\n", "\n", "\t", 
      RowBox[{"combineData", "[", " ", 
       RowBox[{
       "\"\<shape\>\"", ",", " ", "\"\<Automatic\>\"", ",", " ", "mergedData",
         " ", ",", " ", "Last"}], "]"}], ",", "\n", "\t", 
      RowBox[{"combineData", "[", " ", 
       RowBox[{
       "\"\<label\>\"", ",", " ", "None", ",", " ", "mergedData", " ", ",", 
        " ", "Last"}], "]"}], ",", "\n", "\t", 
      RowBox[{"combineDataList", "[", " ", 
       RowBox[{
        RowBox[{"{", "}"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<style\>\"", " ", "/.", " ", "mergedData"}], " ", "/.", 
          " ", "default"}], " ", "/.", " ", 
         RowBox[{"\"\<style\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}]}]}], " ", "]"}]}], "\n", "\t", "}"}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->"In[95]:=",ExpressionUUID->"86e4ac4f-371a-4d0e-8ec5-01840aa47eca"]
}, Closed]],

Cell[CellGroupData[{

Cell["unpackCells[]", "Subsection",ExpressionUUID->"ee5265f2-5b85-4a46-a28b-a243bc9ff076"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"unpackCells", "[", " ", 
    RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"unpackCellType", " ", "/@", " ", "cells"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unpackCellType", "[", " ", 
    RowBox[{"s_String", "[", " ", "indices_", " ", "]"}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{"s", " ", "/@", " ", "indices"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unpackCellType", "[", " ", 
    RowBox[{"head_Symbol", "[", " ", 
     RowBox[{"indices_", ",", " ", "data_"}], " ", "]"}], " ", "]"}], " ", ":=",
    "\n", "\t", 
   RowBox[{"MapThread", "[", "\n", "\t\t", 
    RowBox[{"head", ",", "\n", "\t\t\t", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"indices", ",", "\n", "\t\t\t", 
       RowBox[{"Transpose", " ", "@", " ", 
        RowBox[{"uncompressCellData", "[", " ", 
         RowBox[{"head", ",", " ", "indices", ",", " ", "data"}], " ", 
         "]"}]}]}], "\n", "\t\t\t", "}"}]}], "\n", "\t", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"uncompressCellData", "[", " ", 
   RowBox[{"head_", " ", ",", " ", "indices_", ",", " ", "data_"}], " ", 
   "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"dataNames", "=", 
       RowBox[{"dataForm", "[", "head", "]"}]}], " ", ",", " ", 
      RowBox[{"length", " ", "=", " ", 
       RowBox[{"Length", "[", "indices", "]"}]}]}], " ", "}"}], ",", "\n", 
    "\t", 
    RowBox[{"MapThread", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Thread", "[", " ", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{"#1", ",", " ", "length"}], "]"}], " ", "->", " ", "#2"}], 
        " ", "]"}], " ", "&"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"dataNames", " ", ",", " ", "data"}], "}"}]}], "]"}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[103]:=",ExpressionUUID->"4875f961-32d2-4913-98ea-6cdd16c6277c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"uncompressCellData", "[", " ", 
    RowBox[{"rigidBar", " ", ",", " ", "indices_", " ", ",", " ", "data_"}], 
    " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"length", " ", "=", " ", 
         RowBox[{"Length", "[", "indices", "]"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Thread", "[", " ", 
          RowBox[{
           RowBox[{"ConstantArray", "[", " ", 
            RowBox[{"\"\<stiffness\>\"", ",", " ", "length"}], " ", "]"}], 
           " ", "\[Rule]", " ", 
           RowBox[{"data", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
         RowBox[{"Thread", "[", " ", 
          RowBox[{
           RowBox[{"ConstantArray", "[", " ", 
            RowBox[{"\"\<length\>\"", ",", " ", "length"}], " ", "]"}], " ", 
           "\[Rule]", " ", 
           RowBox[{"data", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
         RowBox[{"Thread", "[", " ", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"\"\<shape\>\"", ",", " ", "length"}], " ", "]"}], "  ", 
           "\[Rule]", " ", 
           RowBox[{"data", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
         RowBox[{"Thread", "[", " ", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"\"\<label\>\"", ",", " ", "length"}], " ", "]"}], "  ", 
           "\[Rule]", " ", 
           RowBox[{"data", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
         RowBox[{"Thread", "[", " ", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"\"\<style\>\"", ",", " ", "length"}], " ", "]"}], "  ", 
           "\[Rule]", " ", 
           RowBox[{"data", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], " ", "]"}]}], "\n", "\t", 
        "}"}]}], "\n", "]"}], "\n", 
     RowBox[{"uncompressCellData", "[", " ", 
      RowBox[{"spring", " ", ",", " ", "indices_", " ", ",", " ", "data_"}], 
      " ", "]"}]}], " ", ":=", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"length", " ", "=", " ", 
          RowBox[{"Length", "[", "indices", "]"}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Thread", "[", " ", 
           RowBox[{
            RowBox[{"ConstantArray", "[", " ", 
             RowBox[{"\"\<stiffness\>\"", ",", " ", "length"}], " ", "]"}], 
            " ", "\[Rule]", " ", 
            RowBox[{"data", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
          
          RowBox[{"Thread", "[", " ", 
           RowBox[{
            RowBox[{"ConstantArray", "[", " ", 
             RowBox[{"\"\<length\>\"", ",", " ", "length"}], " ", "]"}], " ", 
            "\[Rule]", " ", 
            RowBox[{"data", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
          
          RowBox[{"Thread", "[", " ", 
           RowBox[{
            RowBox[{"ConstantArray", "[", " ", 
             RowBox[{"\"\<strain\>\"", ",", " ", "length"}], " ", "]"}], " ", 
            "\[Rule]", " ", 
            RowBox[{"data", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
          
          RowBox[{"Thread", "[", " ", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{"\"\<shape\>\"", ",", " ", "length"}], " ", "]"}], "  ", 
            "\[Rule]", " ", 
            RowBox[{"data", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
          
          RowBox[{"Thread", "[", " ", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{"\"\<label\>\"", ",", " ", "length"}], " ", "]"}], "  ", 
            "\[Rule]", " ", 
            RowBox[{"data", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
          
          RowBox[{"Thread", "[", " ", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{"\"\<style\>\"", ",", " ", "length"}], " ", "]"}], "  ", 
            "\[Rule]", " ", 
            RowBox[{"data", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}], " ", "]"}]}], "\n", "\t", 
         "}"}]}], "\n", "]"}], "\n", 
      RowBox[{"uncompressCellData", "[", " ", 
       RowBox[{"fold", " ", ",", " ", "indices_", " ", ",", " ", "data_"}], 
       " ", "]"}]}], " ", ":=", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"With", "[", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"length", " ", "=", " ", 
           RowBox[{"Length", "[", "indices", "]"}]}], "}"}], ",", "\n", "\t", 
         
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Thread", "[", " ", 
            RowBox[{
             RowBox[{"ConstantArray", "[", " ", 
              RowBox[{"\"\<torsionalStiffness\>\"", ",", " ", "length"}], " ",
               "]"}], " ", "\[Rule]", " ", 
             RowBox[{"data", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
           RowBox[{"Thread", "[", " ", 
            RowBox[{
             RowBox[{"ConstantArray", "[", " ", 
              RowBox[{"\"\<angle\>\"", ",", " ", "length"}], " ", "]"}], " ", 
             "\[Rule]", " ", 
             RowBox[{"data", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
           RowBox[{"Thread", "[", " ", 
            RowBox[{
             RowBox[{"ConstantArray", "[", 
              RowBox[{"\"\<shape\>\"", ",", " ", "length"}], " ", "]"}], "  ",
              "\[Rule]", " ", 
             RowBox[{"data", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
           RowBox[{"Thread", "[", " ", 
            RowBox[{
             RowBox[{"ConstantArray", "[", 
              RowBox[{"\"\<label\>\"", ",", " ", "length"}], " ", "]"}], "  ",
              "\[Rule]", " ", 
             RowBox[{"data", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
           RowBox[{"Thread", "[", " ", 
            RowBox[{
             RowBox[{"ConstantArray", "[", 
              RowBox[{"\"\<style\>\"", ",", " ", "length"}], " ", "]"}], "  ",
              "\[Rule]", " ", 
             RowBox[{"data", "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], " ", "]"}]}], "\n", "\t", 
          "}"}]}], "\n", "]"}], "\n", 
       RowBox[{"uncompressCellData", "[", " ", 
        RowBox[{"joint", " ", ",", " ", "indices_", " ", ",", " ", "data_"}], 
        " ", "]"}]}], " ", ":=", "\n", 
      RowBox[{
       RowBox[{
        RowBox[{"With", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"length", " ", "=", " ", 
            RowBox[{"Length", "[", "indices", "]"}]}], "}"}], ",", "\n", "\t", 
          RowBox[{"{", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Thread", "[", " ", 
             RowBox[{
              RowBox[{"ConstantArray", "[", 
               RowBox[{"\"\<shape\>\"", ",", " ", "length"}], " ", "]"}], 
              "  ", "\[Rule]", " ", 
              RowBox[{"data", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
            "\t\t", 
            RowBox[{"Thread", "[", " ", 
             RowBox[{
              RowBox[{"ConstantArray", "[", 
               RowBox[{"\"\<label\>\"", ",", " ", "length"}], " ", "]"}], 
              "  ", "\[Rule]", " ", 
              RowBox[{"data", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
            "\t\t", 
            RowBox[{"Thread", "[", " ", 
             RowBox[{
              RowBox[{"ConstantArray", "[", 
               RowBox[{"\"\<style\>\"", ",", " ", "length"}], " ", "]"}], 
              "  ", "\[Rule]", " ", 
              RowBox[{"data", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}], "\n", "\t", 
           "}"}]}], "\n", "]"}], "\n", 
        RowBox[{"uncompressCellData", "[", " ", 
         RowBox[{
         "angleJoint", " ", ",", " ", "indices_", " ", ",", " ", "data_"}], 
         " ", "]"}]}], " ", ":=", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"With", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"length", " ", "=", " ", 
             RowBox[{"Length", "[", "indices", "]"}]}], "}"}], ",", "\n", 
           "\t", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Thread", "[", " ", 
              RowBox[{
               RowBox[{"ConstantArray", "[", " ", 
                RowBox[{"\"\<angleStiffness\>\"", ",", " ", "length"}], " ", 
                "]"}], " ", "\[Rule]", " ", 
               RowBox[{"data", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"Thread", "[", " ", 
              RowBox[{
               RowBox[{"ConstantArray", "[", " ", 
                RowBox[{"\"\<angle\>\"", ",", " ", "length"}], " ", "]"}], 
               " ", "\[Rule]", " ", 
               RowBox[{"data", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"Thread", "[", " ", 
              RowBox[{
               RowBox[{"ConstantArray", "[", 
                RowBox[{"\"\<shape\>\"", ",", " ", "length"}], " ", "]"}], 
               "  ", "\[Rule]", " ", 
               RowBox[{"data", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"Thread", "[", " ", 
              RowBox[{
               RowBox[{"ConstantArray", "[", 
                RowBox[{"\"\<label\>\"", ",", " ", "length"}], " ", "]"}], 
               "  ", "\[Rule]", " ", 
               RowBox[{"data", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"Thread", "[", " ", 
              RowBox[{
               RowBox[{"ConstantArray", "[", 
                RowBox[{"\"\<style\>\"", ",", " ", "length"}], " ", "]"}], 
               "  ", "\[Rule]", " ", 
               RowBox[{"data", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], " ", "]"}]}], "\n", "\t", 
            "}"}]}], "\n", "]"}], "\n", 
         RowBox[{"uncompressCellData", "[", " ", 
          RowBox[{"face", ",", " ", "indices_", " ", ",", " ", "data_"}], " ",
           "]"}]}], " ", ":=", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"With", "[", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"length", " ", "=", " ", 
              RowBox[{"Length", "[", "indices", "]"}]}], "}"}], ",", "\n", 
            "\t", 
            RowBox[{"{", "\n", "\t\t", 
             RowBox[{
              RowBox[{"Thread", "[", " ", 
               RowBox[{
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"\"\<shape\>\"", ",", " ", "length"}], " ", "]"}], 
                "  ", "\[Rule]", " ", 
                RowBox[{"data", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
              "\t\t", 
              RowBox[{"Thread", "[", " ", 
               RowBox[{
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"\"\<label\>\"", ",", " ", "length"}], " ", "]"}], 
                "  ", "\[Rule]", " ", 
                RowBox[{"data", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
              "\t\t", 
              RowBox[{"Thread", "[", " ", 
               RowBox[{
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"\"\<style\>\"", ",", " ", "length"}], " ", "]"}], 
                "  ", "\[Rule]", " ", 
                RowBox[{"data", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}]}], "\n", "\t", 
             "}"}]}], "\n", "]"}], "\n", 
          RowBox[{"uncompressCellData", "[", " ", 
           RowBox[{
           "elasticFace", " ", ",", " ", "indices_", " ", ",", " ", "data_"}],
            " ", "]"}]}], " ", ":=", "\n", 
         RowBox[{"With", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"length", " ", "=", " ", 
             RowBox[{"Length", "[", "indices", "]"}]}], "}"}], ",", "\n", 
           "\t", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Thread", "[", " ", 
              RowBox[{
               RowBox[{"ConstantArray", "[", " ", 
                RowBox[{"\"\<YoungsModulus\>\"", ",", " ", "length"}], " ", 
                "]"}], " ", "\[Rule]", " ", 
               RowBox[{"data", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"Thread", "[", " ", 
              RowBox[{
               RowBox[{"ConstantArray", "[", " ", 
                RowBox[{"\"\<PoissonRatio\>\"", ",", " ", "length"}], " ", 
                "]"}], " ", "\[Rule]", " ", 
               RowBox[{"data", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"Thread", "[", " ", 
              RowBox[{
               RowBox[{"ConstantArray", "[", 
                RowBox[{"\"\<shape\>\"", ",", " ", "length"}], " ", "]"}], 
               "  ", "\[Rule]", " ", 
               RowBox[{"data", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"Thread", "[", " ", 
              RowBox[{
               RowBox[{"ConstantArray", "[", 
                RowBox[{"\"\<label\>\"", ",", " ", "length"}], " ", "]"}], 
               "  ", "\[Rule]", " ", 
               RowBox[{"data", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"Thread", "[", " ", 
              RowBox[{
               RowBox[{"ConstantArray", "[", 
                RowBox[{"\"\<style\>\"", ",", " ", "length"}], " ", "]"}], 
               "  ", "\[Rule]", " ", 
               RowBox[{"data", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], " ", "]"}]}], "\n", "\t", 
            "}"}]}], "\n", "]"}]}]}]}]}]}]}]}], "*)"}]], "Code",
 CellLabel->
  "In[107]:=",ExpressionUUID->"3706d142-5a5e-444a-9e80-e1251af03ac5"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
replaceCellIndices[], replaceRepeatedCellIndices[], replaceCellData[]\
\>", "Subsection",ExpressionUUID->"df7a1f65-a32e-49cc-8c27-29579d1205e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"replaceCellIndices", "[", " ", 
   RowBox[{
    RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], " ", ",", " ", 
    "rules_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "#", "]"}], "[", " ", 
     RowBox[{
      RowBox[{"ReplaceAll", "[", " ", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", "rules"}], " ", "]"}], ",",
       " ", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], "&"}], " ", "/@", " ", 
   "cells"}]}]], "Code",
 CellLabel->
  "In[108]:=",ExpressionUUID->"f1139107-b69c-4fd4-8921-cbf950ea380f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"replaceRepeatedCellIndices", "[", " ", 
   RowBox[{
    RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], " ", ",", " ", 
    "rules_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "#", "]"}], "[", " ", 
     RowBox[{
      RowBox[{"ReplaceRepeated", "[", " ", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", "rules"}], " ", "]"}], ",",
       " ", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], "&"}], " ", "/@", " ", 
   "cells"}]}]], "Code",
 CellLabel->
  "In[109]:=",ExpressionUUID->"aedb8fbc-7b63-4e91-8f14-89eba922e5be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"replaceCellData", "[", " ", 
    RowBox[{
     RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
     "rules_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "#", "]"}], "[", " ", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"replaceElement", "[", " ", 
          RowBox[{"#", ",", " ", "rules"}], " ", "]"}], " ", "&"}], " ", "/@",
         " ", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], " ", "]"}], "&"}], " ", "/@", 
    " ", "cells"}]}], "\n", "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"from", ":", " ", "https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
        "questions"}], "/", "13790"}], "/", "using"}], "-", "replaceall", "-",
      "on", "-", "sparsearray"}]}], "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceElement", "[", 
    RowBox[{"s_SparseArray", ",", " ", "rule_"}], "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "    ", 
      RowBox[{
       RowBox[{"elem", " ", "=", " ", 
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          RowBox[{"s", "[", "\"\<NonzeroValues\>\"", "]"}], ",", " ", 
          "rule"}], "]"}]}], ",", "\n", "    ", 
       RowBox[{"def", " ", "=", " ", 
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          RowBox[{"s", "[", "\"\<Background\>\"", "]"}], ",", " ", "rule"}], 
         "]"}]}]}], "\n", "    ", "}"}], ",", "\n", "\n", "    ", 
     RowBox[{"Replace", "[", "\n", "        ", 
      RowBox[{"s", ",", "\n", "        ", 
       RowBox[{
        RowBox[{
         RowBox[{"Verbatim", "[", "SparseArray", "]"}], "[", 
         RowBox[{"a__", ",", " ", "_", ",", " ", 
          RowBox[{"{", 
           RowBox[{"b__", ",", " ", "_"}], "}"}]}], "]"}], " ", 
        "\[RuleDelayed]", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"a", ",", " ", "def", ",", " ", 
          RowBox[{"{", 
           RowBox[{"b", ",", " ", "elem"}], "}"}]}], "]"}]}]}], "\n", "    ", 
      "]"}]}], "\n", "]"}]}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{"if", " ", "the", " ", "data", " ", 
    RowBox[{"isn", "'"}], "t", " ", "a", " ", "SparseArray"}], "\n", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"replaceElement", "[", " ", 
   RowBox[{"s_", ",", " ", "rule_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"ReplaceAll", "[", " ", 
   RowBox[{"s", ",", " ", "rule"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[110]:=",ExpressionUUID->"b5a4e93b-03e7-40af-85c4-fe8ffd3be9b9"]
}, Closed]],

Cell[CellGroupData[{

Cell["sortCellType[], orderCellType[]", "Subsection",ExpressionUUID->"530c0200-8cec-4ba0-ac9d-8bb8ee2048af"],

Cell["Functions for sorting cells internally.", "Text",ExpressionUUID->"30722304-63f8-45bb-856c-187e452eb61d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sortCellType", "[", " ", 
   RowBox[{
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", ",", " ", "data_"}], " ", "]"}], ",", " ", 
    RowBox[{"sortingFunction_", " ", ":", " ", "Identity"}]}], " ", "]"}], ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"order", " ", "=", " ", 
      RowBox[{"OrderingBy", "[", " ", 
       RowBox[{"indices", ",", " ", "sortingFunction"}], " ", "]"}]}], " ", 
     "}"}], ",", "\n", "\t", 
    RowBox[{"head", "[", " ", 
     RowBox[{
      RowBox[{"indices", "[", 
       RowBox[{"[", " ", "order", " ", "]"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", " ", "order", " ", "]"}], "]"}], "&"}], " ", "/@", " ", 
       "data"}]}], " ", "]"}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[113]:=",ExpressionUUID->"3dcbb299-d60d-4ccd-b0a6-8765b702245a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "ordering", " ", "is", " ", "a", " ", "list", " ", "of", " ", "integers"}],
    "*)"}], "\n", 
  RowBox[{
   RowBox[{"orderCellType", "[", " ", 
    RowBox[{
     RowBox[{"head_", "[", 
      RowBox[{"indices_", ",", "data_"}], " ", "]"}], ",", " ", "ordering_"}],
     " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"head", "[", " ", 
    RowBox[{
     RowBox[{"indices", "[", 
      RowBox[{"[", " ", "ordering", " ", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", " ", "ordering", " ", "]"}], "]"}], "&"}], " ", "/@", 
      " ", "data"}]}], " ", "]"}]}]}]], "Code",
 CellLabel->
  "In[114]:=",ExpressionUUID->"102c4a3c-1dcf-48e5-af1a-6ac1cb37098a"]
}, Closed]],

Cell[CellGroupData[{

Cell["deleteDuplicateCells[]", "Subsection",ExpressionUUID->"66a4fa93-b1cb-408a-b53d-07229a966a10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"this", " ", "function", " ", "unpacked", " ", "arrays"}], "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"deleteDuplicateCells", "[", " ", 
     RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], " ", "]"}], " ", ":=",
     " ", 
    RowBox[{"deleteDuplicateCells", " ", "/@", " ", "cells"}]}], "\n", 
   RowBox[{
    RowBox[{"deleteDuplicateCells", "[", " ", 
     RowBox[{"head_", "[", " ", 
      RowBox[{"indices_", ",", " ", "data_"}], " ", "]"}], " ", "]"}], " ", ":=",
     " ", 
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{"indexList", " ", "=", " ", 
        RowBox[{
         RowBox[{"DeleteDuplicatesBy", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Transpose", "[", " ", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Range", "[", " ", 
               RowBox[{"Length", "[", "indices", "]"}], " ", "]"}], ",", " ", 
              "indices"}], " ", "}"}], " ", "]"}], ",", " ", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Sort", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"Last", "[", "#", "]"}], "}"}], "]"}], "]"}], "&"}]}], 
          " ", "\n", "\t", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], " ", "\n", "}"}], ",", 
      "\n", "\t", 
      RowBox[{"head", "[", " ", 
       RowBox[{
        RowBox[{"ToPackedArray", " ", "@", " ", 
         RowBox[{"indices", "[", 
          RowBox[{"[", " ", "indexList", " ", "]"}], "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", " ", "indexList", " ", "]"}], "]"}], "&"}], " ", "/@",
          " ", "data"}]}], " ", "]"}]}], "\n", "]"}]}]}]}]], "Code",
 CellLabel->
  "In[115]:=",ExpressionUUID->"64d17235-533b-4916-b535-0ebabd865c68"]
}, Closed]],

Cell[CellGroupData[{

Cell["deleteDegenerateCells[]", "Subsection",ExpressionUUID->"31a2a4ca-20a8-4cbc-b01c-74d8e07dc5cb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"deleteDegenerateCells", "[", " ", 
   RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"deleteDegenerateCells", " ", "/@", " ", "cells"}]}], "\n", 
 RowBox[{
  RowBox[{"deleteDegenerateCells", "[", " ", 
   RowBox[{"head_", "[", " ", 
    RowBox[{"indices_", ",", " ", "data_"}], " ", "]"}], " ", "]"}], " ", ":=",
   "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"id", " ", "=", " ", 
      RowBox[{"Pick", "[", " ", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "indices", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"DuplicateFreeQ", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "#", "}"}], "]"}], "]"}], "&"}], " ", "/@", " ", 
         "indices"}]}], "]"}]}], " ", "}"}], ",", "\n", "\t", 
    RowBox[{"head", "[", " ", 
     RowBox[{
      RowBox[{"indices", "[", 
       RowBox[{"[", "id", "]"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "id", "]"}], "]"}], "&"}], "/@", "data"}]}], " ", 
     "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[117]:=",ExpressionUUID->"0a895eca-c68c-4041-b86b-8579247034b0"]
}, Closed]],

Cell[CellGroupData[{

Cell["joinCells[]", "Subsection",ExpressionUUID->"9b7efb19-fa3f-458c-b10d-055c4761c19a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"joinCells", "[", " ", "cells_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"joinCellType", " ", "/@", " ", 
    RowBox[{"GatherBy", "[", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", "cells", "]"}], ",", " ", "Head"}], " ", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"joinCellType", "[", " ", 
   RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], " ", "]"}], " ", ":=",
   "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"head", " ", "=", " ", 
       RowBox[{"Head", "[", 
        RowBox[{"cells", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", " ", 
      RowBox[{"indices", " ", "=", " ", 
       RowBox[{"cells", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", " ", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"cells", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", "\n", "\t", 
    
    RowBox[{"sortCellType", " ", "@", " ", 
     RowBox[{"deleteDegenerateCells", " ", "@", " ", 
      RowBox[{"deleteDuplicateCells", " ", "@", " ", 
       RowBox[{"head", "[", " ", 
        RowBox[{
         RowBox[{"Join", " ", "@@", " ", "indices"}], " ", ",", " ", 
         RowBox[{"Join", " ", "@@@", " ", 
          RowBox[{"Transpose", "[", " ", "data", " ", "]"}]}]}], " ", 
        "]"}]}]}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[119]:=",ExpressionUUID->"b44baf22-b49e-49eb-8d47-48ae6f6bc8b6"]
}, Closed]],

Cell[CellGroupData[{

Cell["parseCells[], unparseCells[]", "Subsection",ExpressionUUID->"eadd1bf6-0132-4bb4-8f59-3c816e0f837e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"facePattern", " ", "=", " ", 
   RowBox[{"face", "|", "elasticFace"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{"edgePattern", " ", "=", " ", 
   RowBox[{"rigidBar", "|", "fold", "|", "angleJoint", "|", "spring"}]}], " ",
   ";"}], "\n", 
 RowBox[{
  RowBox[{"vertexPattern", " ", "=", " ", 
   RowBox[{"joint", "|", "pinnedJoint"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellSpecPattern", " ", "=", " ", 
    RowBox[{
    "facePattern", "|", "edgePattern", "|", "vertexPattern", "|", 
     "_String"}]}], " ", ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"distributePropertyRules", " ", "=", " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h", " ", ":", " ", "cellSpecPattern"}], ")"}], "[", " ", 
        "indices_", " ", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"h", "[", 
        RowBox[{"indices", ",", " ", 
         RowBox[{"{", "}"}]}], " ", "]"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h", " ", ":", " ", "cellSpecPattern"}], ")"}], "[", " ", 
        RowBox[{"indices_", ",", " ", "properties_Rule"}], " ", "]"}], " ", 
       "\[RuleDelayed]", " ", 
       RowBox[{"h", "[", 
        RowBox[{"indices", ",", " ", 
         RowBox[{"{", "properties", "}"}]}], " ", "]"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Property", "[", " ", 
        RowBox[{"h_List", ",", " ", "properties_"}], " ", "]"}], " ", 
       "\[RuleDelayed]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Property", "[", " ", 
           RowBox[{"#", ",", " ", "properties"}], " ", "]"}], "&"}], " ", "/@",
          " ", "h"}], ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Property", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{"h", " ", ":", " ", "cellSpecPattern"}], ")"}], "[", " ", 
          RowBox[{"indices_", ",", " ", "properties_"}], " ", "]"}], " ", ",",
          " ", "newProperties_"}], " ", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"h", "[", 
        RowBox[{"indices", ",", " ", 
         RowBox[{"Flatten", "[", " ", 
          RowBox[{"{", " ", 
           RowBox[{"properties", ",", " ", "newProperties"}], " ", "}"}], " ",
           "]"}]}], " ", "]"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h", " ", ":", " ", "vertexPattern"}], ")"}], "[", " ", 
        RowBox[{
         RowBox[{"indices_", "?", "VectorQ"}], " ", ",", " ", "properties_"}],
         " ", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"(", "  ", 
        RowBox[{
         RowBox[{
          RowBox[{"h", "[", " ", 
           RowBox[{"#", " ", ",", " ", "properties"}], " ", "]"}], "&"}], " ",
          "/@", " ", "indices"}], "  ", ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h", " ", ":", " ", 
          RowBox[{"edgePattern", "|", "facePattern"}]}], ")"}], "[", " ", 
        RowBox[{
         RowBox[{"indices_", "?", "MatrixQ"}], " ", ",", " ", "properties_"}],
         " ", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"(", "  ", 
        RowBox[{
         RowBox[{
          RowBox[{"h", "[", " ", 
           RowBox[{"#", " ", ",", " ", "properties"}], " ", "]"}], "&"}], " ",
          "/@", " ", "indices"}], "  ", ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h", " ", ":", " ", "vertexPattern"}], ")"}], "[", " ", 
        RowBox[{
         RowBox[{"label_", " ", "\[Rule]", " ", "coordinates_"}], " ", ",", 
         " ", "properties_"}], " ", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"h", "[", " ", 
          RowBox[{"label", ",", " ", "properties"}], " ", "]"}], ",", " ", 
         RowBox[{"add", "[", " ", 
          RowBox[{"label", " ", ",", " ", "coordinates"}], " ", "]"}]}], " ", 
        "}"}]}]}], "\n", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"expansionRules", " ", "=", " ", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"face", "[", " ", 
      RowBox[{"i_", " ", ",", " ", "properties_"}], " ", "]"}], " ", 
     "\[RuleDelayed]", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"face", "[", " ", 
        RowBox[{"i", " ", ",", " ", "properties"}], " ", "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"rigidBar", "[", " ", 
          RowBox[{"#", ",", " ", "properties"}], " ", "]"}], " ", "&"}], " ", 
        "/@", " ", 
        RowBox[{"Partition", "[", " ", 
         RowBox[{"i", " ", ",", " ", "2", ",", " ", "1", ",", " ", "1"}], " ",
          "]"}]}]}], " ", "}"}]}], "\n", "}"}]}], ";"}]}], "Code",
 CellLabel->
  "In[121]:=",ExpressionUUID->"eb718079-61c4-4ca0-995a-7b96ba132a18"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parseCells", "[", " ", "cells_List", " ", "]"}], " ", ":=", " ", 
  RowBox[{"parseCells", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}], ",", " ", "cells"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"parseCells", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "oldcoordinates_", ",", " ", "oldcells_", " ", ",", " ", "oldlabels_"}], 
     "}"}], ",", " ", "cells_List"}], " ", "]"}], " ", ":=", " ", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
     "expandedCells", " ", ",", " ", "goodCells", ",", " ", "badCells", ",", 
      " ", "newcoordinates", " ", ",", " ", "labels", ",", " ", "newlabels", 
      ",", " ", "coordinateCells"}], "}"}], ",", "\n", "\n", "\t", 
    RowBox[{
     RowBox[{"expandedCells", " ", "=", " ", 
      RowBox[{"Flatten", " ", "@", " ", 
       RowBox[{"ReplaceAll", "[", " ", 
        RowBox[{
         RowBox[{"Flatten", " ", "@", " ", 
          RowBox[{"ReplaceRepeated", "[", " ", 
           RowBox[{
            RowBox[{"Flatten", "[", "cells", "]"}], ",", " ", 
            "distributePropertyRules"}], "]"}]}], " ", ",", " ", 
         "expansionRules"}], " ", "]"}]}]}], " ", ";", "\n", "\t", 
     RowBox[{"coordinateCells", " ", "=", " ", 
      RowBox[{"Cases", "[", " ", 
       RowBox[{"expandedCells", ",", " ", 
        RowBox[{"add", "[", 
         RowBox[{"_", ",", "_"}], "]"}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"goodCells", " ", "=", " ", 
      RowBox[{"Cases", "[", " ", 
       RowBox[{"expandedCells", ",", " ", 
        RowBox[{"cellSpecPattern", "[", 
         RowBox[{"_", ",", "_"}], "]"}]}], " ", "]"}]}], ";", "\n", "\n", 
     "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"if", " ", "there", " ", "are", " ", "bad", " ", "cells"}], 
       ",", " ", 
       RowBox[{"report", " ", "a", " ", "warning"}]}], "*)"}], "\n", "\t", 
     RowBox[{"badCells", " ", "=", " ", 
      RowBox[{"DeleteCases", "[", " ", 
       RowBox[{"expandedCells", ",", " ", 
        RowBox[{
         RowBox[{"cellSpecPattern", "[", 
          RowBox[{"_", ",", "_"}], "]"}], "|", "_add"}]}], " ", "]"}]}], ";", 
     "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "badCells", "]"}], ">", "0"}], ",", " ", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"mechanism", "::", "badcells"}], ",", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Head", "/@", "badCells"}], "]"}]}], "]"}]}], " ", "]"}], 
     ";", "\n", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "any", " ", "vertices", " ", "that", " ", "got", " ", "added", " ", 
       "as", " ", "cells", " ", "get", " ", "taken", " ", "care", " ", "of", 
       " ", "here"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"{", "  ", 
       RowBox[{"labels", " ", ",", " ", "newcoordinates"}], " ", "}"}], " ", 
      "=", " ", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "coordinateCells", "]"}], " ", ">", " ", 
         "0"}], ",", "\n", "\t\t", 
        RowBox[{"Transpose", "[", " ", 
         RowBox[{"List", " ", "@@@", " ", "coordinateCells"}], "]"}], " ", 
        ",", "\n", "\t\t", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"{", "}"}], ",", " ", 
          RowBox[{"{", "}"}]}], " ", "}"}]}], "\n", "\t", "]"}]}], ";", "\n", 
     "\n", "\t", 
     RowBox[{"newlabels", " ", "=", " ", 
      RowBox[{"Join", "[", "\n", "\t\t", 
       RowBox[{"oldlabels", ",", "\n", "\t\t", 
        RowBox[{"Thread", "[", " ", 
         RowBox[{"labels", " ", "\[Rule]", " ", 
          RowBox[{"Range", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "oldcoordinates", "]"}], " ", "+", " ", 
             "1"}], " ", ",", " ", 
            RowBox[{
             RowBox[{"Length", "[", "oldcoordinates", "]"}], " ", "+", " ", 
             RowBox[{"Length", "[", "newcoordinates", "]"}]}]}], " ", "]"}]}],
          " ", "]"}]}], "\n", "\t", "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{"new", " ", "coordinates"}], " ", "*)"}], "\n", "\t\t", 
      RowBox[{
       RowBox[{"ToPackedArray", " ", "@", " ", 
        RowBox[{"PadRight", "[", 
         RowBox[{"Join", "[", " ", 
          RowBox[{"oldcoordinates", ",", " ", "newcoordinates"}], " ", "]"}], 
         "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"(*", " ", "cells", " ", "*)"}], "\n", "\t\t", 
       RowBox[{"sortCellType", " ", "/@", " ", 
        RowBox[{"joinCells", "[", " ", 
         RowBox[{"Flatten", " ", "@", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"replaceCellIndices", "[", " ", 
             RowBox[{
              RowBox[{"packCells", "[", " ", "goodCells", " ", "]"}], ",", 
              " ", 
              RowBox[{"Dispatch", " ", "@", " ", "newlabels"}]}], "]"}], ",", 
            " ", "oldcells"}], " ", "}"}]}], " ", "]"}]}], ",", "\n", "\t\t", 
       "newlabels"}], "\n", "\t", "}"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[127]:=",ExpressionUUID->"3e48711c-51f0-4af3-a14f-17eb5878f2bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "badcells"}], " ", "=", " ", 
   "\"\<Cells of type `1` cannot be parsed and will be ignored.\>\""}], 
  ";"}]], "Code",
 CellLabel->
  "In[129]:=",ExpressionUUID->"18f7d81c-3e4a-4d14-8b8f-8a0d0cf9a5fd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"unparseCells", "[", " ", 
    RowBox[{
     RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], " ", ",", " ", 
     RowBox[{"head", " ", ":", " ", "_"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Flatten", "[", " ", 
    RowBox[{"unparseCellType", " ", "/@", " ", 
     RowBox[{"Pick", "[", " ", 
      RowBox[{"cells", ",", " ", 
       RowBox[{"Head", "/@", "cells"}], ",", " ", "head"}], " ", "]"}]}], " ",
     "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"unparseCellType", "[", " ", 
   RowBox[{"head_", "[", " ", 
    RowBox[{"indices_", " ", ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"head", " ", "/@", " ", "indices"}]}], "\n", 
 RowBox[{
  RowBox[{"unparseCellType", "[", " ", 
   RowBox[{"head_", "[", " ", 
    RowBox[{"indices_", " ", ",", " ", "data_"}], " ", "]"}], " ", "]"}], " ",
   ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"dataRules", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", " ", 
         RowBox[{
          RowBox[{"dataForm", "[", "head", "]"}], " ", "\[Rule]", " ", "#"}], 
         " ", "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"Transpose", "[", "data", "]"}]}]}], "\n", "}"}], ",", "\n", 
    "\t", 
    RowBox[{"MapThread", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"head", "[", 
        RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{"indices", ",", " ", "dataRules"}], " ", "}"}]}], " ", "]"}]}],
    "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[130]:=",ExpressionUUID->"e760c130-8b29-4ddc-8403-453272bb4643"]
}, Closed]],

Cell[CellGroupData[{

Cell["cellPattern[]", "Subsection",ExpressionUUID->"732c18fc-515b-4842-b168-c8f2ecbbfe56"],

Cell["\<\
Functions to take user specified cell patterns and expand them properly to \
catch every instance.\
\>", "Text",ExpressionUUID->"ce7524de-e1a1-4a7a-bd48-392ed7009d2d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellPattern", "[", " ", "r_Alternatives", " ", "]"}], " ", ":=", 
  " ", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"groupedByHead", " ", "=", " ", 
      RowBox[{"GatherBy", "[", " ", 
       RowBox[{
        RowBox[{"List", "@@", "r"}], ",", " ", "Head"}], " ", "]"}]}], " ", 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", " ", 
       RowBox[{"indexPattern", " ", "/@", " ", 
        RowBox[{"Alternatives", " ", "@@", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], " ", "]"}], "&"}], 
     " ", "/@", " ", "groupedByHead"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"cellPattern", "[", " ", "x_Blank", " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"_", "[", "_", "]"}], "}"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "x", "]"}], "\[Equal]", "0"}]}]}], "\n", 
 RowBox[{
  RowBox[{"cellPattern", "[", " ", "x_Blank", " ", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", " ", "_", " ", "]"}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"cellPattern", "[", " ", "x_String", " ", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"x", "[", "_", "]"}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellPattern", "[", " ", 
    RowBox[{"head_", "[", " ", "ind_", " ", "]"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"head", "[", " ", 
     RowBox[{"indexPattern", "[", "ind", "]"}], " ", "]"}], "}"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"indexPattern", "[", " ", "x_Blank", " ", "]"}], " ", ":=", " ", 
  "x"}], "\n", 
 RowBox[{
  RowBox[{"indexPattern", "[", " ", "r_Alternatives", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"indexPattern", " ", "/@", " ", "r"}]}], "\n", 
 RowBox[{
  RowBox[{"indexPattern", "[", " ", "n_List", " ", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"numbers", " ", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "n", "]"}], "]"}]}], " ", "}"}], ",", " ", 
    RowBox[{"Alternatives", " ", "@@", " ", 
     RowBox[{"Map", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"RotateRight", "[", 
         RowBox[{"n", ",", "#"}], "]"}], "&"}], ",", " ", "numbers"}], " ", 
      "]"}]}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"indexPattern", "[", " ", 
   RowBox[{"n", " ", ":", " ", 
    RowBox[{"Except", "[", 
     RowBox[{"_Alternatives", "|", "_List"}], "]"}]}], " ", "]"}], " ", ":=", 
  " ", "n"}]}], "Code",
 CellLabel->
  "In[133]:=",ExpressionUUID->"ec426106-5275-44e5-a09e-d44cc50595d8"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
casesCellType[], selectCellType[], identifyCellFromList[], \
casesCellFromDataType[], selectCellFromDataType[]\
\>", "Subsection",ExpressionUUID->"b47f0046-da3c-4283-8228-29f1a5615f84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"casesCellType", "[", " ", 
   RowBox[{"pattern_", " ", ",", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", " ", ",", " ", "data_"}], " ", "]"}]}], " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{"Pick", "[", " ", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "indices", "]"}], "]"}], ",", " ", 
    RowBox[{"head", "/@", "indices"}], " ", ",", " ", 
    RowBox[{"Alternatives", " ", "@@", " ", "pattern"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"selectCellType", "[", " ", 
    RowBox[{"f_", " ", ",", " ", 
     RowBox[{"head_", "[", " ", 
      RowBox[{"indices_", " ", ",", " ", "data_"}], " ", "]"}]}], " ", "]"}], 
   " ", ":=", " ", 
   RowBox[{"Pick", "[", " ", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "indices", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"head", "[", "#", "]"}], "]"}], "&"}], " ", "/@", " ", 
      "indices"}]}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"identifyCellFromList", "[", " ", 
    RowBox[{"headSpec_", " ", ",", " ", 
     RowBox[{"indexList_", "?", "VectorQ"}], " ", ",", " ", 
     RowBox[{"head_", "[", " ", 
      RowBox[{
       RowBox[{"indices_", "?", "VectorQ"}], ",", " ", "data_"}], " ", 
      "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"table", " ", "=", " ", 
        RowBox[{"Association", " ", "@@", " ", 
         RowBox[{"Thread", "[", " ", 
          RowBox[{"Rule", "[", 
           RowBox[{"indices", " ", ",", " ", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "indices", "]"}], "]"}]}], " ", "]"}], 
          " ", "]"}]}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"DeleteMissing", "[", " ", 
       RowBox[{"table", " ", "/@", " ", "indexList"}], " ", "]"}]}], "\n", 
     "]"}], " ", "/;", " ", 
    RowBox[{"MatchQ", "[", 
     RowBox[{"head", ",", " ", "headSpec"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"identifyCellFromList", "[", " ", 
   RowBox[{"headSpec_", " ", ",", " ", 
    RowBox[{"indexList", " ", ":", " ", 
     RowBox[{"{", "___List", "}"}]}], " ", ",", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{
      RowBox[{"indices", " ", ":", " ", 
       RowBox[{"{", "___List", "}"}]}], ",", " ", "data_"}], " ", "]"}]}], 
   " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"table", " ", "=", " ", 
       RowBox[{"Association", " ", "@@", " ", 
        RowBox[{"Thread", "[", " ", 
         RowBox[{"Rule", "[", " ", 
          RowBox[{
           RowBox[{"Sort", " ", "/@", " ", "indices"}], " ", ",", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "indices", "]"}], "]"}]}], " ", "]"}], " ",
          "]"}]}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"DeleteMissing", "[", " ", 
      RowBox[{"table", " ", "/@", " ", 
       RowBox[{"(", 
        RowBox[{"Sort", " ", "/@", " ", "indexList"}], ")"}]}], " ", "]"}]}], 
    "\n", "]"}], "/;", " ", 
   RowBox[{"MatchQ", "[", 
    RowBox[{"head", ",", " ", "headSpec"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"identifyCellFromList", "[", " ", 
    RowBox[{"_", " ", ",", " ", "indexList_", ",", " ", 
     RowBox[{"head_", "[", " ", 
      RowBox[{"_", ",", " ", "_"}], " ", "]"}]}], " ", "]"}], " ", ":=", " ", 
   
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"casesCellFromDataType", "[", " ", 
   RowBox[{
    RowBox[{"dataSpec_", " ", "\[Rule]", " ", "dataPattern_"}], " ", ",", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", ",", " ", "data_"}], " ", "]"}]}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"datalist", " ", "=", " ", 
      RowBox[{"dataForm", "[", "head", "]"}]}], " ", "}"}], ",", "\n", 
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"dataIndex", " ", "=", " ", 
        RowBox[{"dataSpec", " ", "/.", " ", 
         RowBox[{"Thread", "[", 
          RowBox[{"datalist", " ", "\[Rule]", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "datalist", "]"}], "]"}]}], "]"}]}]}], " ",
        "}"}], ",", "\n", "\t", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"IntegerQ", "[", "dataIndex", "]"}], ",", " ", "\n", "\t\t", 
        RowBox[{"Pick", "[", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "indices", "]"}], "]"}], ",", " ", 
          RowBox[{"Normal", "@", 
           RowBox[{"data", "[", 
            RowBox[{"[", " ", "dataIndex", " ", "]"}], "]"}]}], " ", ",", " ",
           "dataPattern"}], " ", "]"}], ",", "\n", "\t\t", 
        RowBox[{"{", "}"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"selectCellFromDataType", "[", " ", 
   RowBox[{
    RowBox[{"dataSpec_", " ", "\[Rule]", " ", "selector_"}], " ", ",", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", ",", " ", "data_"}], " ", "]"}]}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"datalist", " ", "=", " ", 
      RowBox[{"dataForm", "[", "head", "]"}]}], " ", "}"}], ",", "\n", 
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"dataIndex", " ", "=", " ", 
        RowBox[{"datalist", " ", "/.", " ", 
         RowBox[{"Thread", "[", 
          RowBox[{"datalist", " ", "\[Rule]", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "datalist", "]"}], "]"}]}], "]"}]}]}], " ",
        "}"}], ",", "\n", "\t", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"IntegerQ", "[", "dataIndex", "]"}], ",", " ", "\n", "\t\t", 
        RowBox[{"Pick", "[", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "indices", "]"}], "]"}], ",", " ", 
          RowBox[{"selector", " ", "/@", " ", 
           RowBox[{"data", "[", 
            RowBox[{"[", " ", "dataIndex", " ", "]"}], "]"}]}]}], " ", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"{", "}"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[142]:=",ExpressionUUID->"58cae39b-f26e-4c92-93be-35567681d0c7"]
}, Closed]],

Cell[CellGroupData[{

Cell["removeCells[], takeCells[]", "Subsection",ExpressionUUID->"5de5a8d3-e193-443c-8f31-f2cec7f5741d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"removeCells", "[", " ", 
   RowBox[{
    RowBox[{"deletedCells", " ", ":", " ", 
     RowBox[{"{", "___Integer", "}"}]}], ",", " ", 
    RowBox[{"head_", "[", 
     RowBox[{"indices_", ",", " ", "data_"}], "]"}]}], " ", "]"}], " ", ":=", 
  "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"remainingCells", " ", "=", " ", 
      RowBox[{"Complement", "[", " ", 
       RowBox[{
        RowBox[{"Range", "[", " ", 
         RowBox[{"Length", "[", "indices", "]"}], " ", "]"}], " ", ",", " ", 
        "deletedCells"}], " ", "]"}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "remainingCells", "]"}], " ", "\[Equal]", " ", 
       "0"}], ",", "\n", "\t\t", 
      RowBox[{"{", "}"}], ",", "\n", "\t\t", 
      RowBox[{"head", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"indices", "[", 
         RowBox[{"[", "remainingCells", "]"}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "remainingCells"}], "]"}], "]"}]}], "\n", 
       "\t\t", "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[149]:=",ExpressionUUID->"ebd6d1da-3b12-4f71-801c-7e96aa50437e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"takeCells", "[", " ", 
   RowBox[{
    RowBox[{"remainingCells", " ", ":", " ", 
     RowBox[{"{", "___Integer", "}"}]}], ",", " ", 
    RowBox[{"head_", "[", 
     RowBox[{"indices_", ",", " ", "data_"}], "]"}]}], " ", "]"}], " ", ":=", 
  "\n", "\t", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "remainingCells", "]"}], " ", "\[Equal]", " ", 
     "0"}], ",", "\n", "\t\t", 
    RowBox[{"{", "}"}], ",", "\n", "\t\t", 
    RowBox[{"head", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"indices", "[", 
       RowBox[{"[", "remainingCells", "]"}], "]"}], ",", "\n", "\t\t\t", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "remainingCells"}], "]"}], "]"}]}], "\n", 
     "\t\t", "]"}]}], "\n", "\t", "]"}]}]], "Code",
 CellLabel->
  "In[150]:=",ExpressionUUID->"0b9eb7cd-cd75-419c-b2e5-5ecb30e634b7"]
}, Closed]],

Cell[CellGroupData[{

Cell["changeCellDataInternal[]", "Subsection",ExpressionUUID->"27f84a4e-e698-437b-94f5-cbe3588f169d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"changeCellData", "[", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"c1", ",", "c2", ",", "..."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"head", ",", " ", "dataType"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"data1", ",", " ", "data2", ",", " ", "..."}], "}"}], ",", 
       " ", "cells"}], " ", "]"}], " ", "replaces", " ", "the", " ", "old", 
     " ", "data", " ", 
     RowBox[{"(", 
      RowBox[{"of", " ", "type", " ", "dataType"}], ")"}], " ", "for", " ", 
     "cells", " ", "indexed", " ", "by", " ", "c1"}], ",", " ", 
    RowBox[{"...", " ", "with", " ", "data1"}], ",", " ", 
    RowBox[{"...", "\n", 
     RowBox[{"changeCellData", "[", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"c1", ",", "c2", ",", "..."}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"head", ",", " ", "dataType"}], "}"}], ",", " ", 
       RowBox[{"{", "data", "}"}], ",", " ", "cells"}], " ", "]"}], " ", 
     "replaces", " ", "the", " ", "old", " ", "data", " ", 
     RowBox[{"(", 
      RowBox[{"of", " ", "type", " ", "dataType"}], ")"}], " ", "for", " ", 
     "cells", " ", "indexed", " ", "by", " ", "c1"}], ",", " ", 
    RowBox[{"...", " ", "all", " ", "with", " ", 
     RowBox[{"data", ".", "\n", 
      RowBox[{"changeCellData", "[", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"c1", ",", "c2", ",", "..."}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"head", ",", " ", "dataType"}], "}"}], ",", " ", "dataFunc", 
        ",", " ", "cells"}], " ", "]"}]}], " ", "replaces", " ", "the", " ", 
     "old", " ", "data", " ", 
     RowBox[{"(", 
      RowBox[{"of", " ", "type", " ", "dataType"}], ")"}], " ", "for", " ", 
     "cells", " ", "indexed", " ", "by", " ", "c1"}], ",", " ", 
    RowBox[{
    "...", " ", "by", " ", "applying", " ", "dataFunc", " ", "to", " ", "the",
      " ", "old", " ", 
     RowBox[{"data", "."}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"changeCellDataInternal", "[", " ", 
     RowBox[{
      RowBox[{"changingCells", " ", ":", " ", 
       RowBox[{"{", "___Integer", "}"}]}], ",", " ", 
      RowBox[{"spec", " ", ":", " ", 
       RowBox[{"{", 
        RowBox[{"_", " ", ",", " ", "_"}], "}"}]}], ",", " ", 
      "specifiedData_List", ",", " ", 
      RowBox[{"cells", " ", ":", " ", "packedCellPattern"}]}], " ", "]"}], 
    " ", ":=", " ", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"changeCellDataType", "[", " ", 
       RowBox[{
       "changingCells", ",", " ", "spec", ",", " ", "specifiedData", ",", " ",
         "#"}], " ", "]"}], "&"}], " ", "/@", " ", "cells"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"changeCellDataType", "[", " ", 
     RowBox[{
      RowBox[{"changingCells", " ", ":", " ", 
       RowBox[{"{", "___Integer", "}"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"headSpec_", ",", " ", "dataSpec_"}], "}"}], ",", " ", 
      "specifiedData_", " ", ",", " ", 
      RowBox[{"headSpec_", "[", " ", 
       RowBox[{"indices_", " ", ",", " ", "data_"}], " ", "]"}]}], " ", "]"}],
     " ", ":=", "\n", 
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"length", " ", "=", " ", 
         RowBox[{"Length", "[", "indices", "]"}]}], ",", "\n", 
        RowBox[{"newData", " ", "=", " ", 
         RowBox[{"If", "[", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"ListQ", "[", "specifiedData", "]"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Length", "[", "specifiedData", "]"}], "\[Equal]", 
             "1"}]}], ",", "  ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"specifiedData", ",", 
             RowBox[{"Length", "[", "changingCells", "]"}]}], "]"}], ",", " ",
            "\n", "\t", "specifiedData"}], "\n", "\t", "]"}]}], ",", "\n", 
        "\t", 
        RowBox[{"dataIndex", " ", "=", " ", 
         RowBox[{"dataSpec", " ", "/.", " ", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"dataForm", "[", "headSpec", "]"}], " ", "\[Rule]", " ", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", 
              RowBox[{"dataForm", "[", "headSpec", "]"}], "]"}], "]"}]}], 
           "]"}]}]}]}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"IntegerQ", "[", "dataIndex", "]"}], ",", "\n", "\t\t", 
        RowBox[{"With", "[", " ", 
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{"changedCells", " ", "=", " ", 
            RowBox[{"Select", "[", " ", 
             RowBox[{"changingCells", ",", " ", 
              RowBox[{
               RowBox[{
               "0", " ", "<", " ", "#", " ", "\[LessEqual]", " ", "length"}], 
               "&"}]}], "]"}]}], " ", 
           RowBox[{"(*", 
            RowBox[{
            "these", " ", "are", " ", "the", " ", "cells", " ", "within", " ",
              "range"}], "*)"}], "}"}], ",", "\n", "\t\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "changedCells", "]"}], ">", "0"}], ",", 
            "\n", "\t\t\t\t", 
            RowBox[{"headSpec", "[", "\n", "\t\t\t\t\t", 
             RowBox[{"indices", ",", "\n", "\t\t\t\t\t", 
              RowBox[{"ReplacePart", "[", " ", 
               RowBox[{"data", ",", " ", 
                RowBox[{"dataIndex", " ", "\[Rule]", " ", 
                 RowBox[{"changeData", "[", " ", "\n", "\t\t\t\t\t\t\t", 
                  RowBox[{"changedCells", ",", " ", "\n", "\t\t\t\t\t\t\t", 
                   RowBox[{"data", "[", 
                    RowBox[{"[", " ", "dataIndex", " ", "]"}], "]"}], ",", 
                   " ", "\n", "\t\t\t\t\t\t\t", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"if", " ", "its", " ", "a", " ", "list"}], ",", 
                    " ", 
                    RowBox[{"use", " ", "it"}], ",", " ", 
                    RowBox[{"if", " ", "not", " ", "map", " ", "it"}]}], 
                    "*)"}], " ", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ListQ", "[", "newData", "]"}], ",", " ", 
                    "newData", ",", " ", 
                    RowBox[{"newData", " ", "/@", " ", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", " ", "dataIndex", " ", "]"}], "]"}]}]}], " ",
                     "]"}]}], " ", "\n", "\t\t\t\t\t\t\t", "]"}]}]}], " ", 
               "]"}]}], "\n", "\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"headSpec", "[", " ", 
             RowBox[{"indices", ",", " ", "data"}], " ", "]"}]}], "\n", 
           "\t\t\t", "]"}]}], "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
        RowBox[{"headSpec", "[", 
         RowBox[{"indices", ",", "data"}], "]"}]}], "\n", "\t", "]"}]}], "\n",
      "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"changeCellDataType", "[", " ", 
     RowBox[{
      RowBox[{"changingCells", " ", ":", " ", 
       RowBox[{"{", "___Integer", "}"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"headSpec_", ",", " ", "dataSpec_"}], "}"}], ",", " ", 
      "newData_", " ", ",", " ", 
      RowBox[{"spec", " ", ":", " ", 
       RowBox[{"_", "[", " ", 
        RowBox[{"_", " ", ",", " ", "data_"}], " ", "]"}]}]}], " ", "]"}], 
    " ", ":=", " ", "spec"}]}]}]], "Code",
 CellLabel->
  "In[151]:=",ExpressionUUID->"31a72297-71f7-4b0b-a689-6535b1e08576"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"changeData", "[", " ", 
    RowBox[{
     RowBox[{"changedCells", " ", ":", " ", 
      RowBox[{"{", "___Integer", "}"}]}], ",", " ", "data_SparseArray", ",", 
     " ", "newdata_"}], "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"processedData", " ", "=", " ", 
        RowBox[{"newdata", " ", "/.", " ", 
         RowBox[{"Automatic", " ", "\[Rule]", " ", "\"\<Automatic\>\""}]}]}], 
       ",", "\n", "\t", 
       RowBox[{"processedIndices", " ", "=", " ", 
        RowBox[{"List", " ", "/@", " ", "changedCells"}]}], ",", "\n", "\t", 
       "newRules"}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"newRules", " ", "=", " ", 
       RowBox[{"Thread", "[", " ", 
        RowBox[{"processedIndices", " ", "\[Rule]", " ", "processedData"}], 
        " ", "]"}]}], ";", "\n", "\t", 
      RowBox[{"SparseArray", "[", " ", 
       RowBox[{
        RowBox[{"Join", "[", " ", 
         RowBox[{"newRules", " ", ",", " ", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"ArrayRules", "[", " ", "data", " ", "]"}], ",", " ", 
            RowBox[{"Except", "[", "newRules", "]"}]}], "]"}]}], " ", "]"}], 
        " ", ",", " ", 
        RowBox[{"Length", "[", " ", "data", " ", "]"}]}], " ", "]"}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeData", "[", " ", 
    RowBox[{
     RowBox[{"changedCells", " ", ":", " ", 
      RowBox[{"{", "___Integer", "}"}]}], ",", " ", 
     RowBox[{"data", " ", ":", " ", 
      RowBox[{"{", "__List", "}"}]}], ",", " ", "newdata_"}], " ", "]"}], " ",
    ":=", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"processedData", " ", "=", " ", 
        RowBox[{"ArrayRules", "[", " ", 
         RowBox[{"\"\<data\>\"", " ", "/@", " ", "data"}], " ", "]"}]}], ",", 
       "\n", "\t", 
       RowBox[{"processedIndices", " ", "=", " ", 
        RowBox[{"Thread", "[", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"List", " ", "/@", " ", "changedCells"}], ")"}], " ", 
          "\[Rule]", " ", 
          RowBox[{"MapThread", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"\"\<data\>\"", "[", 
              RowBox[{"mergeDataList", "[", 
               RowBox[{"#1", ",", "#2"}], "]"}], "]"}], "&"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"data", "[", 
               RowBox[{"[", " ", "changedCells", " ", "]"}], "]"}], ",", " ", 
              
              RowBox[{"newdata", " ", "/.", " ", 
               RowBox[{
               "Automatic", " ", "\[Rule]", " ", "\"\<Automatic\>\""}]}]}], 
             "}"}]}], " ", "]"}]}], " ", "]"}]}]}], "\n", "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"Normal", "[", " ", 
       RowBox[{"SparseArray", "[", " ", 
        RowBox[{
         RowBox[{"Join", "[", " ", 
          RowBox[{"processedIndices", ",", " ", "processedData"}], "]"}], " ",
          ",", " ", 
         RowBox[{"Length", "[", "data", "]"}]}], " ", "]"}], " ", "]"}], "[", 
      
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"changeData", "[", " ", 
   RowBox[{
    RowBox[{"changedCells", " ", ":", " ", 
     RowBox[{"{", "___Integer", "}"}]}], ",", " ", "data_List", ",", " ", 
    "newdata_"}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"processedData", " ", "=", " ", 
       RowBox[{"ArrayRules", "[", " ", 
        RowBox[{"\"\<data\>\"", " ", "/@", " ", "data"}], " ", "]"}]}], ",", 
      "\n", "\t", 
      RowBox[{"processedIndices", " ", "=", " ", 
       RowBox[{"Thread", "[", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"List", " ", "/@", " ", "changedCells"}], ")"}], " ", 
         "\[Rule]", " ", 
         RowBox[{"MapThread", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"\"\<data\>\"", "[", "#2", "]"}], "&"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", " ", "changedCells", " ", "]"}], "]"}], ",", " ", 
             RowBox[{"newdata", " ", "/.", " ", 
              RowBox[{
              "Automatic", " ", "\[Rule]", " ", "\"\<Automatic\>\""}]}]}], 
            "}"}]}], " ", "]"}]}], " ", "]"}]}]}], "\n", "}"}], ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"Normal", "[", " ", 
      RowBox[{"SparseArray", "[", " ", 
       RowBox[{
        RowBox[{"Join", "[", " ", 
         RowBox[{"processedIndices", ",", " ", 
          RowBox[{"FilterRules", "[", 
           RowBox[{"processedData", ",", " ", 
            RowBox[{"Except", "[", "processedIndices", "]"}]}], "]"}]}], 
         "]"}], " ", ",", " ", 
        RowBox[{"Length", "[", "data", "]"}]}], " ", "]"}], " ", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\n", "]"}]}], "\n"}], "Code",\

 CellLabel->
  "In[154]:=",ExpressionUUID->"3302b513-e9fe-45e5-b7f9-d675ecefb2c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mergeDataList", "[", " ", 
   RowBox[{"data1_", " ", ",", " ", "data2_"}], "  ", "]"}], " ", ":=", " ", 
  RowBox[{"Last", " ", "/@", " ", 
   RowBox[{"GatherBy", "[", " ", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"data1", ",", " ", "data2"}], "}"}], " ", "]"}], ",", " ", 
     "directiveQ"}], " ", "]"}]}]}]], "Code",
 CellLabel->
  "In[157]:=",ExpressionUUID->"2b8c3df9-7cd3-41f4-b20d-28cb2d4c46bc"]
}, Closed]],

Cell[CellGroupData[{

Cell["mapCellsInternal[]", "Subsection",ExpressionUUID->"5a94c171-934c-4d12-ad62-4dfa84b8a359"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mapCellsInternal", "[", " ", 
   RowBox[{"f_", ",", " ", 
    RowBox[{"cells", " ", ":", " ", "packedCellPattern"}]}], " ", "]"}], " ", 
  ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"mapCellType", "[", 
     RowBox[{"f", ",", " ", "#"}], "]"}], "&"}], " ", "/@", " ", 
   "cells"}]}], "\n", 
 RowBox[{
  RowBox[{"mapCellType", "[", " ", 
   RowBox[{"f_", ",", " ", 
    RowBox[{"celltype", " ", ":", " ", 
     RowBox[{"_", "[", 
      RowBox[{"_", ",", "_"}], "]"}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"parseCells", "[", " ", 
    RowBox[{"f", " ", "/@", " ", 
     RowBox[{"unparseCells", "[", "celltype", "]"}]}], " ", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Code",
 CellLabel->
  "In[158]:=",ExpressionUUID->"0e91cd52-98a9-4991-bd33-c8a77649afb7"]
}, Closed]],

Cell[CellGroupData[{

Cell["outputCells[]", "Subsection",ExpressionUUID->"b05847f7-0cfe-43d6-88c4-014ef3ddb0dd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"outputCells", "[", " ", 
    RowBox[{"pattern_", ",", " ", 
     RowBox[{"cells", " ", ":", " ", "packedCellPattern"}]}], " ", "]"}], " ",
    ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"outputCellType", "[", 
      RowBox[{"pattern", ",", " ", "#"}], "]"}], "&"}], " ", "/@", " ", 
    "cells"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"outputCellType", "[", " ", 
   RowBox[{"_", " ", ",", " ", 
    RowBox[{"_String", "[", " ", 
     RowBox[{"indices_", ",", " ", 
      RowBox[{"{", "}"}]}], " ", "]"}]}], " ", "]"}], " ", ":=", " ", 
  "Nothing"}], "\n", 
 RowBox[{
  RowBox[{"outputCellType", "[", " ", 
   RowBox[{"_", ",", " ", 
    RowBox[{"head_", "[", 
     RowBox[{"indices_", ",", 
      RowBox[{"{", "}"}]}], "]"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"head", "[", "indices", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"outputCellType", "[", " ", 
   RowBox[{"None", ",", " ", 
    RowBox[{"head_", "[", 
     RowBox[{"indices_", ",", " ", "data_"}], "]"}]}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"head", "[", "indices", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"outputCellType", "[", " ", 
   RowBox[{"pattern_", ",", " ", 
    RowBox[{"head_", "[", 
     RowBox[{"indices_", ",", " ", "data_"}], "]"}]}], " ", "]"}], " ", ":=", 
  "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"dataRules", " ", "=", " ", 
      RowBox[{
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"Thread", " ", "/@", " ", 
         RowBox[{"FilterRules", "[", " ", 
          RowBox[{
           RowBox[{"Thread", "[", " ", 
            RowBox[{
             RowBox[{"dataForm", "[", "head", "]"}], " ", "\[Rule]", " ", 
             "data"}], " ", "]"}], ",", " ", "pattern"}], "]"}]}], " ", "]"}],
        " ", "/.", " ", 
       RowBox[{"\"\<Automatic\>\"", "\[Rule]", "Automatic"}]}]}], "\n", "}"}],
     ",", "\n", "\t", 
    RowBox[{
     RowBox[{"head", "[", "indices", "]"}], " ", "\[Rule]", " ", 
     "dataRules"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[160]:=",ExpressionUUID->"3e3005a5-6c98-4e26-bd10-dad515d4dea7"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["private functions for creating mechanisms", "Section",ExpressionUUID->"65c5c4a8-5b60-4f27-b9e3-a8f1d4521cff"],

Cell[CellGroupData[{

Cell["replaceRules[]", "Subsection",ExpressionUUID->"c0a0b487-7f74-48f4-a1f1-dd679b5bc71d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"replaceRules", "[", " ", 
    RowBox[{
     RowBox[{"{", "}"}], ",", " ", "appliedRules__"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceRules", "[", " ", 
    RowBox[{"rules_", ",", " ", "appliedRules_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"replaceRules", "[", " ", 
    RowBox[{"rules", ",", " ", "appliedRules", ",", " ", "1"}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceRules", "[", " ", 
    RowBox[{
     RowBox[{"rules", " ", ":", " ", 
      RowBox[{"{", "__Rule", "}"}]}], ",", " ", "appliedRules_", ",", " ", 
     "1"}], " ", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"flippedRules", " ", "=", " ", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"List", " ", "@@@", " ", "rules"}], " ", "]"}]}], " ", "}"}], 
     ",", "\n", "\t", 
     RowBox[{"Rule", " ", "@@@", " ", 
      RowBox[{"Transpose", "[", " ", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"Replace", "[", " ", 
          RowBox[{
           RowBox[{"flippedRules", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "appliedRules", 
           ",", " ", 
           RowBox[{"{", "1", "}"}]}], " ", "]"}], ",", " ", 
         RowBox[{"flippedRules", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", "}"}], " ", "]"}]}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"replaceRules", "[", " ", 
   RowBox[{
    RowBox[{"rules", " ", ":", " ", 
     RowBox[{"{", "__Rule", "}"}]}], ",", " ", "appliedRules_", ",", " ", 
    "2"}], " ", "]"}], " ", ":=", " ", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"flippedRules", " ", "=", " ", 
      RowBox[{"Transpose", "[", " ", 
       RowBox[{"List", " ", "@@@", " ", "rules"}], " ", "]"}]}], " ", "}"}], 
    ",", "\n", "\t", 
    RowBox[{"Rule", " ", "@@@", " ", 
     RowBox[{"Transpose", "[", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"flippedRules", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"Replace", "[", " ", 
         RowBox[{
          RowBox[{"flippedRules", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", ",", " ", "appliedRules", ",",
           " ", 
          RowBox[{"{", "1", "}"}]}], " ", "]"}]}], " ", "}"}], " ", "]"}]}]}],
    "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[165]:=",ExpressionUUID->"731da110-bc83-4f8d-b712-4e7c00d0e5ef"]
}, Closed]],

Cell[CellGroupData[{

Cell["removeOverlappingCoordinates[]", "Subsection",ExpressionUUID->"3a62305e-7798-4811-a242-8c9fc5e4aa41"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"removeOverlappingCoordinates", "[", " ", 
    RowBox[{
     RowBox[{"head_", "[", 
      RowBox[{
      "coordinateList_", ",", " ", "mr_", ",", " ", "cells_", ",", " ", 
       "labels_"}], "]"}], ",", " ", 
     RowBox[{"None", "|", "0"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"head", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"ToPackedArray", "[", "coordinateList", "]"}], ",", "\n", "\t\t",
      "mr", ",", "\n", "\t\t", 
     RowBox[{"deleteDuplicateCells", " ", "@", " ", "cells"}], ",", "\n", 
     "\t\t", "labels"}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"removeOverlappingCoordinates", "[", " ", 
   RowBox[{
    RowBox[{"head_", "[", 
     RowBox[{
     "coordinateList_", ",", " ", "mr_", ",", " ", "cells_", ",", " ", 
      "labels_"}], "]"}], ",", " ", 
    RowBox[{"precision", " ", ":", " ", 
     RowBox[{"_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericQ", "[", 
          RowBox[{"N", "[", "#", "]"}], "]"}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"N", "[", "#", "]"}], ">", "0"}]}], " ", "&"}], ")"}]}], 
     " ", ":", " ", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "12"}], ")"}]}]}]}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"numberedVertices", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"Range", " ", "@", " ", 
           RowBox[{"Length", " ", "@", " ", "coordinateList"}]}], ",", " ", 
          "coordinateList"}], " ", "}"}], "]"}]}], ",", "\n", "\t", 
      "gatheredVertices", ",", "rules"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"gatheredVertices", "=", 
      RowBox[{"GatherBy", "[", "\n", "\t\t", 
       RowBox[{"numberedVertices", ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
         "they", " ", "are", " ", "the", " ", "same", " ", "if", " ", "they", 
          " ", "are", " ", "the", " ", "same", " ", "within", " ", "the", " ",
           "specified", " ", 
          RowBox[{"precision", "."}]}], "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"Rationalize", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", "precision"}], 
          "]"}], "&"}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
     RowBox[{"rules", "=", 
      RowBox[{"Dispatch", " ", "@", " ", 
       RowBox[{"Flatten", "[", " ", 
        RowBox[{"(*", 
         RowBox[{
         "two", " ", "levels", " ", "to", " ", "thread", " ", "through"}], 
         "*)"}], "\n", "\t\t", 
        RowBox[{"Thread", " ", "/@", " ", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"gatheredVertices", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], " ", 
           "\[Rule]", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "gatheredVertices", "]"}], "]"}]}], " ", 
          "]"}]}], "\n", "\t", "]"}]}]}], ";", "\n", "\n", "\t", 
     RowBox[{"head", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"ToPackedArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "&"}], " ", "/@", " ", 
         "gatheredVertices"}], "]"}], ",", "\n", "\t\t", "mr", ",", "\n", 
       "\t\t", 
       RowBox[{"deleteDuplicateCells", " ", "@", " ", 
        RowBox[{"replaceCellIndices", "[", 
         RowBox[{"cells", ",", "rules"}], "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"replaceRules", "[", " ", 
        RowBox[{"labels", ",", " ", "rules", ",", " ", "2"}], " ", "]"}]}], 
      "\n", "\t", "]"}]}]}], "\n", "]"}]}]}], "Code",ExpressionUUID->\
"bbfddab8-6ea8-4120-8eb4-f3216479642f"]
}, Closed]],

Cell[CellGroupData[{

Cell["deleteDegenerateCellsFromMechanism[]", "Subsection",ExpressionUUID->"fbf41453-ce16-449c-a7d8-392e16ddcde9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deleteDegenerateCellsFromMechanism", "[", " ", 
   RowBox[{"head_", "[", 
    RowBox[{
    "coordinates_", ",", " ", "mr_", ",", " ", "cells_", ",", " ", 
     "labels_"}], "]"}], " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"head", "[", " ", 
   RowBox[{"coordinates", ",", " ", "mr", ",", " ", 
    RowBox[{"deleteDegenerateCells", "[", "cells", "]"}], ",", " ", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Reverse", "[", "labels", "]"}], "]"}]}], " ", "]"}]}]], "Code",
 CellLabel->
  "In[170]:=",ExpressionUUID->"c5fa8e38-81f1-4e35-952b-a5bead4479e6"]
}, Closed]],

Cell[CellGroupData[{

Cell["missingVertices[]", "Subsection",ExpressionUUID->"f40fca3b-5ac3-45df-9833-1ec262db5844"],

Cell[BoxData[
 RowBox[{
  RowBox[{"missingVertices", "[", " ", 
   RowBox[{"numberOfVertices_", " ", ",", " ", "cells_"}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"With", "[", " ", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"joints", " ", "=", " ", 
      RowBox[{"Cases", "[", " ", 
       RowBox[{"cells", ",", " ", "_joint"}], " ", "]"}]}], "\n", "}"}], ",", 
    "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", " ", "joints", " ", "]"}], " ", "\[Equal]", " ",
        "0"}], ",", " ", "\n", "\t\t", 
      RowBox[{"Range", "[", "numberOfVertices", "]"}], ",", "\n", "\t\t", 
      RowBox[{"Complement", "[", " ", 
       RowBox[{
        RowBox[{"Range", "[", "numberOfVertices", "]"}], ",", " ", 
        RowBox[{"cells", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], " ", "]"}]}], "\n", "\t", 
     "]"}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[171]:=",ExpressionUUID->"89ea601f-aa9b-4950-84c3-22eafdcf6db0"]
}, Closed]],

Cell[CellGroupData[{

Cell["addMeshRegion[], createMeshRegion[]", "Subsection",ExpressionUUID->"50aaa118-7aeb-4322-877d-ed8c6a7663fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"choose", " ", "your", " ", "own", " ", "dimension"}], "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"addMeshRegion", "[", " ", 
     RowBox[{
      RowBox[{"head_", "[", " ", 
       RowBox[{
        RowBox[{"coordinates_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MatrixQ", "[", 
            RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], " ", ",", 
        " ", "_", " ", ",", " ", 
        RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], " ", ",", " ", 
        "labels_"}], " ", "]"}], ",", " ", "Automatic", ",", " ", 
      "options_"}], " ", "]"}], " ", ":=", "\n", 
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"chooseDimension", "[", " ", "coordinates", " ", "]"}]}], " ",
        "}"}], ",", "\n", "\t", 
      RowBox[{"head", "[", "\n", "\t\t", 
       RowBox[{"coordinates", " ", ",", " ", "\n", "\t\t", 
        RowBox[{"createMeshRegion", "[", " ", 
         RowBox[{"head", ",", " ", 
          RowBox[{"PadRight", "[", " ", 
           RowBox[{"coordinates", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "coordinates", "]"}], " ", ",", " ", 
              "dim"}], "}"}]}], " ", "]"}], ",", " ", "cells", " ", ",", " ", 
          "options"}], "]"}], ",", " ", "\n", "\t\t", "cells", ",", "\n", 
        "\t\t", "labels"}], "\n", "\t", "]"}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"addMeshRegion", "[", " ", 
     RowBox[{
      RowBox[{"head_", "[", " ", 
       RowBox[{
        RowBox[{"coordinates_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MatrixQ", "[", 
            RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], " ", ",", 
        " ", "_", " ", ",", " ", 
        RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], " ", ",", " ", 
        "labels_"}], " ", "]"}], ",", " ", "dimSpec_", ",", " ", "options_"}],
      " ", "]"}], " ", ":=", "\n", "\t", 
    RowBox[{"head", "[", "\n", "\t\t", 
     RowBox[{"coordinates", " ", ",", "\n", "\t\t", 
      RowBox[{"createMeshRegion", "[", " ", 
       RowBox[{"head", ",", " ", 
        RowBox[{"PadRight", "[", " ", 
         RowBox[{"coordinates", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "coordinates", "]"}], ",", " ", 
            "dimSpec"}], "}"}]}], " ", "]"}], ",", " ", "cells", " ", ",", 
        " ", "options"}], "]"}], ",", " ", "\n", "\t\t", "cells", ",", " ", 
      "\n", "\t\t", "labels"}], "\n", "\t", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"chooseDimension", "[", " ", "coordinates_", " ", "]"}], " ", ":=",
     " ", 
    RowBox[{
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"coordinates", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", ".", " ", 
         RowBox[{"coordinates", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}]}], " ", "<", " ", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "12"}], ")"}]}]}], ",", " ", "2", ",", " ", "3"}], " ",
       "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{"Length", "[", " ", 
       RowBox[{"coordinates", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", "\[Equal]", " ", 
      "3"}]}]}], "\n", 
   RowBox[{
    RowBox[{"chooseDimension", "[", " ", "coordinates_", " ", "]"}], " ", ":=",
     " ", 
    RowBox[{"Length", "[", " ", 
     RowBox[{"coordinates", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}]}]}]], "Code",
 CellLabel->
  "In[172]:=",ExpressionUUID->"2fd91df5-6766-4d60-a3c7-53d9a52d7b96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createMeshRegion", "[", " ", 
   RowBox[{"head_", ",", " ", "coordinates_", " ", ",", " ", 
    RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
    "options_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", "\n", " ", 
     RowBox[{"displayCells", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"toDisplayCells", "[", 
         RowBox[{"head", ",", " ", "#"}], "]"}], "&"}], " ", "/@", " ", 
       "cells"}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"MeshRegion", "[", " ", 
     RowBox[{"coordinates", " ", ",", " ", 
      RowBox[{"Flatten", "[", " ", 
       RowBox[{"displayCells", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "]"}], ",", "\n", 
      "\t\t", 
      RowBox[{"Flatten", " ", "@", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"MeshCellLabel", " ", "\[Rule]", "  ", 
           RowBox[{"Flatten", "[", " ", 
            RowBox[{
             RowBox[{"displayCells", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "4"}], "]"}], "]"}], " ", ",", " ", "1"}], 
            " ", "]"}]}], ",", "\n", "\t\t", 
          RowBox[{"MeshCellStyle", " ", "\[Rule]", "  ", 
           RowBox[{"Flatten", "[", " ", 
            RowBox[{
             RowBox[{"displayCells", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", ",", " ", "1"}], 
            " ", "]"}]}], ",", "\n", "\t\t", 
          RowBox[{"MeshCellShapeFunction", " ", "\[Rule]", "  ", 
           RowBox[{"Flatten", "[", " ", 
            RowBox[{
             RowBox[{"displayCells", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", ",", " ", "1"}], 
            " ", "]"}]}], ",", "\n", "\t\t", 
          RowBox[{"Method", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"CoplanarityTolerance", "->", "100"}], ",", " ", 
             RowBox[{"DeleteDuplicateCoordinates", "->", "False"}]}], "}"}]}],
           ",", "\n", "\t\t", "options"}], "\n", "\t\t", "}"}], "]"}]}]}], 
     "\n", "\t", "]"}]}], "\n", "]"}]}]], "Code",ExpressionUUID->"3ccd1308-\
4b25-462c-bf14-ca7dea82c5fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellMeshPrimitive", "[", " ", 
   RowBox[{
    RowBox[{"rigidBar", "|", "spring", "|", "fold"}], ",", " ", "_"}], " ", 
   "]"}], " ", ":=", " ", "Line"}], "\n", 
 RowBox[{
  RowBox[{"cellMeshPrimitive", "[", " ", 
   RowBox[{
    RowBox[{"joint", " ", "|", " ", "pinnedJoint"}], " ", ",", "_"}], "]"}], 
  " ", ":=", " ", "Point"}], "\n", 
 RowBox[{
  RowBox[{"cellMeshPrimitive", "[", " ", 
   RowBox[{
    RowBox[{"face", " ", "|", " ", "elasticFace"}], " ", ",", "_"}], "]"}], 
  " ", ":=", " ", "Polygon"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellMeshPrimitive", "[", " ", 
    RowBox[{"_", " ", ",", "_"}], "]"}], " ", ":=", " ", "None"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"toDisplayCells", "[", 
   RowBox[{"mechType_", ",", " ", 
    RowBox[{"head_", "[", " ", 
     RowBox[{"indices_", ",", " ", "data_"}], " ", "]"}]}], " ", "]"}], ":=", 
  "\n", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"dataLocations", " ", "=", " ", 
       RowBox[{"PositionIndex", "[", 
        RowBox[{"dataForm", "[", "head", "]"}], "]"}]}], " ", ",", " ", "\n", 
      
      RowBox[{"primitive", " ", "=", " ", 
       RowBox[{"cellMeshPrimitive", "[", " ", 
        RowBox[{"head", ",", " ", "mechType"}], " ", "]"}]}], ",", " ", 
      "primitives"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"primitive", " ", "=!=", " ", "None"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"primitives", " ", "=", " ", 
        RowBox[{"primitive", " ", "/@", " ", "indices"}]}], ";", "\n", "\t\t", 
       RowBox[{"{", "\n", "\t\t\t", 
        RowBox[{"primitives", ",", "\n", "\t\t\t", 
         RowBox[{"toMeshCellStyle", "[", " ", 
          RowBox[{
          "mechType", ",", " ", "head", ",", " ", "primitives", ",", " ", 
           "data", " ", ",", " ", 
           RowBox[{"dataLocations", "[", "\"\<style\>\"", "]"}]}], " ", "]"}],
          ",", "\n", "\t\t\t", 
         RowBox[{"toMeshCellShapeFunction", "[", " ", 
          RowBox[{
          "mechType", ",", " ", "head", ",", " ", "primitives", ",", " ", 
           "data", " ", ",", " ", 
           RowBox[{"dataLocations", "[", "\"\<shape\>\"", "]"}]}], " ", "]"}],
          ",", "\n", "\t\t\t", 
         RowBox[{"toMeshCellLabel", "[", " ", 
          RowBox[{
          "mechType", ",", " ", "head", ",", " ", "primitives", ",", " ", 
           "data", " ", ",", " ", 
           RowBox[{"dataLocations", "[", "\"\<label\>\"", "]"}]}], " ", 
          "]"}]}], "\n", "\t\t", "}"}]}], ",", "\n", "\t\t\t", "\n", "\t\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], "\n", "\t", "]"}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[177]:=",ExpressionUUID->"64b7b531-8b24-4dab-9ace-34e5f065c8da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"defaultMeshStyle", "[", " ", 
   RowBox[{
    RowBox[{"rigidBar", "|", "fold"}], ",", " ", "_"}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", "Black"}], 
   "}"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultMeshStyle", "[", " ", 
   RowBox[{"spring", " ", ",", "_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "Black", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultMeshStyle", "[", " ", 
   RowBox[{
    RowBox[{"joint", " ", "|", " ", "pinnedJoint"}], " ", ",", "_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"{", "Black", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultMeshStyle", "[", " ", 
   RowBox[{"face", " ", ",", "_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"GrayLevel", "[", "0.85", "]"}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultMeshStyle", "[", " ", 
   RowBox[{"elasticFace", " ", ",", "_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"{", 
     RowBox[{"0.85", ",", "0.85", ",", "0.95"}], "}"}], "]"}], "}"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"defaultMeshStyle", "[", " ", 
    RowBox[{"_", " ", ",", "_"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"toMeshCellStyle", "[", " ", 
   RowBox[{
   "mechType_", ",", " ", "head_", ",", " ", "prims_", ",", " ", "data_", " ",
     ",", " ", 
    RowBox[{"{", "index_", "}"}]}], "]"}], ":=", " ", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"styles", " ", "=", " ", 
       RowBox[{"data", "[", 
        RowBox[{"[", " ", "index", " ", "]"}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"defaultStyle", " ", "=", " ", 
       RowBox[{"defaultMeshStyle", "[", " ", 
        RowBox[{"head", ",", " ", "mechType"}], " ", "]"}]}]}], "\n", "}"}], 
    ",", "\n", "\t", 
    RowBox[{"DeleteCases", "[", " ", 
     RowBox[{
      RowBox[{"MapThread", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", " ", "\[Rule]", " ", 
          RowBox[{"Directive", "@@", 
           RowBox[{"Flatten", "[", " ", 
            RowBox[{"{", 
             RowBox[{"defaultStyle", " ", ",", " ", "#2"}], "}"}], " ", 
            "]"}]}]}], "&"}], " ", ",", " ", 
        RowBox[{"{", 
         RowBox[{"prims", ",", " ", "styles"}], "}"}]}], " ", "]"}], " ", ",",
       " ", 
      RowBox[{"_", " ", "\[Rule]", " ", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "0"}], "&"}], 
         ")"}]}]}]}], " ", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[182]:=",ExpressionUUID->"c2262ab8-69cd-440e-b350-a060080f50e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"toMeshCellLabel", "[", " ", 
   RowBox[{
   "mechType_", ",", " ", "head_", ",", " ", "prims_", ",", " ", "data_", ",",
     " ", 
    RowBox[{"{", "index_", "}"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"labels", " ", "=", " ", 
      RowBox[{"data", "[", 
       RowBox[{"[", " ", "index", " ", "]"}], "]"}]}], "\n", "}"}], ",", "\n",
     "\t", 
    RowBox[{"DeleteCases", "[", " ", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"prims", " ", "\[Rule]", " ", "labels"}], "]"}], " ", ",", " ", 
      RowBox[{"_", " ", "\[Rule]", " ", "None"}]}], " ", "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[189]:=",ExpressionUUID->"2e1f31ff-6557-4fb9-aaa5-ab2f5e0c76c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"defaultMeshShapeFunction", "[", " ", 
   RowBox[{"spring", " ", ",", " ", "_"}], "]"}], " ", ":=", " ", 
  RowBox[{"mechanisms`graphics`springShape", "[", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultMeshShapeFunction", "[", " ", 
   RowBox[{"pinnedJoint", " ", ",", " ", "framework"}], "]"}], " ", ":=", " ", 
  RowBox[{"mechanisms`graphics`pinnedJointShape", "[", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultMeshShapeFunction", "[", " ", 
    RowBox[{"_", " ", ",", "_"}], "]"}], " ", ":=", " ", 
   "\"\<Automatic\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toMeshCellShapeFunction", "[", " ", 
    RowBox[{
    "mechType_", ",", " ", "head_", ",", " ", "prims_", ",", " ", "data_", 
     ",", " ", 
     RowBox[{"{", "index_", "}"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"labels", " ", "=", " ", 
       RowBox[{
        RowBox[{"Normal", "[", 
         RowBox[{"data", "[", 
          RowBox[{"[", " ", "index", " ", "]"}], "]"}], "]"}], " ", "/.", " ", 
        RowBox[{"\"\<Automatic\>\"", " ", "\[Rule]", " ", 
         RowBox[{"defaultMeshShapeFunction", "[", " ", 
          RowBox[{"head", ",", " ", "mechType"}], " ", "]"}]}]}]}], "\n", 
      "}"}], ",", "\n", "\t", 
     RowBox[{"cleanupShapeFunction", " ", "/@", " ", 
      RowBox[{"DeleteCases", "[", " ", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"prims", " ", "\[Rule]", " ", "labels"}], "]"}], " ", ",", 
        " ", 
        RowBox[{"_", " ", "\[Rule]", " ", "\"\<Automatic\>\""}]}], " ", 
       "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"cleanupShapeFunction", "[", " ", 
   RowBox[{"cell_", " ", "\[Rule]", " ", "None"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"cell", " ", "\[Rule]", " ", "None"}]}], "\n", 
 RowBox[{
  RowBox[{"cleanupShapeFunction", "[", " ", 
   RowBox[{
    RowBox[{"rule", " ", ":", " ", "_"}], " ", "\[Rule]", " ", "_Function"}], 
   " ", "]"}], " ", ":=", " ", "rule"}], "\n", 
 RowBox[{
  RowBox[{"cleanupShapeFunction", "[", " ", 
   RowBox[{"cell_", " ", "\[Rule]", " ", "shape_"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"cell", " ", "\[Rule]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"shape", "[", 
      RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], "&"}], ")"}]}]}]}], "Code",\

 CellLabel->
  "In[190]:=",ExpressionUUID->"380d18c6-2716-430c-9643-2330072de554"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["functions to define and extract information from mechanisms", "Section",ExpressionUUID->"5e1bb1ba-4e01-41e6-bdeb-cab641c995ee"],

Cell[CellGroupData[{

Cell["framework[]", "Subsection",ExpressionUUID->"770f6e84-4aa1-4881-9af0-1dcf176096a2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Format", "[", 
    RowBox[{
     RowBox[{"f", " ", ":", " ", 
      RowBox[{"framework", "[", " ", 
       RowBox[{
        RowBox[{"coordinates_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MatrixQ", "[", 
            RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
        "mr_", ",", " ", 
        RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
        "labelPattern"}], " ", "]"}]}], " ", ",", " ", "StandardForm"}], " ", 
    "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{"MeshRegionQ", "[", "mr", "]"}], ",", " ", "mr", ",", " ", 
     RowBox[{"createMeshRegion", "[", " ", 
      RowBox[{
      "framework", ",", " ", "coordinates", ",", " ", "cells", ",", " ", 
       RowBox[{"{", "}"}]}], " ", "]"}]}], " ", "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"framework", ",", 
   RowBox[{"{", "NHoldAll", "}"}]}], "]"}]}], "Code",
 CellLabel->
  "In[197]:=",ExpressionUUID->"b367c3d5-d8eb-4e11-af07-dd6aca45cd64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "framework", "]"}], " ", "=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<overlapPrecision\>\"", " ", "\[Rule]", " ", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "12"}], ")"}]}]}], " ", ",", " ", 
       RowBox[{"Options", "[", "MeshRegion", "]"}]}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"f", " ", ":", " ", 
      RowBox[{"framework", "[", " ", 
       RowBox[{
        RowBox[{"_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
        "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}]}], " ", 
     ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"meshOptions", " ", "=", " ", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "opt", "}"}], ",", " ", 
         RowBox[{"Options", "[", "MeshRegion", "]"}]}], " ", "]"}]}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"addMeshRegion", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"deleteDegenerateCellsFromMechanism", " ", "@", " ", 
        RowBox[{"removeOverlappingCoordinates", "[", " ", 
         RowBox[{"f", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}]}], 
         " ", "]"}]}], ",", "\n", "\t\t", "Automatic", ",", "\n", "\t\t", 
       "meshOptions"}], "\n", "\t", "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{"coordinateSpec_", ",", " ", "cellSpec_", " ", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"meshOptions", " ", "=", " ", 
         RowBox[{"FilterRules", "[", " ", 
          RowBox[{
           RowBox[{"{", "opt", "}"}], ",", " ", 
           RowBox[{"Options", "[", "MeshRegion", "]"}]}], " ", "]"}]}], ",", 
        "\n", 
        RowBox[{"intermediateParsing", " ", "=", " ", 
         RowBox[{"parseCells", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"coordinateSpec", ",", " ", 
             RowBox[{"{", "}"}], ",", " ", 
             RowBox[{"{", "}"}]}], " ", "}"}], ",", " ", 
           RowBox[{"{", "cellSpec", "}"}]}], " ", "]"}]}], ",", "\n", 
        "numberOfCoordinates", ",", " ", "coordinates", ",", " ", "cells", 
        ",", " ", "labels"}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"numberOfCoordinates", " ", "=", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"intermediateParsing", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"coordinates", ",", " ", "cells", ",", " ", "labels"}], 
         "}"}], " ", "=", " ", 
        RowBox[{"parseCells", "[", " ", 
         RowBox[{"intermediateParsing", ",", " ", 
          RowBox[{"joint", " ", "/@", " ", 
           RowBox[{"missingVertices", "[", 
            RowBox[{"numberOfCoordinates", ",", " ", 
             RowBox[{"intermediateParsing", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], " ", "]"}]}], ";", 
       "\n", "\n", "\t", 
       RowBox[{"addMeshRegion", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"deleteDegenerateCellsFromMechanism", "[", "\n", "\t\t\t", 
          RowBox[{"removeOverlappingCoordinates", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"framework", "[", " ", 
             RowBox[{"coordinates", ",", " ", 
              RowBox[{"{", "}"}], ",", " ", "cells", ",", " ", "labels"}], 
             " ", "]"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}]}], 
           "\n", "\t\t\t", "]"}], "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
         "Automatic", ",", "\n", "\t\t", "meshOptions"}], "\n", "\t", 
        "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"frameworkPrecisionQ", "[", " ", 
     RowBox[{"OptionValue", "[", " ", "\"\<overlapPrecision\>\"", " ", "]"}], 
     " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "precision"}], " ", "=", " ", 
   "\"\<Precision `1` must be a non-negative number or None.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"frameworkPrecisionQ", "[", " ", 
   RowBox[{"None", "|", "0"}], " ", "]"}], " ", ":=", " ", "True"}], "\n", 
 RowBox[{
  RowBox[{"frameworkPrecisionQ", "[", " ", 
   RowBox[{"prec_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
       RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], " ", "]"}], " ", ":=", 
  " ", "True"}], "\n", 
 RowBox[{
  RowBox[{"frameworkPrecisionQ", "[", " ", "prec_", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"mechanism", "::", "precision"}], ",", " ", "prec"}], "]"}], 
    ";", " ", "False"}], ")"}]}]}], "Code",ExpressionUUID->"77a841d3-eaaf-\
4cec-a64e-ba0e1f59f1b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
      RowBox[{"mr", " ", ":", " ", 
       RowBox[{"_MeshRegion", "|", 
        RowBox[{"{", "}"}]}]}], " ", ",", " ", "packedCellPattern", ",", " ", 
      "labelPattern"}], " ", "]"}], "[", "\"\<Methods\>\"", "]"}], " ", ":=", 
   " ", "\n", "\t", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
    "\"\<type\>\"", ",", "\n", "\t", "\"\<positions\>\"", ",", " ", "\n", 
     "\t", "\"\<mesh\>\"", ",", " ", "\n", "\t", "\"\<components\>\"", ",", 
     " ", "\n", "\t", "\"\<labels\>\"", ",", "\n", "\t", 
     "\"\<labeledVertices\>\"", ",", " ", "\n", "\t", 
     "\"\<EmbeddingDimension\>\"", ",", " ", "\n", "\t", 
     "\"\<DisplayDimension\>\"", ",", "\n", "\t", "\"\<VertexNumber\>\"", ",",
      "\n", "\t", "\"\<edges\>\"", ",", "\n", "\t", "\"\<faces\>\""}], "\n", 
    "\t", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<type\>\"", "]"}], " ", ":=", " ", "framework"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<positions\>\"", "]"}], " ", ":=", " ", "coordinates"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "mr_MeshRegion", ",",
      " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
   "\"\<mesh\>\"", "]"}], " ", ":=", " ", "mr"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
      RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
    "\"\<mesh\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"createMeshRegion", "[", " ", 
    RowBox[{"framework", ",", " ", "coordinates", ",", " ", "cells", ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
      "labelPattern"}], " ", "]"}], "[", "\"\<components\>\"", "]"}], " ", ":=",
    " ", "cells"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
     "packedCellPattern", ",", " ", 
     RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
   "\"\<labels\>\"", "]"}], " ", ":=", " ", "labels"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", 
      RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
    "\"\<labeledVertices\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"ReplacePart", "[", " ", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"None", " ", ",", " ", 
       RowBox[{"Length", "[", "coordinates", "]"}]}], "]"}], ",", " ", 
     RowBox[{"Reverse", "/@", "labels"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<EmbeddingDimension\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"coordinates", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "mr_MeshRegion", ",",
      " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
   "\"\<DisplayDimension\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"Last", "[", 
   RowBox[{"Dimensions", "[", 
    RowBox[{"MeshCoordinates", "[", "mr", "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
      RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
    "\"\<DisplayDimension\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"coordinates", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<VertexNumber\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Length", "[", "coordinates", "]"}]}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"framework", "[", " ", 
      RowBox[{
       RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
       "labelPattern"}], " ", "]"}], "[", "\"\<edges\>\"", "]"}], " ", ":=", 
    " ", 
    RowBox[{"DeleteDuplicatesBy", "[", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Select", "[", " ", 
         RowBox[{
          RowBox[{"cells", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"MatrixQ", "[", "#", "]"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Last", "[", 
              RowBox[{"Dimensions", "[", "#", "]"}], "]"}], "\[Equal]", 
             "2"}]}], " ", "&"}]}], " ", "]"}], ",", "1"}], "]"}], ",", " ", 
      "Sort"}], " ", "]"}]}], "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
     "labelPattern"}], " ", "]"}], "[", "\"\<edges\>\"", "]"}], " ", ":=", 
  " ", 
  RowBox[{"ToPackedArray", " ", "@", " ", 
   RowBox[{
    RowBox[{"MeshCells", "[", " ", 
     RowBox[{
      RowBox[{"createMeshRegion", "[", " ", 
       RowBox[{"origami", ",", " ", 
        RowBox[{"PadRight", "[", " ", 
         RowBox[{"coordinates", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "coordinates", "]"}], " ", ",", " ", 
            RowBox[{"chooseDimension", "[", " ", "coordinates", " ", "]"}]}], 
           "}"}]}], " ", "]"}], ",", " ", "cells", ",", " ", 
        RowBox[{"{", "}"}]}], " ", "]"}], " ", ",", "1"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"framework", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "m_MeshRegion", ",",
       " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<edges\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"ToPackedArray", " ", "@", " ", 
    RowBox[{
     RowBox[{"MeshCells", "[", 
      RowBox[{"m", ",", "1"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
     RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
   "\"\<faces\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"ToPackedArray", " ", "@", " ", 
   RowBox[{
    RowBox[{"MeshCells", "[", " ", 
     RowBox[{
      RowBox[{"createMeshRegion", "[", " ", 
       RowBox[{
       "framework", ",", " ", "coordinates", ",", " ", "cells", " ", ",", 
        RowBox[{"{", "}"}]}], "]"}], " ", ",", "2"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framework", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "m_MeshRegion", ",", 
     " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
   "\"\<faces\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"ToPackedArray", " ", "@", " ", 
   RowBox[{
    RowBox[{"MeshCells", "[", 
     RowBox[{"m", ",", "2"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[205]:=",ExpressionUUID->"271ee591-97c5-48b0-9a63-744c8a95ef8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["origami[]", "Subsection",ExpressionUUID->"ab454d33-6f2f-4fae-b957-bc3f25e232d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Format", "[", 
    RowBox[{
     RowBox[{"f", " ", ":", " ", 
      RowBox[{"origami", "[", " ", 
       RowBox[{
        RowBox[{"coordinates_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MatrixQ", "[", 
            RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
        "mr_", ",", " ", 
        RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
        "labelPattern"}], " ", "]"}]}], " ", ",", " ", "StandardForm"}], " ", 
    "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{"MeshRegionQ", "[", "mr", "]"}], ",", " ", "mr", ",", " ", 
     RowBox[{"createMeshRegion", "[", " ", 
      RowBox[{"origami", ",", " ", 
       RowBox[{"PadRight", "[", " ", 
        RowBox[{"coordinates", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", "coordinates", "]"}], " ", ",", " ", 
           RowBox[{"chooseDimension", "[", " ", "coordinates", " ", "]"}]}], 
          "}"}]}], " ", "]"}], ",", " ", "cells", ",", " ", 
       RowBox[{"{", "}"}]}], " ", "]"}]}], " ", "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"origami", ",", 
   RowBox[{"{", "NHoldAll", "}"}]}], "]"}]}], "Code",
 CellLabel->
  "In[221]:=",ExpressionUUID->"7aa32004-142e-4398-b75b-5f4e9b58bc92"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "origami", "]"}], " ", "=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<overlapPrecision\>\"", " ", "\[Rule]", " ", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "12"}], ")"}]}]}], " ", ",", " ", 
       RowBox[{"Options", "[", "MeshRegion", "]"}]}], "}"}], "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "\n", "This"}], " ", "is", " ", "a", " ", "kludge", " ", 
    "to", " ", 
    RowBox[{"fix", " ", "?", "origami"}], " ", "which", " ", "returns", " ", 
    "an", " ", "error", " ", "from", " ", "PadRight", " ", "otherwise", " ", 
    "for", " ", "reasons", " ", "that", " ", "are", " ", "not", " ", 
    "entirely", " ", 
    RowBox[{"clear", "."}]}], "\n", "***)"}]}], "\n", 
 RowBox[{
  RowBox[{"mypad", "[", " ", 
   RowBox[{"c_", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n1_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ",", " ", "n2_"}], "}"}]}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{"PadRight", "[", 
   RowBox[{"c", ",", " ", 
    RowBox[{"{", 
     RowBox[{"n1", ",", "n2"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mypad", "[", " ", 
    RowBox[{"c_", ",", " ", "_"}], " ", "]"}], " ", ":=", " ", "c"}], "\n", 
  RowBox[{"(*", "*****)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"f", " ", ":", " ", 
      RowBox[{"origami", "[", " ", 
       RowBox[{
        RowBox[{"_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
        "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}]}], " ", 
     ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"meshOptions", " ", "=", " ", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "opt", "}"}], ",", " ", 
         RowBox[{"Options", "[", "MeshRegion", "]"}]}], " ", "]"}]}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"addMeshRegion", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"deleteDegenerateCellsFromMechanism", " ", "@", " ", 
        RowBox[{"removeOverlappingCoordinates", "[", " ", 
         RowBox[{"f", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}]}], 
         " ", "]"}]}], ",", "\n", "\t\t", "Automatic", ",", "\n", "\t\t", 
       "meshOptions"}], "\n", "\t", "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"origami", "[", " ", 
   RowBox[{"coordinateSpec_", ",", " ", "cellSpec_", " ", ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"meshOptions", " ", "=", " ", 
        RowBox[{"FilterRules", "[", " ", 
         RowBox[{
          RowBox[{"{", "opt", "}"}], ",", " ", 
          RowBox[{"Options", "[", "MeshRegion", "]"}]}], " ", "]"}]}], ",", 
       "\n", 
       RowBox[{"intermediateParsing", " ", "=", " ", 
        RowBox[{"parseCells", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"coordinateSpec", ",", " ", 
            RowBox[{"{", "}"}], ",", " ", 
            RowBox[{"{", "}"}]}], " ", "}"}], ",", " ", 
          RowBox[{"{", "cellSpec", "}"}]}], " ", "]"}]}], ",", "\n", 
       "numberOfCoordinates", ",", " ", "coordinates", ",", " ", "cells", ",",
        " ", "labels"}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"numberOfCoordinates", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"intermediateParsing", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"coordinates", ",", " ", "cells", ",", " ", "labels"}], "}"}],
        " ", "=", " ", 
       RowBox[{"parseCells", "[", " ", 
        RowBox[{"intermediateParsing", ",", " ", 
         RowBox[{"joint", " ", "/@", " ", 
          RowBox[{"missingVertices", "[", 
           RowBox[{"numberOfCoordinates", ",", " ", 
            RowBox[{"intermediateParsing", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], " ", "]"}]}], ";", 
      "\n", "\n", "\t", 
      RowBox[{"addMeshRegion", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"deleteDegenerateCellsFromMechanism", "[", "\n", "\t\t\t", 
         RowBox[{"removeOverlappingCoordinates", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"origami", "[", " ", 
            RowBox[{
             RowBox[{"mypad", "[", " ", 
              RowBox[{"coordinates", " ", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Length", "[", "coordinates", "]"}], " ", ",", " ", 
                 "3"}], "}"}]}], " ", "]"}], ",", " ", 
             RowBox[{"{", "}"}], ",", " ", "cells", ",", " ", "labels"}], " ",
             "]"}], ",", "\n", "\t\t\t\t", 
           RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}]}], 
          "\n", "\t\t\t", "]"}], "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
        "Automatic", ",", "\n", "\t\t", "meshOptions"}], "\n", "\t", 
       "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
   RowBox[{"frameworkPrecisionQ", "[", " ", 
    RowBox[{"OptionValue", "[", " ", "\"\<overlapPrecision\>\"", " ", "]"}], 
    " ", "]"}]}]}]}], "Code",
 CellLabel->
  "In[223]:=",ExpressionUUID->"1c3e576c-c667-475f-89cb-197999bffac7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
      RowBox[{"mr", " ", ":", " ", 
       RowBox[{"_MeshRegion", "|", 
        RowBox[{"{", "}"}]}]}], ",", " ", "packedCellPattern", ",", " ", 
      "labelPattern"}], " ", "]"}], "[", "\"\<Methods\>\"", "]"}], " ", ":=", 
   " ", "\n", "\t", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
    "\"\<type\>\"", ",", "\n", "\t", "\"\<positions\>\"", ",", " ", "\n", 
     "\t", "\"\<mesh\>\"", ",", " ", "\n", "\t", "\"\<components\>\"", ",", 
     " ", "\n", "\t", "\"\<labels\>\"", ",", " ", "\"\<labeledVertices\>\"", 
     ",", "\n", "\t", "\"\<EmbeddingDimension\>\"", ",", " ", "\n", "\t", 
     "\"\<DisplayDimension\>\"", ",", "\n", "\t", "\"\<VertexNumber\>\"", ",",
      "\n", "\t", "\"\<edges\>\"", ",", "\n", "\t", "\"\<faces\>\""}], "\n", 
    "\t", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<type\>\"", "]"}], " ", ":=", " ", "origami"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<positions\>\"", "]"}], " ", ":=", " ", "coordinates"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "mr_MeshRegion", ",",
      " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
   "\"\<mesh\>\"", "]"}], " ", ":=", " ", "mr"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
      RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
    "\"\<mesh\>\"", "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"createMeshRegion", "[", " ", 
    RowBox[{"origami", ",", " ", 
     RowBox[{"PadRight", "[", " ", 
      RowBox[{"coordinates", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "coordinates", "]"}], " ", ",", " ", 
         RowBox[{"chooseDimension", "[", " ", "coordinates", " ", "]"}]}], 
        "}"}]}], " ", "]"}], ",", " ", "cells", ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
      "labelPattern"}], " ", "]"}], "[", "\"\<components\>\"", "]"}], " ", ":=",
    " ", "cells"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
     "packedCellPattern", ",", " ", 
     RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
   "\"\<labels\>\"", "]"}], " ", ":=", " ", "labels"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", 
      RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
    "\"\<labeledVertices\>\"", "]"}], " ", ":=", "  ", 
   RowBox[{"ReplacePart", "[", " ", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"None", " ", ",", " ", 
       RowBox[{"Length", "[", "coordinates", "]"}]}], "]"}], ",", " ", 
     RowBox[{"Reverse", "/@", "labels"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<EmbeddingDimension\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"coordinates", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "mr_MeshRegion", ",",
      " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
   "\"\<DisplayDimension\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"Last", "[", 
   RowBox[{"Dimensions", "[", 
    RowBox[{"MeshCoordinates", "[", "mr", "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
      RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
    "\"\<DisplayDimension\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"Dimensions", "[", " ", 
     RowBox[{"MeshCoordinates", "[", " ", 
      RowBox[{"createMeshRegion", "[", " ", 
       RowBox[{"origami", ",", " ", 
        RowBox[{"PadRight", "[", " ", 
         RowBox[{"coordinates", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "coordinates", "]"}], " ", ",", " ", 
            RowBox[{"chooseDimension", "[", " ", "coordinates", " ", "]"}]}], 
           "}"}]}], " ", "]"}], ",", " ", "cells", ",", " ", 
        RowBox[{"{", "}"}]}], " ", "]"}], " ", "]"}], " ", "]"}], " ", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "_", ",", " ", 
      "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<VertexNumber\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"Length", "[", "coordinates", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
     "labelPattern"}], " ", "]"}], "[", "\"\<edges\>\"", "]"}], " ", ":=", 
  " ", 
  RowBox[{"ToPackedArray", " ", "@", " ", 
   RowBox[{
    RowBox[{"MeshCells", "[", " ", 
     RowBox[{
      RowBox[{"createMeshRegion", "[", " ", 
       RowBox[{"origami", ",", " ", 
        RowBox[{"PadRight", "[", " ", 
         RowBox[{"coordinates", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "coordinates", "]"}], " ", ",", " ", 
            RowBox[{"chooseDimension", "[", " ", "coordinates", " ", "]"}]}], 
           "}"}]}], " ", "]"}], ",", " ", "cells", ",", " ", 
        RowBox[{"{", "}"}]}], " ", "]"}], " ", ",", "1"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origami", "[", " ", 
     RowBox[{
      RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "m_MeshRegion", ",",
       " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
    "\"\<edges\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"ToPackedArray", " ", "@", " ", 
    RowBox[{
     RowBox[{"MeshCells", "[", 
      RowBox[{"m", ",", "1"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
     RowBox[{"labels", " ", ":", " ", "labelPattern"}]}], " ", "]"}], "[", 
   "\"\<faces\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"ToPackedArray", " ", "@", " ", 
   RowBox[{
    RowBox[{"MeshCells", "[", " ", 
     RowBox[{
      RowBox[{"createMeshRegion", "[", " ", 
       RowBox[{"origami", ",", " ", 
        RowBox[{"PadRight", "[", " ", 
         RowBox[{"coordinates", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "coordinates", "]"}], " ", ",", " ", 
            RowBox[{"chooseDimension", "[", " ", "coordinates", " ", "]"}]}], 
           "}"}]}], " ", "]"}], ",", " ", "cells", ",", " ", 
        RowBox[{"{", "}"}]}], " ", "]"}], " ", ",", "2"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"origami", "[", " ", 
    RowBox[{
     RowBox[{"coordinates_", "?", "MatrixQ"}], ",", " ", "m_MeshRegion", ",", 
     " ", "packedCellPattern", ",", " ", "labelPattern"}], " ", "]"}], "[", 
   "\"\<faces\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"ToPackedArray", " ", "@", " ", 
   RowBox[{
    RowBox[{"MeshCells", "[", 
     RowBox[{"m", ",", "2"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[228]:=",ExpressionUUID->"e8717162-81c3-408e-ac1b-17b556cd74ba"]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanismCells[] (formerly mechanismComponents[])", "Subsection",ExpressionUUID->"dea4a3c2-e7ee-4f47-bf96-66929b110d6a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mechanismComponents", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "patt_", ",", 
    " ", 
    RowBox[{"dataPattern_", " ", ":", " ", "_"}]}], " ", "]"}], ":=", " ", 
  RowBox[{"mechanismCells", "[", " ", 
   RowBox[{"m", ",", " ", "patt", ",", " ", "dataPattern"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"mechanismComponents", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
    RowBox[{"dataPattern_", " ", ":", " ", "_"}]}], " ", "]"}], ":=", " ", 
  RowBox[{"mechanismCells", "[", " ", 
   RowBox[{"m", ",", " ", "_", ",", " ", "dataPattern"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[244]:=",ExpressionUUID->"ab90f3fa-ae59-4b44-82a5-a1e8ed0a62ba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dataSpecPattern", " ", "=", " ", 
    RowBox[{
     RowBox[{"Blank", "[", "]"}], "|", 
     RowBox[{"Alternatives", "[", "__String", "]"}], "|", "_String"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismCells", "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"outputCells", "[", " ", 
    RowBox[{"_", " ", ",", " ", 
     RowBox[{"m", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismCells", "[", " ", 
    RowBox[{
     RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
     RowBox[{"indexSpec_", " ", ":", " ", "_"}], " ", ",", " ", 
     RowBox[{"dataSpec", " ", ":", " ", "_Rule", " ", ":", " ", "None"}], ",",
      " ", 
     RowBox[{"outputSpec_", " ", ":", " ", "_"}]}], " ", "]"}], " ", ":=", 
   " ", "\n", "\t", 
   RowBox[{"outputCells", "[", "  ", 
    RowBox[{"outputSpec", " ", ",", " ", 
     RowBox[{
      RowBox[{"filterByData", "[", 
       RowBox[{"m", " ", ",", " ", "dataSpec"}], " ", "]"}], " ", "@", " ", 
      RowBox[{
       RowBox[{"filterByCells", "[", " ", 
        RowBox[{"m", ",", " ", "indexSpec"}], "]"}], " ", "@", " ", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}]}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"filterByCells", "[", " ", 
    RowBox[{"m_", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"head_", " ", ",", " ", "indices_List"}], "}"}]}], "]"}], "[", 
   "cells_", "]"}], " ", ":=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"takeCells", "[", " ", 
      RowBox[{
       RowBox[{"identifyCellFromList", "[", " ", 
        RowBox[{"head", ",", " ", "indices", ",", " ", "#"}], " ", "]"}], ",",
        " ", "#"}], " ", "]"}], " ", "&"}], " ", "/@", " ", "cells"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"filterByCells", "[", " ", 
     RowBox[{"m_", " ", ",", " ", 
      RowBox[{"patt", " ", ":", " ", 
       RowBox[{"Except", "[", "_List", "]"}]}]}], " ", "]"}], "[", "cells_", 
    "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"pattern", " ", "=", " ", 
       RowBox[{"cellPattern", "[", "patt", "]"}]}], " ", "}"}], ",", "\n", 
     "\t", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"takeCells", "[", " ", 
         RowBox[{
          RowBox[{"casesCellType", "[", " ", 
           RowBox[{"pattern", ",", " ", "#"}], " ", "]"}], ",", " ", "#"}], 
         " ", "]"}], " ", "&"}], " ", "/@", " ", "cells"}], "]"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"filterByData", "[", " ", 
    RowBox[{"m_", " ", ",", " ", "None"}], " ", "]"}], "[", "cells_", "]"}], 
  " ", ":=", " ", "cells"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"filterByData", "[", " ", 
    RowBox[{"m_", ",", " ", 
     RowBox[{"dataSpec_", " ", "\[Rule]", " ", "f_Function"}]}], " ", "]"}], 
   "[", "cells_", "]"}], " ", ":=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"takeCells", "[", " ", 
      RowBox[{
       RowBox[{"selectCellFromDataType", "[", " ", 
        RowBox[{
         RowBox[{"dataSpec", " ", "\[Rule]", " ", "f"}], ",", " ", "#"}], " ",
         "]"}], ",", " ", "#"}], " ", "]"}], "&"}], " ", "/@", " ", "cells"}],
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"filterByData", "[", " ", 
    RowBox[{"m_", ",", " ", 
     RowBox[{"dataSpec_", " ", "\[Rule]", " ", "patt_"}]}], " ", "]"}], "[", 
   " ", "cells_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"Flatten", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"takeCells", "[", " ", 
      RowBox[{
       RowBox[{"casesCellFromDataType", "[", " ", 
        RowBox[{
         RowBox[{"dataSpec", " ", "\[Rule]", " ", "patt"}], " ", ",", " ", 
         "#"}], " ", "]"}], ",", " ", "#"}], " ", "]"}], " ", "&"}], " ", "/@",
     " ", "cells"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[246]:=",ExpressionUUID->"4095e79d-34ef-435b-84d6-5f5641f09777"]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanismPositions[] ", "Subsection",ExpressionUUID->"ee32cfa3-1677-497c-bcdd-41a18a8855c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mechanismPositions", "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"m", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPositions", "[", " ", 
    RowBox[{"Rule", "[", " ", 
     RowBox[{
      RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
      RowBox[{"coords_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], " ", "]"}],
     " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"addMeshRegion", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "m", "]"}], "[", 
       RowBox[{"coords", ",", " ", 
        RowBox[{"m", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"m", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"m", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "]"}], " ", ",", " ", "Automatic", 
      " ", ",", " ", 
      RowBox[{"{", "}"}]}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Length", "[", " ", "coords", " ", "]"}], " ", "==", " ", 
     RowBox[{"Length", "[", " ", 
      RowBox[{"m", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPositions", "::", "coords"}], " ", "=", " ", 
   "\"\<Coordinates must be numerical and of the same dimension as mechanism.\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mechanismPositions", "[", " ", 
   RowBox[{"Rule", "[", " ", 
    RowBox[{
     RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "_"}], " ", 
    "]"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", " ", 
    RowBox[{"mechanismPositions", "::", "coords"}], " ", "]"}]}]}]}], "Code",
 CellLabel->
  "In[254]:=",ExpressionUUID->"c27dc3fd-0e9b-41f3-aae3-759f9af29b32"]
}, Closed]],

Cell[CellGroupData[{

Cell["listEdges[], listFaces[], listVertices[]", "Subsection",ExpressionUUID->"16160a14-4294-44e2-8cb4-421f6295e059"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listEdges", "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"m", "[", "\"\<edges\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listFaces", "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"m", "[", "\"\<faces\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"listVertices", "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Range", "[", " ", 
    RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"listEdges", "[", " ", 
    RowBox[{
     RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
     RowBox[{"edgeList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", "_Integer"}], "}"}], "..."}], "}"}]}]}], 
    " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"indexedEdges", "=", 
        RowBox[{"PositionIndex", "[", 
         RowBox[{"Sort", "/@", 
          RowBox[{"m", "[", "\"\<edges\>\"", "]"}]}], "]"}]}], ",", " ", 
       RowBox[{"sortedEdges", " ", "=", " ", 
        RowBox[{"Sort", "/@", "edgeList"}]}]}], "}"}], ",", " ", "\n", "\t", 
     RowBox[{"ToPackedArray", " ", "@", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"indexedEdges", " ", "/@", " ", "sortedEdges"}], "]"}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"listFaces", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
    RowBox[{"faceList", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "__Integer", "}"}], "..."}], "}"}]}]}], " ", "]"}], " ", ":=",
   "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"indexedFaces", " ", "=", " ", 
       RowBox[{"PositionIndex", "[", 
        RowBox[{"Sort", "/@", 
         RowBox[{"m", "[", "\"\<faces\>\"", "]"}]}], "]"}]}], ",", " ", 
      RowBox[{"sortedFaces", " ", "=", " ", 
       RowBox[{"Sort", " ", "/@", " ", "faceList"}]}]}], "}"}], ",", "\n", 
    "\t", 
    RowBox[{"ToPackedArray", " ", "@", " ", 
     RowBox[{"Flatten", "[", " ", 
      RowBox[{
       RowBox[{"indexedFaces", " ", "/@", " ", "sortedFaces"}], " ", ",", " ",
        "1"}], " ", "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[258]:=",ExpressionUUID->"f44a31c2-8b21-40ca-a115-2fd8da00a1b5"]
}, Closed]],

Cell[CellGroupData[{

Cell["listCells[]", "Subsection",ExpressionUUID->"f3b80113-3224-49a9-9e96-60dda4fcc677"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listCells", "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"Sort", "[", 
   RowBox[{"Head", " ", "/@", " ", 
    RowBox[{"m", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listCells", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", ",", " ", 
    RowBox[{"s", " ", ":", " ", "_String"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"FirstCase", "[", " ", 
    RowBox[{
     RowBox[{"m", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{"s", "[", "__", "]"}]}], " ", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"listCells", "[", " ", 
    RowBox[{
     RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", ",", " ", 
     RowBox[{"s", " ", ":", " ", 
      RowBox[{"Alternatives", "[", " ", "__String", " ", "]"}]}]}], " ", 
    "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Cases", "[", " ", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
      RowBox[{"s", "[", "__", "]"}]}], " ", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"listCells", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", ",", " ", 
    RowBox[{"s", " ", ":", " ", "celltypePattern"}]}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"FirstCase", "[", " ", 
    RowBox[{
     RowBox[{"m", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{"s", "[", "__", "]"}]}], " ", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"listCells", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", ",", " ", 
    RowBox[{"s", " ", ":", " ", 
     RowBox[{"celltypePattern", ".."}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "#", "]"}], "[", 
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], " ", "/@", " ", 
   RowBox[{"Cases", "[", " ", 
    RowBox[{
     RowBox[{"m", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Alternatives", "@@", 
        RowBox[{"{", "s", "}"}]}], ")"}], "[", "__", "]"}]}], " ", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[263]:=",ExpressionUUID->"751f4008-59c9-41c2-a965-1bb8d19b428e"]
}, Closed]],

Cell[CellGroupData[{

Cell["edgeQ[],faceQ[],validEdgeQ[],validFaceQ[]", "Subsection",ExpressionUUID->"929a533b-38ca-4691-bbf0-10109000ed9f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"edgeQ", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", ",", " ", 
    "edgelist_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"AllTrue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MatrixQ", "[", "edgelist", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"edgelist", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}], ",", 
      RowBox[{"ContainsAll", "[", " ", 
       RowBox[{
        RowBox[{"Sort", "/@", 
         RowBox[{"m", "[", "\"\<edges\>\"", "]"}]}], ",", 
        RowBox[{"Sort", "/@", "edgelist"}]}], "]"}]}], "}"}], ",", "TrueQ"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"faceQ", "[", 
    RowBox[{
     RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", ",", " ", 
     "facelist_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ListQ", "[", "facelist", "]"}], ",", 
       RowBox[{"ContainsAll", "[", " ", 
        RowBox[{
         RowBox[{"Sort", "/@", 
          RowBox[{"m", "[", "\"\<faces\>\"", "]"}]}], ",", 
         RowBox[{"Sort", "/@", "facelist"}]}], " ", "]"}]}], "}"}], ",", 
     "TrueQ"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"validEdgeQ", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", ",", " ", 
    "edgelist_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"AllTrue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MatrixQ", "[", "edgelist", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"edgelist", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}], ",", 
      RowBox[{
       RowBox[{"Min", "[", "edgelist", "]"}], ">", "0"}], ",", 
      RowBox[{
       RowBox[{"Max", "[", "edgelist", "]"}], "\[LessEqual]", 
       RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], "}"}], ",", 
    "TrueQ"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validEdgeQ", "[", 
    RowBox[{
     RowBox[{"pos_", "?", "MatrixQ"}], " ", ",", " ", "edgelist_"}], " ", 
    "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MatrixQ", "[", "edgelist", "]"}], ",", " ", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"edgelist", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}], ",", 
       RowBox[{
        RowBox[{"Min", "[", "edgelist", "]"}], ">", "0"}], ",", 
       RowBox[{
        RowBox[{"Max", "[", "edgelist", "]"}], "\[LessEqual]", 
        RowBox[{"Length", "[", "pos", "]"}]}]}], "}"}], ",", "TrueQ"}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"validFaceQ", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", ",", " ", 
    "facelist_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"AllTrue", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"ListQ", "[", "facelist", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Min", "[", "facelist", "]"}], ">", "0"}], ",", 
      RowBox[{
       RowBox[{"Max", "[", "facelist", "]"}], "\[LessEqual]", 
       RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], "}"}], ",", 
    "TrueQ"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"validFaceQ", "[", 
   RowBox[{
    RowBox[{"pos_", "?", "MatrixQ"}], " ", ",", " ", "facelist_"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"AllTrue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ListQ", "[", "facelist", "]"}], ",", 
      RowBox[{
       RowBox[{"Min", "[", "facelist", "]"}], ">", "0"}], ",", 
      RowBox[{
       RowBox[{"Max", "[", "facelist", "]"}], "\[LessEqual]", 
       RowBox[{"Length", "[", "pos", "]"}]}]}], "}"}], ",", "TrueQ"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[268]:=",ExpressionUUID->"e7d99d5c-47c2-4c13-bb77-affd8f0fda8f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["functions to manipulate mechanisms", "Section",ExpressionUUID->"090ed141-5b45-4288-b0a6-e72427c2adbf"],

Cell[CellGroupData[{

Cell["labelCell[]", "Subsection",ExpressionUUID->"412267ca-b4cd-4402-8196-31c933c269a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"labelCell", "[", " ", 
    RowBox[{
     RowBox[{"s", " ", ":", " ", "_String"}], " ", ",", " ", "indexList_"}], 
    " ", "]"}], "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"Head", "[", "m", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"m", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
    RowBox[{"m", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
    RowBox[{"joinCells", "[", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"packCells", "[", " ", 
        RowBox[{"{", 
         RowBox[{"s", "[", 
          RowBox[{"indexList", ",", " ", 
           RowBox[{"{", "}"}]}], " ", "]"}], "}"}], " ", "]"}], ",", " ", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], " ", "}"}], " ", "]"}], ",", " ", 
    RowBox[{"m", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"labelCell", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
    RowBox[{"s", " ", ":", " ", "_String"}], " ", ",", " ", "indexList_"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"labelCell", "[", 
    RowBox[{"s", ",", "indexList"}], "]"}], "[", "m", "]"}]}]}], "Code",
 CellLabel->
  "In[274]:=",ExpressionUUID->"065b9a63-e5d1-40c0-a6bb-fb3c2b40fe15"]
}, Closed]],

Cell[CellGroupData[{

Cell["joinMechanism[]", "Subsection",ExpressionUUID->"a36ef963-d8b7-466d-9028-89d0a83d022e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "joinMechanism", "]"}], " ", "=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<overlapPrecision\>\"", " ", "\[Rule]", " ", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "12"}], ")"}]}]}], ",", " ", 
       RowBox[{"Options", "[", "MeshRegion", "]"}]}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinMechanism", "[", " ", 
    RowBox[{
     RowBox[{"meshes", " ", ":", " ", 
      RowBox[{
       RowBox[{"__", "?", "mechanismQ"}], "|", 
       RowBox[{"{", 
        RowBox[{"__", "?", "mechanismQ"}], "}"}]}]}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", " ", 
       RowBox[{"m", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "meshes", "}"}], "]"}]}], ",", " ", 
       RowBox[{"meshOptions", " ", "=", " ", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"{", "opt", "}"}], ",", " ", 
          RowBox[{"Options", "[", "MeshRegion", "]"}]}], "]"}]}]}], " ", 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"num", " ", "=", " ", 
          RowBox[{"Drop", "[", " ", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "1", "}"}], ",", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "+", "1"}], "&"}], " ", "/@", " ", 
                 RowBox[{"Accumulate", "[", " ", 
                  RowBox[{"Length", " ", "/@", " ", 
                   RowBox[{"m", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], " ", "]"}]}]}],
                " ", "}"}], ",", " ", "1"}], " ", "]"}], ",", " ", 
            RowBox[{"-", "1"}]}], "]"}]}], " ", "}"}], ",", "\n", "\t\t", 
        RowBox[{"addMeshRegion", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"deleteDegenerateCellsFromMechanism", "[", "\n", "\t\t\t\t", 
           RowBox[{"removeOverlappingCoordinates", "[", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"m", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", "\n", 
              "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"m", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}],
                ",", "\n", "\t\t\t\t\t\t", 
               RowBox[{"{", "}"}], ",", "\n", "\t\t\t\t\t\t", 
               RowBox[{"joinCells", "[", " ", 
                RowBox[{"Flatten", " ", "@", " ", 
                 RowBox[{"MapThread", "[", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"replaceCellIndices", "[", 
                    RowBox[{"#1", ",", " ", 
                    RowBox[{"n_Integer", " ", "\[Rule]", " ", 
                    RowBox[{
                    "n", " ", "+", " ", "#2", " ", "-", " ", "1"}]}]}], "]"}],
                     "&"}], ",", " ", 
                   RowBox[{"{", " ", 
                    RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", " ", 
                    "num"}], " ", "}"}]}], "]"}]}], " ", "]"}], ",", "\n", 
               "\t\t\t\t\t\t", 
               RowBox[{"Flatten", " ", "@", " ", 
                RowBox[{"MapThread", "[", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"replaceRules", "[", " ", 
                    RowBox[{"#1", ",", " ", 
                    RowBox[{"n_Integer", " ", "\[Rule]", " ", 
                    RowBox[{"n", " ", "+", " ", "#2", " ", "-", " ", "1"}]}], 
                    ",", " ", "2"}], " ", "]"}], "&"}], ",", " ", 
                  RowBox[{"{", " ", 
                   RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", " ", 
                    "num"}], " ", "}"}]}], " ", "]"}]}]}], "\n", "\t\t\t\t\t",
               "]"}], ",", "\n", "\t\t\t\t\t", 
             RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}]}], 
            "\n", "\t\t\t\t", "]"}], "\n", "\t\t\t", "]"}], ",", "\n", 
          "\t\t\t", "Automatic", ",", "\n", "\t\t\t", "meshOptions"}], "\n", 
         "\t\t", "]"}]}], "\n", "\t", "]"}], " ", "/;", " ", 
      RowBox[{
       RowBox[{"frameworkPrecisionQ", "[", " ", 
        RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}], " ", 
        "]"}], " ", "&&", " ", 
       RowBox[{"sameHeadsQ", "[", " ", "m", " ", "]"}]}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "comb"}], " ", "=", " ", 
   "\"\<Cannot combine mechanisms of different types.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sameHeadsQ", "[", " ", "expr_List", " ", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{"SameQ", "[", " ", 
     RowBox[{"Head", " ", "/@", " ", "expr"}], " ", "]"}], ",", " ", "True", 
    ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"mechanism", "::", "comb"}], "]"}], ";", " ", "False"}]}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[276]:=",ExpressionUUID->"0d644173-0919-476f-bf16-572cb8c77e51"]
}, Closed]],

Cell[CellGroupData[{

Cell["selectCells[], deleteCells[]", "Subsection",ExpressionUUID->"f48760e0-20ae-4bdb-9fec-8e23ae133fad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"selectCells", "[", " ", "patt_", " ", "]"}], "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"pattern", " ", "=", " ", 
       RowBox[{"cellPattern", "[", " ", "patt", " ", "]"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"m", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"takeCells", "[", " ", 
           RowBox[{
            RowBox[{"casesCellType", "[", " ", 
             RowBox[{"pattern", ",", " ", "#"}], "]"}], ",", " ", "#"}], " ", 
           "]"}], "&"}], " ", "/@", " ", 
         RowBox[{"m", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"m", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"selectCells", "[", " ", 
     RowBox[{"head_", " ", ",", " ", "cellList_List"}], " ", "]"}], "[", " ", 
    
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"m", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
     RowBox[{"{", "}"}], ",", "\n", "\t\t", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"takeCells", "[", " ", 
         RowBox[{
          RowBox[{"identifyCellFromList", "[", " ", 
           RowBox[{"head", ",", " ", "cellList", ",", " ", "#"}], "]"}], ",", 
          " ", "#"}], " ", "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\n", "\t\t", 
     RowBox[{"m", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"selectCells", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "patt_"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"selectCells", "[", "patt", "]"}], "[", "m", "]"}], ",", " ", 
    "Automatic", " ", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"selectCells", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "head_", ",", 
    " ", "cellList_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"selectCells", "[", 
      RowBox[{"head", ",", " ", "cellList"}], "]"}], "[", "m", "]"}], ",", 
    " ", "Automatic", " ", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[280]:=",ExpressionUUID->"abbe108b-1bdd-4ca3-a30c-eb279fb340b4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deleteCells", "[", " ", "pattList_List", " ", "]"}], "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Fold", "[", 
    RowBox[{"deleteCells", ",", " ", "m", " ", ",", " ", "pattList"}], " ", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deleteCells", "[", " ", 
     RowBox[{"patt", " ", ":", " ", 
      RowBox[{"Except", "[", " ", "_List", " ", "]"}]}], "]"}], "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"pattern", " ", "=", " ", 
       RowBox[{"cellPattern", "[", " ", "patt", " ", "]"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"m", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"removeCells", "[", " ", 
           RowBox[{
            RowBox[{"casesCellType", "[", " ", 
             RowBox[{"pattern", ",", " ", "#"}], "]"}], ",", " ", "#"}], " ", 
           "]"}], "&"}], " ", "/@", " ", 
         RowBox[{"m", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"m", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deleteCells", "[", " ", 
     RowBox[{"head_", " ", ",", " ", "cellList_List"}], " ", "]"}], "[", " ", 
    
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"m", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
     RowBox[{"{", "}"}], ",", "\n", "\t\t", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"removeCells", "[", " ", 
         RowBox[{
          RowBox[{"identifyCellFromList", "[", " ", 
           RowBox[{"head", ",", " ", "cellList", ",", " ", "#"}], "]"}], ",", 
          " ", "#"}], " ", "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\n", "\t\t", 
     RowBox[{"m", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"deleteCells", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "patt_"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"deleteCells", "[", "patt", "]"}], "[", "m", "]"}], ",", " ", 
    "Automatic", " ", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"deleteCells", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "head_", ",", 
    " ", "cellList_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"deleteCells", "[", 
      RowBox[{"head", ",", " ", "cellList"}], "]"}], "[", "m", "]"}], ",", 
    " ", "Automatic", " ", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[284]:=",ExpressionUUID->"5198b681-d64a-4e20-97b8-8e031eacc149"]
}, Closed]],

Cell[CellGroupData[{

Cell["addCells[]", "Subsection",ExpressionUUID->"ba379b12-e39c-49a0-ba40-463bc3626108"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", " ", "addCells", "]"}], " ", "=", " ", 
    RowBox[{"Options", "[", "framework", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"addCells", "[", " ", 
     RowBox[{"cells_", " ", ",", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"parsed", " ", "=", " ", 
        RowBox[{"parseCells", "[", " ", 
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"m", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"m", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
            RowBox[{"m", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], " ", "}"}], " ", ",", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "cells", "}"}], "]"}]}], "]"}]}], " ", "}"}], ",", 
      "\n", "\t", 
      RowBox[{"deleteDegenerateCellsFromMechanism", "[", " ", 
       RowBox[{"removeOverlappingCoordinates", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "m", "]"}], "[", 
          RowBox[{
           RowBox[{"parsed", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{"{", "}"}], ",", " ", 
           RowBox[{"parsed", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
           RowBox[{"parsed", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}]}], 
        "\n", "\t", "]"}], " ", "]"}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"frameworkPrecisionQ", "[", " ", 
     RowBox[{"OptionValue", "[", "\"\<overlapPrecision\>\"", "]"}], " ", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"addCells", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "cells_", ",",
     " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"addCells", "[", " ", 
      RowBox[{"cells", ",", " ", "opt"}], " ", "]"}], "[", "m", "]"}], ",", 
    " ", "Automatic", ",", " ", 
    RowBox[{"FilterRules", "[", " ", 
     RowBox[{
      RowBox[{"{", "opt", "}"}], ",", " ", 
      RowBox[{"Options", "[", "MeshRegion", "]"}]}], "]"}]}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[289]:=",ExpressionUUID->"a23612de-3cf0-403e-b850-8a9c7144e63f"]
}, Closed]],

Cell[CellGroupData[{

Cell["deleteVertices[]", "Subsection",ExpressionUUID->"b8f26f8a-5bdb-43fa-a08b-35a62aaf9744"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"deleteVertices", "[", " ", 
    RowBox[{"vertices_", "?", "VectorQ"}], " ", "]"}], "[", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"pattern", " ", "=", " ", 
      RowBox[{"Alternatives", " ", "@@", " ", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"___", ",", "#", ",", "___"}], "}"}], "|", "#"}], "&"}], 
         " ", "/@", " ", "vertices"}], " ", ")"}]}]}], " ", "}"}], ",", "\n", 
    
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"remainingCells", " ", "=", " ", 
        RowBox[{"Flatten", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"removeCells", "[", " ", 
            RowBox[{
             RowBox[{"casesCellType", "[", " ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Head", "[", "#", "]"}], "[", "pattern", "]"}], 
                "}"}], " ", ",", " ", "#"}], " ", "]"}], ",", " ", "#"}], " ",
             "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}], " ", "}"}], ",", 
      "\n", 
      RowBox[{"With", "[", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"remainingVertices", " ", "=", " ", 
          RowBox[{"Complement", "[", " ", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", 
              RowBox[{"m", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", " ", 
            RowBox[{"vertices", " ", "/.", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}]}], " ", "]"}]}], " ", "}"}], 
        ",", "\n", 
        RowBox[{"With", "[", " ", 
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{"remappingRules", " ", "=", " ", 
            RowBox[{"Thread", "[", " ", 
             RowBox[{"remainingVertices", " ", "\[Rule]", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"Length", "[", "remainingVertices", "]"}], "]"}]}], 
             "]"}]}], " ", "}"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"m", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "remainingVertices"}], "]"}], "]"}], ",",
             "\n", "\t\t", 
            RowBox[{"{", "}"}], ",", "\n", "\t\t", 
            RowBox[{"replaceCellIndices", "[", " ", 
             RowBox[{"remainingCells", ",", " ", "remappingRules"}], " ", 
             "]"}], ",", "\n", "\t\t", 
            RowBox[{"replaceRules", "[", " ", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", " ", "remappingRules", 
              ",", " ", "2"}], " ", "]"}]}], "\n", "\t", "]"}]}], "\n", 
         "]"}]}], "]"}]}], "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[292]:=",ExpressionUUID->"ce93bed6-9de0-443b-9529-d0e43a83867e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deleteVertices", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "vertices_"}],
    " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"deleteVertices", "[", "vertices", "]"}], "[", "m", "]"}], ",", 
    " ", "Automatic", " ", ",", " ", 
    RowBox[{"{", "}"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[293]:=",ExpressionUUID->"a153f66e-388f-4c66-aec7-7137116edbba"]
}, Closed]],

Cell[CellGroupData[{

Cell["changeCellData[]", "Subsection",ExpressionUUID->"901ddd13-737f-4e91-b19e-1ed99e5bece8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"changeCellData", "[", " ", 
    RowBox[{"patt_", ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}], "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", "m"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeCellData", "[", " ", 
    RowBox[{"patt_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"dataRule", " ", ":", " ", "_Rule"}], "}"}]}], " ", "]"}], "[", 
   " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"changeCellData", "[", " ", 
    RowBox[{"patt", ",", " ", "dataRule"}], " ", "]"}], "[", "m", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"changeCellData", "[", " ", 
     RowBox[{"patt_", " ", ",", " ", 
      RowBox[{"dataRules", " ", ":", " ", 
       RowBox[{"{", "__Rule", "}"}]}]}], " ", "]"}], "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{"changeCellData", "[", " ", 
     RowBox[{"patt", ",", " ", 
      RowBox[{"Rest", "[", "dataRules", "]"}]}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"changeCellData", "[", 
      RowBox[{"patt", ",", " ", 
       RowBox[{"First", "[", "dataRules", "]"}]}], " ", "]"}], "[", "m", 
     "]"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"changeCellData", "[", " ", 
     RowBox[{"patt_", " ", ",", " ", 
      RowBox[{"dataSpec_", " ", "\[Rule]", " ", "data_"}]}], " ", "]"}], "[", 
    " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"pattern", " ", "=", " ", 
       RowBox[{"cellPattern", "[", "patt", "]"}]}], " ", "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"m", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"changeCellDataType", "[", " ", 
          RowBox[{
           RowBox[{"casesCellType", "[", " ", 
            RowBox[{"pattern", ",", " ", "#"}], " ", "]"}], " ", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Head", "[", "#", "]"}], ",", " ", "dataSpec"}], "}"}], 
           " ", ",", " ", 
           RowBox[{"{", "data", "}"}], ",", " ", "#"}], " ", "]"}], " ", 
         "&"}], " ", "/@", " ", 
        RowBox[{"m", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], " ", ",", "\n", "\t\t", 
       RowBox[{"m", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"changeCellData", "[", " ", 
     RowBox[{"headSpec_Symbol", " ", ",", " ", "cellList_List", ",", " ", 
      RowBox[{"Rule", "[", " ", 
       RowBox[{"dataSpec_", " ", ",", " ", 
        RowBox[{"data", " ", ":", " ", 
         RowBox[{"Except", "[", "_List", "]"}]}]}], " ", "]"}]}], " ", "]"}], 
    "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"changeCellData", "[", " ", 
     RowBox[{"headSpec", ",", " ", "cellList", ",", " ", 
      RowBox[{"dataSpec", " ", "\[Rule]", " ", 
       RowBox[{"ConstantArray", "[", " ", 
        RowBox[{"data", ",", " ", 
         RowBox[{"Length", "[", "cellList", "]"}]}], " ", "]"}]}]}], "]"}], 
    "[", "m", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"changeCellData", "[", " ", 
     RowBox[{
      RowBox[{"headSpec", " ", ":", " ", 
       RowBox[{"rigidBar", "|", "spring", "|", "angleJoint", "|", "fold"}]}], 
      " ", ",", " ", 
      RowBox[{"cellList_", "?", "MatrixQ"}], ",", " ", 
      RowBox[{"dataSpec_", " ", "\[Rule]", " ", "data_List"}]}], " ", "]"}], 
    "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"{", "}"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"changeCellDataType", "[", " ", 
         RowBox[{
          RowBox[{"identifyCellFromList", "[", " ", 
           RowBox[{"headSpec", " ", ",", " ", "cellList", ",", " ", "#"}], 
           "]"}], " ", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Head", "[", "#", "]"}], ",", " ", "dataSpec"}], "}"}], 
          ",", " ", "data", " ", ",", " ", "#"}], " ", "]"}], " ", "&"}], " ",
        "/@", " ", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"m", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Length", "[", "data", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"Length", "[", "cellList", "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"changeCellData", "[", " ", 
     RowBox[{
      RowBox[{"headSpec", " ", ":", " ", "face"}], " ", ",", " ", 
      "cellList_List", " ", ",", " ", 
      RowBox[{"dataSpec_", " ", "\[Rule]", " ", "data_List"}]}], " ", "]"}], 
    "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"{", "}"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"changeCellDataType", "[", " ", 
         RowBox[{
          RowBox[{"identifyCellFromList", "[", " ", 
           RowBox[{"headSpec", " ", ",", " ", "cellList", ",", " ", "#"}], 
           "]"}], " ", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Head", "[", "#", "]"}], ",", " ", "dataSpec"}], "}"}], 
          ",", " ", "data", " ", ",", " ", "#"}], " ", "]"}], " ", "&"}], " ",
        "/@", " ", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"m", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Length", "[", "data", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"Length", "[", "cellList", "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"changeCellData", "[", " ", 
     RowBox[{
      RowBox[{"headSpec", " ", ":", " ", "joint"}], " ", ",", " ", 
      RowBox[{"cellList_", "?", "VectorQ"}], ",", " ", 
      RowBox[{"dataSpec_", " ", "\[Rule]", " ", "data_List"}]}], " ", "]"}], 
    "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"{", "}"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"changeCellDataType", "[", " ", 
         RowBox[{
          RowBox[{"identifyCellFromList", "[", " ", 
           RowBox[{"headSpec", " ", ",", " ", "cellList", ",", " ", "#"}], 
           "]"}], " ", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Head", "[", "#", "]"}], ",", " ", "dataSpec"}], "}"}], 
          ",", " ", "data", " ", ",", " ", "#"}], " ", "]"}], " ", "&"}], " ",
        "/@", " ", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"m", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Length", "[", "data", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"Length", "[", "cellList", "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeCellData", "[", " ", 
    RowBox[{"headSpec_Symbol", ",", " ", "cellList_List", ",", " ", 
     RowBox[{"dataSpec_", " ", "\[Rule]", " ", "data_List"}]}], " ", "]"}], 
   "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"changeCellData", "::", "head"}], ",", " ", "headSpec"}], 
      "]"}], ";", " ", "m"}], " ", ")"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "data", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "cellList", "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeCellData", "[", " ", 
    RowBox[{"joint", ",", " ", 
     RowBox[{"cellList_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"VectorQ", "[", "#", "]"}], "]"}], "&"}], ")"}]}], ",", " ", 
     "_"}], "]"}], "[", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"changeCellData", "::", "joint"}], ",", " ", "joint"}], "]"}], 
    ";", " ", "m"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeCellData", "[", " ", 
    RowBox[{"face", ",", " ", "_", ",", " ", "_"}], " ", "]"}], "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"changeCellData", "::", "cell"}], ",", " ", "face"}], "]"}], 
    ";", " ", "m"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeCellData", "[", " ", 
    RowBox[{
     RowBox[{"cellSpec", ":", " ", 
      RowBox[{"rigidBar", "|", "spring", "|", "angleJoint", "|", "fold"}]}], 
     ",", " ", 
     RowBox[{"cellList_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"MatrixQ", "[", "#", "]"}], "]"}], "&"}], ")"}]}], ",", " ", 
     "_"}], "]"}], "[", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"changeCellData", "::", "cell"}], ",", " ", "cellSpec"}], "]"}],
     ";", " ", "m"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"changeCellData", "[", " ", 
     RowBox[{"headSpec_Symbol", " ", ",", " ", "cellList_List", ",", " ", 
      RowBox[{"dataSpec_", " ", "\[Rule]", " ", "data_List"}]}], " ", "]"}], 
    "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"changeCellData", "::", "data"}], "]"}], ";", " ", "m"}], " ", 
    ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeCellData", "::", "data"}], " ", "=", " ", 
   "\"\<Data list must be the same length as the number of cells.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeCellData", "::", "joint"}], "=", " ", 
   "\"\<Cells of type `1` are specified as a single list.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeCellData", "::", "cell"}], " ", "=", " ", 
   "\"\<Cells of type `1` are specified as a list of lists.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeCellData", "::", "head"}], "=", " ", 
   "\"\<Bad cell type, `1`.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[294]:=",ExpressionUUID->"70f625df-561a-4796-a043-b09f24c338ff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"changeCellData", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "patt_", ",", 
    " ", 
    RowBox[{"ruleList", " ", ":", " ", 
     RowBox[{
      RowBox[{"{", "___Rule", "}"}], "|", "_Rule"}]}]}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"changeCellData", "[", 
      RowBox[{"patt", ",", "ruleList"}], "]"}], "[", "m", "]"}], ",", " ", 
    "Automatic", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"changeCellData", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "headSpec_", 
    ",", " ", "cellList_", ",", " ", 
    RowBox[{"dataSpec_", " ", "\[Rule]", " ", "data_"}]}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"changeCellData", "[", 
      RowBox[{"headSpec", ",", " ", "cellList", ",", " ", 
       RowBox[{"dataSpec", " ", "\[Rule]", " ", "data"}]}], "]"}], "[", "m", 
     "]"}], ",", " ", "Automatic", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[311]:=",ExpressionUUID->"125d59ca-1967-4382-af1c-7ee3973c19c1"]
}, Closed]],

Cell[CellGroupData[{

Cell["placeVertices[], displaceVertices[]", "Subsection",ExpressionUUID->"5c30eac8-b497-457e-83bc-5feee9c6f26e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"placeVertices", "[", " ", 
     RowBox[{"moveSpec", " ", ":", " ", 
      RowBox[{
       RowBox[{"{", "___Rule", "}"}], "|", "_Rule"}]}], " ", "]"}], "[", " ", 
    
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"vertexMoves", " ", "=", " ", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"List", " ", "@@@", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "moveSpec", "}"}], "]"}]}], " ", "]"}]}], " ", "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"newVertexPositions", "[", " ", 
        RowBox[{
         RowBox[{"m", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"vertexMoves", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], " ", ",", " ", 
         RowBox[{"vertexMoves", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"m", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"placeVertices", "[", " ", 
    RowBox[{"vertices_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], " ", "]"}], 
   "[", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Head", "[", "m", "]"}], "[", " ", 
    RowBox[{"vertices", ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"m", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{"m", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "vertices", "]"}], " ", "\[Equal]", " ", 
    RowBox[{"Dimensions", "[", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"placeVertices", "[", " ", 
     RowBox[{"vertices_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], " ", "]"}], 
    "[", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "vertices", "]"}], " ", "\[NotEqual]", " ", 
        RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], ",", " ", 
       RowBox[{"Message", "[", 
        RowBox[{"placeVertices", "::", "num"}], "]"}]}], " ", "]"}], ";", 
     "\n", "\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Last", "[", 
         RowBox[{"Dimensions", "[", "vertices", "]"}], "]"}], " ", 
        "\[NotEqual]", " ", 
        RowBox[{"Last", "[", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}], "]"}]}], ",", 
       " ", 
       RowBox[{"Message", "[", " ", 
        RowBox[{"placeVertices", "::", "pos"}], " ", "]"}]}], " ", "]"}], ";",
      "\n", "\t", "m"}], "\n", ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"placeVertices", "::", "num"}], " ", "=", " ", 
   "\"\<Number of vertices is incorrect.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"placeVertices", "::", "vert"}], " ", "=", " ", 
   "\"\<Some vertices are not valid.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"placeVertices", "::", "pos"}], " ", "=", " ", 
    "\"\<All positions are not of the same dimension as coordinates.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"newVertexPositions", "[", " ", 
   RowBox[{"coordinates_", ",", " ", 
    RowBox[{"vertices_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"VectorQ", "[", 
        RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
    RowBox[{"pos_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", " ", "NumericQ"}], "]"}], "&"}], ")"}]}]}], " ", 
   "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"ReplacePart", "[", " ", 
    RowBox[{"coordinates", ",", " ", 
     RowBox[{"Thread", "[", " ", 
      RowBox[{"vertices", " ", "\[Rule]", " ", "pos"}], " ", "]"}]}], " ", 
    "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Last", "@", 
     RowBox[{"Dimensions", "[", "coordinates", "]"}]}], " ", "\[Equal]", " ", 
    
    RowBox[{"Last", "@", 
     RowBox[{"Dimensions", "[", "pos", "]"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"newVertexPositions", "[", " ", 
   RowBox[{"coordinates_", ",", " ", "_", ",", " ", 
    RowBox[{"pos_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", " ", "NumericQ"}], "]"}], "&"}], ")"}]}]}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"placeVertices", "::", "vert"}], "]"}], ";", " ", 
    "coordinates"}], " ", ")"}]}], "\n", 
 RowBox[{
  RowBox[{"newVertexPositions", "[", " ", 
   RowBox[{"coordinates_", ",", " ", "_", " ", ",", " ", "_"}], " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"placeVertices", "::", "pos"}], "]"}], ";", " ", "coordinates"}],
    " ", ")"}]}]}], "Code",
 CellLabel->
  "In[313]:=",ExpressionUUID->"3b0edd43-f179-414d-aa01-523bd36dc076"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displaceVertices", "[", " ", 
     RowBox[{"moveSpec", " ", ":", " ", 
      RowBox[{
       RowBox[{"{", "___Rule", "}"}], "|", "_Rule"}]}], " ", "]"}], "[", " ", 
    
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"vertexMoves", " ", "=", " ", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"List", " ", "@@@", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "moveSpec", "}"}], "]"}]}], " ", "]"}]}], " ", "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"moveVertexPositions", "[", " ", 
        RowBox[{
         RowBox[{"m", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"vertexMoves", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", " ", 
         RowBox[{"vertexMoves", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", "\n", "\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"m", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaceVertices", "[", " ", 
    RowBox[{"vertices_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], " ", "]"}], 
   "[", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"Head", "[", "m", "]"}], "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", "+", " ", 
      "vertices"}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"m", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{"m", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "vertices", "]"}], " ", "\[Equal]", " ", 
    RowBox[{"Dimensions", "[", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displaceVertices", "[", " ", 
     RowBox[{"vertices_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], " ", "]"}], 
    "[", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "vertices", "]"}], " ", "\[NotEqual]", " ", 
        RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], ",", " ", 
       RowBox[{"Message", "[", 
        RowBox[{"displaceVertices", "::", "num"}], "]"}]}], " ", "]"}], ";", 
     "\n", "\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Last", "[", 
         RowBox[{"Dimensions", "[", "vertices", "]"}], "]"}], " ", 
        "\[NotEqual]", " ", 
        RowBox[{"Last", "[", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}], "]"}]}], ",", 
       " ", 
       RowBox[{"Message", "[", " ", 
        RowBox[{"displaceVertices", "::", "pos"}], " ", "]"}]}], " ", "]"}], 
     ";", "\n", "\t", "m"}], "\n", ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaceVertices", "::", "num"}], " ", "=", " ", 
   "\"\<Number of vertices is incorrect.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaceVertices", "::", "vert"}], " ", "=", " ", 
   "\"\<Some vertices are not valid.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displaceVertices", "::", "pos"}], " ", "=", " ", 
    "\"\<All positions are not of the same dimension as coordinates.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"moveVertexPositions", "[", " ", 
   RowBox[{"coordinates_", ",", " ", 
    RowBox[{"vertices_", "?", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"VectorQ", "[", " ", 
        RowBox[{"#", ",", " ", "IntegerQ"}], " ", "]"}], " ", "&"}], " ", 
      ")"}]}], " ", ",", " ", 
    RowBox[{"pos_", "?", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"MatrixQ", "[", " ", 
        RowBox[{"#", ",", " ", "NumericQ"}], " ", "]"}], " ", "&"}], " ", 
      ")"}]}]}], " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"ReplacePart", "[", " ", 
    RowBox[{"coordinates", ",", " ", 
     RowBox[{"Thread", "[", " ", 
      RowBox[{"vertices", " ", "\[Rule]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"coordinates", "[", 
          RowBox[{"[", "vertices", "]"}], "]"}], " ", "+", " ", "pos"}], 
        ")"}]}], " ", "]"}]}], " ", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Last", "[", 
     RowBox[{"Dimensions", "[", "coordinates", "]"}], "]"}], " ", "\[Equal]", 
    " ", 
    RowBox[{"Last", "[", 
     RowBox[{"Dimensions", "[", "pos", "]"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"moveVertexPositions", "[", " ", 
   RowBox[{"coordinates_", ",", " ", "vertices_", ",", " ", "pos_"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"Not", "[", 
       RowBox[{"VectorQ", "[", 
        RowBox[{"vertices", ",", " ", "IntegerQ"}], " ", "]"}], "]"}], ",", 
      " ", 
      RowBox[{"Message", "[", " ", 
       RowBox[{"displaceVertices", "::", "vert"}], " ", "]"}]}], " ", "]"}], 
    ";", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"Not", "[", " ", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"pos", ",", " ", "NumericQ"}], "]"}], " ", "&&", " ", 
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"Dimensions", "[", "coordinates", "]"}], "]"}], " ", 
         "\[Equal]", " ", 
         RowBox[{"Last", "[", 
          RowBox[{"Dimensions", "[", "pos", "]"}], "]"}]}]}], " ", "]"}], ",",
       " ", 
      RowBox[{"Message", "[", " ", 
       RowBox[{"displaceVertices", "::", "pos"}], " ", "]"}]}], " ", "]"}], 
    ";", "\n", "\t", "coordinates"}], "\n", ")"}]}]}], "Code",
 CellLabel->
  "In[322]:=",ExpressionUUID->"dc6fae3e-0250-465d-b252-f2807af8cf17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"placeVertices", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "moveSpec_"}],
    " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"placeVertices", "[", "moveSpec", "]"}], "[", "m", "]"}], ",", 
    " ", "Automatic", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"displaceVertices", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "moveSpec_"}],
    " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"displaceVertices", "[", "moveSpec", "]"}], "[", "m", "]"}], ",",
     " ", "Automatic", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[330]:=",ExpressionUUID->"e71eaeac-52c8-47a5-808b-97451c4d3a99"]
}, Closed]],

Cell[CellGroupData[{

Cell["Map[]", "Subsection",ExpressionUUID->"3ab5e732-329f-4489-88fd-99e349e91f19"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"framework", " ", "/:", " ", 
   RowBox[{"Map", "[", " ", 
    RowBox[{"f_", ",", " ", 
     RowBox[{"m", " ", ":", " ", 
      RowBox[{"framework", "[", " ", 
       RowBox[{"coordinates_", ",", " ", "_", ",", " ", 
        RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", "  ", 
        "labels_"}], " ", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"newCoordinates", " ", "=", " ", 
       RowBox[{"f", " ", "/@", " ", "coordinates"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"framework", "[", " ", 
       RowBox[{"newCoordinates", ",", " ", 
        RowBox[{"{", "}"}], ",", " ", "cells", ",", " ", "labels"}], " ", 
       "]"}], " ", "/;", " ", 
      RowBox[{"mapTestCoordinatesQ", "[", " ", 
       RowBox[{"newCoordinates", ",", " ", "coordinates"}], " ", "]"}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"origami", " ", "/:", " ", 
   RowBox[{"Map", "[", " ", 
    RowBox[{"f_", ",", " ", 
     RowBox[{"m", " ", ":", " ", 
      RowBox[{"origami", "[", " ", 
       RowBox[{"coordinates_", ",", " ", "_", ",", " ", 
        RowBox[{"cells", " ", ":", " ", "packedCellPattern"}], ",", " ", 
        "labels_"}], " ", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"newCoordinates", " ", "=", " ", 
       RowBox[{"f", " ", "/@", " ", "coordinates"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"origami", "[", " ", 
       RowBox[{"newCoordinates", ",", " ", 
        RowBox[{"{", "}"}], ",", " ", "cells", ",", " ", "labels"}], " ", 
       "]"}], " ", "/;", " ", 
      RowBox[{"mapTestCoordinatesQ", "[", " ", 
       RowBox[{"newCoordinates", ",", " ", "coordinates"}], " ", "]"}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "match"}], " ", "=", 
   "\"\<New coordinates are not numeric and of the same dimension as old \
coordinates.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mapTestCoordinatesQ", "[", " ", 
   RowBox[{"new_", ",", " ", "old_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixQ", "[", " ", 
      RowBox[{"new", ",", " ", "NumericQ"}], " ", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Dimensions", "[", "new", "]"}], " ", "\[Equal]", " ", 
      RowBox[{"Dimensions", "[", "old", "]"}]}]}], ",", " ", "True", ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"mechanism", "::", "match"}], "]"}], ";", " ", "False"}]}], " ",
    "]"}]}]}], "Code",
 CellLabel->
  "In[332]:=",ExpressionUUID->"716f9373-6de2-4d61-b7b3-deac55ae485c"]
}, Closed]],

Cell[CellGroupData[{

Cell["mapCells[]", "Subsection",ExpressionUUID->"cb7c2df9-dda8-4d22-bcab-38d90211eab7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mapCells", "[", " ", "f_", " ", "]"}], "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"cells", " ", "=", " ", 
       RowBox[{"unparseCells", "[", 
        RowBox[{
         RowBox[{"m", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", "_"}], "]"}]}], ",", "\n", 
      "\t", "newCells"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"newCells", " ", "=", " ", 
      RowBox[{"parseCells", "[", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"{", "}"}], ",", " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "}"}], " ", ",", " ", 
        RowBox[{"f", " ", "/@", " ", "cells"}]}], " ", "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "[", " ", 
      RowBox[{
       RowBox[{"newCells", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{"newCells", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"newCells", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"mapCells", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", ",", " ", "f_"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{"addMeshRegion", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"mapCells", "[", "f", "]"}], "[", "m", "]"}], ",", " ", 
    "Automatic", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[336]:=",ExpressionUUID->"09b6a594-cbdf-4cab-a245-d13a757d3bde"]
}, Closed]],

Cell[CellGroupData[{

Cell["tesselateMechanism[]", "Subsection",ExpressionUUID->"b687de83-cd96-4c03-a6c5-674f5c438ade"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "tesselateMechanism", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<overlapPrecision\>\"", "\[Rule]", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "6"}], ")"}]}]}], "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[338]:=",ExpressionUUID->"76ffc6b0-1698-4435-a9f3-a8e4d85ac1ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tesselateMechanism", "::", "counter"}], "=", 
   "\"\<Number of cells must be positive integers corresponding to the number \
of basis elements.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tesselateMechanism", "::", "dim"}], "=", 
   "\"\<Basis must be `1` dimensional to match mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tesselateMechanism", "::", "num"}], "=", 
   "\"\<Basis must be numerical with vectors of the same dimension.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tesselateMechanism", "::", "basis"}], "=", 
    "\"\<Basis must be a list of `1` numerical vectors.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tesselationBasisQ", "[", " ", 
    RowBox[{"m_", ",", " ", "d_", ",", " ", "basis_"}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Not", "[", 
      RowBox[{"MatrixQ", "[", 
       RowBox[{"basis", ",", "NumericQ"}], "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", " ", 
       RowBox[{"tesselateMechanism", "::", "num"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Length", "[", "basis", "]"}], " ", "\[NotEqual]", " ", "d"}], 
     ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", " ", 
       RowBox[{
        RowBox[{"tesselateMechanism", "::", "basis"}], ",", " ", "d"}], " ", 
       "]"}], ";", " ", "False"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Last", "[", 
       RowBox[{"Dimensions", "[", "basis", "]"}], "]"}], " ", "\[NotEqual]", 
      " ", 
      RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", " ", 
       RowBox[{
        RowBox[{"tesselateMechanism", "::", "dim"}], ",", " ", 
        RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], " ", "]"}], 
      ";", " ", "False"}], ",", "\n", "\t", "True", ",", " ", "True"}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"tesselationCellCountsQ", "[", " ", 
   RowBox[{"n1__Integer", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], ")"}]}], " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"tesselationCellCountsQ", "[", " ", "__", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"tesselateMechanism", "::", "counter"}], "]"}], ";", " ", 
    "False"}], ")"}]}]}], "Code",
 CellLabel->
  "In[339]:=",ExpressionUUID->"ca5dc61d-eb9d-4c00-9924-201bee91a182"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"translateLabels", "[", " ", 
   RowBox[{"n_", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"translateLabels", "[", 
    RowBox[{"n_", ",", " ", 
     RowBox[{"ruleList", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Rule", "[", " ", 
         RowBox[{"_", ",", " ", "_"}], " ", "]"}], ".."}], "}"}]}]}], " ", 
    "]"}], ":=", " ", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"labels", ",", " ", "indices"}], "}"}], " ", ",", "  ", "\n", 
     "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"labels", ",", " ", "indices"}], "}"}], " ", "=", " ", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"List", " ", "@@@", " ", "ruleList"}], " ", "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"Rule", " ", "@@@", " ", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"Through", "[", " ", 
           RowBox[{"labels", "[", "n", "]"}], " ", "]"}], " ", ",", " ", 
          "indices"}], " ", "}"}], " ", "]"}]}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"translateCoordinates", "[", " ", 
   RowBox[{"positions_", ",", " ", "translationVector_"}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"positions", " ", "+", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"translationVector", ",", " ", 
     RowBox[{"Length", "[", "positions", "]"}]}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[346]:=",ExpressionUUID->"721a18ca-3636-47ac-8ec2-4481f8e47919"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tesselateMechanism", "[", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "basis_", ",",
     " ", 
    RowBox[{"n1", " ", ":", " ", 
     RowBox[{"Except", "[", "_List", "]"}]}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", 
  RowBox[{
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], ",", "\n", "\t", 
       RowBox[{"unitCellIndices", " ", "=", " ", 
        RowBox[{"Range", "[", "n1", "]"}]}], ",", " ", "\n", "\t", 
       "newCoordinates", ",", " ", "translatedMechanisms"}], "\n", "}"}], ",",
      "\n", "\t", 
     RowBox[{
      RowBox[{"newCoordinates", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"translateCoordinates", "[", " ", 
          RowBox[{"positions", ",", " ", 
           RowBox[{"basis", " ", "#"}]}], " ", "]"}], "&"}], " ", "/@", " ", 
        "unitCellIndices"}]}], ";", "\n", "\t", 
      RowBox[{"translatedMechanisms", " ", "=", " ", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "m", "]"}], "[", " ", 
           RowBox[{"#1", ",", " ", 
            RowBox[{"{", "}"}], ",", " ", 
            RowBox[{"m", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
            RowBox[{"translateLabels", "[", 
             RowBox[{"#2", ",", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}]}], " ", "]"}], 
          "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"newCoordinates", ",", " ", "unitCellIndices"}], "}"}]}], 
        " ", "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"joinMechanism", "[", " ", 
       RowBox[{"translatedMechanisms", ",", " ", "opt"}], " ", "]"}]}]}], 
    "\n", "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"tesselationBasisQ", "[", 
     RowBox[{"m", ",", " ", "1", ",", " ", 
      RowBox[{"{", "basis", "}"}]}], "]"}], " ", "&&", " ", 
    RowBox[{"tesselationCellCountsQ", "[", 
     RowBox[{"n1", ",", "1"}], "]"}]}]}]}]], "Code",
 CellLabel->
  "In[349]:=",ExpressionUUID->"52292cab-859e-4526-ad11-c2375d158cee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tesselateMechanism", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "basis_", ",",
     " ", 
    RowBox[{"{", 
     RowBox[{"n1_", ",", " ", "n2_"}], "}"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], ",", "\n", "\t", 
       RowBox[{"unitCellIndices", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Array", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"n1", ",", "n2"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
       ",", "\n", "\t", "newCoordinates", ",", " ", "translatedMechanisms"}], 
      "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"newCoordinates", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"translateCoordinates", "[", " ", 
          RowBox[{"positions", ",", " ", 
           RowBox[{"#", " ", ".", " ", "basis"}]}], " ", "]"}], "&"}], " ", "/@",
         " ", "unitCellIndices"}]}], ";", "\n", "\t", 
      RowBox[{"translatedMechanisms", " ", "=", " ", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "m", "]"}], "[", 
           RowBox[{"#1", ",", " ", 
            RowBox[{"{", "}"}], ",", " ", 
            RowBox[{"m", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
            RowBox[{"translateLabels", "[", 
             RowBox[{"#2", ",", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}]}], "]"}], "&"}], 
         ",", " ", 
         RowBox[{"{", 
          RowBox[{"newCoordinates", ",", " ", "unitCellIndices"}], "}"}]}], 
        " ", "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"joinMechanism", "[", " ", 
       RowBox[{"translatedMechanisms", ",", " ", "opt"}], " ", "]"}]}]}], 
    "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"tesselationBasisQ", "[", 
     RowBox[{"m", ",", " ", "2", ",", " ", "basis"}], "]"}], " ", "&&", " ", 
    RowBox[{"tesselationCellCountsQ", "[", 
     RowBox[{"n1", ",", "n2"}], "]"}]}]}]}]], "Code",
 CellLabel->
  "In[350]:=",ExpressionUUID->"d24fd5c7-bb15-4547-9025-38b6386831cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tesselateMechanism", "[", " ", 
   RowBox[{
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "basis_", ",",
     " ", 
    RowBox[{"{", 
     RowBox[{"n1_", ",", " ", "n2_", ",", " ", "n3_"}], "}"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], ",", "\n", "\t", 
       RowBox[{"unitCellIndices", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Array", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2", ",", "#3"}], "}"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}], "]"}], ",", "2"}],
          "]"}]}], ",", "\n", "\t", "newCoordinates", ",", " ", 
       "translatedMechanisms"}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"newCoordinates", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"translateCoordinates", "[", " ", 
          RowBox[{"positions", ",", " ", 
           RowBox[{"#", " ", ".", " ", "basis"}]}], " ", "]"}], "&"}], " ", "/@",
         " ", "unitCellIndices"}]}], ";", "\n", "\t", 
      RowBox[{"translatedMechanisms", " ", "=", " ", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "m", "]"}], "[", 
           RowBox[{"#1", ",", " ", 
            RowBox[{"{", "}"}], ",", " ", 
            RowBox[{"m", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
            RowBox[{"translateLabels", "[", 
             RowBox[{"#2", ",", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}]}], "]"}], "&"}], 
         ",", " ", 
         RowBox[{"{", 
          RowBox[{"newCoordinates", ",", " ", "unitCellIndices"}], "}"}]}], 
        " ", "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"joinMechanism", "[", " ", 
       RowBox[{"translatedMechanisms", ",", " ", "opt"}], " ", "]"}]}]}], 
    "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"tesselationBasisQ", "[", 
     RowBox[{"m", ",", " ", "3", ",", " ", "basis"}], "]"}], " ", "&&", " ", 
    RowBox[{"tesselationCellCountsQ", "[", 
     RowBox[{"n1", ",", "n2", ",", "n3"}], "]"}]}]}]}]], "Code",
 CellLabel->
  "In[351]:=",ExpressionUUID->"2cf05f30-ea55-4528-b268-4f693ccc6344"]
}, Closed]],

Cell[CellGroupData[{

Cell["ReplaceAll[]", "Subsection",ExpressionUUID->"0fa84328-818f-4aa0-9af0-dd5dc45722ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"replaceElement", "[", " ", 
    RowBox[{
     RowBox[{"f", " ", ":", " ", "mechanismPattern"}], ",", " ", "rule_"}], 
    " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Head", "[", "f", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"ReplaceAll", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "rule"}], "]"}], " ", ",", 
     RowBox[{"f", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{"replaceCellData", "[", " ", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", "rule"}], " ", "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ReplaceAll", "[", " ", 
   RowBox[{"f_framework", ",", " ", "rule_"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"replaceElement", "[", " ", 
   RowBox[{"f", ",", " ", "rule"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"ReplaceAll", "[", " ", 
   RowBox[{"o_origami", ",", " ", "rule_"}], "]"}], " ", "^:=", " ", 
  RowBox[{"replaceElement", "[", 
   RowBox[{"o", ",", " ", "rule"}], "]"}]}]}], "Code",
 CellLabel->
  "In[352]:=",ExpressionUUID->"230fde4b-20eb-4071-99aa-5c8ad4bd0f21"]
}, Closed]],

Cell[CellGroupData[{

Cell["Precision[], Rationalize[], N[]", "Subsection",ExpressionUUID->"43647b8f-478e-4e7c-9742-557e8dc9a078"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Precision", "[", " ", "f_framework", " ", "]"}], " ", "^:=", " ", 
  RowBox[{"Precision", "[", " ", 
   RowBox[{"f", "[", "\"\<positions\>\"", "]"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Precision", "[", " ", "o_origami", " ", "]"}], " ", "^:=", " ", 
  RowBox[{"Precision", "[", " ", 
   RowBox[{"o", "[", "\"\<positions\>\"", "]"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[355]:=",ExpressionUUID->"a3217d07-b263-49db-8e2b-a299c78b318f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Rationalize", "[", " ", 
   RowBox[{"f_framework", ",", " ", "dx___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"ReplacePart", "[", " ", 
   RowBox[{"f", ",", " ", 
    RowBox[{"1", " ", "\[Rule]", " ", 
     RowBox[{"ToPackedArray", "[", 
      RowBox[{"Rationalize", "[", " ", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", "dx"}], " ", "]"}], 
      "]"}]}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Rationalize", "[", " ", 
   RowBox[{"o_origami", ",", " ", "dx___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"ReplacePart", "[", " ", 
   RowBox[{"o", ",", " ", 
    RowBox[{"1", " ", "\[Rule]", " ", 
     RowBox[{"ToPackedArray", "[", 
      RowBox[{"Rationalize", "[", " ", 
       RowBox[{
        RowBox[{"o", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", "dx"}], " ", "]"}], 
      "]"}]}]}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[357]:=",ExpressionUUID->"3334406d-4524-4f4f-9a1f-901b483ce449"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N", "[", " ", 
   RowBox[{"f_framework", ",", " ", "dx___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"ReplacePart", "[", " ", 
   RowBox[{"f", ",", " ", 
    RowBox[{"1", " ", "\[Rule]", " ", 
     RowBox[{"ToPackedArray", "[", 
      RowBox[{"N", "[", " ", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", "dx"}], " ", "]"}], 
      "]"}]}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"N", "[", " ", 
   RowBox[{"o_origami", ",", " ", "dx___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"ReplacePart", "[", " ", 
   RowBox[{"o", ",", " ", 
    RowBox[{"1", " ", "\[Rule]", " ", 
     RowBox[{"ToPackedArray", "[", 
      RowBox[{"N", "[", " ", 
       RowBox[{
        RowBox[{"o", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", "dx"}], " ", "]"}], 
      "]"}]}]}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[359]:=",ExpressionUUID->"59f86bc7-1124-49b0-b3e5-f21143d862bd"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["More sophisticated manipulations", "Section",ExpressionUUID->"8a6930c3-0554-4d2c-8310-f85820c57ead"],

Cell[CellGroupData[{

Cell["subdivideCell[]", "Subsection",ExpressionUUID->"807f5525-dcf2-4be3-a3d6-f662db4b35c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"subdivideCell", "[", " ", 
     RowBox[{
      RowBox[{"indices_", "?", "VectorQ"}], " ", ",", " ", 
      RowBox[{"label_", " ", ":", " ", 
       RowBox[{"Unique", "[", "]"}]}]}], " ", "]"}], "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tmp", " ", "=", " ", 
       RowBox[{
        RowBox[{"subdivideCell", "[", " ", 
         RowBox[{
          RowBox[{"{", "indices", "}"}], ",", "label"}], "]"}], "[", "m", 
        "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", "tmp", "]"}], "[", " ", 
      RowBox[{
       RowBox[{"tmp", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"tmp", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"tmp", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
       RowBox[{"replaceRules", "[", " ", 
        RowBox[{
         RowBox[{"tmp", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"label", "[", "indices", "]"}], " ", "\[Rule]", " ", 
           "label"}], "}"}]}], "]"}]}], " ", "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"subdivideCell", "[", " ", 
     RowBox[{
      RowBox[{"indices", " ", ":", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"_", ",", "__"}], "}"}], "..."}], "}"}]}], " ", ",", " ", 
      RowBox[{"label_", " ", ":", " ", 
       RowBox[{"Unique", "[", "]"}]}]}], " ", "]"}], "[", " ", 
    RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
   " ", "\n", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"cells", " ", "=", " ", 
       RowBox[{"mechanismCells", "[", " ", 
        RowBox[{"m", ",", " ", 
         RowBox[{"{", 
          RowBox[{"_", " ", ",", " ", "indices"}], "}"}], " ", ",", " ", 
         "_"}], " ", "]"}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"addCells", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"subdivideCellInternal", "[", " ", 
          RowBox[{
           RowBox[{"m", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", "#", " ", ",", " ", 
           "label"}], "]"}], " ", "&"}], " ", "/@", " ", "cells"}], " ", 
       "]"}], " ", "@", " ", 
      RowBox[{
       RowBox[{"deleteCells", "[", " ", 
        RowBox[{"deletedCells", "[", 
         RowBox[{"cells", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], " ", "]"}], " ", 
       "@", " ", "m"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"deletedCells", "[", " ", "cells_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"patternTheCells", " ", "/@", " ", "cells"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"patternTheCells", "[", " ", 
   RowBox[{"head_", "[", " ", 
    RowBox[{"indices", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"_", ",", "__"}], "}"}], ".."}], "}"}]}], " ", "]"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"head", " ", "/@", " ", "indices"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"patternTheCells", "[", " ", 
    RowBox[{"fine", " ", ":", " ", 
     RowBox[{"_", "[", " ", 
      RowBox[{"{", 
       RowBox[{"_", ",", "__"}], "}"}], " ", "]"}]}], " ", "]"}], " ", ":=", 
   " ", "fine"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subdivideCell", "[", " ", 
    RowBox[{
     RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", "indices_", 
     ",", " ", 
     RowBox[{"label_", " ", ":", " ", 
      RowBox[{"Unique", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"addMeshRegion", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"subdivideCell", "[", 
       RowBox[{"indices", ",", " ", "label"}], "]"}], "[", "m", "]"}], ",", 
     " ", "Automatic", ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subdivideCellInternal", "[", " ", 
    RowBox[{"coordinates_", " ", ",", " ", 
     RowBox[{"Rule", "[", " ", 
      RowBox[{
       RowBox[{"head_", "[", 
        RowBox[{"indices", " ", ":", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"_", ",", "_"}], "}"}], "..."}], "}"}]}], " ", "]"}], ",",
        " ", "data_"}], " ", "]"}], " ", ",", " ", "label_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"newVertices", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "indices", "]"}], ">", "1"}], ",", 
          RowBox[{"label", "/@", "indices"}], ",", 
          RowBox[{"{", "label", "}"}]}], "]"}]}], ",", " ", 
       RowBox[{"newVertexCoordinates", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"coordinates", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
         "indices"}]}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"joint", "[", " ", 
           RowBox[{"#1", " ", "\[Rule]", " ", "#2"}], " ", "]"}], "&"}], " ", 
         ",", " ", 
         RowBox[{"{", 
          RowBox[{"newVertices", ",", " ", "newVertexCoordinates"}], "}"}]}], 
        " ", "]"}], ",", "\n", "\t\t", 
       RowBox[{"(*", 
        RowBox[{"new", " ", "edges"}], "*)"}], "\n", "\t\t", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"head", "[", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "#2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"#2", ",", " ", 
                RowBox[{"#1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ",", " ", 
            "#3"}], "]"}], "&"}], ",", " ", 
         RowBox[{"{", " ", 
          RowBox[{"indices", ",", " ", "newVertices", ",", " ", "data"}], " ",
           "}"}]}], " ", "]"}]}], "\n", "\t", "}"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"subdivideCellInternal", "[", " ", 
   RowBox[{"coordinates_", ",", " ", 
    RowBox[{"Rule", "[", " ", 
     RowBox[{
      RowBox[{"head_", "[", " ", 
       RowBox[{"indices", " ", ":", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_", ",", "_", ",", "__"}], "}"}], "..."}], "}"}]}], " ", 
       "]"}], ",", " ", "data_"}], " ", "]"}], " ", ",", " ", "label_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"newVertices", " ", "=", " ", 
       RowBox[{"label", "/@", "indices"}]}], ",", " ", 
      RowBox[{"newVertexCoordinates", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Mean", "[", " ", 
          RowBox[{"coordinates", "[", 
           RowBox[{"[", "#", "]"}], "]"}], " ", "]"}], "&"}], "/@", 
        "indices"}]}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"MapThread", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"joint", "[", " ", 
          RowBox[{"#1", " ", "\[Rule]", " ", "#2"}], " ", "]"}], "&"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"newVertices", ",", " ", "newVertexCoordinates"}], "}"}]}], 
       " ", "]"}], ",", "\n", "\t\t", 
      RowBox[{"(*", 
       RowBox[{"new", " ", "faces"}], "*)"}], "\n", "\t\t", 
      RowBox[{"MapThread", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"head", "[", " ", 
          RowBox[{
           RowBox[{"splitFace", "[", " ", 
            RowBox[{"#1", ",", " ", "#2"}], " ", "]"}], " ", ",", " ", "#3"}],
           "]"}], "&"}], "  ", ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{
         "indices", " ", ",", " ", "newVertices", " ", ",", " ", "data"}], 
         " ", "}"}]}], " ", "]"}]}], "\n", "\t", "}"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"splitFace", "[", " ", 
   RowBox[{"indices_", " ", ",", " ", "newVertex_"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newVertex", ",", " ", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], " ", "}"}], " ", "&"}], " ", "/@", 
   " ", 
   RowBox[{"Partition", "[", " ", 
    RowBox[{"indices", " ", ",", " ", "2", ",", " ", "1", ",", " ", "1"}], 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[361]:=",ExpressionUUID->"ce76c6e6-607c-4339-bc44-5002db5363e0"]
}, Closed]],

Cell[CellGroupData[{

Cell["divideFace[]", "Subsection",ExpressionUUID->"1c9d14aa-e4fa-43c7-a463-0fb0f975c854"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"divideFace", "[", " ", 
    RowBox[{"edge", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_"}], "}"}]}], " ", "]"}], "[", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"divideFace", "[", " ", 
    RowBox[{"{", "edge", "}"}], " ", "]"}], "[", "m", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"divideFace", "[", " ", 
    RowBox[{"edgeList_", "?", "MatrixQ"}], " ", "]"}], "[", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  " ", "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"cells", " ", "=", " ", 
       RowBox[{"unparseCells", "[", " ", 
        RowBox[{
         RowBox[{"m", "[", 
          RowBox[{"[", "3", "]"}], "]"}], " ", ",", " ", "face"}], "]"}]}], 
      ",", "\n", "\t", 
      RowBox[{"facelessM", " ", "=", " ", 
       RowBox[{
        RowBox[{"deleteCells", "[", "_face", "]"}], " ", "@", " ", "m"}]}], 
      ",", "\n", "\t", "newCells"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"newCells", " ", "=", " ", 
      RowBox[{"parseCells", "[", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"facelessM", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"facelessM", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
          RowBox[{"facelessM", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"Fold", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"cutFace", "[", "#2", "]"}], " ", "/@", " ", "#1"}], 
            ")"}], " ", "&"}], ",", " ", "cells", ",", " ", 
          RowBox[{"edgeList", " ", "/.", " ", 
           RowBox[{"m", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]}], " ", "]"}]}], " ", "]"}]}], 
     ";", "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "[", " ", 
      RowBox[{
       RowBox[{"newCells", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{"newCells", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"newCells", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"divideFace", "[", " ", 
    RowBox[{
     RowBox[{"m", " ", ":", " ", "mechanismPattern"}], ",", " ", 
     "edgeList_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"addMeshRegion", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"divideFace", "[", "edgeList", "]"}], "[", "m", "]"}], ",", " ",
      "Automatic", ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cutFace", "[", " ", 
    RowBox[{"{", 
     RowBox[{"v1_", ",", "v2_"}], "}"}], "]"}], "[", 
   RowBox[{"face", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a___", ",", "v1_", ",", "b__", ",", "v2_", ",", "c___"}], 
      "}"}], ",", " ", "prop_"}], "]"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"face", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v1", ",", "b", ",", "v2"}], "}"}], ",", "prop"}], "]"}], ",", 
    
    RowBox[{"face", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v2", ",", "c", ",", "a", ",", "v1"}], "}"}], ",", "prop"}], 
     "]"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cutFace", "[", " ", 
    RowBox[{"{", 
     RowBox[{"v2_", ",", "v1_"}], "}"}], "]"}], "[", 
   RowBox[{"face", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a___", ",", "v1_", ",", "b__", ",", "v2_", ",", "c___"}], 
      "}"}], ",", " ", "prop_"}], "]"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"face", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v1", ",", "b", ",", "v2"}], "}"}], ",", "prop"}], "]"}], ",", 
    
    RowBox[{"face", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v2", ",", "c", ",", "a", ",", "v1"}], "}"}], ",", "prop"}], 
     "]"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cutFace", "[", " ", "_", " ", "]"}], "[", "f_", "]"}], " ", ":=", 
  " ", "f"}]}], "Code",
 CellLabel->
  "In[370]:=",ExpressionUUID->"88781786-7762-436e-88e7-32ea57b8a248"]
}, Closed]],

Cell[CellGroupData[{

Cell["triangulateFaces[]", "Subsection",ExpressionUUID->"d8651388-086c-4e91-8a1b-4321d177cd65"],

Cell[BoxData[
 RowBox[{
  RowBox[{"triangulateFaces", "[", " ", 
   RowBox[{"m", " ", ":", " ", "mechanismPattern"}], " ", "]"}], " ", ":=", 
  "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"cells", " ", "=", " ", 
       RowBox[{"unparseCells", "[", " ", 
        RowBox[{
         RowBox[{"m", "[", 
          RowBox[{"[", "3", "]"}], "]"}], " ", ",", " ", "face"}], "]"}]}], 
      ",", "\n", "\t", 
      RowBox[{"newm", " ", "=", " ", 
       RowBox[{
        RowBox[{"deleteCells", "[", " ", "_face", " ", "]"}], " ", "@", " ", 
        "m"}]}], ",", "\n", "\t", 
      RowBox[{"coordinates", " ", "=", " ", 
       RowBox[{"m", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t", "newcells"}], "\n",
      "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"newcells", " ", "=", " ", 
      RowBox[{"parseCells", "[", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"newm", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"newm", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"newm", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"decomposeFace", "[", " ", 
           RowBox[{"coordinates", ",", " ", "#"}], " ", "]"}], "&"}], " ", "/@",
          " ", "cells"}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"addMeshRegion", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "m", "]"}], "[", 
        RowBox[{
         RowBox[{"newcells", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{"newcells", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"newcells", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", " ", "Automatic", ",",
        " ", 
       RowBox[{"{", "}"}]}], " ", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[376]:=",ExpressionUUID->"c265f046-0659-4ba0-a446-8dd92026215b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"decomposeFace", "[", " ", 
   RowBox[{"coordinates_", ",", " ", 
    RowBox[{"face", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i_", ",", "j_", ",", "k_"}], "}"}], ",", " ", "prop_"}], 
     "]"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"face", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", "k"}], "}"}], ",", " ", "prop"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"decomposeFace", "[", " ", 
   RowBox[{"coordinates_", ",", " ", 
    RowBox[{"face", "[", " ", 
     RowBox[{"i_", " ", ",", " ", "prop_"}], "]"}]}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"diag", " ", "=", " ", 
      RowBox[{"findShortestDiagonal", "[", " ", 
       RowBox[{"coordinates", ",", " ", "i"}], " ", "]"}]}], "}"}], ",", "\n",
     "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fold", "[", "diag", "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"decomposeFace", "[", " ", 
         RowBox[{"coordinates", ",", " ", "#"}], " ", "]"}], " ", "&"}], " ", 
       "/@", " ", 
       RowBox[{
        RowBox[{"cutFace", "[", "diag", "]"}], "[", 
        RowBox[{"face", "[", 
         RowBox[{"i", ",", " ", "prop"}], "]"}], "]"}]}]}], "}"}]}], "\n", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"decomposeFace", "[", " ", 
    RowBox[{"coordinates_", ",", " ", "other_"}], " ", "]"}], " ", ":=", " ", 
   "other"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"findShortestDiagonal", "[", " ", 
   RowBox[{"coordinates_", ",", " ", 
    RowBox[{"vertices", " ", ":", " ", 
     RowBox[{"{", "__Integer", "}"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"diagonals", " ", "=", " ", 
      RowBox[{"polygonDiagonals", "[", " ", "vertices", " ", "]"}]}], "}"}], 
    ",", "\n", "\t", 
    RowBox[{
     RowBox[{"MinimalBy", "[", " ", 
      RowBox[{
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"{", " ", 
         RowBox[{"diagonals", " ", ",", " ", 
          RowBox[{"mechanisms`geometry`displacementLength", "[", " ", 
           RowBox[{"coordinates", ",", " ", "diagonals"}], " ", "]"}]}], " ", 
         "}"}], " ", "]"}], " ", ",", " ", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"Last", "[", "#", "]"}], "]"}], "&"}]}], " ", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"polygonDiagonals", "[", " ", "vertices_", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"guesses", " ", "=", " ", 
       RowBox[{"Tuples", "[", " ", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "vertices", "]"}], "]"}], ",", " ", "2"}], 
        " ", "]"}]}], ",", " ", 
      RowBox[{"l", " ", "=", " ", 
       RowBox[{"Length", "[", "vertices", "]"}]}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"DeleteDuplicatesBy", "[", " ", 
     RowBox[{
      RowBox[{"Map", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", " ", 
        RowBox[{"Select", "[", " ", 
         RowBox[{"guesses", ",", " ", 
          RowBox[{
           RowBox[{"Between", "[", " ", 
            RowBox[{
             RowBox[{"Abs", "[", " ", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", "  ", 
             RowBox[{"{", 
              RowBox[{"2", ",", " ", 
               RowBox[{
                RowBox[{"Length", "[", "vertices", "]"}], "-", "2"}]}], 
              "}"}]}], " ", "]"}], " ", "&"}]}], " ", "]"}], ",", " ", 
        RowBox[{"{", "2", "}"}]}], " ", "]"}], ",", " ", "Sort"}], "]"}]}], 
   "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[377]:=",ExpressionUUID->"b0c5ca40-ee5c-4e8e-a2be-e6c19ab5e11f"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["post", "Section",ExpressionUUID->"a96ef353-fd5d-425a-9621-3fe4e067febe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[382]:=",ExpressionUUID->"947147f2-f482-4741-a59e-b93ede67b4b9"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["mechanisms`geometry: extracting mechanism geometry", "Chapter",ExpressionUUID->"95c9d13b-445a-4347-87a7-43f7db6e7a5f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<mechanisms`geometry`\>\"", "]"}], 
  ";"}]], "Code",
 CellLabel->
  "In[384]:=",ExpressionUUID->"ea0a7c8e-7cd5-49d0-8504-8949ad7ad62c"],

Cell[CellGroupData[{

Cell["code snippet to check for C compiler", "Subsubsection",ExpressionUUID->"6059f1c6-1fbe-45e0-aea7-add255709cee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\n", "\t", 
   RowBox[{
    RowBox[{
    "A", " ", "snippet", " ", "of", " ", "code", " ", "to", " ", "test", " ", 
     "or", " ", "a", " ", "working", " ", "C", " ", "compiler"}], ",", " ", 
    RowBox[{
     RowBox[{"modified", " ", "from", "\n", "\t", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "questions"}], "/", "39837"}], "/", "check"}], "-", "whether", "-", 
      "a", "-", "working", "-", "ccompiler", "-", "is", "-", 
      "installed"}]}]}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"Check", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Compile", "[", 
            RowBox[{
             RowBox[{"{", "}"}], ",", " ", "0", ",", " ", 
             RowBox[{"CompilationTarget", " ", "->", " ", "\"\<C\>\""}]}], 
            "]"}], "[", "]"}], " ", "==", " ", "0"}], "]"}], ",", " ", 
        "False"}], "]"}], "]"}], ",", "\n", "  ", 
     RowBox[{"$compilationTarget", " ", "=", " ", "\"\<C\>\""}], ",", "\n", 
     "  ", 
     RowBox[{"$compilationTarget", " ", "=", " ", "\"\<MVM\>\""}]}], "\n", 
    "]"}], ";"}]}]], "Code",
 CellLabel->
  "In[385]:=",ExpressionUUID->"f81e2e99-8a33-43c6-9b07-9a18257ed9eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["usage", "Section",ExpressionUUID->"648a6476-b797-42cf-8e5a-b9bc1a86e610"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"$compilationTarget", "::", "usage"}], " ", "=", " ", 
   "\"\<Returns \\\"C\\\" if a C compiler was detected.\>\""}], ";"}]], "Code",\

 CellLabel->
  "In[386]:=",ExpressionUUID->"d786515a-d3bd-4718-b039-f280d0b9f02b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimal", "::", "usage"}], "=", 
   "\"\<infinitesimal[ name, order ] represents an infinitesimal of name and \
at a particular order.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[387]:=",ExpressionUUID->"dbb93444-1867-4df8-88d7-4358e4ecd562"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displacementRules", "::", "usage"}], " ", "=", " ", 
   "\"\<displacementRules[displacements] returns a list of rules to assign \
vertex displacements to their values.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"positionRules", "::", "usage"}], " ", "=", " ", 
    "\"\<positionRules[positions] returns a list of rules assigning vertex \
positions to their values.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"orthogonalizeDisplacements", "::", "usage"}], "=", "\n", 
    "\"\<orthogonalizeDisplacements[ \
{\!\(\*StyleBox[\\\"displacement\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*\
StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"1\\\",FontSlant->\\\"\
Italic\\\"]\)\!\(\*StyleBox[\\\",\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*\
StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"displacement\\\",\
FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\"2\\\",FontSlant->\\\"\
Italic\\\"]\), ...}(, \
\!\(\*StyleBox[\\\"tolerance\\\",FontSlant->\\\"Italic\\\"]\)) ] returns an \
orthogonalized set of vertex displacements using optional tolerance.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomDisplacements", "::", "usage"}], "=", 
    "\"\<randomDisplacements[ m, n ] returns n random displacements of a \
mechanism m starting from positions.\nrandomDisplacements[ positions, n ] \
returns n random displacements starting from positions.\nn defaults to 1 if \
it is omitted.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vertexCoordinatesQ", "::", "usage"}], "=", " ", 
   "\"\<vertexCoordinatesQ[ m, pos ] returns True if pos are valid \
coordinates for mechanism m.\>\""}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numericCoordinatesQ", "::", "usage"}], "=", " ", 
   "\"\<numericCoordinatesQ[ m, pos ] returns True if pos are valid numerical \
coordinates for mechanism m.\>\""}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numericMachinePrecisionCoordinatesQ", "::", "usage"}], "=", " ", 
   "\"\<numericMachinePrecisionCoordinatesQ[ m, pos ] returns True if pos are \
valid numerical, machine precision coordinates for mechanism m.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[388]:=",ExpressionUUID->"7b3d57d2-d39e-4905-8b4b-bee6117e5212"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"connectivity", "::", "usage"}], " ", "=", " ", 
   "\"\<connectivity[ m, s1 -> s2 ] returns a list of type s2 for each s1. \
Use connectivity[\\\"Methods\\\"] to possible values for s1 or s2.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"orientedQ", "::", "usage"}], " ", "=", " ", 
    "\"\<orientedQ[ m ] returns True if all faces in a mechanism are oriented \
with their neighbors.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"boundaryVertices", "::", "usage"}], "=", 
   "\"\<boundaryVertices[ mechanism ] returns a list of oriented boundary \
vertices { component 1, ...} where each boundary component is a list of \
vertex indices. A boundary is defined as the boundary of a set of 2D faces.\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"boundaryEdges", "::", "usage"}], "=", 
   "\"\<boundaryEdges[ mechanism ] returns a list of oriented boundary edges \
{{v11, v12},{v21,v22},...}. A boundary is defined as the boundary of a set of \
2D faces.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"boundaryFaces", "::", "usage"}], "=", 
   "\"\<boundaryFaces[ mechanism ] returns a list of oriented boundary \
components {face 1, face 2, ...}, ...}. A boundary is defined as the boundary \
of a set of 2D faces.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"interiorVertices", "::", "usage"}], "=", 
   "\"\<interiorVertices[ mechanism ] returns a list of interior \
vertices.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"interiorEdges", "::", "usage"}], "=", 
    "\"\<interiorEdges[ mechanism ] returns a list of interior edges.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displayDimension", "::", "usage"}], "=", "\n", 
    "\"\<displayDimension[ m ] returns the display dimension of a mechanism \
m.\ndisplayDimension[ d ][ m ], displayDimension[m -> d] changes the display \
dimension of a mechanism m to d.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"embeddingDimension", "::", "usage"}], "=", "\n", 
    "\"\<embeddingDimension[ m ] returns the embedding dimension of a \
mechanism m.\nembeddingDimension[ d ][ m ], embeddingDimension[m -> d] \
changes the embedding dimension of a mechanism m to d.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deleteDanglingVertices", "::", "usage"}], "=", 
    "\"\<deleteDanglingVertices[\!\(\*StyleBox[\\\"m\\\",FontSlant->\\\"\
Italic\\\"]\)\!\(\*StyleBox[\\\",\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*\
StyleBox[\\\"type\\\",FontSlant->\\\"Italic\\\"]\)] deletes all vertices of \
\!\(\*StyleBox[\\\"m\\\",FontSlant->\\\"Italic\\\"]\)\!\(\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\)not adjacent to a cell of a specific type, \
either \\\"faces\\\" or \\\"edges\\\".\nIf omitted, the argument \
\!\(\*StyleBox[\\\"type\\\",FontSlant->\\\"Italic\\\"]\) defaults to \
\\\"faces\\\" for origami or \\\"edges\\\" for frameworks. See: \
deleteVertices[]\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"saveToFOLD", "::", "usage"}], "=", 
   "\"\<saveToFOLD[\!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\"Italic\\\"]\
\), \!\(\*StyleBox[\\\"filename\\\",FontSlant->\\\"Italic\\\"]\)] saves a \
FOLD file from a mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"loadFromFOLD", "::", "usage"}], "=", "\n", 
   "\"\<loadFromFOLD[\!\(\*StyleBox[\\\"filename\\\",FontSlant->\\\"Italic\\\"\
]\)] loads a mechanism from a FOLD. Use option \\\"face\\\" to choose how to \
treat a polygon.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[395]:=",ExpressionUUID->"a1e26495-b179-4855-8335-4436fa78fd50"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"periodicIdentification", "::", "usage"}], "=", "\n", 
    "\"\<periodicIdentification[m, {f1 -> func1,..} ] applies transformation \
functions func1, func2, ... and creates a list of vertices identified via \
those transformations.\nperiodicIdentification[m, {z1,z2,...}, {vector1, \
vector2, ...}] identifies vertices under translation vectors {vector1, \
vector2,...} and returns rules identifying vertexDisplacement objects up to \
corresponding factors of {z1, z2,...}.\nperiodicIdentification[m, {vector1, \
vector2, ...}] identifies vertices under translation vectors {vector1, \
vector2,...} and returns rules identifying vertexDisplacement objects.\>\""}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentificationData", "::", "usage"}], "=", 
   "\"\<periodicIdentificationData is a structure for periodic \
mechanisms.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"periodicIdentificationDataQ", "::", "usage"}], "=", 
    "\"\<periodicIdentificationDataQ[ pi ] returns True if pi is a \
periodicIdentificationData structure.\nperiodicIdentificationDataQ[ m, pi ] \
returns True if pi is a periodicIdentificationData structure that can \
correspond to mechanism m.\>\""}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"minimalMechanism", "::", "usage"}], "=", "\n", 
    "\"\<minimalMechanism[m, {vector1, vector2, ...}] reduces a mechanism to \
the smallest unit cell that can be tesselated periodically according to the \
basis of vectors provided.\nIt relies on periodicIdentification[] but \
unfortunately renumbers vertices.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"labelPeriodicVertices", "::", "usage"}], "=", 
    "\"\<labelPeriodicVertices[ m, rules ] labels a mechanism according to a \
set of periodicity rules.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicPositionRules", "::", "usage"}], "=", 
   "\"\<periodicPositionRules[positions , rules ] returns a list of \
identifications betweeen vertex positions associated with a periodic \
mechanism.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[407]:=",ExpressionUUID->"684246ec-df06-4736-b3a7-7c0cdf468e9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displacementVector", "::", "usage"}], "=", "\n", 
    "\"\<displacementVector[ positions, edge ] returns the vector pointing \
along an oriented edge.\ndisplacementVector[ positions, { edge 1, edge 2, \
...} ] returns list of displacement vectors.\nEdges can be specified as \
Line[{v1,v2}] or {v1,v2}.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displacementLength", "::", "usage"}], "=", "\n", 
    "\"\<displacementLength[ positions, edge 1 ] returns the length of an \
edge.\ndisplacementLength[ positions, { edge 1, edge 2, ...} ] returns \
lengths of a list of edges.\nEdges can be specified as Line[{v1,v2}] or \
{v1,v2}.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displacementLengthSquared", "::", "usage"}], "=", "\n", 
    "\"\<displacementLengthSquared[ positions, edge 1 ] returns the squared \
length of an edge.\ndisplacementLengthSquared[ positions, { edge 1, edge 2, \
...} ] returns squared lengths of a list of edges.\nEdges can be specified as \
Line[{v1,v2}] or {v1,v2}.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"vectorAngle", "::", "usage"}], "=", "\n", 
    "\"\<vectorAngle[ positions, {vertex 1, vertex 2, vertex 3}] returns the \
angle at vertex 2 spanned by the other two points.\nvectorAngle[ positions, { \
triple 1, triple 2, ...} ] returns the vertex angles anong a list of vertex \
triples.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"turningAngle", "::", "usage"}], "=", "\n", 
    "\"\<turningAngle[ positions, {vertex 1, vertex 2, vertex 3}] returns the \
turning angle at vertex 2 spanned by the other two points.\nturningAngle[ \
positions, { triple 1, triple 2, ...} ] returns the turning angles anong a \
list of vertex triples.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"normalVector", "::", "usage"}], "=", "\n", 
    "\"\<normalVector[ positions, {vertex 1, vertex 2, vertex 3} ] returns \
the vector normal to the plane spanned by the three points.\nnormalVector[ \
positions, { triple 1, triple 2, ...} ] returns vectors normal to the plane \
spanned by the list of triples.\nnormalVector[ positions, polygon ] returns \
the vector normal to a polygon.\nnormalVector[ positions, {polygon 1, polygon \
2, ...} ] returns the vectors normal to a list of polygons.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"faceArea", "::", "usage"}], "=", "\n", 
    "\"\<faceArea[ positions, {vertex 1, vertex 2, vertex 3} ] returns the \
area of the face spanned by the three points.\nfaceArea[ positions, { triple \
1, triple 2, ...} ] returns the area of the face spanned by the list of \
triples.\nfaceArea[ positions, polygon ] returns area of a polygon.\n\
faceArea[ positions, {polygon 1, polygon 2, ...} ] returns the areas of a \
list of polygons.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"planarAngle", "::", "usage"}], "=", "\n", 
    "\"\<planarAngle[positions, {v1, v2, v3}] returns the oriented angle at \
vertex v2 spanned by the other two vertices.\nplanarAngle[positions, {triple \
1, triple 2, ...}] returns the oriented angles at for each triple of \
verticles.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"foldAngle", "::", "usage"}], "=", "\n", 
    "\"\<foldAngle[ mechanism, positions, edge ] returns the fold angle along \
an edge.\nfoldAngle[ mechanism, positions,{edge 1, edge 2,...} ] returns the \
fold angle of a list of edges.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gaussianCurvature", "::", "usage"}], "=", "\n", 
    "\"\<gaussianCurvature[ mechanism, positions,vertex ] returns the \
discrete Gaussian curvature of vertex.\ngaussianCurvature[ mechanism, \
positions,{vertex 1, vertex 2, ...} ] returns the discrete Gaussian curvature \
of a list of vertices.\ngaussianCurvature[ mechanism, metric,{vertex 1, \
vertex 2, ...} uses a metric to explicitly compute the Gaussian curvature at \
each vertex.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignMechanism", "::", "usage"}], "=", 
    "\"\<alignMechanism[ m1Spec, m2Spec ] returns a list of positions that \
best align the second mechanism to the first.\nm1Spec and m2Spec can be \
either be a mechanism, a list of positions, { mechanism, vertices }, or \
{positions, vertices}.\nIf vertices are included, only the specified vertices \
will be used to determine the transformation.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"congruentQ", "::", "usage"}], "=", 
   "\"\<congruentQ[ tol_ ][ m1Spec, m2Spec ] returns True if the first and \
second mechsnisms are congruent up to a given tolerance.\nm1Spec and m2Spec \
can be either be a mechanism, a list of positions, { mechanism, vertices }, \
or {positions, vertices}.\nIf vertices are included, only the specified \
vertices will be used to determine the transformation.\>\""}], ";"}]}], "Code",\

 CellLabel->
  "In[413]:=",ExpressionUUID->"20d4f0d9-5076-4185-aaa7-f1de3061bd9e"]
}, Closed]],

Cell[CellGroupData[{

Cell["global data and patterns", "Section",ExpressionUUID->"6bc0fc48-688d-4ca9-bac5-3a6645a0cdb0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`\>\"", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[425]:=",ExpressionUUID->"9f392912-8772-4657-8e12-0dfb8191735b"],

Cell[CellGroupData[{

Cell["reportError[], checkForError[]", "Subsubsection",ExpressionUUID->"ed34d4f5-8774-4cc3-bed1-932ddba5c4e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"reportError", "[", " ", 
    RowBox[{"msgHead_", ",", " ", "msgName_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"ToExpression", "[", 
    RowBox[{
    "\"\<Message[\>\"", "<>", "msgHead", "<>", "\"\<::\>\"", "<>", "msgName", 
     "<>", "\"\<]\>\""}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"reportError", "[", " ", 
   RowBox[{"msgHead_", ",", " ", "msgName_", ",", " ", "arguments__"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"args", " ", "=", " ", 
      RowBox[{"StringJoin", "@@", 
       RowBox[{"(", 
        RowBox[{"ToString", "/@", 
         RowBox[{"{", "arguments", "}"}]}], ")"}]}]}], " ", "}"}], ",", "\n", 
    "\t", 
    RowBox[{"ToExpression", "[", 
     RowBox[{
     "\"\<Message[\>\"", "<>", "msgHead", "<>", "\"\<::\>\"", "<>", "msgName",
       "<>", "\"\<,\>\"", "<>", "args", "<>", "\"\<]\>\""}], "]"}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[427]:=",ExpressionUUID->"2f231e99-d644-4c44-a094-43842e8b7f0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"checkForError", "[", " ", 
   RowBox[{"test_", " ", ",", " ", "name_String", ",", " ", "error__"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{"TrueQ", "[", "test", "]"}], " ", ",", " ", "True", ",", " ", 
    RowBox[{
     RowBox[{"reportError", "[", 
      RowBox[{"name", ",", " ", 
       RowBox[{"Evaluate", "[", "error", "]"}]}], " ", "]"}], ";", " ", 
     "False"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"checkForError", ",", " ", "HoldRest"}], " ", "]"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[429]:=",ExpressionUUID->"401605a1-d130-461c-8461-7baf9010c1df"]
}, Closed]],

Cell[CellGroupData[{

Cell["listParameters[],expandExpression[]", "Subsubsection",ExpressionUUID->"993c23a1-4278-4cf3-9ea0-d4f96b7da186"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listParameters", "[", "expr_", "]"}], ":=", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"expr", ",", "#"}], "]"}], "&"}], ")"}], "/@", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"List", "@@", "expr"}], ",", 
      RowBox[{"infinitesimal", "[", 
       RowBox[{"_", ",", "_"}], "]"}]}], "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[431]:=",ExpressionUUID->"bf84e85d-32d1-4c19-9b38-a35d433a0119"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", "\t", 
   RowBox[{"This", " ", "basically", " ", "does", " ", "what", " ", 
    RowBox[{"Series", "[", "]"}], " ", "does", " ", "in", " ", "a", " ", 
    "somewhat", " ", "dumber", " ", 
    RowBox[{"way", ".", "\n", "\t", "It"}], " ", 
    RowBox[{"won", "'"}], "t", " ", "handle", " ", "limits", " ", "as", " ", 
    "nicely", " ", "as", " ", 
    RowBox[{"Series", "[", "]"}], " ", "but", " ", "it", " ", "typically", 
    " ", "presents", " ", "results", " ", "that", " ", "look", "\n", "\t", 
    "more", " ", "useful", " ", "for", " ", "analytic", " ", 
    RowBox[{"expressions", "."}]}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"expandExpression", "[", 
     RowBox[{"expr_", ",", "param_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "tmp"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"tmp", "@@", "param"}], ")"}], "^", "i"}], " ", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{"expr", ",", 
               RowBox[{"{", 
                RowBox[{"param", ",", "i"}], "}"}]}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"i", "!"}], ")"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{"param", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "/.", 
         RowBox[{"param", "->", "0"}]}], "]"}], "/.", 
       RowBox[{"tmp", "->", "infinitesimal"}]}]}], "\n", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"expandExpression", "[", 
     RowBox[{"expr_", "?", "NumericQ"}], "]"}], ":=", "expr"}], "\n", 
   RowBox[{
    RowBox[{"expandExpression", "[", "expr_", "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"params", "=", 
        RowBox[{"listParameters", "[", "expr", "]"}]}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{"Fold", "[", 
       RowBox[{"expandExpression", ",", "expr", ",", 
        RowBox[{"Reverse", "@", "params"}]}], "]"}]}], "\n", 
     "]"}]}]}]}]], "Code",
 CellLabel->
  "In[432]:=",ExpressionUUID->"6ea34ad2-a148-45ae-aa93-a48d3d461e82"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["topology", "Section",ExpressionUUID->"72e8028f-0cb2-4491-b4a5-832df78eed16"],

Cell[CellGroupData[{

Cell["connectivity[]", "Subsection",ExpressionUUID->"e146d239-1c00-4935-9d62-733890aa073d"],

Cell[CellGroupData[{

Cell["orderPairs[]", "Subsubsection",ExpressionUUID->"96f25e17-0c46-43e8-aa86-a343cea151ab"],

Cell["\<\
orderPairs[{{n1, n2}, {n3, n4}, ...}]
 When provided a list of pairs, {1, b}, sort them in order such that {{1, 2}, \
{2, 3}, {3, 4}, ...}
 
 orderPairs[list 1, list 2] orders pairs in which elements of each list are \
paired with
 the corresponding element.\
\>", "Text",ExpressionUUID->"670cccd5-509b-4823-88ac-ff6d4791b777"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"orderPairs", "[", 
   RowBox[{"{", "}"}], "]"}], ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"orderPairs", "[", 
    RowBox[{"pairList_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"orderPairsTopologicalSort", "[", 
     RowBox[{"Graph", "[", 
      RowBox[{"UndirectedEdge", "@@@", "pairList"}], "]"}], "]"}], "/;", " ", 
    
    RowBox[{
     RowBox[{
      RowBox[{"Dimensions", "[", "pairList", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "==", "2"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"orderPairs", "[", 
   RowBox[{"pairList_", ",", "correspondingList_"}], "]"}], ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"association", "=", 
       RowBox[{"Dispatch", "@", 
        RowBox[{"Thread", "[", 
         RowBox[{"pairList", "->", "correspondingList"}], "]"}]}]}], "\n", 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"orderPairs", "[", "pairList", "]"}], "/.", "association"}]}], 
    "\n", "]"}], "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "pairList", "]"}], "==", 
    RowBox[{"Length", "[", "correspondingList", "]"}]}]}]}]}], "Code",
 CellLabel->
  "In[435]:=",ExpressionUUID->"fec86841-e1b9-407e-91ed-9bcd2389efbf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "does", " ", "a", " ", "topological", " ", "sort", " ", "on", 
    " ", "a", " ", "graph"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"orderPairsTopologicalSort", "[", 
     RowBox[{"g_", "?", "AcyclicGraphQ"}], "]"}], ":=", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"TopologicalSort", "[", 
       RowBox[{"DirectedEdge", "@@@", 
        RowBox[{"EdgeList", "[", "g", "]"}]}], "]"}], ",", "2", ",", "1"}], 
     "]"}]}], "\n", 
   RowBox[{
    RowBox[{"orderPairsTopologicalSort", "[", "g_Graph", "]"}], ":=", 
    RowBox[{"List", "@@@", 
     RowBox[{"(", 
      RowBox[{"First", "@", 
       RowBox[{"FindCycle", "[", 
        RowBox[{"g", ",", "Infinity", ",", "1"}], "]"}]}], 
      ")"}]}]}]}]}]], "Code",
 CellLabel->
  "In[438]:=",ExpressionUUID->"b7e701c3-de85-45c2-b52e-9aa223f1ec5f"]
}, Closed]],

Cell[CellGroupData[{

Cell["rotateTo[]", "Subsubsection",ExpressionUUID->"dda37c49-20b3-459d-9f34-72d989a2b391"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rotateTo", "[", 
   RowBox[{"s_List", ",", "v_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pos", "=", 
      RowBox[{"FirstPosition", "[", 
       RowBox[{"s", ",", "v"}], "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MissingQ", "[", "pos", "]"}], ",", "s", ",", 
      RowBox[{"RotateLeft", "[", 
       RowBox[{"s", ",", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"rotateTo", "[", 
   RowBox[{
    RowBox[{"h_", "[", "s_List", "]"}], ",", "v_"}], "]"}], ":=", 
  RowBox[{"h", "[", 
   RowBox[{"rotateTo", "[", 
    RowBox[{"s", ",", "v"}], "]"}], "]"}]}]}], "Code",
 CellLabel->
  "In[440]:=",ExpressionUUID->"1bd6f123-a777-4f1c-8846-573535afb17e"]
}, Closed]],

Cell[CellGroupData[{

Cell["orderFaces[]", "Subsubsection",ExpressionUUID->"d18ddbd8-a5e7-4d3b-9ec8-10b424233e6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"orderFaces", "[", 
   RowBox[{"faceList_", ",", "v_Integer"}], "]"}], ":=", 
  RowBox[{"orderPairs", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], "/@", "faceList"}], 
    ",", "faceList"}], "]"}]}]], "Code",
 CellLabel->
  "In[442]:=",ExpressionUUID->"25764a05-dbcb-4169-9936-584628582a73"]
}, Closed]],

Cell[CellGroupData[{

Cell["connectivity[]", "Subsubsection",ExpressionUUID->"cd0203ed-6145-429b-aebb-26a4b4acf7bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"connectivity", "[", "\"\<Methods\>\"", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<vertices\>\"", ",", "\"\<edges\>\"", ",", "\"\<faces\>\""}], "}"}],
      "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<vertices\>\"", ",", "\"\<edges\>\"", ",", "\"\<faces\>\"", ",", 
       "\"\<ordered faces\>\"", ",", "\"\<ordered edges\>\""}], "}"}]}], 
    "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[443]:=",ExpressionUUID->"f895924f-63bb-45d4-83c0-970509bfd0f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"connectivity", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ",
    "]"}], " ", ":=", " ", 
  RowBox[{"m", "[", "\"\<faces\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"connectivity", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ",
    "]"}], " ", ":=", " ", 
  RowBox[{"m", "[", "\"\<edges\>\"", "]"}]}]}], "Code",
 CellLabel->
  "In[444]:=",ExpressionUUID->"6d2abede-f7b3-4efe-a204-8ff504e5f57a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"connectivity", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], 
    " ", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"faces", " ", "=", " ", 
       RowBox[{"rotateThroughFaces", "[", " ", 
        RowBox[{"connectivity", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{
          "\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ", 
         "]"}], " ", "]"}]}], " ", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"GatherBy", "[", 
       RowBox[{"(*", "unpacks", "*)"}], "\n", "\t\t", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"(*", "unpacks", "*)"}], "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", " ", 
              RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", "]"}], " ", 
             "]"}], "}"}], "]"}], ",", " ", 
          RowBox[{"(*", 
           RowBox[{
           "make", " ", "a", " ", "list", " ", "of", " ", "vertices", " ", 
            "in", " ", "order", " ", "of", " ", "the", " ", "form", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"{", "2", "}"}], ",", "..."}], "}"}]}], "*)"}], "\n", 
          "\t\t\t", "faces"}], "\n", "\t\t", "]"}], ",", "\n", "\t", 
        "First"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"2", ";;"}]}], "]"}], "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"rotateThroughFaces", "[", 
   RowBox[{"{", "}"}], "]"}], ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rotateThroughFaces", "[", "faces_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RotateLeft", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "&"}], ",", "faces", ",", 
      RowBox[{
       RowBox[{"Last", "[", 
        RowBox[{"Dimensions", "[", "faces", "]"}], "]"}], "-", "1"}]}], "]"}],
     ",", "1"}], "]"}]}]}], "Code",
 CellLabel->
  "In[446]:=",ExpressionUUID->"29675125-fd21-49ee-a583-93961cfab76f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"connectivity", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<edges\>\""}]}], " ", 
   "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cells", "=", 
      RowBox[{"Transpose", "[", " ", 
       RowBox[{"connectivity", "[", " ", 
        RowBox[{"m", ",", " ", 
         RowBox[{"\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}],
         " ", "]"}], " ", "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"cells", ",", 
            RowBox[{"{", 
             RowBox[{"cells", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", "1"}], "]"}], ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[449]:=",ExpressionUUID->"d4b93424-3000-4189-9724-831b1489b36f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "unpacks", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"connectivity", "[", 
     RowBox[{
      RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
      RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], " ", 
     "]"}], ":=", 
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"edges", " ", "=", " ", 
         RowBox[{"connectivity", "[", " ", 
          RowBox[{"m", ",", " ", 
           RowBox[{
           "\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ", 
          "]"}]}], ",", " ", 
        RowBox[{"faces", " ", "=", " ", 
         RowBox[{"connectivity", "[", " ", 
          RowBox[{"m", ",", " ", 
           RowBox[{
           "\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ", 
          "]"}]}]}], " ", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"GatherBy", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"edges", ",", 
             RowBox[{"rotateCells", "[", "faces", "]"}]}], "}"}], ",", "1"}], 
          "]"}], ",", 
         RowBox[{
          RowBox[{"Sort", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}], "&"}]}], "]"}], 
       "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"2", ";;"}]}], "]"}], "]"}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "rotateCells", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"\"\<Flatten\>\"", "->", "True"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rotateCells", "[", 
     RowBox[{"cells_", " ", ",", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"With", "[", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sortedCells", "=", 
         RowBox[{"GatherBy", "[", 
          RowBox[{"cells", ",", "Length"}], "]"}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"NestList", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"RotateLeft", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "&"}], ",", "#", 
             ",", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], "]"}], 
           "&"}], "/@", "sortedCells"}], ",", "2"}], "]"}]}], "\n", "]"}], 
     " ", "/;", " ", 
     RowBox[{"OptionValue", "[", "\"\<Flatten\>\"", "]"}]}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"rotateCells", "[", 
     RowBox[{"cells_", " ", ",", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sortedCells", "=", 
        RowBox[{"GatherBy", "[", 
         RowBox[{"cells", ",", "Length"}], "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"First", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"NestList", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RotateLeft", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "&"}], ",", "#", ",", 
           
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], "]"}], 
         "&"}], "/@", "sortedCells"}], "]"}]}], "\n", "]"}]}]}]}]], "Code",
 CellLabel->
  "In[450]:=",ExpressionUUID->"27e614a4-c2a8-4940-82ad-70b2babd1e0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"connectivity", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<edges\>\""}]}], " ",
    "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"edges", " ", "=", " ", 
      RowBox[{"connectivity", "[", " ", 
       RowBox[{"m", ",", " ", 
        RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], 
       " ", "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"SortBy", "[", 
     RowBox[{
      RowBox[{"GatherBy", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"edges", ",", 
            RowBox[{"Reverse", "[", 
             RowBox[{"edges", ",", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}], ",", "1"}], "]"}], 
        ",", "First"}], "]"}], ",", "First"}], "]"}]}], "\n", "]"}]}]], "Code",\

 CellLabel->
  "In[454]:=",ExpressionUUID->"83a6385c-2f36-459e-ab9c-3f8d635ded07"],

Cell[BoxData[
 RowBox[{
  RowBox[{"connectivity", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<ordered faces\>\""}]}],
    " ", "]"}], ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"test1", "=", 
       RowBox[{"connectivity", "[", 
        RowBox[{"m", ",", 
         RowBox[{"\"\<vertices\>\"", "->", "\"\<faces\>\""}]}], "]"}]}], ",", 
      "\n", 
      RowBox[{"edges", "=", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"connectivity", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{
          "\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ", 
         "]"}], " ", "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"ToPackedArray", "@", 
     RowBox[{"MapThread", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "\n", "\t\t", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"{", 
               RowBox[{"__", ",", "#2"}], "}"}]}], "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"test1", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"edges", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"{", 
               RowBox[{"_", ",", "#2", ",", "__"}], "}"}]}], "]"}], "&"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"test1", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"edges", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], "\n", 
        "\t\t", "}"}]}], "\n", "\t", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[455]:=",ExpressionUUID->"585ee08c-5fa7-4a7a-a1a7-81f1a9c49466"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{"Unpacks", " ", 
    RowBox[{"lists", "."}]}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{"connectivity", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{
     "\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<ordered faces\>\""}]}], 
    "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"unorderedFace", "=", 
       RowBox[{"connectivity", "[", 
        RowBox[{"m", ",", 
         RowBox[{"\"\<vertices\>\"", "->", "\"\<faces\>\""}]}], "]"}]}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{"MapThread", "[", 
      RowBox[{"orderFaces", ",", 
       RowBox[{"{", 
        RowBox[{"unorderedFace", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "unorderedFace", "]"}], "]"}]}], "}"}]}], 
      "]"}]}], "\n", "]"}]}]}]], "Code",
 CellLabel->
  "In[456]:=",ExpressionUUID->"116e6b48-0fa9-4e1e-a4a5-b2b73fb8e94b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"connectivity", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{
    "\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<ordered edges\>\""}]}], 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"connectivity", "[", 
    RowBox[{"m", ",", 
     RowBox[{"\"\<vertices\>\"", "->", "\"\<ordered faces\>\""}]}], "]"}], 
   "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "All", ",", 
     RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]], "Code",
 CellLabel->
  "In[457]:=",ExpressionUUID->"84134194-be7e-4a2f-8524-d78dc34bcbf5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"connectivity", "::", "badcombo"}], "=", 
   "\"\<Methods are not recognized in this combination.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"connectivity", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], " ", ",", " ", 
    RowBox[{"Rule", "[", 
     RowBox[{"_", ",", "_"}], "]"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"connectivity", "::", "badcombo"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[458]:=",ExpressionUUID->"396a376e-926c-47c4-bbd5-12e1440db841"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["boundaryVertices[], boundaryEdges[], boundaryFaces[]", "Subsection",ExpressionUUID->"76374e09-15c0-4285-9873-5b1119f9fbac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"boundaryEdges", "[", 
   RowBox[{"m_", "?", "mechanismQ"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"facePairs", "=", 
       RowBox[{"connectivity", "[", 
        RowBox[{"m", ",", 
         RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], 
        "]"}]}], ",", "\n", "\t", 
      RowBox[{"edges", "=", 
       RowBox[{"connectivity", "[", 
        RowBox[{"m", ",", " ", 
         RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}],
         "]"}]}], ",", "\n", "\t", "boundary"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"boundary", "=", 
      RowBox[{"Pick", "[", " ", 
       RowBox[{"edges", ",", " ", 
        RowBox[{"Length", " ", "/@", " ", "facePairs"}], ",", " ", "1"}], " ",
        "]"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "boundary", "]"}], "==", "0"}], ",", "\n", 
       "\t\t", 
       RowBox[{"{", "}"}], ",", "\n", "\t\t", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"List", "@@", "#"}], "&"}], ",", 
         RowBox[{"FindCycle", "[", 
          RowBox[{
           RowBox[{"Graph", "[", "boundary", "]"}], ",", "Infinity", ",", 
           "All"}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], "\n", "\t", "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[460]:=",ExpressionUUID->"c9b1dabe-f4f7-4958-94d5-a03d27395cf8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"boundaryVertices", "[", 
   RowBox[{"m_", "?", "mechanismQ"}], "]"}], " ", ":=", " ", 
  RowBox[{"Map", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"First", "@@", "#"}], "&"}], " ", ",", " ", 
    RowBox[{"boundaryEdges", "[", "m", "]"}], " ", ",", " ", 
    RowBox[{"{", "2", "}"}]}], " ", "]"}]}]], "Code",
 CellLabel->
  "In[461]:=",ExpressionUUID->"7d002678-a532-4bcd-912e-4ff0e5ae48d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"boundaryFaces", "[", 
   RowBox[{"m_", "?", "mechanismQ"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "i", "}"}], ",", "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"boundary", " ", "=", " ", 
         RowBox[{"boundaryVertices", "[", "m", "]"}]}], ",", "\n", "\t\t", 
        RowBox[{"faces", " ", "=", " ", 
         RowBox[{"connectivity", "[", 
          RowBox[{"m", ",", " ", 
           RowBox[{
           "\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], " ", 
          "]"}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t", 
      RowBox[{"Table", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Select", "[", " ", 
         RowBox[{"faces", ",", " ", 
          RowBox[{
           RowBox[{"ContainsAny", "[", 
            RowBox[{
             RowBox[{"boundary", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "#"}], "]"}], "&"}]}], " ",
          "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "boundary", "]"}]}], "}"}]}], "\n", "\t\t", 
       "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[462]:=",ExpressionUUID->"e8c7d67f-6f52-4ba0-8e76-ccc48f493943"]
}, Closed]],

Cell[CellGroupData[{

Cell["interiorEdges[], interiorVertices[]", "Subsection",ExpressionUUID->"1c2c98d9-43ff-4040-a5e0-cf72764ae01b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interiorEdges", "[", 
   RowBox[{"mr_", "?", "mechanismQ"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Pick", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"connectivity", "[", " ", 
     RowBox[{"mr", ",", " ", 
      RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], 
     "]"}], ",", "\n", "\t\t", 
    RowBox[{"Length", " ", "/@", " ", 
     RowBox[{"connectivity", "[", 
      RowBox[{"mr", ",", " ", 
       RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], 
      "]"}]}], ",", "\n", "\t\t", "2"}], "\n", "\t", "]"}]}]], "Code",
 CellLabel->
  "In[463]:=",ExpressionUUID->"3068d1eb-a6e1-4120-bfef-ce9fb71e3216"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interiorVertices", "[", 
   RowBox[{"mr_", "?", "mechanismQ"}], "]"}], ":=", "\n", 
  RowBox[{"Complement", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"DeleteDuplicates", "[", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"interiorEdges", "[", "mr", "]"}], "]"}], " ", "]"}], ",", "\n",
     "\t", 
    RowBox[{"Flatten", " ", "@", " ", 
     RowBox[{"boundaryVertices", "[", "mr", "]"}]}]}], "\n", "]"}]}]], "Code",\

 CellLabel->
  "In[464]:=",ExpressionUUID->"bc5f153c-22ea-4998-8d43-5354d3958a35"]
}, Closed]],

Cell[CellGroupData[{

Cell["orientedQ[]", "Subsection",ExpressionUUID->"d44581db-3241-4500-8895-4f9310373c63"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"orientedQ", "[", 
   RowBox[{"mr_", "?", "mechanismQ"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"AllTrue", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"DeleteCases", "[", " ", 
     RowBox[{
      RowBox[{"connectivity", "[", 
       RowBox[{"mr", ",", 
        RowBox[{"\"\<edges\>\"", "->", "\"\<faces\>\""}]}], "]"}], " ", ",", 
      " ", 
      RowBox[{"{", "_", "}"}]}], " ", "]"}], ",", "\n", "\t\t", 
    "facePairOrientedQ"}], "\n", "\t", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"orientedQ", "[", "_", "]"}], ":=", "False"}]}], "Code",
 CellLabel->
  "In[465]:=",ExpressionUUID->"8ed6dc61-9ce7-4391-adff-956d7a772019"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"facePairOrientedQ", "[", 
   RowBox[{"{", 
    RowBox[{"v1_", ",", "v2_"}], "}"}], "]"}], ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"eg2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"RotateLeft", "[", 
            RowBox[{"v2", ",", "#"}], "]"}], ",", "2"}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "v2", "]"}], "]"}]}]}], ",", "\n", "\t", 
      RowBox[{"eg1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"RotateLeft", "[", 
             RowBox[{"v1", ",", "#"}], "]"}], ",", "2"}], "]"}], "]"}], "&"}],
         "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "v1", "]"}], "]"}]}]}]}], "\n", "}"}], ",", 
    "\n", "\t", 
    RowBox[{"ContainsAny", "[", 
     RowBox[{"eg1", ",", "eg2"}], "]"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"facePairOrientedQ", "[", 
   RowBox[{"v1_", ",", "v2_"}], "]"}], ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"eg2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"RotateLeft", "[", 
            RowBox[{"v2", ",", "#"}], "]"}], ",", "2"}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "v2", "]"}], "]"}]}]}], ",", "\n", "\t", 
      RowBox[{"eg1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"RotateLeft", "[", 
             RowBox[{"v1", ",", "#"}], "]"}], ",", "2"}], "]"}], "]"}], "&"}],
         "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "v1", "]"}], "]"}]}]}]}], "\n", "}"}], ",", 
    "\n", "\t", 
    RowBox[{"ContainsAny", "[", 
     RowBox[{"eg1", ",", "eg2"}], "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[467]:=",ExpressionUUID->"62bac1ef-cbd7-4818-bad8-b32d8a0b8cfd"]
}, Closed]],

Cell[CellGroupData[{

Cell["embeddingDimension[], displayDimension[]", "Subsection",ExpressionUUID->"0cde69d0-d061-4888-b804-bc8f12ee2607"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"embeddingDimension", "[", " ", 
   RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], ":=", " ", 
  RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"embeddingDimension", "[", " ", 
     RowBox[{"d", " ", ":", " ", 
      RowBox[{"2", "|", "3"}]}], " ", "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"oldPositions", " ", "=", " ", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"ReplacePart", "[", 
      RowBox[{"m", ",", " ", 
       RowBox[{"1", " ", "\[Rule]", " ", 
        RowBox[{"PadRight", "[", " ", 
         RowBox[{"oldPositions", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "oldPositions", "]"}], ",", "d"}], "}"}]}],
          " ", "]"}]}]}], " ", "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"embeddingDimension", "::", "dim"}], " ", "=", " ", 
   "\"\<Dimension `1` should be 2 or 3.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"embeddingDimension", "[", " ", "d_", " ", "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
    RowBox[{"Message", "[", " ", 
     RowBox[{
      RowBox[{"embeddingDimension", "::", "dim"}], ",", " ", "d"}], " ", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"embeddingDimension", "[", " ", 
   RowBox[{"Rule", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "d_"}], "]"}], " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{
   RowBox[{"embeddingDimension", "[", "d", "]"}], "[", "m", "]"}]}]}], "Code",\

 CellLabel->
  "In[469]:=",ExpressionUUID->"69971570-a0ce-4443-96f9-ac9ac653df50"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displayDimension", "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"m", "[", "\"\<DisplayDimension\>\"", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displayDimension", " ", "[", " ", 
     RowBox[{"d", ":", " ", 
      RowBox[{"2", "|", "3"}]}], " ", "]"}], "[", 
    RowBox[{"m_", "?", "mechanismQ"}], "]"}], " ", ":=", " ", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"mechanisms`Private`addMeshRegion", "[", 
        RowBox[{"m", ",", "d", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{"mechanismQ", "[", "res", "]"}]}]}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayDimension", "::", "dim"}], " ", "=", " ", 
   "\"\<Dimension `1` should be 2 or 3.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displayDimension", "[", " ", "d_", " ", "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
    RowBox[{"Message", "[", " ", 
     RowBox[{
      RowBox[{"displayDimension", "::", "dim"}], ",", " ", "d"}], " ", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displayDimension", "[", " ", 
   RowBox[{"Rule", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "d_"}], " ", "]"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"displayDimension", "[", "d", "]"}], "[", "m", "]"}]}]}], "Code",
 CellLabel->
  "In[474]:=",ExpressionUUID->"3546c726-a156-4c7c-afab-f6a3f846e262"]
}, Closed]],

Cell[CellGroupData[{

Cell["deleteDanglingVertices[]", "Subsection",ExpressionUUID->"2b820542-dab3-4d0b-9a97-bb3be4d7c4e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"deleteDanglingVertices", "[", "m_origami", "]"}], " ", ":=", " ", 
  RowBox[{"deleteDanglingVertices", "[", 
   RowBox[{"m", ",", "\"\<faces\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"deleteDanglingVertices", "[", "m_framework", "]"}], " ", ":=", " ", 
  RowBox[{"deleteDanglingVertices", "[", 
   RowBox[{"m", ",", "\"\<edges\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deleteDanglingVertices", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"type", ":", " ", 
      RowBox[{"\"\<faces\>\"", "|", "\"\<edges\>\""}]}]}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{"deleteDanglingVertices", "[", 
    RowBox[{"m", ",", "type"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deleteDanglingVertices", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "\"\<faces\>\""}], "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vertexSelector", "=", 
       RowBox[{"Transpose", "[", " ", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], "]"}], ",", " ", 
          RowBox[{"Length", " ", "/@", " ", 
           RowBox[{"connectivity", "[", 
            RowBox[{"m", ",", 
             RowBox[{"\"\<vertices\>\"", "\[Rule]", "\"\<faces\>\""}]}], 
            "]"}]}]}], "}"}], " ", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"deleteVertices", "[", 
      RowBox[{"m", ",", " ", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"vertexSelector", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "<", "1"}], "&"}]}], "]"}], "[", 
        
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], " ", "]"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deleteDanglingVertices", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", "\"\<edges\>\""}], "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vertexSelector", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"connectivity", "[", 
           RowBox[{"m", ",", 
            RowBox[{"\"\<vertices\>\"", "\[Rule]", "\"\<edges\>\""}]}], "]"}],
           "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}]}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{"deleteVertices", "[", 
      RowBox[{"m", ",", "vertexSelector"}], "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deleteDanglingVertices", "[", "type_", "]"}], "[", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"deleteDanglingVertices", "[", 
    RowBox[{"m", ",", " ", "type"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deleteDanglingVertices", "::", "typ"}], "=", 
   "\"\<Second argument should be either \\\"faces\\\" or \\\"edges\\\" to \
whether dangling vertices are indicated by a lack of faces or lack of \
edges.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"deleteDanglingVertices", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", "_String"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"deleteDanglingVertices", "::", "typ"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[479]:=",ExpressionUUID->"96b5897b-36e7-417b-89ca-fc4131507b09"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
RegionDimension[], RegionEmbeddingDimension[], MeshCellCount[]\
\>", "Subsection",ExpressionUUID->"92648dd9-fe4b-4454-a084-c84bea5c6cb4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegionEmbeddingDimension", "[", "o_framework", "]"}], " ", "^:=", 
  " ", 
  RowBox[{"embeddingDimension", "[", "o", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RegionEmbeddingDimension", "[", "o_origami", "]"}], " ", "^:=", 
   " ", 
   RowBox[{"embeddingDimension", "[", "o", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"RegionDimension", "[", "o_framework", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionDimension", "[", " ", 
   RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RegionDimension", "[", "o_origami", "]"}], " ", "^:=", " ", 
   RowBox[{"RegionDimension", "[", " ", 
    RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"MeshCellCount", "[", " ", 
   RowBox[{"o_framework", ",", " ", "d___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"MeshCellCount", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], ",", " ", "d"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"MeshCellCount", "[", " ", 
   RowBox[{"o_origami", ",", " ", "d___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"MeshCellCount", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], ",", " ", "d"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[487]:=",ExpressionUUID->"1bb5502e-b3ac-4710-8ff9-b19fa098d1c7"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["vertex positions and displacements", "Section",ExpressionUUID->"fdebde89-31c1-40e0-a115-f68ade3f301b"],

Cell[CellGroupData[{

Cell["\<\
vertexCoordinatesQ[], numericCoordinatesQ[], \
numericMachinePrecisionCoordinatesQ[]\
\>", "Subsection",ExpressionUUID->"6f392222-bf5b-4961-95a1-f64ae3271739"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vertexCoordinatesQ", "[", " ", "coord_", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"AllTrue", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MatrixQ", "[", "coord", "]"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"coord", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}], " ", "||",
        " ", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"coord", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "3"}]}]}], "}"}],
     ",", " ", "TrueQ"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexCoordinatesQ", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "coord_"}], " ", "]"}], " ", 
  ":=", " ", 
  RowBox[{"AllTrue", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MatrixQ", "[", "coord", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Length", "[", "coord", "]"}], " ", "\[Equal]", " ", 
       RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], "}"}], ",", " ", 
    "TrueQ"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[493]:=",ExpressionUUID->"363014a0-649a-4fa7-9e0b-27134679686f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numericCoordinatesQ", "[", " ", "coord_", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"AllTrue", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MatrixQ", "[", 
       RowBox[{"coord", ",", " ", "NumericQ"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"coord", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}], " ", "||",
        " ", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"coord", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "3"}]}]}], "}"}],
     ",", "TrueQ"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"numericCoordinatesQ", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "coord_"}], " ", "]"}], " ", 
  ":=", " ", 
  RowBox[{"AllTrue", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MatrixQ", "[", 
       RowBox[{"coord", ",", "NumericQ"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Length", "[", "coord", "]"}], " ", "\[Equal]", " ", 
       RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], "}"}], ",", " ", 
    "TrueQ"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[495]:=",ExpressionUUID->"1bd477fd-b514-4438-88a5-1f619ede0e10"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "numericMachinePrecisionCoordinatesQ", "[", " ", "coord_", " ", "]"}], " ", 
  ":=", " ", 
  RowBox[{"AllTrue", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MatrixQ", "[", 
       RowBox[{"coord", ",", " ", "MachineRealQ"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"coord", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}], " ", "||",
        " ", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"coord", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "3"}]}]}], "}"}],
     ",", "TrueQ"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"numericMachinePrecisionCoordinatesQ", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "coord_"}], " ", "]"}], " ", 
  ":=", " ", 
  RowBox[{"AllTrue", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MatrixQ", "[", 
       RowBox[{"coord", ",", "MachineRealQ"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Length", "[", "coord", "]"}], " ", "\[Equal]", " ", 
       RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], "}"}], ",", " ", 
    "TrueQ"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[497]:=",ExpressionUUID->"48138634-e03b-42d4-9ae9-f9f5ceaaf2e6"]
}, Closed]],

Cell[CellGroupData[{

Cell["orthogonalizeDisplacements[]", "Subsection",ExpressionUUID->"702d28ea-9096-4e71-ab44-fc7989355b93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"orthogonalizeDisplacements", "[", " ", 
   RowBox[{
    RowBox[{"displacements", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "vertexCoordinatesQ"}], "}"}]}], ",", " ", 
    RowBox[{"tol", " ", ":", " ", 
     RowBox[{"_", "?", "NumericQ"}], " ", ":", " ", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "8"}], ")"}]}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{
        RowBox[{"Dimensions", "[", "displacements", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", 
      RowBox[{"tolsq", " ", "=", " ", 
       RowBox[{"tol", "^", "2"}]}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{"#", ",", " ", "dim"}], "]"}], "&"}], " ", "/@", " ", 
     RowBox[{"Select", "[", " ", 
      RowBox[{
       RowBox[{"Orthogonalize", "[", " ", 
        RowBox[{
         RowBox[{"Flatten", " ", "/@", " ", "displacements"}], ",", " ", 
         RowBox[{"Tolerance", " ", "\[Rule]", " ", "tol"}]}], " ", "]"}], ",",
        " ", 
       RowBox[{
        RowBox[{
         RowBox[{"#", " ", ".", " ", "#"}], " ", ">", " ", "tolsq"}], " ", 
        "&"}]}], " ", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[499]:=",ExpressionUUID->"cc24f4ca-ba03-4371-9cf3-0b9712ccd804"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"orthogonalizeDisplacements", "::", "notdispl"}], "=", 
   "\"\<Not a list of valid vertex displacements of the same \
dimension.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"orthogonalizeDisplacements", "::", "tol"}], "=", 
    "\"\<Tolerance must be numeric.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"orthogonalizeDisplacements", "[", 
   RowBox[{"displacements_", ",", "___"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"orthogonalizeDisplacements", "::", "notdispl"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"orthogonalizeDisplacements", "[", 
   RowBox[{"displacements_", ",", "_"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"orthogonalizeDisplacements", "::", "tol"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[500]:=",ExpressionUUID->"e7080ce3-2904-4c72-bd09-95058f237fa4"]
}, Closed]],

Cell[CellGroupData[{

Cell["normalizeDisplacement[]", "Subsection",ExpressionUUID->"55d1c213-4bb2-4451-ba1c-fdc21c15bcf2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"normalizeDisplacement", "[", 
   RowBox[{"displacement_", "?", "MatrixQ"}], "]"}], ":=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"Flatten", "[", "displacement", "]"}], "]"}], ",", 
    RowBox[{"Last", "[", 
     RowBox[{"Dimensions", "[", "displacement", "]"}], "]"}]}], 
   "]"}]}]], "Code",
 CellLabel->
  "In[504]:=",ExpressionUUID->"b074e873-e000-444e-bfd3-912d2da5f9f6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
vertexPosition[], vertexDisplacement[], to3D[], to2D[], toDim[]\
\>", "Subsection",ExpressionUUID->"3f58e51a-22ea-423b-a461-52f70b313601"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$coordinateSymbols", "[", "3", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$coordinateSymbols", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"vertexPosition", "[", 
   RowBox[{
    RowBox[{"n", " ", ":", " ", 
     RowBox[{"{", "__Integer", "}"}]}], ",", " ", "d_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexPosition", "[", 
     RowBox[{"#", ",", "d"}], "]"}], "&"}], " ", "/@", " ", "n"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexPosition", "[", 
   RowBox[{"n_Integer", ",", " ", 
    RowBox[{"d", " ", ":", " ", 
     RowBox[{
      RowBox[{"{", "__String", "}"}], "|", 
      RowBox[{"{", "__Integer", "}"}]}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexPosition", "[", 
     RowBox[{"n", ",", "#"}], "]"}], "&"}], "/@", "d"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexPosition", "[", 
   RowBox[{"n_Integer", ",", " ", 
    RowBox[{"All", "[", " ", "d_Integer", " ", "]"}]}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexPosition", "[", 
     RowBox[{"n", ",", "#"}], "]"}], "&"}], " ", "/@", " ", 
   RowBox[{"$coordinateSymbols", "[", "d", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"vertexPosition", "[", 
   RowBox[{"n_Integer", ",", " ", "m_Integer"}], "]"}], " ", ":=", " ", 
  RowBox[{"vertexPosition", "[", 
   RowBox[{"n", ",", " ", 
    RowBox[{
     RowBox[{"$coordinateSymbols", "[", "3", "]"}], "[", 
     RowBox[{"[", "m", "]"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexPosition", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "d_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexPosition", "[", 
     RowBox[{"#", ",", "d"}], "]"}], "&"}], " ", "/@", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"vertexPosition", "[", 
   RowBox[{"m_", "?", "mechanismQ"}], "]"}], " ", ":=", " ", 
  RowBox[{"vertexPosition", "[", 
   RowBox[{"m", ",", " ", 
    RowBox[{"All", "[", " ", 
     RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], " ", "]"}]}], " ",
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vertexPosition", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"n", " ", ":", " ", 
      RowBox[{"{", "__Integer", "}"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"vertexPosition", "[", " ", 
    RowBox[{"n", ",", " ", 
     RowBox[{"All", "[", " ", 
      RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], " ", "]"}]}], 
    " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{
    RowBox[{"n", " ", ":", " ", 
     RowBox[{"{", "__Integer", "}"}]}], ",", "d_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexDisplacement", "[", 
     RowBox[{"#", ",", "d"}], "]"}], "&"}], "/@", "n"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{"n_Integer", ",", 
    RowBox[{"d", " ", ":", " ", 
     RowBox[{
      RowBox[{"{", "__String", "}"}], "|", 
      RowBox[{"{", "__Integer", "}"}]}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexDisplacement", "[", 
     RowBox[{"n", ",", "#"}], "]"}], "&"}], "/@", "d"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{"n_Integer", ",", 
    RowBox[{"All", "[", "d_Integer", "]"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexDisplacement", "[", 
     RowBox[{"n", ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"$coordinateSymbols", "[", "d", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{"n_Integer", ",", "m_Integer"}], "]"}], ":=", 
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{"n", ",", 
    RowBox[{
     RowBox[{"$coordinateSymbols", "[", "3", "]"}], "[", 
     RowBox[{"[", "m", "]"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", "d_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"vertexDisplacement", "[", 
     RowBox[{"#", ",", "d"}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{
      RowBox[{"m", "[", "\"\<mesh\>\"", "]"}], ",", "0"}], "]"}], 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{"m_", "?", "mechanismQ"}], "]"}], ":=", 
  RowBox[{"vertexDisplacement", "[", 
   RowBox[{"m", ",", 
    RowBox[{"All", "[", 
     RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vertexDisplacement", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"n", " ", ":", " ", 
      RowBox[{"{", "__Integer", "}"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"vertexDisplacement", "[", " ", 
    RowBox[{"n", ",", " ", 
     RowBox[{"All", "[", " ", 
      RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], " ", "]"}]}], 
    " ", "]"}]}], "\n", "\n", 
  RowBox[{"(*", "\n", "\t", 
   RowBox[{
   "Convert", " ", "vertex", " ", "positions", " ", "and", " ", 
    "displacements", " ", "in", " ", "various", " ", 
    RowBox[{"ways", "."}]}], "\n", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"to3D", "=", 
   RowBox[{
    RowBox[{"PadRight", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], ",", "3"}], "}"}]}], "]"}], 
    "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"to2D", "=", 
    RowBox[{
     RowBox[{"PadRight", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "#", "]"}], ",", "2"}], "}"}]}], "]"}], 
     "&"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toDim", "::", "dim"}], "=", 
   "\"\<Number of dimensions is not a positive integer.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"toDim", "[", "n_Integer", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"PadRight", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], ",", "n"}], "}"}]}], "]"}], "&"}], 
   " ", "/;", " ", 
   RowBox[{"n", ">", "0"}]}]}], "\n", 
 RowBox[{
  RowBox[{"toDim", "[", "n_", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"toDim", "::", "dim"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[505]:=",ExpressionUUID->"962d6ed6-55b6-443c-89ca-3f41ecb08743"]
}, Closed]],

Cell[CellGroupData[{

Cell["displacementRules[], positionRules[]", "Subsection",ExpressionUUID->"8f391a10-04f2-4ed7-aea1-145efce6a5b2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"positionRules", "[", " ", 
   RowBox[{"positions_", "?", "vertexCoordinatesQ"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"arbitraryPositions", " ", "=", " ", 
      RowBox[{"Array", "[", " ", 
       RowBox[{"vertexPosition", ",", " ", 
        RowBox[{"Dimensions", "[", "positions", "]"}]}], " ", "]"}]}], "\n", 
     "}"}], ",", "\n", "\t", 
    RowBox[{"Flatten", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Rule", ",", " ", 
       RowBox[{"{", 
        RowBox[{"arbitraryPositions", ",", " ", "positions"}], "}"}], ",", 
       " ", "2"}], "]"}], "]"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"positionRules", "[", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "vertexCoordinatesQ"}], "}"}]}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"arbitraryPositions", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{"vertexPosition", ",", " ", 
          RowBox[{
           RowBox[{"Dimensions", "[", "positions", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;"}], "]"}], "]"}]}], " ", "]"}]}], "\n", "}"}], 
      ",", "\n", "\t", 
      RowBox[{"Flatten", " ", "/@", " ", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{"Rule", ",", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"ConstantArray", "[", " ", 
            RowBox[{"arbitraryPositions", ",", " ", 
             RowBox[{"Length", "[", "positions", "]"}]}], " ", "]"}], ",", 
           " ", "positions"}], " ", "}"}], " ", ",", " ", "3"}], " ", 
        "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"ArrayQ", "[", "positions", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"positionRules", "[", " ", "pos_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"positionRules", "::", "pos"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"positionRules", "::", "pos"}], " ", "=", " ", 
   "\"\<Positions are not of valid form.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[526]:=",ExpressionUUID->"fc8e80b7-f492-45a8-ad2d-80d222d7c4ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"displacementRules", "[", " ", 
   RowBox[{"positions_", "?", "vertexCoordinatesQ"}], " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"arbitraryPositions", " ", "=", " ", 
      RowBox[{"Array", "[", " ", 
       RowBox[{"vertexDisplacement", ",", " ", 
        RowBox[{"Dimensions", "[", "positions", "]"}]}], " ", "]"}]}], "\n", 
     "}"}], ",", "\n", "\t", 
    RowBox[{"Flatten", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Rule", ",", " ", 
       RowBox[{"{", 
        RowBox[{"arbitraryPositions", ",", " ", "positions"}], "}"}], ",", 
       " ", "2"}], "]"}], "]"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementRules", "[", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "vertexCoordinatesQ"}], "}"}]}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"arbitraryPositions", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{"vertexDisplacement", ",", " ", 
          RowBox[{
           RowBox[{"Dimensions", "[", "positions", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;"}], "]"}], "]"}]}], " ", "]"}]}], "\n", "}"}], 
      ",", "\n", "\t", 
      RowBox[{"Flatten", " ", "/@", " ", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{"Rule", ",", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"ConstantArray", "[", " ", 
            RowBox[{"arbitraryPositions", ",", " ", 
             RowBox[{"Length", "[", "positions", "]"}]}], " ", "]"}], ",", 
           " ", "positions"}], " ", "}"}], " ", ",", " ", "3"}], " ", 
        "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"ArrayQ", "[", "positions", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displacementRules", "[", " ", "pos_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"displacementRules", "::", "pos"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementRules", "::", "pos"}], " ", "=", " ", 
   "\"\<Displacements are not of valid form.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[530]:=",ExpressionUUID->"21b3ac33-1f56-4c92-a764-e44557b03761"]
}, Closed]],

Cell[CellGroupData[{

Cell["randomDisplacements[]", "Subsection",ExpressionUUID->"5ef4575d-ff53-410b-b2dc-0721806c9003"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacementsInternal", "[", " ", 
    RowBox[{"positions_", ",", " ", "distribution_", ",", " ", 
     RowBox[{"precision_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericQ", "[", "#", "]"}], " ", "&&", " ", 
         RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], ",", " ", 
     RowBox[{"{", "}"}], ",", " ", 
     RowBox[{"numDisplacements_Integer", "?", "Positive"}]}], " ", "]"}], " ",
    ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
      "numberOfVertices", ",", " ", "dim", ",", " ", "randomNumbers"}], "\n", 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"numberOfVertices", ",", " ", "dim"}], " ", "}"}], " ", "=", 
       " ", 
       RowBox[{"Dimensions", "[", "positions", "]"}]}], ";", "\n", "\t", 
      RowBox[{"Check", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{"positions", ",", " ", "numDisplacements"}], "]"}], " ", 
         "+", " ", 
         RowBox[{"RandomVariate", "[", " ", 
          RowBox[{"distribution", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "numDisplacements", ",", " ", "numberOfVertices", ",", "dim"}], 
            "}"}], ",", " ", 
           RowBox[{"WorkingPrecision", " ", "\[Rule]", " ", "precision"}]}], 
          " ", "]"}]}], ",", "\n", "\n", "\t\t", "$Failed"}], "\n", "\t", 
       "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"randomDisplacementsInternal", "[", " ", 
   RowBox[{"positions_", ",", " ", "distribution_", ",", " ", 
    RowBox[{"precision_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"NumericQ", "[", "#", "]"}], " ", "&&", " ", 
        RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], ",", " ", 
    RowBox[{"rules", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rule", "[", 
        RowBox[{"_vertexDisplacement", ",", "_"}], "]"}], ".."}], "}"}]}], 
    ",", " ", 
    RowBox[{"numDisplacements_Integer", "?", "Positive"}]}], " ", "]"}], " ", 
  ":=", "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
     "numberOfVertices", ",", " ", "dim", ",", " ", "displacements", ",", " ",
       "arbitraryDisplacements"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"numberOfVertices", ",", " ", "dim"}], " ", "}"}], " ", "=", 
      " ", 
      RowBox[{"Dimensions", "[", "positions", "]"}]}], ";", "\n", "\t", 
     RowBox[{"displacements", " ", "=", " ", 
      RowBox[{
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"vertexDisplacement", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"numberOfVertices", ",", "dim"}], "}"}]}], "]"}], " ", "//.",
        " ", "rules"}]}], ";", "\n", "\t", 
     RowBox[{"arbitraryDisplacements", " ", "=", " ", 
      RowBox[{"Cases", "[", " ", 
       RowBox[{
        RowBox[{"Flatten", "[", "displacements", "]"}], ",", " ", 
        "_vertexDisplacement"}], "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"Check", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"positions", ",", " ", "numDisplacements"}], "]"}], " ", "+",
         " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"displacements", " ", "/.", " ", 
             RowBox[{"Thread", "[", 
              RowBox[{"arbitraryDisplacements", "->", 
               RowBox[{"RandomVariate", "[", "\n", "\t\t\t", 
                RowBox[{"distribution", ",", "\n", "\t\t\t", 
                 RowBox[{"Length", "[", "arbitraryDisplacements", "]"}], ",", 
                 "\n", "\t\t\t", 
                 RowBox[{"WorkingPrecision", "\[Rule]", "precision"}]}], "\n",
                 "\t\t", "]"}]}], "]"}]}], " ", "&"}], ")"}], ",", " ", 
          "numDisplacements"}], " ", "]"}]}], ",", "\n", "\n", "\t\t", 
       "$Failed"}], "\n", "\t", "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[534]:=",ExpressionUUID->"e2d65e56-4673-4c8e-8227-2994bb1c0619"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacements", "::", "numpos"}], "=", 
   "\"\<Not a valid number of displacements.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacements", "::", "precision"}], "=", 
   "\"\<Working precision should be a real, positive number.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomDisplacements", "::", "rules"}], "=", 
    "\"\<List of rules must be of the form {vertexDisplacements[_,_]->_, \
..}\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"randomDisplacementsInternal", "[", " ", 
   RowBox[{
   "positions_", ",", " ", "distribution_", ",", " ", "precision_", ",", " ", 
    "rules_", ",", " ", "numDisplacements_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Not", "[", 
      RowBox[{
       RowBox[{"NumericQ", "[", "precision", "]"}], " ", "&&", " ", 
       RowBox[{"precision", " ", ">", " ", "0"}]}], "]"}], ",", "\n", "\t\t", 
     
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"randomDisplacements", "::", "precision"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", 
     RowBox[{"Not", "[", 
      RowBox[{
       RowBox[{"IntegerQ", "[", "numDisplacements", "]"}], " ", "&&", " ", 
       RowBox[{"numDisplacements", " ", ">", " ", "0"}]}], "]"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"randomDisplacements", "::", "numpos"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", "True", ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"randomDisplacements", "::", "rules"}], "]"}], ";", " ", 
      "False"}]}], "\n", "]"}]}]}]}], "Code",
 CellLabel->
  "In[536]:=",ExpressionUUID->"097af00b-cd95-484d-a8cd-bcd98c53194e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "randomDisplacements", "]"}], "=", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<distribution\>\"", "->", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", 
         RowBox[{"1", "/", "10"}]}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"WorkingPrecision", "->", "MachinePrecision"}], ",", "\n", "\t", 
      RowBox[{"\"\<rules\>\"", "\[Rule]", 
       RowBox[{"{", "}"}]}]}], "\n", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"randomDisplacements", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], " ", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"randomDisplacementsInternal", "[", 
       RowBox[{
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<distribution\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}], ",", " ", "1"}], 
       "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"res", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
       "randomDisplacementsInternal"}], " ", "&&", " ", 
      RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacements", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], " ", ",", " ", "numDisplacements_", 
     ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"randomDisplacementsInternal", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<distribution\>\"", "]"}], ",", " ", 
         
         RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}], ",", " ", 
         "numDisplacements"}], "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
        "randomDisplacementsInternal"}], " ", "&&", " ", 
       RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], "\n",
   "\n", 
  RowBox[{"(*", 
   RowBox[{"choose", " ", "your", " ", "own", " ", "coordinates"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"randomDisplacements", "[", 
   RowBox[{
    RowBox[{"coordinates_", "?", "vertexCoordinatesQ"}], ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", "\n", 
  
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"randomDisplacementsInternal", "[", 
       RowBox[{"coordinates", ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<distribution\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}], ",", " ", "1"}], 
       "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"res", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
       "randomDisplacementsInternal"}], " ", "&&", " ", 
      RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacements", "[", 
    RowBox[{
     RowBox[{"coordinates_", "?", "vertexCoordinatesQ"}], " ", ",", " ", 
     "numDisplacements_", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"randomDisplacementsInternal", "[", 
        RowBox[{"coordinates", ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<distribution\>\"", "]"}], ",", " ", 
         
         RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}], ",", " ", 
         "numDisplacements"}], "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
        "randomDisplacementsInternal"}], " ", "&&", " ", 
       RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], "\n",
   "\n", 
  RowBox[{"(*", "***)"}]}], "\n", 
 RowBox[{
  RowBox[{"randomDisplacements", "[", 
   RowBox[{
    RowBox[{"numVertices_Integer", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ",", " ", 
    RowBox[{"All", "[", " ", 
     RowBox[{"dim", ":", " ", 
      RowBox[{"2", "|", "3"}]}], " ", "]"}], " ", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", "\n", 
  
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"randomDisplacementsInternal", "[", " ", 
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"numVertices", ",", " ", "dim"}], "}"}]}], " ", "]"}], " ",
         ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<distribution\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}], ",", " ", "1"}], 
       "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"res", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
       "randomDisplacementsInternal"}], " ", "&&", " ", 
      RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacements", "[", 
    RowBox[{
     RowBox[{"numVertices_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ",", " ", 
     RowBox[{"All", "[", " ", 
      RowBox[{"dim", ":", " ", 
       RowBox[{"2", "|", "3"}]}], " ", "]"}], " ", ",", " ", 
     "numDisplacements_", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"randomDisplacementsInternal", "[", " ", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"numVertices", ",", " ", "dim"}], "}"}]}], " ", "]"}], 
         " ", ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<distribution\>\"", "]"}], ",", " ", 
         
         RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}], ",", " ", 
         "numDisplacements"}], "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
        "randomDisplacementsInternal"}], " ", "&&", " ", 
       RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randomDisplacements", "::", "dim"}], "=", 
   "\"\<Dimension must be either 2 or 3.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomDisplacements", "::", "numvert"}], "=", 
    "\"\<Not a valid number of vertices.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"randomDisplacements", "[", 
   RowBox[{"numVertices_", ",", " ", "dim_", " ", ",", " ", "___"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Not", "[", " ", 
      RowBox[{
       RowBox[{"IntegerQ", "[", "numVertices", "]"}], " ", "&&", " ", 
       RowBox[{"numVertices", " ", ">", " ", "0"}]}], " ", "]"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"randomDisplacements", "::", "numvert"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"dim", " ", "\[NotEqual]", " ", "2"}], " ", "&&", " ", 
      RowBox[{"dim", " ", "\[NotEqual]", " ", "3"}]}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"randomDisplacements", "::", "dim"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t", "True", ",", " ", "False"}], "\n", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[540]:=",ExpressionUUID->"eb2c692b-8016-46c8-9bbf-9494375f1de4"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Periodic mechanisms", "Section",ExpressionUUID->"6c87b55b-aadb-402e-9eef-99119af5b41f"],

Cell[CellGroupData[{

Cell["periodicIdentificationData[], periodicIdentification[]", "Subsection",ExpressionUUID->"60e056ed-a16c-4841-8b4b-dde35c6dcbd9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"periodicIdentificationData", "[", 
     RowBox[{"dim_", ",", " ", "f_", ",", " ", "maps_", ",", "vertices_"}], 
     "]"}], "[", "\"\<Methods\>\"", "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
    "\"\<identification\>\"", ",", "\"\<vertices\>\"", ",", "\"\<labels\>\"", 
     ",", "\"\<EmbeddingDimension\>\"", ",", "\"\<maps\>\"", ",", 
     "\"\<constraints\>\"", ",", "\"\<positions\>\"", ",", 
     "\"\<positionRules\>\"", ",", "\"\<displacements\>\"", ",", 
     "\"\<displacementRules\>\""}], "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"periodicIdentificationData", "[", 
     RowBox[{"dim_", ",", " ", "f_", ",", " ", "maps_", ",", "vertices_"}], 
     "]"}], "[", "\"\<identification\>\"", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "n", "}"}], ",", "\n", "\t\t", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"rules", " ", "=", " ", 
         RowBox[{"Thread", "[", 
          RowBox[{"f", " ", "\[Rule]", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"Identity", ",", 
             RowBox[{"Length", "[", "f", "]"}]}], "]"}]}], "]"}]}], " ", 
        "}"}], ",", "\n", "\t\t\t", 
       RowBox[{"DeleteCases", "[", " ", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "vertices", "]"}], "]"}], " ", "\[Rule]", 
           " ", 
           RowBox[{"(", 
            RowBox[{"vertices", " ", "/.", " ", "rules"}], ")"}]}], "]"}], 
         ",", " ", 
         RowBox[{"n_", " ", "\[Rule]", " ", "n_"}]}], " ", "]"}]}], "\n", 
      "\t\t", "]"}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentificationData", "[", 
    RowBox[{"dim_", ",", " ", "f_", ",", " ", "maps_", ",", "vertices_"}], 
    "]"}], "[", "\"\<vertices\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"Cases", "[", 
   RowBox[{"vertices", ",", " ", "_Integer"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentificationData", "[", 
    RowBox[{
    "dim_", ",", " ", "f_", ",", " ", "maps_", ",", " ", "vertices_"}], "]"}],
    "[", "\"\<labels\>\"", "]"}], " ", ":=", " ", "f"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentificationData", "[", 
    RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "[", 
   "\"\<EmbeddingDimension\>\"", "]"}], ":=", "dim"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"periodicIdentificationData", "[", 
     RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "[", 
    "\"\<maps\>\"", "]"}], ":=", "maps"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentificationData", "[", 
    RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "[", 
   RowBox[{"\"\<EmbeddingDimension\>\"", " ", "\[Rule]", " ", 
    RowBox[{"d", " ", ":", " ", 
     RowBox[{"2", "|", "3"}]}]}], "]"}], ":=", 
  RowBox[{"periodicIdentificationData", "[", 
   RowBox[{"d", ",", "f", ",", "maps", ",", "vertices"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentificationData", "[", 
    RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "[", 
   RowBox[{"\"\<EmbeddingDimension\>\"", " ", "\[Rule]", " ", "d_"}], "]"}], ":=",
   "\n", "\t", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"periodicIdentification", "::", "dim"}], ",", "d"}], "]"}], ";",
     "\n", "\t", 
    RowBox[{"periodicIdentificationData", "[", 
     RowBox[{"dim", ",", "f", ",", "maps", ",", "vertices"}], "]"}]}], "\n", 
   "\t", ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"periodicIdentification", "::", "dim"}], "=", 
    "\"\<Dimension `1` must be either 2 or 3.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"periodicIdentificationData", "[", 
     RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "[", 
    
    RowBox[{"\"\<labels\>\"", " ", "\[Rule]", " ", "l_List"}], "]"}], " ", "/;",
    " ", 
   RowBox[{
    RowBox[{"Length", "[", "l", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "maps", "]"}]}]}], " ", ":=", "\n", "\t", 
  RowBox[{"periodicIdentificationData", "[", 
   RowBox[{"dim", ",", "l", ",", "maps", ",", "vertices"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentificationData", "[", 
    RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "[", 
   RowBox[{"\"\<labels\>\"", " ", "\[Rule]", " ", "l_"}], "]"}], " ", ":=", 
  "\n", "\t", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"periodicIdentification", "::", "label"}], ",", 
      RowBox[{"Length", "[", "f", "]"}]}], "]"}], ";", "\n", "\t", 
    RowBox[{"periodicIdentificationData", "[", 
     RowBox[{"dim", ",", "f", ",", "maps", ",", "vertices"}], "]"}]}], "\n", 
   "\t", ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"periodicIdentification", "::", "label"}], "=", 
    "\"\<There must be `1` labels.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"periodicIdentificationData", "[", 
     RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "[", 
    
    RowBox[{"\"\<maps\>\"", " ", "\[Rule]", " ", "m_"}], "]"}], " ", "/;", 
   " ", 
   RowBox[{
    RowBox[{"Length", "[", "m", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "maps", "]"}]}]}], " ", ":=", " ", 
  RowBox[{"periodicIdentificationData", "[", 
   RowBox[{"dim", ",", "f", ",", "m", ",", "vertices"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentificationData", "[", 
    RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "[", 
   RowBox[{"\"\<maps\>\"", " ", "\[Rule]", " ", "m_"}], "]"}], " ", ":=", " ",
   "\n", "\t", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"periodicIdentification", "::", "maps"}], ",", 
      RowBox[{"Length", "[", "maps", "]"}]}], "]"}], ";", "\n", "\t", 
    RowBox[{"periodicIdentificationData", "[", 
     RowBox[{"dim", ",", "f", ",", "maps", ",", "vertices"}], "]"}]}], "\n", 
   "\t", ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"periodicIdentification", "::", "maps"}], "=", 
    "\"\<There must be `1` maps.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentificationData", "[", 
    RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "[", 
   "\"\<positions\>\"", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", " ", 
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"cleanupRules", " ", "=", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{"f", " ", "\[Rule]", " ", "maps"}], "]"}]}], " ", "}"}], ",",
       "\n", "\t\t", 
      RowBox[{
       RowBox[{"vertices", " ", "/.", " ", 
        RowBox[{"x_Integer", " ", "\[RuleDelayed]", " ", 
         RowBox[{"vertexPosition", "[", 
          RowBox[{"x", ",", 
           RowBox[{"All", "[", "dim", "]"}]}], "]"}]}]}], " ", "/.", " ", 
       "cleanupRules"}]}], "\n", "\t", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentificationData", "[", 
    RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "[", 
   "\"\<positionRules\>\"", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", " ", 
    RowBox[{"DeleteCases", "[", " ", 
     RowBox[{
      RowBox[{"With", "[", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"cleanupRules", " ", "=", " ", 
          RowBox[{"Thread", "[", 
           RowBox[{"f", " ", "\[Rule]", " ", "maps"}], "]"}]}], " ", "}"}], 
        ",", "\n", "\t\t", 
        RowBox[{"Thread", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"vertexPosition", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "[", "vertices", "]"}], "]"}], ",", " ", 
             RowBox[{"All", "[", "dim", "]"}]}], " ", "]"}], "]"}], " ", 
          "\[Rule]", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"vertices", " ", "/.", " ", 
             RowBox[{"x_Integer", " ", "\[RuleDelayed]", " ", 
              RowBox[{"vertexPosition", "[", 
               RowBox[{"x", ",", 
                RowBox[{"All", "[", "dim", "]"}]}], "]"}]}]}], " ", "/.", " ",
             "cleanupRules"}], " ", "]"}]}], "\n", "\t\t", "]"}]}], "]"}], 
      " ", ",", " ", 
      RowBox[{"x_", " ", "\[Rule]", " ", "x_"}]}], " ", "]"}]}], "\n", "\t", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"periodicIdentificationData", "[", 
     RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "[", 
    "\"\<constraints\>\"", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", " ", 
     RowBox[{"DeleteCases", "[", " ", 
      RowBox[{
       RowBox[{"With", "[", " ", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"cleanupRules", " ", "=", " ", 
           RowBox[{"Thread", "[", 
            RowBox[{"f", " ", "\[Rule]", " ", "maps"}], "]"}]}], " ", "}"}], 
         ",", "\n", "\t\t", 
         RowBox[{"Thread", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"vertexPosition", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"Length", "[", "vertices", "]"}], "]"}], ",", " ", 
              RowBox[{"All", "[", "dim", "]"}]}], " ", "]"}], "]"}], " ", 
           "\[Equal]", " ", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"vertices", " ", "/.", " ", 
              RowBox[{"x_Integer", " ", "\[RuleDelayed]", " ", 
               RowBox[{"vertexPosition", "[", 
                RowBox[{"x", ",", 
                 RowBox[{"All", "[", "dim", "]"}]}], "]"}]}]}], " ", "/.", 
             " ", "cleanupRules"}], " ", "]"}]}], "\n", "\t\t", "]"}]}], 
        "]"}], " ", ",", " ", "True"}], " ", "]"}]}], "\n", "\t", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentificationData", "[", 
    RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "[", 
   "\"\<displacements\>\"", "]"}], " ", ":=", " ", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"cleanupRules", " ", "=", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "x_", "]"}], " ", "\[RuleDelayed]", " ", 
            RowBox[{"#", " ", "x"}]}], " ", "&"}], " ", "/@", " ", "f"}], 
         ")"}]}], " ", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"vertices", " ", "/.", " ", 
        RowBox[{"x_Integer", " ", "\[RuleDelayed]", " ", 
         RowBox[{"vertexDisplacement", "[", 
          RowBox[{"x", ",", 
           RowBox[{"All", "[", "dim", "]"}]}], "]"}]}]}], " ", "/.", " ", 
       "cleanupRules"}]}], "\n", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"periodicIdentificationData", "[", 
     RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "[", 
    "\"\<displacementRules\>\"", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\n", "\t", 
     RowBox[{"DeleteCases", "[", " ", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"cleanupRules", " ", "=", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", "x_", "]"}], " ", "\[RuleDelayed]", " ", 
               RowBox[{"#", " ", "x"}]}], " ", "&"}], " ", "/@", " ", "f"}], 
            ")"}]}], " ", "}"}], ",", "\n", "\t\t", 
         RowBox[{"Thread", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"vertexDisplacement", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"Length", "[", "vertices", "]"}], "]"}], ",", " ", 
              RowBox[{"All", "[", "dim", "]"}]}], " ", "]"}], "]"}], " ", 
           "\[Rule]", " ", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"vertices", " ", "/.", " ", 
              RowBox[{"x_Integer", " ", "\[RuleDelayed]", " ", 
               RowBox[{"vertexDisplacement", "[", 
                RowBox[{"x", ",", 
                 RowBox[{"All", "[", "dim", "]"}]}], "]"}]}]}], " ", "/.", 
             " ", "cleanupRules"}], "]"}]}], "\n", "\t\t", "]"}]}], "\n", 
        "\t", "]"}], ",", " ", 
       RowBox[{"x_", " ", "\[Rule]", " ", "x_"}]}], " ", "]"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{"periodicIdentificationData", "[", 
    RowBox[{"dim_", ",", "f_", ",", "maps_", ",", "vertices_"}], "]"}], "]"}],
   " ", ":=", "\n", "\t", 
  RowBox[{"\"\<periodicIdentificationData\>\"", "[", 
   RowBox[{"Style", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"periodicIdentificationData", "[", 
       RowBox[{"dim", ",", "f", ",", "maps", ",", "vertices"}], "]"}], "[", 
      "\"\<maps\>\"", "]"}], ",", " ", "Italic"}], " ", "]"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[550]:=",ExpressionUUID->"c31057a9-e7ec-4599-a3a8-91e81672b45a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mapQ", "[", 
   RowBox[{"f_", " ", "\[Rule]", "  ", "_Function"}], "]"}], ":=", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mapQ", "[", "_", "]"}], ":=", "False"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentification", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"basis_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], " ", "]"}], 
   " ", ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", " ", 
     RowBox[{"With", "[", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f", " ", "=", " ", 
         RowBox[{"ToString", "/@", 
          RowBox[{"Array", "[", 
           RowBox[{
            RowBox[{"Unique", "[", "]"}], ",", 
            RowBox[{"Length", "[", "basis", "]"}]}], "]"}]}]}], "}"}], ",", 
       "\n", "\t", 
       RowBox[{"periodicIdentificationInternal", "[", " ", 
        RowBox[{"m", ",", " ", 
         RowBox[{"Thread", "[", " ", 
          RowBox[{"f", " ", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Function", "[", 
               RowBox[{
                RowBox[{"{", "x", "}"}], ",", 
                RowBox[{"x", " ", "+", " ", "#"}]}], "]"}], "&"}], "/@", 
             "basis"}], ")"}]}], " ", "]"}]}], " ", "]"}]}], "\n", "]"}]}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentification", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "f_", ",", " ", 
     RowBox[{"basis_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], " ", "]"}], 
   " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "f", "]"}], " ", "==", " ", 
    RowBox[{"Length", "[", "basis", "]"}]}]}], " ", ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", "\n", "\t", 
    RowBox[{"periodicIdentificationInternal", "[", " ", 
     RowBox[{"m", ",", " ", 
      RowBox[{"Thread", "[", " ", 
       RowBox[{"f", " ", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"x", " ", "+", " ", "#"}]}], "]"}], "&"}], "/@", 
          "basis"}], ")"}]}], " ", "]"}]}], " ", "]"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"periodicIdentification", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"f", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"__", "?", "mapQ"}], "}"}]}]}], "]"}], ":=", " ", 
   RowBox[{"periodicIdentificationInternal", "[", 
    RowBox[{"m", ",", "f"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"periodicIdentificationInternal", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"f", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "mapQ"}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", 
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"labels", " ", "=", " ", 
         RowBox[{"f", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t", 
        RowBox[{"maps", " ", "=", " ", 
         RowBox[{"f", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", "\n", "\t", 
        RowBox[{"pos", " ", "=", " ", 
         RowBox[{"mechanismPositions", "[", "m", "]"}]}], ",", " ", 
        RowBox[{"dim", " ", "=", " ", 
         RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], ",", "\n", 
        "\t", 
        RowBox[{"ruleFunction", "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "x", "}"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
             RowBox[{"x", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], " ", "]"}]}],
         ",", "\n", "\t", 
        RowBox[{"vertices", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], "]"}]}]}], "\n", 
       "}"}], ",", "\n", "\t", 
      RowBox[{"periodicIdentificationData", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], ",", "\n", 
        "\t\t", "labels", ",", "\n", "\t\t", "maps", ",", "\n", "\t\t", 
        RowBox[{"vertices", " ", "//.", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"MapThread", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ruleFunction", "[", "#1", "]"}], " ", "/@", " ", 
              RowBox[{"overlappingVertices", "[", 
               RowBox[{"pos", ",", " ", 
                RowBox[{"#2", " ", "/@", " ", "pos"}]}], "]"}]}], "&"}], ",", 
            "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{"labels", ",", "maps"}], "}"}]}], "\n", "\t\t", "]"}], 
          "]"}]}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], "]"}]}]}], "Code",
 CellLabel->
  "In[571]:=",ExpressionUUID->"894f0b58-5723-4d0e-809d-4ee4d9dc3d49"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\n", "\t", 
   RowBox[{
   "overlappingVertices", " ", "returns", " ", "a", " ", "list", " ", "of", 
    " ", "which", " ", "vertices", " ", "in", " ", "the", " ", "first", " ", 
    "set", " ", "of", " ", "positions", " ", "can", " ", "be", "\n", "\t", 
    "identified", " ", "in", " ", "the", " ", "second", " ", 
    RowBox[{"set", ".", "\n", "\t", "\n", "\t", 
     RowBox[{"overlappingVertices", "[", 
      RowBox[{
       RowBox[{"positions", " ", "1"}], ",", " ", 
       RowBox[{"positions", " ", "2"}]}], "]"}]}], " ", "returns", " ", "a", 
    " ", "list", " ", "of", " ", "which", " ", "vertices", " ", "listed", " ",
     "in", " ", "1", " ", "can", " ", "be", " ", "found", " ", "in", " ", 
    "2."}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{"overlappingVertices", "[", 
    RowBox[{
     RowBox[{"positions1_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"positions2_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"tol", " ", ":", " ", 
      RowBox[{"_", "?", "NumericQ"}], " ", ":", " ", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "5"}], ")"}]}]}]}], "]"}], " ", ":=", " ", "\n", 
   RowBox[{
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"nearestList", ",", " ", "selectorList"}], " ", "}"}], ",", 
      "\n", "\t", 
      RowBox[{"(*", "\n", "\t", 
       RowBox[{
       "get", " ", "the", " ", "points", " ", "in", " ", "list", " ", "1", 
        " ", "that", " ", "are", " ", "closest", " ", "to", " ", "each", " ", 
        "of", " ", "the", " ", "points", " ", "in", " ", "list", " ", "2"}], 
       "\n", "\t", "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"nearestList", " ", "=", " ", 
        RowBox[{
         RowBox[{"Nearest", "[", " ", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"positions1", " ", "\[Rule]", " ", 
             RowBox[{"Range", "[", " ", 
              RowBox[{"Length", "[", "positions1", "]"}], " ", "]"}]}], "]"}],
            ",", " ", "positions2"}], " ", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], " ", ";", "\n", "\n", 
       "\t", 
       RowBox[{"(*", 
        RowBox[{
        "get", " ", "the", " ", "actual", " ", "overlapping", " ", "points", 
         " ", "according", " ", "to", " ", "the", " ", "provided", " ", 
         "tolerance"}], "*)"}], "\n", "\t", 
       RowBox[{"selectorList", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", ".", "#"}], "<", 
            RowBox[{"tol", "^", "2"}]}], "&"}], ")"}], " ", "/@", " ", 
         RowBox[{"(", " ", 
          RowBox[{"positions2", "-", 
           RowBox[{"positions1", "[", 
            RowBox[{"[", " ", "nearestList", " ", "]"}], "]"}]}], " ", 
          ")"}]}]}], " ", ";", "\n", "\n", "\t", 
       RowBox[{"Pick", "[", " ", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"nearestList", " ", "\[Rule]", " ", 
           RowBox[{"Range", "[", " ", 
            RowBox[{"Length", " ", "@", " ", "positions1"}], "]"}]}], " ", 
          "]"}], ",", " ", "selectorList"}], " ", "]"}]}]}], "\n", "\n", 
     "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "positions1", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"Dimensions", "[", "positions2", "]"}]}]}]}]}]], "Code",
 CellLabel->
  "In[577]:=",ExpressionUUID->"05b7ff90-ba72-4264-910c-7dcce83fa5b1"]
}, Closed]],

Cell[CellGroupData[{

Cell["periodicIdentificationDataQ[]", "Subsection",ExpressionUUID->"9cfdc11c-7ae4-4bc5-9b1d-79dc2c28c20a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"periodicIdentificationDataQ", "[", " ", 
   RowBox[{"periodicIdentificationData", "[", 
    RowBox[{"_Integer", ",", "_", ",", "_", ",", "_"}], "]"}], " ", "]"}], 
  " ", ":=", " ", "True"}], "\n", 
 RowBox[{
  RowBox[{"periodicIdentificationDataQ", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"periodicIdentificationData", "[", 
     RowBox[{"d_Integer", ",", "_", ",", "_", ",", "vertices_"}], "]"}]}], 
   " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"AllTrue", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], " ", "\[Equal]",
        " ", "d"}], " ", ",", " ", 
      RowBox[{
       RowBox[{"Length", "[", "vertices", "]"}], " ", "\[Equal]", " ", 
       RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], " ", "}"}], ",", 
    " ", "TrueQ"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"periodicIdentificationDataQ", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "_"}], " ", "]"}], " ", ":=",
   " ", "False"}]}], "Code",
 CellLabel->
  "In[578]:=",ExpressionUUID->"ca2e65ed-8d19-4650-9d7a-afae1df6efcc"]
}, Closed]],

Cell[CellGroupData[{

Cell["minimalMechanism[]", "Subsection",ExpressionUUID->"a08fec2b-4c6d-4ec5-a6c9-19108d52a205"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"minimalMechanism", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"basis_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{
          RowBox[{"N", "[", "#", "]"}], ",", "NumericQ"}], "]"}], "&"}], 
       ")"}]}]}], "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"pi", " ", "=", " ", 
         RowBox[{"periodicIdentification", "[", 
          RowBox[{"m", ",", "basis"}], "]"}]}], ",", "badVertices"}], " ", 
       "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"badVertices", "=", 
        RowBox[{
         RowBox[{"pi", "[", "\"\<identification\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"badEdges", "=", " ", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"connectivity", "[", 
               RowBox[{"m", ",", 
                RowBox[{"\"\<edges\>\"", "\[Rule]", "\"\<vertices\>\""}]}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{"ContainsAll", "[", 
                RowBox[{"badVertices", ",", "#"}], "]"}], "&"}]}], "]"}]}], 
           ",", "\n", "\t\t", 
           RowBox[{"badFaces", " ", "=", " ", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"connectivity", "[", 
               RowBox[{"m", ",", 
                RowBox[{"\"\<faces\>\"", "\[Rule]", "\"\<vertices\>\""}]}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{"ContainsAll", "[", 
                RowBox[{"badVertices", ",", "#"}], "]"}], "&"}]}], "]"}]}]}], 
          "\n", "\t", "}"}], ",", "\n", "\t\t", 
         RowBox[{"deleteDanglingVertices", "[", "\n", "\t\t\t", 
          RowBox[{"deleteCells", "[", 
           RowBox[{"m", ",", " ", 
            RowBox[{"Alternatives", " ", "@@", " ", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"_", "/@", "badEdges"}], ",", 
               RowBox[{"_", "/@", "badFaces"}]}], "]"}]}]}], " ", "]"}], "\n",
           "\t\t", "]"}]}], "\n", "\t", "]"}]}]}], "\n", "]"}], " ", "/;", 
    " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", "basis", "]"}], "\[Equal]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"embeddingDimension", "[", "m", "]"}], ",", 
         RowBox[{"embeddingDimension", "[", "m", "]"}]}], "}"}]}], ",", 
      "True", ",", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"minimalMechanism", "::", "dim"}], "]"}], ";", " ", 
       "False"}]}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"minimalMechanism", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"basis_", "?", "MatrixQ"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"minimalMechanism", "::", "num"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"minimalMechanism", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"basis", " ", ":", " ", 
     RowBox[{"Except", "[", 
      RowBox[{"_", "?", "MatrixQ"}], "]"}]}]}], " ", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"minimalMechanism", "::", "num"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"minimalMechanism", "[", 
   RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"minimalMechanism", "::", "num"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[581]:=",ExpressionUUID->"ffd7ea39-a364-44f4-94e2-69aab71ecae0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"minimalMechanism", "::", "dim"}], "=", 
   "\"\<Dimension of basis must match embedding dimension of \
mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"minimalMechanism", "::", "num"}], "=", 
   "\"\<Second argument should be a numeric basis.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[585]:=",ExpressionUUID->"f855b1b9-6eff-4966-88ee-3d609bef8039"]
}, Closed]],

Cell[CellGroupData[{

Cell["labelPeriodicVertices[]", "Subsection",ExpressionUUID->"a2de7482-cba2-4331-aa97-96a42e271549"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "labelPeriodicVertices", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<style\>\"", "\[Rule]", "Red"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"labelPeriodicVertices", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], " ", ",", " ", "pi_", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"map", " ", "=", " ", 
        RowBox[{"pi", "[", "\"\<map\>\"", "]"}]}], ",", " ", 
       RowBox[{"style", " ", "=", " ", 
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<style\>\"", "]"}], " ", "===", 
           " ", "None"}], ",", " ", 
          RowBox[{"#", "&"}], ",", " ", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", 
             RowBox[{"OptionValue", "[", "\"\<style\>\"", "]"}]}], "]"}], 
           "&"}]}], " ", "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{"changeCellData", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"changeCellData", "[", 
         RowBox[{"joint", ",", " ", 
          RowBox[{"map", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", 
          RowBox[{"\"\<label\>\"", " ", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{"style", "/@", " ", 
             RowBox[{"map", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ")"}]}]}], " ", 
         "]"}], " ", "@", " ", "m"}], ",", "\n", "\t\t", "joint", ",", " ", 
       RowBox[{"map", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", 
       RowBox[{"\"\<label\>\"", " ", "\[Rule]", " ", 
        RowBox[{"map", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "\n", "\t", "]"}]}], 
    "\n", "]"}], " ", "/;", " ", 
   RowBox[{"periodicIdentificationDataQ", "[", 
    RowBox[{"m", ",", "pi"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[587]:=",ExpressionUUID->"4f17c454-da11-4447-8d57-5317848adaf8"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["geometry", "Section",ExpressionUUID->"7efcf6d8-4de1-4a1a-8c78-769edd726844"],

Cell[CellGroupData[{

Cell["\<\
private functions to check arguments \
vertexArgumentsQ[],foldArgumentsQ[],edgeArgumentsQ[],faceArgumentsQ[],\
tripleArgumentsQ[]\
\>", "Subsection",ExpressionUUID->"6c532f1a-6b68-4aeb-bf90-019593cda361"],

Cell[CellGroupData[{

Cell["vertexArgumentsQ[]", "Subsubsection",ExpressionUUID->"7d0695ab-1f95-4456-bdd4-8561d1a4a5d3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vertexArgumentsQ", "[", " ", 
   RowBox[{"name_", ",", " ", "vertices_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"checkForError", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"VectorQ", "[", 
      RowBox[{"vertices", ",", " ", "IntegerQ"}], "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "vertices", "]"}], ">", "0"}]}], ",", " ", "name", 
    ",", " ", "\"\<vertices\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vertexArgumentsQ", "[", " ", 
    RowBox[{"name_", ",", " ", 
     RowBox[{"pos_", "?", "vertexCoordinatesQ"}], ",", " ", "vertices_"}], 
    " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"checkForError", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"VectorQ", "[", 
       RowBox[{"vertices", ",", " ", "IntegerQ"}], "]"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"Min", "[", "vertices", "]"}], ">", "0"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"Max", "[", "vertices", "]"}], " ", "\[LessEqual]", " ", 
       RowBox[{"Length", "[", "pos", "]"}]}]}], ",", " ", "name", ",", " ", 
     "\"\<vertices\>\""}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "only", " ", "checks", " ", "for", " ", "interior", " ", "vertices"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexArgumentsQ", "[", " ", 
   RowBox[{"name_", ",", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "vertices_"}], " ", "]"}], 
  " ", ":=", "\n", "\t", 
  RowBox[{"checkForError", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"VectorQ", "[", "vertices", "]"}], " ", "&&", " ", 
     RowBox[{"ContainsAll", "[", " ", 
      RowBox[{
       RowBox[{"interiorVertices", "[", "m", "]"}], ",", " ", "vertices"}], 
      " ", "]"}]}], " ", ",", " ", "name", ",", " ", "\"\<vertices\>\""}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"vertexArgumentsQ", "[", " ", 
   RowBox[{"name_", ",", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "pos_", ",", " ", 
    "vertices_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"And", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"checkForError", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"VectorQ", "[", 
        RowBox[{"vertices", ",", " ", "IntegerQ"}], "]"}], " ", "&&", " ", 
       RowBox[{"ContainsAll", "[", " ", 
        RowBox[{
         RowBox[{"interiorVertices", "[", "m", "]"}], ",", " ", "vertices"}], 
        " ", "]"}]}], ",", " ", "name", ",", " ", "\"\<vertices\>\""}], "]"}],
     ",", "\n", "\t", 
    RowBox[{"checkForError", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"MatrixQ", "[", "pos", "]"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Length", "[", "pos", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], ",", " ", "name",
       ",", " ", "\"\<pos\>\""}], " ", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[589]:=",ExpressionUUID->"ed59bca9-5f7a-4563-afbb-03d341794d53"]
}, Closed]],

Cell[CellGroupData[{

Cell["foldArgumentsQ[]", "Subsubsection",ExpressionUUID->"c7e5235f-14a6-4abe-b812-30b297accf20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"foldArgumentsQ", "[", 
   RowBox[{"name_", ",", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], ",", "edgelist_"}], "]"}], ":=", 
  RowBox[{"checkForError", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"AllTrue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"edgelist", ",", "IntegerQ"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"edgelist", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}], ",", 
        RowBox[{"Quiet", " ", "@", " ", 
         RowBox[{"ContainsAll", "[", " ", 
          RowBox[{
           RowBox[{"Sort", "/@", 
            RowBox[{"interiorEdges", "[", "m", "]"}]}], ",", 
           RowBox[{"Sort", "/@", "edgelist"}]}], "]"}]}]}], "}"}], ",", 
      "TrueQ"}], "]"}], ",", "\n", "\t", "name", ",", "\n", "\t", 
    "\"\<folds\>\""}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"foldArgumentsQ", "[", 
   RowBox[{"name_", ",", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], ",", "pos_", ",", "edgelist_"}], "]"}],
   ":=", 
  RowBox[{"And", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"checkForError", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"MatrixQ", "[", 
           RowBox[{"edgelist", ",", "IntegerQ"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"edgelist", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}], ",", 
          RowBox[{"Quiet", " ", "@", " ", 
           RowBox[{"ContainsAll", "[", " ", 
            RowBox[{
             RowBox[{"Sort", "/@", 
              RowBox[{"interiorEdges", "[", "m", "]"}]}], ",", 
             RowBox[{"Sort", "/@", "edgelist"}]}], "]"}]}]}], "}"}], ",", 
        "TrueQ"}], "]"}], ",", "\n", "\t\t", "name", ",", "\n", "\t\t", 
      "\"\<folds\>\""}], "\n", "\t", "]"}], ",", "\n", "\t", 
    RowBox[{"checkForError", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"MatrixQ", "[", "pos", "]"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Length", "[", "pos", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], ",", " ", "name",
       ",", " ", "\"\<pos\>\""}], " ", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[593]:=",ExpressionUUID->"f046e6c6-b4ba-4075-9f4b-08d736a5ace0"]
}, Closed]],

Cell[CellGroupData[{

Cell["edgeArgumentsQ[]", "Subsubsection",ExpressionUUID->"b00a89e2-31a5-4fdf-a915-adf6c32c6321"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"edgeArgumentsQ", "[", " ", 
   RowBox[{"name_", " ", ",", " ", "edgelist_"}], " ", "]"}], " ", ":=", " ", 
  
  RowBox[{"checkForError", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixQ", "[", 
      RowBox[{"edgelist", ",", "IntegerQ"}], "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Min", "[", "edgelist", "]"}], ">", "0"}]}], " ", ",", " ", 
    "name", ",", " ", "\"\<edgeform\>\""}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"edgeArgumentsQ", "[", " ", 
   RowBox[{"name_", " ", ",", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", ",", " ", "edgelist_"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"checkForError", "[", " ", 
   RowBox[{
    RowBox[{"edgeQ", "[", 
     RowBox[{"m", ",", "edgelist"}], "]"}], ",", " ", "name", ",", " ", 
    "\"\<edge\>\""}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"edgeArgumentsQ", "[", " ", 
   RowBox[{"name_", " ", ",", " ", 
    RowBox[{"pos_", "?", "vertexCoordinatesQ"}], " ", ",", " ", "edgelist_"}],
    " ", "]"}], " ", ":=", " ", 
  RowBox[{"checkForError", "[", " ", 
   RowBox[{
    RowBox[{"validEdgeQ", "[", 
     RowBox[{"pos", ",", "edgelist"}], "]"}], ",", " ", "name", ",", " ", 
    "\"\<edge\>\""}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"edgeArgumentsQ", "[", " ", 
   RowBox[{"name_", ",", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "pos_", ",", " ", 
    "edgelist_"}], "]"}], " ", ":=", " ", 
  RowBox[{"And", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"checkForError", "[", " ", 
     RowBox[{
      RowBox[{"edgeQ", "[", 
       RowBox[{"m", ",", "edgelist"}], "]"}], ",", " ", "name", ",", " ", 
      "\"\<edge\>\""}], " ", "]"}], ",", "\n", "\t", 
    RowBox[{"checkForError", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"MatrixQ", "[", "pos", "]"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Length", "[", "pos", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], ",", " ", "name",
       ",", " ", "\"\<pos\>\""}], " ", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[595]:=",ExpressionUUID->"74157408-0c66-4842-b8b7-e411e07d55a7"]
}, Closed]],

Cell[CellGroupData[{

Cell["faceArgumentsQ[]", "Subsubsection",ExpressionUUID->"f98efa5b-3c69-4077-8d5a-b51de41d58c8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"faceArgumentsQ", "[", " ", 
   RowBox[{"name_", " ", ",", " ", "facelist_"}], " ", "]"}], " ", ":=", " ", 
  
  RowBox[{"checkForError", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ArrayDepth", "[", "facelist", "]"}], "\[Equal]", "2"}], " ", "&&",
      " ", 
     RowBox[{
      RowBox[{"Min", "[", "facelist", "]"}], ">", "0"}]}], " ", ",", " ", 
    "name", ",", " ", "\"\<faceform\>\""}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"faceArgumentsQ", "[", " ", 
   RowBox[{"name_", " ", ",", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", ",", " ", "facelist_"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"checkForError", "[", " ", 
   RowBox[{
    RowBox[{"faceQ", "[", 
     RowBox[{"m", ",", "facelist"}], "]"}], ",", " ", "name", ",", " ", 
    "\"\<face\>\""}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"faceArgumentsQ", "[", " ", 
   RowBox[{"name_", " ", ",", " ", 
    RowBox[{"pos_", "?", "vertexCoordinatesQ"}], " ", ",", " ", "facelist_"}],
    " ", "]"}], " ", ":=", " ", 
  RowBox[{"checkForError", "[", " ", 
   RowBox[{
    RowBox[{"validFaceQ", "[", 
     RowBox[{"pos", ",", "facelist"}], "]"}], ",", " ", "name", ",", " ", 
    "\"\<face\>\""}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"faceArgumentsQ", "[", " ", 
   RowBox[{"name_", ",", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "pos_", ",", " ", 
    "facelist_"}], "]"}], " ", ":=", " ", 
  RowBox[{"And", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"checkForError", "[", " ", 
     RowBox[{
      RowBox[{"faceQ", "[", 
       RowBox[{"m", ",", "facelist"}], "]"}], ",", " ", "name", ",", " ", 
      "\"\<face\>\""}], " ", "]"}], ",", "\n", "\t", 
    RowBox[{"checkForError", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"MatrixQ", "[", "pos", "]"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Length", "[", "pos", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], ",", " ", "name",
       ",", " ", "\"\<pos\>\""}], " ", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[599]:=",ExpressionUUID->"4b209ac4-fa60-42af-ba35-3792b420927e"]
}, Closed]],

Cell[CellGroupData[{

Cell["tripleArgumentsQ[]", "Subsubsection",ExpressionUUID->"6bd1325f-52af-4db8-98a7-f6e93bc91db9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tripleArgumentsQ", "[", " ", 
    RowBox[{"name_", " ", ",", " ", "triplelist_"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"checkForError", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"MatrixQ", "[", 
       RowBox[{"triplelist", ",", "IntegerQ"}], "]"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"triplelist", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "3"}], " ", "&&", 
      " ", 
      RowBox[{
       RowBox[{"Min", "[", "triplelist", "]"}], ">", "0"}]}], " ", ",", " ", 
     "name", ",", " ", "\"\<tripleform\>\""}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tripleArgumentsQ", "[", " ", 
    RowBox[{"name_", " ", ",", " ", 
     RowBox[{"m_", "?", "mechanismQ"}], " ", ",", " ", "triplelist_"}], " ", 
    "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"checkForError", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"MatrixQ", "[", 
       RowBox[{"triplelist", ",", "IntegerQ"}], "]"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"triplelist", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "3"}], " ", "&&", 
      " ", 
      RowBox[{
       RowBox[{"Min", "[", "triplelist", "]"}], ">", "0"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"Max", "[", "triplelist", "]"}], "\[LessEqual]", 
       RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], " ", ",", " ", 
     "name", ",", " ", "\"\<triples\>\""}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tripleArgumentsQ", "[", " ", 
    RowBox[{"name_", " ", ",", " ", 
     RowBox[{"pos_", "?", "vertexCoordinatesQ"}], " ", ",", " ", 
     "triplelist_"}], " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"checkForError", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"MatrixQ", "[", 
       RowBox[{"triplelist", ",", "IntegerQ"}], "]"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"triplelist", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "3"}], " ", "&&", 
      " ", 
      RowBox[{
       RowBox[{"Min", "[", "triplelist", "]"}], ">", "0"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"Max", "[", "triplelist", "]"}], "\[LessEqual]", 
       RowBox[{"Length", "[", "pos", "]"}]}]}], " ", ",", " ", "name", ",", 
     " ", "\"\<triples\>\""}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"tripleArgumentsQ", "[", " ", 
   RowBox[{"name_", ",", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "pos_", ",", " ", 
    "triplelist_"}], "]"}], " ", ":=", " ", 
  RowBox[{"And", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"checkForError", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"triplelist", ",", "IntegerQ"}], "]"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"triplelist", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "3"}], " ", "&&",
        " ", 
       RowBox[{
        RowBox[{"Min", "[", "triplelist", "]"}], ">", "0"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Max", "[", "triplelist", "]"}], "\[LessEqual]", 
        RowBox[{"Length", "[", "pos", "]"}]}]}], " ", ",", " ", "name", ",", 
      " ", "\"\<triples\>\""}], " ", "]"}], ",", "\n", "\t", 
    RowBox[{"checkForError", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"MatrixQ", "[", "pos", "]"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Length", "[", "pos", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], ",", " ", "name",
       ",", " ", "\"\<pos\>\""}], " ", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[603]:=",ExpressionUUID->"0362da2d-fd61-40ec-b51e-c69ed928b0d7"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["common errors messages", "Subsection",ExpressionUUID->"0fef66b1-5c36-4263-bc92-9241a15dc681"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "$positionError", "=", 
    "\"\<Vertex positions do not correspond to mechanism.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
  "$edgeError", "=", "\"\<One or more provided edges are not valid.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "$edgeformError", "=", 
    "\"\<Edges are not of the form {{v1,v2},...}.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
  "$tripleError", "=", 
   "\"\<One or more provided triples involve vertices that are out of bounds.\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "$tripleformError", "=", 
    "\"\<Triples are not of the form {{v1,v2,v3},...}.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
  "$faceformError", "=", 
   "\"\<Faces are not of the form {{v1,...},...}.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "$faceError", "=", "\"\<One or more provided faces are not valid.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "$foldError", "=", 
    "\"\<One or more provided edges are not valid folds.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
  "$vertexError", "=", 
   "\"\<One or more vertices are not valid interior vertices.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[607]:=",ExpressionUUID->"33cc50ea-c5a6-457f-8f47-13118b690292"]
}, Closed]],

Cell[CellGroupData[{

Cell["Measuring cell functions", "Subsection",ExpressionUUID->"c6c03fa0-3229-4dd7-afc5-2a195b6c78d6"],

Cell[CellGroupData[{

Cell["displacementVector[]", "Subsubsection",ExpressionUUID->"4e2ed6ef-c949-4a3f-abd2-7e4ee843fa95"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displacementVector", "::", "pos"}], "=", "$positionError"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementVector", "::", "edgeform"}], " ", "=", " ", 
   "$edgeformError"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementVector", "::", "edges"}], "=", "$edgeError"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[616]:=",ExpressionUUID->"36f88f0a-d9f2-47b0-a1b3-bed489a613e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"displacementVector", "[", 
   RowBox[{"__", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementVector", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     "edgeList_"}], "]"}], " ", "/;", " ", 
   RowBox[{"edgeArgumentsQ", "[", 
    RowBox[{"\"\<displacementVector\>\"", ",", "positions", ",", "edgeList"}],
     "]"}]}], " ", ":=", "\n", "\t", 
  RowBox[{"displacementVectorInternal", "[", 
   RowBox[{"positions", ",", " ", "edgeList"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementVector", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "pos_", ",", " ", 
     "edgeList_"}], "]"}], " ", "/;", " ", 
   RowBox[{"edgeArgumentsQ", "[", 
    RowBox[{
    "\"\<displacementVector\>\"", ",", "m", ",", "pos", ",", "edgeList"}], 
    "]"}]}], " ", ":=", " ", "\n", "\t", 
  RowBox[{"displacementVectorInternal", "[", " ", 
   RowBox[{"pos", " ", ",", " ", "edgeList"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementVector", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "edgeList_"}], "]"}], " ", "/;",
    " ", 
   RowBox[{"edgeArgumentsQ", "[", 
    RowBox[{"\"\<displacementVector\>\"", ",", "m", ",", "edgeList"}], 
    "]"}]}], " ", ":=", "\n", "\t", 
  RowBox[{"displacementVectorInternal", "[", " ", 
   RowBox[{
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", ",", " ", "edgeList"}],
    "]"}]}]}], "Code",
 CellLabel->
  "In[619]:=",ExpressionUUID->"17b69bef-e499-4349-baa1-daabc117b244"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displacementVectorInternal", "[", 
    RowBox[{
     RowBox[{"positions_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", 
     "edgeList_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"displacementVectorCompiled", "[", "]"}], "[", 
    RowBox[{"positions", ",", "edgeList"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementVectorInternal", "[", 
    RowBox[{"positions_", ",", "edgeList_"}], "]"}], ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"flippedEdgeList", "=", 
       RowBox[{"Transpose", "[", "edgeList", "]"}]}], "}"}], ",", "\n", "\t", 
     
     RowBox[{
      RowBox[{"positions", "[", 
       RowBox[{"[", 
        RowBox[{"flippedEdgeList", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "-", 
      RowBox[{"positions", "[", 
       RowBox[{"[", 
        RowBox[{"flippedEdgeList", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"displacementVectorCompiled", "[", "]"}], ":=", 
  RowBox[{
   RowBox[{"displacementVectorCompiled", "[", "]"}], "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"positions", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"edgeList", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"flippedEdgeList", "=", 
         RowBox[{"Transpose", "[", "edgeList", "]"}]}], "}"}], ",", "\n", 
       "\t\t", 
       RowBox[{
        RowBox[{"positions", "[", 
         RowBox[{"[", 
          RowBox[{"flippedEdgeList", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "-", 
        RowBox[{"positions", "[", 
         RowBox[{"[", 
          RowBox[{"flippedEdgeList", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}], "\n", "\t", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}]}]}], "Code",
 CellLabel->
  "In[623]:=",ExpressionUUID->"b3dd01b3-e2b3-4f86-9379-bb750cf02b0f"]
}, Closed]],

Cell[CellGroupData[{

Cell["displacementLength[]", "Subsubsection",ExpressionUUID->"ee4062c6-055d-4d98-aa31-c01db58958d2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displacementLength", "::", "pos"}], "=", "$positionError"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLength", "::", "edgeform"}], " ", "=", " ", 
   "$edgeformError"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLength", "::", "edges"}], "=", "$edgeError"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[626]:=",ExpressionUUID->"949d5667-3ae5-4dec-b4c8-b878d6e06539"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"displacementLength", "[", 
   RowBox[{"__", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLength", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     "edgeList_"}], "]"}], " ", "/;", " ", 
   RowBox[{"edgeArgumentsQ", "[", 
    RowBox[{"\"\<displacementLength\>\"", ",", "positions", ",", "edgeList"}],
     "]"}]}], " ", ":=", " ", "\n", "\t", 
  RowBox[{"displacementLengthInternal", "[", 
   RowBox[{"positions", ",", " ", "edgeList"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLength", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "MatrixQ"}], ",", " ", "edgeList_"}], "]"}], 
   " ", "/;", " ", 
   RowBox[{"edgeArgumentsQ", "[", 
    RowBox[{
    "\"\<displacementLength\>\"", ",", "m", ",", "positions", ",", 
     "edgeList"}], "]"}]}], ":=", " ", "\n", "\t", 
  RowBox[{"displacementLengthInternal", "[", 
   RowBox[{"positions", ",", " ", "edgeList"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displacementLength", "[", 
     RowBox[{
      RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "edgeList_"}], "]"}], " ", 
    "/;", " ", 
    RowBox[{"edgeArgumentsQ", "[", 
     RowBox[{"\"\<displacementLength\>\"", ",", "m", ",", "edgeList"}], 
     "]"}]}], " ", ":=", "\n", "\t", 
   RowBox[{"displacementLengthInternal", "[", " ", 
    RowBox[{
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", ",", " ", 
     "edgeList"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displacementLengthInternal", "[", 
   RowBox[{
    RowBox[{"positions_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
    "edgelist_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"displacementLengthCompiled", "[", 
    RowBox[{"Length", "[", 
     RowBox[{"positions", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
   RowBox[{"positions", ",", 
    RowBox[{"ToPackedArray", "[", "edgelist", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"displacementLengthInternal", "[", 
   RowBox[{"positions_", ",", "edgelist_"}], "]"}], ":=", 
  RowBox[{"displacementLengthAnalytic", "[", 
   RowBox[{"positions", ",", 
    RowBox[{"ToPackedArray", "[", "edgelist", "]"}]}], "]"}]}]}], "Code",
 CellLabel->
  "In[629]:=",ExpressionUUID->"4bd86452-df2c-49a9-85be-4186d23886da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displacementLengthCompiled", "[", "d_Integer", "]"}], ":=", 
   RowBox[{
    RowBox[{"displacementLengthCompiled", "[", "d", "]"}], "=", "\n", 
    RowBox[{"Compile", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"edges", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "j"}], "}"}], ",", "\n", "\t\t", 
        RowBox[{"Table", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"index1", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"edges", ",", "i", ",", "1"}], "]"}]}], ",", "\n", 
              "\t\t\t", 
              RowBox[{"index2", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"edges", ",", "i", ",", "2"}], "]"}]}]}], "\n", 
             "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"pos", ",", "index1", ",", "j"}], "]"}], "-", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"pos", ",", "index2", ",", "j"}], "]"}]}], ")"}], 
                "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "d"}], "}"}]}], "]"}], "]"}]}], 
           "\n", "\t\t\t", "]"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "\n", "\t\t", 
         "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
      RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
      RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displacementLengthAnalytic", "[", 
   RowBox[{"positions_", ",", "edgeList_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"expandExpression", "[", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", " ", ".", " ", "#"}], "&"}], ")"}], " ", "/@", " ", 
     RowBox[{"displacementVectorInternal", "[", 
      RowBox[{"positions", ",", "edgeList"}], "]"}]}], "]"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[635]:=",ExpressionUUID->"47d503bb-80a8-46f4-adfd-d8e28cca427f"]
}, Closed]],

Cell[CellGroupData[{

Cell["displacementLengthSquared[]", "Subsubsection",ExpressionUUID->"6e26983a-185e-44bf-ac51-16107024bc44"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displacementLengthSquared", "::", "pos"}], "=", 
   "$positionError"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLengthSquared", "::", "edgeform"}], " ", "=", " ", 
   "$edgeformError"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLengthSquared", "::", "edges"}], "=", "$edgeError"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[637]:=",ExpressionUUID->"8d3c9eb9-8577-40c3-b2a9-67a6dbfb2bd7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"displacementLengthSquared", "[", 
   RowBox[{"__", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLengthSquared", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     "edgeList_"}], "]"}], " ", "/;", " ", 
   RowBox[{"edgeArgumentsQ", "[", 
    RowBox[{
    "\"\<displacementLengthSquared\>\"", ",", "positions", ",", "edgeList"}], 
    "]"}]}], " ", ":=", "\n", "\t", 
  RowBox[{"displacementLengthSquaredInternal", "[", 
   RowBox[{"positions", ",", " ", "edgeList"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementLengthSquared", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "positions_", ",", " ", 
     "edgeList_"}], "]"}], " ", "/;", " ", 
   RowBox[{"edgeArgumentsQ", "[", 
    RowBox[{
    "\"\<displacementLengthSquared\>\"", ",", "m", ",", " ", "positions", ",",
      "edgeList"}], "]"}]}], " ", ":=", "\n", "\t", 
  RowBox[{"displacementLengthSquaredInternal", "[", 
   RowBox[{"positions", ",", " ", "edgeList"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"displacementLengthSquared", "[", 
     RowBox[{
      RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "edgeList_"}], "]"}], " ", 
    "/;", " ", 
    RowBox[{"edgeArgumentsQ", "[", 
     RowBox[{"\"\<displacementLengthSquared\>\"", ",", "m", ",", "edgeList"}],
      "]"}]}], " ", ":=", "\n", "\t", 
   RowBox[{"displacementLengthSquaredInternal", "[", " ", 
    RowBox[{
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", ",", " ", 
     "edgeList"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displacementLengthSquaredInternal", "[", 
   RowBox[{
    RowBox[{"positions_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
    "edgelist_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"displacementLengthSquaredCompiled", "[", 
    RowBox[{"Length", "[", 
     RowBox[{"positions", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
   RowBox[{"positions", ",", 
    RowBox[{"ToPackedArray", "[", "edgelist", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"displacementLengthSquaredInternal", "[", 
   RowBox[{"positions_", ",", "edgelist_"}], "]"}], ":=", 
  RowBox[{"displacementLengthSquaredAnalytic", "[", 
   RowBox[{"positions", ",", 
    RowBox[{"ToPackedArray", "[", "edgelist", "]"}]}], "]"}]}]}], "Code",
 CellLabel->
  "In[640]:=",ExpressionUUID->"d6b7fefc-3c97-48b6-aa3b-634122a7326d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"displacementLengthSquaredCompiled", "[", "d_Integer", "]"}], ":=", 
  
  RowBox[{
   RowBox[{"displacementLengthSquaredCompiled", "[", "d", "]"}], "=", "\n", 
   RowBox[{"Compile", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"edges", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], ",", "\n", "\t\t", 
       RowBox[{"Table", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"index1", "=", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"edges", ",", "i", ",", "1"}], "]"}]}], ",", "\n", 
             "\t\t\t", 
             RowBox[{"index2", "=", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"edges", ",", "i", ",", "2"}], "]"}]}]}], "\n", 
            "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", "index1", ",", "j"}], "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", "index2", ",", "j"}], "]"}]}], ")"}], 
              "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "d"}], "}"}]}], "]"}]}], "\n", 
          "\t\t\t", "]"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "\n", "\t\t", 
        "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"displacementLengthSquaredAnalytic", "[", 
   RowBox[{"positions_", ",", "edgeList_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"expandExpression", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", " ", ".", " ", "#"}], " ", "&"}], ",", 
     RowBox[{"displacementVectorInternal", "[", 
      RowBox[{"positions", ",", "edgeList"}], "]"}]}], "]"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[646]:=",ExpressionUUID->"b38f48e1-50f8-461b-954a-16c4e8e83427"]
}, Closed]],

Cell[CellGroupData[{

Cell["turningAngle[]", "Subsubsection",ExpressionUUID->"53909e4a-e9b3-4b91-ba43-6442595c2658"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"turningAngle", "::", "pos"}], "=", "$positionError"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"turningAngle", "::", "tripleform"}], "=", "$tripleformError"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"turningAngle", "::", "triples"}], "=", "$tripleError"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[648]:=",ExpressionUUID->"a0547189-6c97-4c22-9294-333665d1f20e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"turningAngle", "[", 
   RowBox[{"p__", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"turningAngle", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     "tripleList_"}], "]"}], " ", "/;", " ", 
   RowBox[{"tripleArgumentsQ", "[", 
    RowBox[{
    "\"\<turningAngle\>\"", ",", " ", "positions", ",", " ", "tripleList"}], 
    " ", "]"}]}], " ", ":=", "\n", "\t", 
  RowBox[{"turningAngleInternal", "[", 
   RowBox[{"positions", ",", " ", "tripleList"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"turningAngle", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     "tripleList_"}], "]"}], " ", "/;", " ", 
   RowBox[{"tripleArgumentsQ", "[", 
    RowBox[{
    "\"\<turningAngle\>\"", ",", " ", "m", ",", " ", "positions", ",", " ", 
     "tripleList"}], " ", "]"}]}], " ", ":=", "\n", "\t", 
  RowBox[{"turningAngleInternal", "[", 
   RowBox[{"positions", ",", " ", "tripleList"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"turningAngle", "[", 
     RowBox[{
      RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "tripleList_"}], "]"}], 
    " ", "/;", " ", 
    RowBox[{"tripleArgumentsQ", "[", 
     RowBox[{"\"\<turningAngle\>\"", ",", " ", "m", ",", " ", "tripleList"}], 
     " ", "]"}]}], "  ", ":=", "\n", "\t", 
   RowBox[{"turningAngleInternal", "[", " ", 
    RowBox[{
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", ",", " ", 
     "tripleList"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"turningAngleInternal", "[", 
   RowBox[{
    RowBox[{"positions_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
    "tripleList_"}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"turningAngleCompiled", "[", 
    RowBox[{"Length", "[", 
     RowBox[{"positions", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
   RowBox[{
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
    RowBox[{"ToPackedArray", "[", "tripleList", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"turningAngleInternal", "[", 
   RowBox[{"positions_", ",", "tripleList_"}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"turningAngleAnalytic", "[", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"positions", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "positions", ",", 
    RowBox[{"ToPackedArray", "[", "tripleList", "]"}]}], "]"}]}]}], "Code",
 CellLabel->
  "In[651]:=",ExpressionUUID->"fe12d61c-c2b8-41f3-93cc-6879d3615206"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"turningAngleCompiled", "[", "3", "]"}], ":=", 
   RowBox[{
    RowBox[{"turningAngleCompiled", "[", "3", "]"}], "=", "\n", 
    RowBox[{"Compile", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"triplets", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",",
       "\n", "\t", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"p1x", "=", 
             RowBox[{
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
               "]"}], "-", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
               "]"}]}]}], ",", "\n", "\t\t\t", 
            RowBox[{"p1y", "=", 
             RowBox[{
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
               "]"}], "-", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
               "]"}]}]}], ",", "\n", "\t\t\t", 
            RowBox[{"p1z", "=", 
             RowBox[{
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
               "]"}], "-", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
               "]"}]}]}], ",", "\n", "\t\t\t", 
            RowBox[{"p2x", "=", 
             RowBox[{
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
               "]"}], "-", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
               "]"}]}]}], ",", "\n", "\t\t\t", 
            RowBox[{"p2y", "=", 
             RowBox[{
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
               "]"}], "-", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
               "]"}]}]}], ",", "\n", "\t\t\t", 
            RowBox[{"p2z", "=", 
             RowBox[{
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "3"}], 
               "]"}], "-", 
              RowBox[{"Compile`GetElement", "[", 
               RowBox[{"pos", ",", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
               "]"}]}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t\t", 
          RowBox[{"ArcCos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"p1x", " ", "p2x"}], "+", 
              RowBox[{"p1y", " ", "p2y"}], "+", 
              RowBox[{"p1z", " ", "p2z"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"p1x", "^", "2"}], "+", 
                RowBox[{"p1y", "^", "2"}], "+", 
                RowBox[{"p1z", "^", "2"}]}], "]"}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"p2x", "^", "2"}], "+", 
                RowBox[{"p2y", "^", "2"}], "+", 
                RowBox[{"p2z", "^", "2"}]}], "]"}]}], ")"}]}], "]"}]}], "\n", 
         "\t\t", "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
      RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
      RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"turningAngleCompiled", "[", "2", "]"}], ":=", 
  RowBox[{
   RowBox[{"turningAngleCompiled", "[", "2", "]"}], "=", "\n", 
   RowBox[{"Compile", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"triplets", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"p1x", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "1"}],
                 "]"}]}]}], ",", "\n", "\t\t\t", 
             RowBox[{"p1y", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "2"}],
                 "]"}]}]}], ",", "\n", "\t\t\t", 
             RowBox[{"p2x", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "1"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}],
                 "]"}]}]}], ",", "\n", "\t\t\t", 
             RowBox[{"p2y", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "2"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}],
                 "]"}]}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"p1x", " ", "p2x"}], " ", "+", " ", 
              RowBox[{"p1y", " ", "p2y"}]}], ",", 
             RowBox[{
              RowBox[{"p1x", " ", "p2y"}], " ", "-", " ", 
              RowBox[{"p2x", " ", "p1y"}]}]}], "]"}]}], "\n", "\t\t", "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "triplets", "]"}]}], "}"}]}], "]"}]}], "\n",
       "\t", "]"}], ",", "\n", "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[657]:=",ExpressionUUID->"c0d5a99a-fc74-4eed-a096-7b22190d0c1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
    "this", " ", "funny", " ", "construction", " ", "here", " ", "works", " ",
      "better", " ", "during", " ", "expansions", " ", "because", " ", "of", 
     " ", "the", " ", "branch", " ", "cuts", " ", "of", " ", 
     RowBox[{"ArcCos", "[", "]"}], "\n", "\n", "The", " ", "problem", " ", 
     "arises", " ", "in", " ", 
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{"ArcCos", "[", 
        RowBox[{"1", "-", 
         RowBox[{"xx", "^", "2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"xx", ",", "0", ",", "2"}], "}"}]}], "]"}], " ", "which", " ",
      "requires", " ", "the", " ", "choice", " ", "of", " ", "a", " ", 
     RowBox[{"branch", ".", " ", "This"}], " ", "last", " ", "part", "\n", 
     RowBox[{"hasn", "'"}], "t", " ", "been", " ", "solved", " ", "but", " ", 
     "at", " ", "least", " ", "the", " ", "answer", " ", "comes", " ", "out", 
     " ", 
     RowBox[{"faster", ".", " ", "The"}], " ", "rest", " ", "of", " ", "the", 
     " ", "branch", " ", "cut", " ", "issues", "\n", "are", " ", "handled", 
     " ", "automatically", " ", "in", " ", 
     RowBox[{"expandExpression", "[", "]"}]}], ",", " ", 
    RowBox[{
    "which", " ", "does", " ", "what", " ", "it", " ", "can", " ", "to", " ", 
     "make", " ", "imaginary", " ", "components", " ", 
     RowBox[{"zero", ".", "\n", "\n", "There"}], " ", "should", " ", "be", 
     " ", "a", " ", "better", " ", "way", " ", "to", " ", "handle", " ", 
     "this", " ", "but", " ", "this", " ", "seems", " ", "to", " ", "work", 
     " ", "in", " ", "most", " ", 
     RowBox[{"cases", "."}]}]}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"turningAngleAnalytic", "[", 
     RowBox[{"3", ",", "data_", ",", "tripleList_"}], "]"}], ":=", "\n", 
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"cosvectorAngle3D", "=", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"With", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"y", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"z", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ",", 
              RowBox[{"xx", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"yy", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"zz", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", "\n", 
            "\t\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", " ", "xx"}], "+", 
               RowBox[{"y", " ", "yy"}], "+", 
               RowBox[{"z", " ", "zz"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x", "^", "2"}], "+", 
                 RowBox[{"y", "^", "2"}], "+", 
                 RowBox[{"z", "^", "2"}]}], "]"}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"xx", "^", "2"}], "+", 
                 RowBox[{"yy", "^", "2"}], "+", 
                 RowBox[{"zz", "^", "2"}]}], "]"}]}], ")"}]}]}], "\n", "\t\t",
            "]"}]}], "\n", "\t", "]"}]}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"expandExpression", "@", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"pts", "=", 
              RowBox[{"data", "[", 
               RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"expandExpression", "@", 
              RowBox[{"cosvectorAngle3D", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pts", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{"pts", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"pts", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "-", 
                 RowBox[{"pts", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "]"}]}], 
           "]"}]}], ")"}], "&"}], "/@", "tripleList"}]}], "\n", "]"}]}], "\n",
    "\n", 
   RowBox[{
    RowBox[{"turningAngleAnalytic", "[", 
     RowBox[{"2", ",", "data_", ",", "tripleList_"}], "]"}], ":=", "\n", 
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"vectorAngle2D", "=", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"With", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"y", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"xx", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"yy", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\n", 
            "\t\t\t", 
            RowBox[{"ArcTan", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", " ", "xx"}], " ", "+", " ", 
               RowBox[{"y", " ", "yy"}]}], ",", 
              RowBox[{
               RowBox[{"x", " ", "yy"}], " ", "-", " ", 
               RowBox[{"xx", " ", "y"}]}]}], "]"}]}], "\t", "\n", "\t\t", 
           "]"}]}], "\n", "\t", "]"}]}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"expandExpression", "@", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"pts", "=", 
              RowBox[{"data", "[", 
               RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"vectorAngle2D", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"pts", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", 
               RowBox[{"pts", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"pts", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "-", 
               RowBox[{"pts", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "]"}]}], ")"}], 
        "&"}], "/@", "tripleList"}]}], "\n", "]"}]}]}]}]], "Code",
 CellLabel->
  "In[659]:=",ExpressionUUID->"f1f67da6-685b-4863-a6e5-867dca6d7d71"]
}, Closed]],

Cell[CellGroupData[{

Cell["normalVector[]", "Subsubsection",ExpressionUUID->"7f555d7d-65ac-41d9-b354-767dbfdea267"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"normalVector", "::", "pos"}], "=", "$positionError"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVector", "::", "faceform"}], "=", "$faceformError"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVector", "::", "face"}], "=", "$faceError"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVector", "::", "norm"}], "=", 
   "\"\<Option \\\"normalize\\\" must be either True or False.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[661]:=",ExpressionUUID->"1258f73c-5d73-4fd1-89c9-b8572c60a5f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "normalVector", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"\"\<normalize\>\"", "\[Rule]", "True"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"normalVector", "[", 
   RowBox[{"__", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVector", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", "faces_", 
     ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", "/;", " ", 
   RowBox[{"faceArgumentsQ", "[", 
    RowBox[{"\"\<normalVector\>\"", ",", "positions", ",", "faces"}], "]"}]}],
   " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"normalVectorInternal", "[", 
    RowBox[{"positions", ",", " ", "faces", ",", " ", 
     RowBox[{"OptionValue", "[", "\"\<normalize\>\"", "]"}]}], "]"}], " ", "/;",
    " ", 
   RowBox[{"checkForError", "[", " ", 
    RowBox[{
     RowBox[{"BooleanQ", "[", 
      RowBox[{"OptionValue", "[", "\"\<normalize\>\"", "]"}], "]"}], " ", ",",
      " ", "\"\<turningAngle\>\"", ",", " ", "\"\<norm\>\""}], " ", 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVector", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "faces_", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", "/;", " ", 
   RowBox[{"faceArgumentsQ", "[", 
    RowBox[{"\"\<normalVector\>\"", ",", "m", ",", "faces"}], "]"}]}], " ", ":=",
   "\n", "\t", 
  RowBox[{
   RowBox[{"normalVectorInternal", "[", 
    RowBox[{
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "faces", ",", 
     " ", 
     RowBox[{"OptionValue", "[", "\"\<normalize\>\"", "]"}]}], "]"}], " ", "/;",
    " ", 
   RowBox[{"checkForError", "[", " ", 
    RowBox[{
     RowBox[{"BooleanQ", "[", 
      RowBox[{"OptionValue", "[", "\"\<normalize\>\"", "]"}], "]"}], " ", ",",
      " ", "\"\<turningAngle\>\"", ",", " ", "\"\<norm\>\""}], " ", 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"normalVector", "[", 
     RowBox[{
      RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
      RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", "faces_", 
      ",", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", "/;", " ", 
    RowBox[{"faceArgumentsQ", "[", 
     RowBox[{
     "\"\<normalVector\>\"", ",", "m", ",", "positions", ",", "faces"}], 
     "]"}]}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"normalVectorInternal", "[", 
     RowBox[{"positions", ",", " ", "faces", ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<normalize\>\"", "]"}]}], "]"}], " ", "/;",
     " ", 
    RowBox[{"checkForError", "[", " ", 
     RowBox[{
      RowBox[{"BooleanQ", "[", 
       RowBox[{"OptionValue", "[", "\"\<normalize\>\"", "]"}], "]"}], " ", 
      ",", " ", "\"\<turningAngle\>\"", ",", " ", "\"\<norm\>\""}], " ", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"normalVectorInternal", "[", 
   RowBox[{
    RowBox[{"pos_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", 
    "faces_", ",", 
    RowBox[{"normalize_", " ", ":", " ", "True"}]}], "]"}], ":=", "\n", "\t", 
  
  RowBox[{
   RowBox[{"normalVectorCompiled", "[", 
    RowBox[{"normalize", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"pos", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "[", 
   RowBox[{"pos", ",", 
    RowBox[{"ToPackedArray", "[", 
     RowBox[{"PadRight", "[", 
      RowBox[{"faces", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "faces", "]"}], ",", "3"}], "}"}]}], "]"}], 
     "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"normalVectorInternal", "[", 
   RowBox[{"pos_", ",", "faces_", ",", 
    RowBox[{"normalize_", " ", ":", " ", "True"}]}], "]"}], ":=", "\n", "\t", 
  
  RowBox[{
   RowBox[{"normalVectorAnalytic", "[", 
    RowBox[{"normalize", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"pos", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "[", 
   RowBox[{"pos", ",", " ", 
    RowBox[{"ToPackedArray", "[", 
     RowBox[{"PadRight", "[", 
      RowBox[{"faces", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "faces", "]"}], ",", "3"}], "}"}]}], "]"}], 
     "]"}]}], "]"}]}]}], "Code",
 CellLabel->
  "In[665]:=",ExpressionUUID->"383dd186-4709-4e0c-bd04-18a0c8d007c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"normalVectorCompiled", "[", 
   RowBox[{"True", ",", "3"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"normalVectorCompiled", "[", 
    RowBox[{"True", ",", "3"}], "]"}], "=", "\n", 
   RowBox[{"Compile", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"faces", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
       RowBox[{"Table", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"With", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"y", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"z", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "3"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"xx", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"yy", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"zz", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "3"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
                "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "yy"}], " ", "z"}], "+", 
                RowBox[{"y", " ", "zz"}]}], ")"}], "/", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"xx", " ", "y"}], "-", 
                   RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"xx", " ", "z"}], "-", 
                   RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"yy", " ", "z"}], "-", 
                   RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
             ",", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xx", " ", "z"}], "-", 
                RowBox[{"x", " ", "zz"}]}], ")"}], "/", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"xx", " ", "y"}], "-", 
                   RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"xx", " ", "z"}], "-", 
                   RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"yy", " ", "z"}], "-", 
                   RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
             ",", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "xx"}], " ", "y"}], "+", 
                RowBox[{"x", " ", "yy"}]}], ")"}], "/", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"xx", " ", "y"}], "-", 
                   RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"xx", " ", "z"}], "-", 
                   RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"yy", " ", "z"}], "-", 
                   RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}]}],
             "\n", "\t\t\t", "}"}]}], "\n", "\t\t\t", "]"}], ",", "\n", 
         "\t\t\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "faces", "]"}]}], "}"}]}], "\n", "\t\t", 
        "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"normalVectorCompiled", "[", 
   RowBox[{"False", ",", "3"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"normalVectorCompiled", "[", 
    RowBox[{"False", ",", "3"}], "]"}], "=", "\n", 
   RowBox[{"Compile", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"faces", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
       RowBox[{"Table", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"With", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"y", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"z", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "3"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"xx", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"yy", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                "]"}]}]}], ",", "\n", "\t\t\t\t", 
             RowBox[{"zz", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "3"}], 
                "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
                "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "yy"}], " ", "z"}], "+", 
               RowBox[{"y", " ", "zz"}]}], ")"}], ",", "\n", "\t\t\t\t", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xx", " ", "z"}], "-", 
               RowBox[{"x", " ", "zz"}]}], ")"}], ",", "\n", "\t\t\t\t", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "xx"}], " ", "y"}], "+", 
               RowBox[{"x", " ", "yy"}]}], ")"}]}], "\n", "\t\t\t", "}"}]}], 
          "\n", "\t\t\t", "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "faces", "]"}]}], "}"}]}], "\n", "\t\t", 
        "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVectorCompiled", "[", 
    RowBox[{"True", ",", "2"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"normalVectorCompiled", "[", 
     RowBox[{"True", ",", "2"}], "]"}], "=", "\n", 
    RowBox[{"Compile", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"faces", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
        RowBox[{"Table", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"With", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"y", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"xx", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"yy", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                 "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"Sign", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "xx"}], " ", "y"}], "+", 
              RowBox[{"x", " ", "yy"}]}], "]"}]}], "\n", "\t\t\t", "]"}], ",",
           "\n", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "faces", "]"}]}], "}"}]}], "\n", "\t\t", 
         "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
      RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
      RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVectorCompiled", "[", 
    RowBox[{"False", ",", "2"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"normalVectorCompiled", "[", 
     RowBox[{"False", ",", "2"}], "]"}], "=", "\n", 
    RowBox[{"Compile", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"faces", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
        RowBox[{"Table", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"With", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"y", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"xx", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"yy", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                 "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "xx"}], " ", "y"}], "+", 
             RowBox[{"x", " ", "yy"}]}]}], "\n", "\t\t\t", "]"}], ",", "\n", 
          "\t\t\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "faces", "]"}]}], "}"}]}], "\n", "\t\t", 
         "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
      RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
      RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"normalVectorAnalytic", "[", 
    RowBox[{"True", " ", 
     RowBox[{"(*", " ", "normalized", " ", "*)"}], ",", "3", ",", " ", 
     "positions_", ",", " ", "triples_"}], "]"}], ":=", "\n", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"data", "=", "positions"}], ",", "\n", "\t", 
       RowBox[{"normalVector3D", "=", 
        RowBox[{"Function", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"With", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"y", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"z", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ",", 
              RowBox[{"xx", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"yy", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"zz", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}]}], "\n", "\t\t\t", "}"}], 
            ",", "\n", "\t\t\t", 
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "yy"}], " ", "z"}], "+", 
                 RowBox[{"y", " ", "zz"}]}], ")"}], "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"xx", " ", "y"}], "-", 
                    RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"xx", " ", "z"}], "-", 
                    RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"yy", " ", "z"}], "-", 
                    RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
              ",", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"xx", " ", "z"}], "-", 
                 RowBox[{"x", " ", "zz"}]}], ")"}], "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"xx", " ", "y"}], "-", 
                    RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"xx", " ", "z"}], "-", 
                    RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"yy", " ", "z"}], "-", 
                    RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
              ",", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "xx"}], " ", "y"}], "+", 
                 RowBox[{"x", " ", "yy"}]}], ")"}], "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"xx", " ", "y"}], "-", 
                    RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"xx", " ", "z"}], "-", 
                    RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"yy", " ", "z"}], "-", 
                    RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], 
                "]"}]}]}], "\n", "\t\t\t", "}"}]}], "\n", "\t\t", "]"}]}], 
         "\n", "\t", "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p", "=", 
           RowBox[{"data", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"expandExpression", "@", 
          RowBox[{"normalVector3D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "-", 
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], "]"}], "&"}], "/@",
       "triples"}]}], "\n", "]"}]}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"normalVectorAnalytic", "[", 
   RowBox[{"False", " ", 
    RowBox[{"(*", " ", "normalized", " ", "*)"}], ",", "3", ",", " ", 
    "positions_", ",", " ", "triples_"}], "]"}], ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"data", "=", "positions"}], ",", "\n", "\t", 
      RowBox[{"unnormalVector3D", "=", 
       RowBox[{"Function", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"With", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"y", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"z", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ",", 
             RowBox[{"xx", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"yy", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"zz", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}]}], "\n", "\t\t\t", "}"}], ",",
            "\n", "\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"-", "yy"}], " ", "z"}], "+", 
              RowBox[{"y", " ", "zz"}]}], ",", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"xx", " ", "z"}], "-", 
              RowBox[{"x", " ", "zz"}]}], ",", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "xx"}], " ", "y"}], "+", 
              RowBox[{"x", " ", "yy"}]}]}], "\n", "\t\t\t", "}"}]}], "\n", 
          "\t\t", "]"}]}], "\n", "\t", "]"}]}]}], "\n", "}"}], ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"expandExpression", "@", 
         RowBox[{"unnormalVector3D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", 
            RowBox[{"p", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"p", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], "]"}], "&"}], "/@",
      "triples"}]}], "\n", "]"}], " "}]}], "Code",
 CellLabel->
  "In[672]:=",ExpressionUUID->"457f1a6d-3d7b-48cc-9239-8e3f57cf5799"]
}, Closed]],

Cell[CellGroupData[{

Cell["faceArea[]", "Subsubsection",ExpressionUUID->"d3174cc3-0acb-46eb-8dda-1333a3ceb442"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"faceArea", "::", "pos"}], "=", "$positionError"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"faceArea", "::", "faceform"}], "=", "$faceformError"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"faceArea", "::", "face"}], "=", "$faceError"}], ";"}]}], "Code",
 CellLabel->
  "In[678]:=",ExpressionUUID->"f802bda3-d5f3-4d3e-b81c-3e76a69ab79b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tc", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"face", ",", "_Integer", ",", "1"}], "}"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"v1", "=", 
          RowBox[{"First", "[", "face", "]"}]}], ",", 
         RowBox[{"rest", "=", 
          RowBox[{"Rest", "[", "face", "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"Map", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", "v1", "}"}], ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Partition", "[", 
          RowBox[{"rest", ",", "2", ",", "1"}], "]"}]}], " ", "]"}]}], 
      "\[IndentingNewLine]", "\t", "]"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"RuntimeAttributes", "\[Rule]", 
      RowBox[{"{", "Listable", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[681]:=",ExpressionUUID->"47774888-3edf-4b60-83d4-34a5e6235fb7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"faceArea", "[", 
   RowBox[{"__", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"faceArea", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", "faces_"}], 
    "]"}], " ", "/;", " ", 
   RowBox[{"faceArgumentsQ", "[", 
    RowBox[{"\"\<faceArea\>\"", ",", "positions", ",", "faces"}], "]"}]}], 
  " ", ":=", "\n", "\t", 
  RowBox[{"faceAreaInternal", "[", 
   RowBox[{"positions", ",", " ", "faces"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"faceArea", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "faces_"}], "]"}], " ", "/;",
    " ", 
   RowBox[{"faceArgumentsQ", "[", 
    RowBox[{"\"\<faceArea\>\"", ",", "m", ",", "faces"}], "]"}]}], " ", ":=", 
  "\n", "\t", 
  RowBox[{"faceAreaInternal", "[", 
   RowBox[{
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "faces"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"faceArea", "[", 
     RowBox[{
      RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
      RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", "faces_"}],
      "]"}], " ", "/;", " ", 
    RowBox[{"faceArgumentsQ", "[", 
     RowBox[{"\"\<faceArea\>\"", ",", "m", ",", "positions", ",", "faces"}], 
     "]"}]}], " ", ":=", "\n", "\t", 
   RowBox[{"faceAreaInternal", "[", 
    RowBox[{"positions", ",", " ", "faces"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"faceAreaInternal", "[", 
   RowBox[{
    RowBox[{"pos_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", 
    "faces_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"Total", "@", 
     RowBox[{
      RowBox[{"faceAreaCompiled", "[", 
       RowBox[{"Length", "[", 
        RowBox[{"pos", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
      RowBox[{"pos", ",", " ", "#"}], "]"}]}], "&"}], " ", "/@", " ", 
   RowBox[{"tc", "[", "faces", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"faceAreaInternal", "[", 
   RowBox[{"pos_", ",", "faces_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"pos", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "@", 
       RowBox[{"faceAreaAnalytic", "[", 
        RowBox[{"d", ",", "pos", ",", " ", "#"}], "]"}]}], "&"}], " ", "/@", 
     " ", 
     RowBox[{"tc", "[", "faces", "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[682]:=",ExpressionUUID->"2a0a3d4f-9fca-4409-ad68-00efd98262eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"faceAreaCompiled", "[", "3", "]"}], ":=", 
   RowBox[{
    RowBox[{"faceAreaCompiled", "[", "3", "]"}], "=", "\n", 
    RowBox[{"Compile", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"faces", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
        RowBox[{"Table", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"With", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"y", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"z", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "3"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"xx", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"yy", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"zz", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "3"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
                 "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "yy"}], " ", "z"}], "+", 
                 RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"xx", " ", "z"}], "-", 
                 RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "xx"}], " ", "y"}], "+", 
                 RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}]}], "]"}]}], 
           "\n", "\t\t\t", "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "faces", "]"}]}], "}"}]}], "\n", "\t\t", 
         "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
      RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
      RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"faceAreaCompiled", "[", "2", "]"}], ":=", 
   RowBox[{
    RowBox[{"faceAreaCompiled", "[", "2", "]"}], "=", "\n", 
    RowBox[{"Compile", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"faces", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "i", "}"}], ",", "\n", "\t\t", 
        RowBox[{"Table", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"With", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"y", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"xx", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                 "]"}]}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"yy", "=", 
               RowBox[{
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
                 "]"}], "-", 
                RowBox[{"Compile`GetElement", "[", 
                 RowBox[{"pos", ",", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                 "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "xx"}], " ", "y"}], "+", 
              RowBox[{"x", " ", "yy"}]}], "]"}]}], "\n", "\t\t\t", "]"}], ",",
           "\n", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "faces", "]"}]}], "}"}]}], "\n", "\t\t", 
         "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
      RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
      RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"faceAreaAnalytic", "[", 
    RowBox[{"3", ",", " ", "positions_", ",", " ", "triples_"}], "]"}], ":=", 
   "\n", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"data", "=", "positions"}], ",", "\n", "\t", 
       RowBox[{"unnormalVector3D", "=", 
        RowBox[{"Function", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"With", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"y", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"z", "=", 
               RowBox[{"p1", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ",", 
              RowBox[{"xx", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"yy", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"zz", "=", 
               RowBox[{"p2", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}]}], "\n", "\t\t\t", "}"}], 
            ",", "\n", "\t\t\t", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "yy"}], " ", "z"}], "+", 
                 RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"xx", " ", "z"}], "-", 
                 RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "xx"}], " ", "y"}], "+", 
                 RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}]}], "]"}]}], 
           "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}]}], "\n", "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p", "=", 
           RowBox[{"data", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"expandExpression", "@", 
          RowBox[{"unnormalVector3D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "-", 
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], "]"}], "&"}], "/@",
       "triples"}]}], "\n", "]"}]}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"faceAreaAnalytic", "[", 
   RowBox[{"2", ",", " ", "positions_", ",", " ", "triples_"}], "]"}], ":=", 
  "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"data", "=", "positions"}], ",", "\n", "\t", 
      RowBox[{"unnormalVector3D", "=", 
       RowBox[{"Function", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"With", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"y", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"xx", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"yy", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "\n", "\t\t\t", "}"}], ",",
            "\n", "\t\t\t", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "xx"}], " ", "y"}], "+", 
               RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "]"}]}], "\n", 
          "\t\t", "]"}]}], "\n", "\t", "]"}]}]}], "\n", "}"}], ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"expandExpression", "@", 
         RowBox[{"unnormalVector3D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", 
            RowBox[{"p", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"p", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], "]"}], "&"}], "/@",
      "triples"}]}], "\n", "]"}], " "}]}], "Code",
 CellLabel->
  "In[688]:=",ExpressionUUID->"b05096c8-cccb-4a62-8f5e-3eadb3574667"]
}, Closed]],

Cell[CellGroupData[{

Cell["planarAngle[]", "Subsubsection",ExpressionUUID->"e1b81da1-dbc7-4247-b5fd-7c771260b4c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"planarAngle", "::", "pos"}], "=", "$positionError"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planarAngle", "::", "tripleform"}], "=", "$tripleformError"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planarAngle", "::", "triples"}], "=", "$tripleError"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[692]:=",ExpressionUUID->"85e56c67-2bab-445d-9c45-3aa8de10dd5c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"planarAngle", "[", 
   RowBox[{"__", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planarAngle", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     "tripleList_"}], "]"}], " ", "/;", " ", 
   RowBox[{"tripleArgumentsQ", "[", 
    RowBox[{
    "\"\<planarAngle\>\"", ",", " ", "positions", ",", " ", "tripleList"}], 
    "]"}]}], " ", ":=", "\n", "\t", 
  RowBox[{"planarAngleInternal", "[", 
   RowBox[{"positions", ",", " ", "tripleList"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planarAngle", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "positions_", ",", " ", 
     "tripleList_"}], "]"}], " ", "/;", " ", 
   RowBox[{"tripleArgumentsQ", "[", 
    RowBox[{
    "\"\<planarAngle\>\"", ",", " ", "m", ",", " ", "positions", ",", " ", 
     "tripleList"}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{"planarAngleInternal", "[", 
   RowBox[{"positions", ",", " ", "tripleList"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planarAngle", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "tripleList_"}], " ", "]"}],
    " ", "/;", " ", 
   RowBox[{"tripleArgumentsQ", "[", 
    RowBox[{"\"\<planarAngle\>\"", ",", " ", "m", ",", " ", "tripleList"}], 
    "]"}]}], " ", ":=", "\n", "\t", 
  RowBox[{"planarAngleInternal", "[", 
   RowBox[{
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "tripleList"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[695]:=",ExpressionUUID->"39e4fbce-94cb-4ec1-909a-9be6211b734a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"planarAngleInternal", "[", 
   RowBox[{
    RowBox[{"pos_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", 
    "triples_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"planarAngleCompiled", "[", 
    RowBox[{"Length", "[", 
     RowBox[{"pos", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
   RowBox[{"pos", ",", "triples"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"planarAngleInternal", "[", 
   RowBox[{"pos_", ",", "triples_"}], "]"}], " ", ":=", " ", 
  RowBox[{"planarAngleAnalytic", "[", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"pos", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "pos", ",", "triples"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[699]:=",ExpressionUUID->"c161f406-b316-4337-bc62-09fbc7236f0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"planarAngleCompiled", "[", "3", "]"}], ":=", 
  RowBox[{
   RowBox[{"planarAngleCompiled", "[", "3", "]"}], "=", "\n", 
   RowBox[{"Compile", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"triplets", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
     
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "i", "}"}], ",", "\n", "\t", 
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "1"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"y", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "2"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"z", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "3"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "3"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"xx", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "1"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"yy", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "2"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"zz", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "3"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "3"}],
                 "]"}]}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", " ", "xx"}], "+", 
              RowBox[{"y", " ", "yy"}], "+", 
              RowBox[{"z", " ", "zz"}]}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"xx", " ", "y"}], "-", 
                  RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"xx", " ", "z"}], "-", 
                  RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"yy", " ", "z"}], "-", 
                  RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
            "]"}]}], "\n", "\t\t", "]"}], ",", "\n", "\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "triplets", "]"}]}], "}"}]}], "\n", "\t", 
        "]"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"planarAngleCompiled", "[", "2", "]"}], ":=", 
  RowBox[{
   RowBox[{"planarAngleCompiled", "[", "2", "]"}], "=", 
   RowBox[{"Compile", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"triplets", ",", "_Real", ",", "2"}], "}"}]}], "}"}], ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "i", "}"}], ",", "\n", "\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "1"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"y", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "1"}], "]"}], ",", "2"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"xx", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "1"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "1"}],
                 "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{"yy", "=", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "3"}], "]"}], ",", "2"}],
                 "]"}], "-", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"triplets", ",", "i", ",", "2"}], "]"}], ",", "2"}],
                 "]"}]}]}]}], "\n", "\t", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", " ", "xx"}], "+", 
              RowBox[{"y", " ", "yy"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xx", " ", "y"}], "-", 
                RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}]}], "]"}]}], 
          "\n", "\t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "triplets", "]"}]}], "}"}]}], "\n", "\t", 
        "]"}]}], "\n", "]"}], ",", "\n", "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[701]:=",ExpressionUUID->"6969d9a9-f29e-49b1-bd28-24b1e249bfb5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"planarAngleAnalytic", "[", 
   RowBox[{"3", ",", "positions_", ",", "tripleList_"}], "]"}], ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"data", "=", "positions"}], ",", "\n", "\t", 
      RowBox[{"angleFunc", "=", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"With", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"y", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"z", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ",", 
             RowBox[{"xx", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"yy", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"zz", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", " ", "xx"}], "+", 
              RowBox[{"y", " ", "yy"}], "+", 
              RowBox[{"z", " ", "zz"}]}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"xx", " ", "y"}], "-", 
                  RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"xx", " ", "z"}], "-", 
                  RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"yy", " ", "z"}], "-", 
                  RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
            "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}]}], "\n", 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pts", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"expandExpression", "@", 
         RowBox[{"angleFunc", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pts", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"pts", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"pts", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", 
            RowBox[{"pts", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], "]"}], "&"}], "/@",
      "tripleList"}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[703]:=",ExpressionUUID->"6e37a092-e53a-4e96-9b44-eafeab8280a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"planarAngleAnalytic", "[", 
   RowBox[{"2", ",", "positions_", ",", "tripleList_"}], "]"}], ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"data", "=", "positions"}], ",", "\n", "\t", 
      RowBox[{"angleFunc", "=", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2"}], "}"}], ",", "\n", "\t\t", 
         RowBox[{"With", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"y", "=", 
              RowBox[{"p1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"xx", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"yy", "=", 
              RowBox[{"p2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", " ", "xx"}], "+", 
              RowBox[{"y", " ", "yy"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xx", " ", "y"}], "-", 
                RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}]}], "]"}]}], 
          "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}]}], "\n", "}"}], ",", 
    "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pts", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"expandExpression", "@", 
         RowBox[{"angleFunc", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pts", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"pts", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"pts", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", 
            RowBox[{"pts", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], "]"}], "&"}], "/@",
      "tripleList"}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[704]:=",ExpressionUUID->"eefa33f0-9487-482a-a9f9-75992e7dc134"]
}, Closed]],

Cell[CellGroupData[{

Cell["foldAngle[]", "Subsubsection",ExpressionUUID->"43186013-f54c-4925-b767-89869d60a75b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"foldAngle", "::", "pos"}], "=", "$positionError"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"foldAngle", "::", "folds"}], "=", "$foldError"}], ";"}]}], "Code",\

 CellLabel->
  "In[705]:=",ExpressionUUID->"b80bf0d1-baf4-427d-be8d-d95034e606a0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"foldAngle", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"_", "?", "vertexCoordinatesQ"}], ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"foldAngle", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"foldAngle", "[", " ", 
     RowBox[{
      RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "edgeList_"}], " ", "]"}], 
    " ", "/;", " ", 
    RowBox[{"foldArgumentsQ", "[", 
     RowBox[{"\"\<foldAngle\>\"", ",", "m", ",", "edgeList"}], "]"}]}], " ", ":=",
    "\n", "\t", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"embeddingDimension", "[", "m", "]"}], "\[Equal]", "2"}], ",", 
     "\n", "\t\t", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"Length", "[", "edgeList", "]"}]}], "]"}], ",", "\n", "\t\t", 
     RowBox[{"foldAngleInternal", "[", 
      RowBox[{"m", ",", " ", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
       RowBox[{"listQuadruples", "[", 
        RowBox[{"m", ",", "edgeList"}], "]"}]}], " ", "]"}]}], "\n", "\t", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"foldAngle", "[", " ", 
     RowBox[{
      RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
      RowBox[{"pos_", "?", "MatrixQ"}], ",", " ", "edgeList_"}], " ", "]"}], 
    " ", "/;", " ", 
    RowBox[{"foldArgumentsQ", "[", 
     RowBox[{
     "\"\<foldAngle\>\"", ",", "m", ",", " ", "pos", ",", " ", "edgeList"}], 
     "]"}]}], " ", ":=", "\n", "\t", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"pos", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}], ",", "\n", 
     "\t\t", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"Length", "[", "edgeList", "]"}]}], "]"}], ",", "\n", "\t\t", 
     RowBox[{"foldAngleInternal", "[", 
      RowBox[{"m", ",", " ", "pos", ",", " ", 
       RowBox[{"listQuadruples", "[", 
        RowBox[{"m", ",", "edgeList"}], "]"}]}], " ", "]"}]}], "\n", "\t", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"foldAngle", "[", " ", 
     RowBox[{
      RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
      RowBox[{"positions", " ", ":", " ", 
       RowBox[{"{", 
        RowBox[{"__", "?", "vertexCoordinatesQ"}], "}"}]}], ",", " ", 
      "edgeList_"}], " ", "]"}], " ", "/;", " ", 
    RowBox[{"foldArgumentsQ", "[", 
     RowBox[{"\"\<foldAngle\>\"", ",", "m", ",", "edgeList"}], "]"}]}], " ", ":=",
    "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"quadruples", " ", "=", " ", 
       RowBox[{"listQuadruples", "[", 
        RowBox[{"m", ",", "edgeList"}], "]"}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"vertexCoordinatesQ", "[", 
          RowBox[{"m", ",", "#"}], "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "2"}], ",", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"Length", "[", "edgeList", "]"}]}], "]"}], ",", " ", 
           RowBox[{"foldAngleInternal", "[", 
            RowBox[{"m", ",", "#", ",", "quadruples"}], "]"}]}], "]"}], ",", 
         "\n", "\t\t\t", "$Failed"}], "\n", "\t\t", "]"}], "&"}], " ", "/@", 
      " ", "positions"}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"listQuadruples", "[", 
   RowBox[{"m_", ",", "edgelist_"}], "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"faces", "=", 
      RowBox[{
       RowBox[{"connectivity", "[", 
        RowBox[{"m", ",", 
         RowBox[{"\"\<edges\>\"", "\[Rule]", "\"\<ordered faces\>\""}]}], 
        "]"}], "[", 
       RowBox[{"[", " ", 
        RowBox[{"listEdges", "[", 
         RowBox[{"m", ",", " ", "edgelist"}], "]"}], " ", "]"}], "]"}]}], 
     "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"ToPackedArray", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], "==", "2"}], ",", "\n", "\t\t\t", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"Last", "@", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "0", ",", "0"}], 
          "}"}]}], "\n", "\t\t", "]"}], "&"}], "/@", "faces"}], "\n", "\t", 
     "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[707]:=",ExpressionUUID->"105425f9-6faa-403b-bf41-cd3b92587bc2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"foldAngleInternal", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
    "quadruples_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"foldAngleCompiled", "[", "]"}], "[", 
   RowBox[{"positions", ",", "quadruples"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"foldAngleInternal", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "positions_", ",", " ", 
     "quadruples_"}], "]"}], ":=", 
   RowBox[{"foldAngleAnalytic", "[", 
    RowBox[{"positions", ",", "quadruples"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"foldAngleCompiled", "[", "]"}], ":=", 
   RowBox[{
    RowBox[{"foldAngleCompiled", "[", "]"}], "=", "\n", 
    RowBox[{"Compile", "[", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"faces", ",", "_Integer", ",", "2"}], "}"}]}], "}"}], ",", 
      "\n", 
      RowBox[{"Table", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Compile`GetElement", "[", 
            RowBox[{"faces", ",", "i", ",", "3"}], "]"}], "==", "0"}], ",", 
          "\n", "\t", "0", ",", "\n", "\t", 
          RowBox[{"With", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t", 
             RowBox[{
              RowBox[{"p1x", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "1"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p1y", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "2"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p1z", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "1"}], "]"}], ",", "3"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p2x", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "1"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p2y", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "2"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p2z", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "2"}], "]"}], ",", "3"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p3x", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "1"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p3y", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "2"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p3z", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "3"}], "]"}], ",", "3"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p4x", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "4"}], "]"}], ",", "1"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p4y", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "4"}], "]"}], ",", "2"}], 
                "]"}]}], ",", "\n", "\t\t", 
              RowBox[{"p4z", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"faces", ",", "i", ",", "4"}], "]"}], ",", "3"}], 
                "]"}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t", 
            RowBox[{"ArcTan", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p1y", " ", 
                   RowBox[{"(", 
                    RowBox[{"p2x", "-", "p3x"}], ")"}]}], "+", 
                  RowBox[{"p2y", " ", "p3x"}], "-", 
                  RowBox[{"p2x", " ", "p3y"}], "+", 
                  RowBox[{"p1x", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p2y"}], "+", "p3y"}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "p2y"}], " ", "p4x"}], "+", 
                  RowBox[{"p1y", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p2x"}], "+", "p4x"}], ")"}]}], "+", 
                  RowBox[{"p1x", " ", 
                   RowBox[{"(", 
                    RowBox[{"p2y", "-", "p4y"}], ")"}]}], "+", 
                  RowBox[{"p2x", " ", "p4y"}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p1z", " ", 
                   RowBox[{"(", 
                    RowBox[{"p2x", "-", "p3x"}], ")"}]}], "+", 
                  RowBox[{"p2z", " ", "p3x"}], "-", 
                  RowBox[{"p2x", " ", "p3z"}], "+", 
                  RowBox[{"p1x", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p2z"}], "+", "p3z"}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "p2z"}], " ", "p4x"}], "+", 
                  RowBox[{"p1z", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p2x"}], "+", "p4x"}], ")"}]}], "+", 
                  RowBox[{"p1x", " ", 
                   RowBox[{"(", 
                    RowBox[{"p2z", "-", "p4z"}], ")"}]}], "+", 
                  RowBox[{"p2x", " ", "p4z"}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p1z", " ", 
                   RowBox[{"(", 
                    RowBox[{"p2y", "-", "p3y"}], ")"}]}], "+", 
                  RowBox[{"p2z", " ", "p3y"}], "-", 
                  RowBox[{"p2y", " ", "p3z"}], "+", 
                  RowBox[{"p1y", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p2z"}], "+", "p3z"}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "p2z"}], " ", "p4y"}], "+", 
                  RowBox[{"p1z", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p2y"}], "+", "p4y"}], ")"}]}], "+", 
                  RowBox[{"p1y", " ", 
                   RowBox[{"(", 
                    RowBox[{"p2z", "-", "p4z"}], ")"}]}], "+", 
                  RowBox[{"p2y", " ", "p4z"}]}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"p1x", "-", "p2x"}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"p1y", "-", "p2y"}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"p1z", "-", "p2z"}], ")"}], "^", "2"}]}], "]"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "p1x"}], " ", "p2z", " ", "p3y"}], "+", 
                 RowBox[{"p1x", " ", "p2y", " ", "p3z"}], "+", 
                 RowBox[{"p2z", " ", "p3y", " ", "p4x"}], "-", 
                 RowBox[{"p2y", " ", "p3z", " ", "p4x"}], "+", 
                 RowBox[{"p1x", " ", "p2z", " ", "p4y"}], "-", 
                 RowBox[{"p2z", " ", "p3x", " ", "p4y"}], "-", 
                 RowBox[{"p1x", " ", "p3z", " ", "p4y"}], "+", 
                 RowBox[{"p2x", " ", "p3z", " ", "p4y"}], "+", 
                 RowBox[{"p1z", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p2x", " ", "p3y"}], "-", 
                    RowBox[{"p3y", " ", "p4x"}], "+", 
                    RowBox[{"p2y", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "p3x"}], "+", "p4x"}], ")"}]}], "-", 
                    RowBox[{"p2x", " ", "p4y"}], "+", 
                    RowBox[{"p3x", " ", "p4y"}]}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "p1x"}], " ", "p2y"}], "+", 
                    RowBox[{"p2y", " ", "p3x"}], "+", 
                    RowBox[{"p1x", " ", "p3y"}], "-", 
                    RowBox[{"p2x", " ", "p3y"}]}], ")"}], " ", "p4z"}], "+", 
                 RowBox[{"p1y", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p2z", " ", "p3x"}], "-", 
                    RowBox[{"p2x", " ", "p3z"}], "-", 
                    RowBox[{"p2z", " ", "p4x"}], "+", 
                    RowBox[{"p3z", " ", "p4x"}], "+", 
                    RowBox[{"p2x", " ", "p4z"}], "-", 
                    RowBox[{"p3x", " ", "p4z"}]}], ")"}]}]}], ")"}]}]}], 
             "]"}]}], "\n", "\t", "]"}]}], "]"}], ",", "\n", "\t", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "faces", "]"}]}], "}"}]}], "\n", "]"}], ",", 
      "\n", "\t", 
      RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
      RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"foldAngleAnalytic", "[", 
   RowBox[{"positions_", ",", "quadrupleList_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"With", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"p1x", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p1y", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p1z", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], "]"}]}], ",", 
        "\n", "\t", 
        RowBox[{"p2x", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p2y", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p2z", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "3"}], "]"}], "]"}]}], ",", 
        "\n", "\t", 
        RowBox[{"p3x", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p3y", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p3z", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "3"}], "]"}], "]"}]}], ",", 
        "\n", "\t", 
        RowBox[{"p4x", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p4y", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
        
        RowBox[{"p4z", "=", 
         RowBox[{"positions", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", "3"}], "]"}], "]"}]}]}], 
       "\n", "\t", "}"}], ",", "\n", "\t", 
      RowBox[{"expandExpression", "@", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p1y", " ", 
              RowBox[{"(", 
               RowBox[{"p2x", "-", "p3x"}], ")"}]}], "+", 
             RowBox[{"p2y", " ", "p3x"}], "-", 
             RowBox[{"p2x", " ", "p3y"}], "+", 
             RowBox[{"p1x", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "p2y"}], "+", "p3y"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "p2y"}], " ", "p4x"}], "+", 
             RowBox[{"p1y", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "p2x"}], "+", "p4x"}], ")"}]}], "+", 
             RowBox[{"p1x", " ", 
              RowBox[{"(", 
               RowBox[{"p2y", "-", "p4y"}], ")"}]}], "+", 
             RowBox[{"p2x", " ", "p4y"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p1z", " ", 
              RowBox[{"(", 
               RowBox[{"p2x", "-", "p3x"}], ")"}]}], "+", 
             RowBox[{"p2z", " ", "p3x"}], "-", 
             RowBox[{"p2x", " ", "p3z"}], "+", 
             RowBox[{"p1x", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "p2z"}], "+", "p3z"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "p2z"}], " ", "p4x"}], "+", 
             RowBox[{"p1z", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "p2x"}], "+", "p4x"}], ")"}]}], "+", 
             RowBox[{"p1x", " ", 
              RowBox[{"(", 
               RowBox[{"p2z", "-", "p4z"}], ")"}]}], "+", 
             RowBox[{"p2x", " ", "p4z"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p1z", " ", 
              RowBox[{"(", 
               RowBox[{"p2y", "-", "p3y"}], ")"}]}], "+", 
             RowBox[{"p2z", " ", "p3y"}], "-", 
             RowBox[{"p2y", " ", "p3z"}], "+", 
             RowBox[{"p1y", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "p2z"}], "+", "p3z"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "p2z"}], " ", "p4y"}], "+", 
             RowBox[{"p1z", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "p2y"}], "+", "p4y"}], ")"}]}], "+", 
             RowBox[{"p1y", " ", 
              RowBox[{"(", 
               RowBox[{"p2z", "-", "p4z"}], ")"}]}], "+", 
             RowBox[{"p2y", " ", "p4z"}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p1x", "-", "p2x"}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p1y", "-", "p2y"}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p1z", "-", "p2z"}], ")"}], "^", "2"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "p1x"}], " ", "p2z", " ", "p3y"}], "+", 
            RowBox[{"p1x", " ", "p2y", " ", "p3z"}], "+", 
            RowBox[{"p2z", " ", "p3y", " ", "p4x"}], "-", 
            RowBox[{"p2y", " ", "p3z", " ", "p4x"}], "+", 
            RowBox[{"p1x", " ", "p2z", " ", "p4y"}], "-", 
            RowBox[{"p2z", " ", "p3x", " ", "p4y"}], "-", 
            RowBox[{"p1x", " ", "p3z", " ", "p4y"}], "+", 
            RowBox[{"p2x", " ", "p3z", " ", "p4y"}], "+", 
            RowBox[{"p1z", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p2x", " ", "p3y"}], "-", 
               RowBox[{"p3y", " ", "p4x"}], "+", 
               RowBox[{"p2y", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "p3x"}], "+", "p4x"}], ")"}]}], "-", 
               RowBox[{"p2x", " ", "p4y"}], "+", 
               RowBox[{"p3x", " ", "p4y"}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "p1x"}], " ", "p2y"}], "+", 
               RowBox[{"p2y", " ", "p3x"}], "+", 
               RowBox[{"p1x", " ", "p3y"}], "-", 
               RowBox[{"p2x", " ", "p3y"}]}], ")"}], " ", "p4z"}], "+", 
            RowBox[{"p1y", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p2z", " ", "p3x"}], "-", 
               RowBox[{"p2x", " ", "p3z"}], "-", 
               RowBox[{"p2z", " ", "p4x"}], "+", 
               RowBox[{"p3z", " ", "p4x"}], "+", 
               RowBox[{"p2x", " ", "p4z"}], "-", 
               RowBox[{"p3x", " ", "p4z"}]}], ")"}]}]}], ")"}]}]}], "]"}]}]}],
      "\n", "\t", "]"}], "&"}], "/@", "quadrupleList"}]}]}], "Code",
 CellLabel->
  "In[713]:=",ExpressionUUID->"af3fed59-5075-43ec-8a7e-0533187360f0"]
}, Closed]],

Cell[CellGroupData[{

Cell["gaussianCurvature[]", "Subsubsection",ExpressionUUID->"0f8d50f1-afcc-44d1-b384-6e361cf93302"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gaussianCurvature", "::", "pos"}], "=", "$positionError"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gaussianCurvature", "::", "vertices"}], "=", "$vertexError"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[717]:=",ExpressionUUID->"e3cc1134-2603-4b48-a8e9-658a0ea43da5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gaussianCurvature", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"_", "?", "vertexCoordinatesQ"}], ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gaussianCurvature", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"{", "}"}]}], " ", "]"}], " ", ":=", 
   RowBox[{"{", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gaussianCurvature", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "vertexList_"}], "]"}], " ",
    "/;", " ", 
   RowBox[{"vertexArgumentsQ", "[", 
    RowBox[{"\"\<gaussianCurvature\>\"", ",", "m", ",", "vertexList"}], 
    "]"}]}], " ", ":=", "\n", "\t", 
  RowBox[{"gaussianCurvatureInternal", "[", 
   RowBox[{"m", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "vertexList"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gaussianCurvature", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "positions_", ",", " ", 
     "vertexList_"}], "]"}], " ", "/;", " ", 
   RowBox[{"vertexArgumentsQ", "[", 
    RowBox[{
    "\"\<gaussianCurvature\>\"", ",", "m", ",", "positions", ",", 
     "vertexList"}], "]"}]}], ":=", "\n", "\t", 
  RowBox[{"gaussianCurvatureInternal", "[", 
   RowBox[{"m", ",", " ", "positions", ",", " ", "vertexList"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[719]:=",ExpressionUUID->"c2dc76eb-f1f2-4627-94b2-322d01f7c229"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gaussianCurvatureInternal", "[", 
    RowBox[{"m_", ",", " ", "pos_", ",", "vertexlist_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"Length", "[", "vertexlist", "]"}]}], "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"embeddingDimension", "[", "m", "]"}], "\[Equal]", "2"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"gaussianCurvatureInternal", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"pos_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "MachineRealQ"}], "]"}], "&"}], ")"}]}], ",", 
    "vertexlist_"}], "]"}], ":=", "\n", "\t\t", 
  RowBox[{
   RowBox[{"gaussianCurvatureCompiled", "[", "]"}], "[", 
   RowBox[{"pos", ",", "\n", "\t\t\t", 
    RowBox[{"ToPackedArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PadRight", "[", 
        RowBox[{"connectivity", "[", 
         RowBox[{"m", ",", 
          RowBox[{"\"\<vertices\>\"", "->", "\"\<ordered faces\>\""}]}], 
         "]"}], "]"}], "[", 
       RowBox[{"[", "vertexlist", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", 
        RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], "]"}]}], "\n", "\t", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"gaussianCurvatureInternal", "[", 
   RowBox[{"m_", ",", " ", "pos_", ",", "vertexlist_"}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"gaussianCurvatureAnalytic", "[", "\n", "\t\t", 
   RowBox[{"pos", ",", "\n", "\t\t", 
    RowBox[{"ToPackedArray", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"RotateRight", ",", " ", 
        RowBox[{
         RowBox[{"connectivity", "[", 
          RowBox[{"m", ",", " ", 
           RowBox[{
           "\"\<vertices\>\"", " ", "\[Rule]", " ", 
            "\"\<ordered faces\>\""}]}], "]"}], "[", 
         RowBox[{"[", "vertexlist", "]"}], "]"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", 
        RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], "\n", "\t\t", "]"}]}], "\n",
    "\t", "]"}]}]}], "Code",
 CellLabel->
  "In[723]:=",ExpressionUUID->"983639bb-e7ad-4ed8-a16b-1a1e153cc30e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gaussianCurvatureCompiled", "[", "]"}], ":=", 
  RowBox[{
   RowBox[{"gaussianCurvatureCompiled", "[", "]"}], "=", "\n", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "_Real", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"triplets", ",", "_Integer", ",", "3"}], "}"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "Pi"}], "-", 
          RowBox[{"Sum", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}], "==",
                "0"}], ",", "\n", "\t\t\t", "0", ",", "\n", "\t\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"x", "=", 
                   RowBox[{
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "3"}], "]"}],
                     ",", "1"}], "]"}], "-", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}],
                     ",", "1"}], "]"}]}]}], ",", "\n", "\t\t\t", 
                  RowBox[{"y", "=", 
                   RowBox[{
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "3"}], "]"}],
                     ",", "2"}], "]"}], "-", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}],
                     ",", "2"}], "]"}]}]}], ",", "\n", "\t\t\t", 
                  RowBox[{"z", "=", 
                   RowBox[{
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "3"}], "]"}],
                     ",", "3"}], "]"}], "-", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}],
                     ",", "3"}], "]"}]}]}], ",", "\n", "\t\t\t", 
                  RowBox[{"xx", "=", 
                   RowBox[{
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "2"}], "]"}],
                     ",", "1"}], "]"}], "-", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}],
                     ",", "1"}], "]"}]}]}], ",", "\n", "\t\t\t", 
                  RowBox[{"yy", "=", 
                   RowBox[{
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "2"}], "]"}],
                     ",", "2"}], "]"}], "-", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}],
                     ",", "2"}], "]"}]}]}], ",", "\n", "\t\t\t", 
                  RowBox[{"zz", "=", 
                   RowBox[{
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "2"}], "]"}],
                     ",", "3"}], "]"}], "-", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{"triplets", ",", "j", ",", "i", ",", "1"}], "]"}],
                     ",", "3"}], "]"}]}]}]}], "\n", "\t\t\t", "}"}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", " ", "xx"}], "+", 
                   RowBox[{"y", " ", "yy"}], "+", 
                   RowBox[{"z", " ", "zz"}]}], ",", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xx", " ", "y"}], "-", 
                    RowBox[{"x", " ", "yy"}]}], ")"}], "^", "2"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xx", " ", "z"}], "-", 
                    RowBox[{"x", " ", "zz"}]}], ")"}], "^", "2"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"yy", " ", "z"}], "-", 
                    RowBox[{"y", " ", "zz"}]}], ")"}], "^", "2"}]}], "]"}]}], 
                 "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}], ",", 
            "\n", "\t\t", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"triplets", ",", "j"}], "]"}], "]"}]}], "}"}]}], 
           RowBox[{"(*", " ", "Sum", " ", "*)"}], "\n", "\t", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "triplets", "]"}]}], "}"}]}], "]"}]}], " ", 
      
      RowBox[{"(*", " ", "Table", " ", "*)"}], "\n", "\t", "]"}], ",", "\n", 
     "\t", 
     RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", "\n", "\t", 
     RowBox[{"CompilationTarget", "->", "$compilationTarget"}]}], "\n", 
    "]"}]}]}]], "Code",
 CellLabel->
  "In[726]:=",ExpressionUUID->"4da8bcf9-f7fc-4baa-a7fe-2d419e79ddc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gaussianCurvatureAnalytic", "[", 
   RowBox[{"pos_", ",", 
    RowBox[{"{", 
     RowBox[{"triples__", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], "}"}]}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"expandExpression", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "Pi"}], "-", 
        RowBox[{"Total", "[", 
         RowBox[{"planarAngle", "[", 
          RowBox[{"pos", ",", "#"}], "]"}], "]"}]}], ")"}]}], ")"}], "&"}], "/@", 
   RowBox[{"{", "triples", "}"}]}]}]], "Code",
 CellLabel->
  "In[727]:=",ExpressionUUID->"856f48e0-31e2-4ceb-a592-f7ee2ce95867"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["global geometry functions", "Subsection",ExpressionUUID->"cb0705f5-6ee7-42ce-bd98-337ea66e1bcf"],

Cell[CellGroupData[{

Cell["FindGeometricTransform[], alignMechanism[]", "Subsubsection",ExpressionUUID->"936edf7f-020a-47a7-9d2d-d59ca5691bea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FindGeometricTransform", "[", 
   RowBox[{"pts_", ",", " ", "m_origami", ",", " ", "r___"}], " ", "]"}], " ",
   "^:=", " ", 
  RowBox[{"FindGeometricTransform", "[", " ", 
   RowBox[{"pts", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindGeometricTransform", "[", 
    RowBox[{"m1_origami", ",", " ", "m2_origami", ",", " ", "r___"}], "]"}], 
   " ", "^:=", " ", 
   RowBox[{"FindGeometricTransform", "[", " ", 
    RowBox[{
     RowBox[{"m1", "[", "\"\<positions\>\"", "]"}], ",", " ", 
     RowBox[{"m2", "[", "\"\<positions\>\"", "]"}], ",", " ", "r"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"FindGeometricTransform", "[", 
   RowBox[{"pts_", ",", " ", "m_framework", ",", " ", "r___"}], " ", "]"}], 
  " ", "^:=", " ", 
  RowBox[{"FindGeometricTransform", "[", " ", 
   RowBox[{"pts", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"FindGeometricTransform", "[", 
   RowBox[{"m1_framework", ",", " ", "m2_framework", ",", " ", "r___"}], 
   "]"}], " ", "^:=", " ", 
  RowBox[{"FindGeometricTransform", "[", " ", 
   RowBox[{
    RowBox[{"m1", "[", "\"\<positions\>\"", "]"}], ",", " ", 
    RowBox[{"m2", "[", "\"\<positions\>\"", "]"}], ",", " ", "r"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[728]:=",ExpressionUUID->"8d08c533-5aca-4c92-9115-3251c5110c59"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "alignMechanism", "]"}], "=", 
    RowBox[{"Options", "[", "FindGeometricTransform", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"alignMechanism", "[", " ", 
   RowBox[{"from_", ",", " ", "to_", ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
  "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fromPos", " ", "=", " ", 
       RowBox[{"convertToAlign", "[", " ", "from", " ", "]"}]}], ",", " ", 
      RowBox[{"toPos", " ", "=", " ", 
       RowBox[{"convertToAlign", "[", " ", "to", " ", "]"}]}]}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"transform", " ", "=", " ", 
         RowBox[{"alignTransform", "[", " ", 
          RowBox[{"fromPos", ",", " ", "toPos", ",", " ", 
           RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], " ", "}"}], ",", "\n", 
       "\t\t", 
       RowBox[{
        RowBox[{"transform", "[", " ", 
         RowBox[{"toPos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", "/;", " ", 
        RowBox[{"transform", " ", "=!=", " ", "$Failed"}]}]}], "\n", "\t", 
      "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{"fromPos", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
      RowBox[{"toPos", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[732]:=",ExpressionUUID->"414a48f8-0460-4f16-beb3-5304ae31782f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"convert", " ", "the", " ", "arguments", " ", "appropriately"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"convertToAlign", "[", " ", 
     RowBox[{"m1_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"m1", "[", "\"\<positions\>\"", "]"}], ",", " ", "All"}], 
     "}"}]}], "\n", 
   RowBox[{
    RowBox[{"convertToAlign", "[", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"m1_", "?", "mechanismQ"}], " ", ",", " ", 
       RowBox[{"v", " ", ":", " ", 
        RowBox[{"{", "__Integer", "}"}]}]}], " ", "}"}], " ", "]"}], " ", ":=",
     " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"m1", "[", "\"\<positions\>\"", "]"}], ",", " ", "v"}], "}"}], 
     " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Max", "[", "v", "]"}], " ", "\[LessEqual]", " ", 
       RowBox[{"m1", "[", "\"\<VertexNumber\>\"", "]"}]}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"Min", "[", "v", "]"}], ">", "0"}]}]}]}], "\n", 
   RowBox[{
    RowBox[{"convertToAlign", "[", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"m1_", "?", "mechanismQ"}], ",", " ", "v_"}], " ", "}"}], " ", 
     "]"}], " ", ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"alignMechanism", "::", "oob"}], ",", " ", "v"}], "]"}], ";", 
      " ", "$Failed"}], " ", ")"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"convertToAlign", "[", " ", 
     RowBox[{"pos_", "?", "numericCoordinatesQ"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"pos", ",", "All"}], "}"}]}], "\n", 
   RowBox[{
    RowBox[{"convertToAlign", "[", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pos_", "?", "numericCoordinatesQ"}], ",", " ", 
       RowBox[{"v", " ", ":", " ", 
        RowBox[{"{", "__Integer", "}"}]}]}], " ", "}"}], " ", "]"}], " ", ":=",
     " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pos", ",", "v"}], "}"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Max", "[", "v", "]"}], " ", "\[LessEqual]", " ", 
       RowBox[{"Length", "[", "pos", "]"}]}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"Min", "[", "v", "]"}], " ", ">", " ", "0"}]}]}]}], "\n", 
   RowBox[{
    RowBox[{"convertToAlign", "[", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pos_", "?", "numericCoordinatesQ"}], ",", " ", "v_"}], " ", 
      "}"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"alignMechanism", "::", "oob"}], ",", "v"}], "]"}], ";", " ", 
      "$Failed"}], " ", ")"}]}], "\n", 
   RowBox[{
    RowBox[{"convertToAlign", "[", " ", 
     RowBox[{"{", 
      RowBox[{"pos_", ",", " ", "v_"}], "}"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"alignMechanism", "::", "num"}], "]"}], ";", " ", "$Failed"}], 
     ")"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"alignMechanism", "::", "oob"}], " ", "=", " ", 
     "\"\<Specified vertices `1` are out of bounds of mechanism.\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"alignMechanism", "::", "num"}], " ", "=", " ", 
     "\"\<Vertex positions must be numerical.\>\""}], ";"}]}]}]], "Code",
 CellLabel->
  "In[734]:=",ExpressionUUID->"fc7c8ee8-7208-4bfb-b0d2-9a8e8f5faa83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "find", " ", "the", " ", "geometric", " ", "transform", " ", "we", " ", 
    "need"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"alignTransform", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"positionsFrom_", ",", "vFrom_"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"positionsTo_", ",", "vTo_"}], "}"}], ",", " ", "options_"}], 
     " ", "]"}], " ", ":=", " ", "\n", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "\n", 
        RowBox[{"transformation", " ", "=", " ", 
         RowBox[{"FindGeometricTransform", "[", 
          RowBox[{
           RowBox[{"positionsFrom", "[", 
            RowBox[{"[", "vFrom", "]"}], "]"}], ",", " ", 
           RowBox[{"positionsTo", "[", 
            RowBox[{"[", "vTo", "]"}], "]"}], ",", " ", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"options", ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "TransformationClass", " ", "\[Rule]", " ", "\"\<Rigid\>\""}],
                 ",", " ", 
                RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Linear\>\""}]}], 
               " ", "}"}]}], "}"}], "]"}]}], " ", "]"}]}], "\n", "}"}], ",", 
       "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "transformation", "]"}], " ", "===", " ", 
          "FindGeometricTransform"}], ",", " ", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"alignMechanism", "::", "gt"}], "]"}], ";", " ", 
          "$Failed"}], ",", " ", 
         RowBox[{"transformation", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}]}], "\n", "]"}], " ", "/;",
      " ", 
     RowBox[{
      RowBox[{"Dimensions", "[", "positionsFrom", "]"}], " ", "\[Equal]", " ", 
      RowBox[{"Dimensions", "[", "positionsTo", "]"}]}]}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"alignTransform", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"positionsFrom_", ",", "vFrom_"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"positionsTo_", ",", "vTo_"}], "}"}], ",", " ", "options_"}], 
     " ", "]"}], " ", ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"alignMechanism", "::", "match"}], "]"}], ";", " ", 
      "$Failed"}], ")"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"alignMechanism", "::", "gt"}], " ", "=", " ", 
     "\"\<Failed to find geometric transform.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"alignMechanism", "::", "match"}], " ", "=", " ", 
     "\"\<Vertices are not of the same dimension and number.\>\""}], 
    ";"}]}]}]], "Code",
 CellLabel->
  "In[743]:=",ExpressionUUID->"0cd90e14-bdd3-4e77-87ae-322091a59501"]
}, Closed]],

Cell[CellGroupData[{

Cell["congruentQ[]", "Subsubsection",ExpressionUUID->"ad1bcf64-cd10-4ca6-b1cc-585d731370c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"congruentQ", "[", 
    RowBox[{"tolerance_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
        RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], "]"}], "[", " ", 
   RowBox[{"from_", ",", " ", "to_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"fromPos", " ", "=", " ", 
       RowBox[{"convertToAlign", "[", "from", " ", "]"}]}], ",", " ", 
      RowBox[{"toPos", " ", "=", " ", 
       RowBox[{"convertToAlign", "[", " ", "to", " ", "]"}]}]}], " ", "}"}], 
    ",", "\n", "\t", 
    RowBox[{
     RowBox[{"With", "[", " ", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"transform", " ", "=", " ", 
         RowBox[{"alignTransform", "[", " ", 
          RowBox[{"fromPos", ",", " ", "toPos", ",", " ", 
           RowBox[{"{", "}"}]}], " ", "]"}]}], " ", "}"}], ",", "\n", "\t\t", 
       
       RowBox[{
        RowBox[{"With", "[", " ", 
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{"difference", " ", "=", " ", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"transform", "[", " ", 
               RowBox[{"toPos", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", "-", " ", 
              RowBox[{"fromPos", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], " ", "}"}], ",", 
          "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"difference", " ", ".", " ", "difference"}], " ", "<", " ",
            "tolerance"}]}], "\n", "\t\t", "]"}], " ", "/;", " ", 
        RowBox[{"transform", " ", "=!=", " ", "$Failed"}]}]}], "\n", "\t", 
      "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{"fromPos", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
      RowBox[{"toPos", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[747]:=",ExpressionUUID->"a8f653e6-0073-4e26-88b3-b7e9ea5fa4e3"]
}, Closed]],

Cell[CellGroupData[{

Cell["BoundingRegion[]", "Subsubsection",ExpressionUUID->"8cce2016-734e-42f2-be2b-cbdd076c933d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BoundingRegion", "[", 
   RowBox[{"o_origami", ",", " ", "r___"}], "]"}], " ", "^:=", " ", 
  RowBox[{"BoundingRegion", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<positions\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"BoundingRegion", "[", 
   RowBox[{"o_framework", ",", " ", "r___"}], "]"}], " ", "^:=", " ", 
  RowBox[{"BoundingRegion", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<positions\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[748]:=",ExpressionUUID->"a044e23e-1cf7-439c-8988-ba19bc69562f"]
}, Closed]],

Cell[CellGroupData[{

Cell["RegionNearest[]", "Subsubsection",ExpressionUUID->"82b83af1-364d-4441-ac6f-7d4ab9c93140"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegionNearest", "[", " ", 
   RowBox[{"f_framework", ",", " ", "pt_"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionNearest", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "pt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RegionNearest", "[", " ", "f_framework", " ", "]"}], " ", "^:=", 
   " ", 
   RowBox[{"RegionNearest", "[", " ", 
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"RegionNearest", "[", " ", 
   RowBox[{"f_origami", ",", " ", "pt_"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionNearest", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "pt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionNearest", "[", " ", "f_origami", " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionNearest", "[", " ", 
   RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[750]:=",ExpressionUUID->"24754796-afb7-45a3-8951-4a536a4a06ac"]
}, Closed]],

Cell[CellGroupData[{

Cell["RegionMember[]", "Subsubsection",ExpressionUUID->"40634b5d-5042-457b-b993-97b346712759"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegionMember", "[", " ", 
   RowBox[{"f_framework", ",", " ", "pt_"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionMember", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "pt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RegionMember", "[", " ", "f_framework", " ", "]"}], " ", "^:=", 
   " ", 
   RowBox[{"RegionMember", "[", " ", 
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"RegionMember", "[", " ", 
   RowBox[{"f_origami", ",", " ", "pt_"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionMember", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "pt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionMember", "[", " ", "f_origami", " ", "]"}], " ", "^:=", " ", 
  
  RowBox[{"RegionMember", "[", " ", 
   RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[754]:=",ExpressionUUID->"7a361400-0ab0-480a-8540-923e7b45dae0"]
}, Closed]],

Cell[CellGroupData[{

Cell["RegionBounds[]", "Subsubsection",ExpressionUUID->"b14c81ad-57f2-4d31-b5c8-6ba50d536466"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegionBounds", "[", " ", 
   RowBox[{"f_framework", ",", " ", "type___"}], " ", "]"}], " ", "^:=", " ", 
  
  RowBox[{"RegionBounds", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "type"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionBounds", "[", " ", 
   RowBox[{"f_origami", ",", " ", "type___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionBounds", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "type"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[758]:=",ExpressionUUID->"b4b8b7fc-0ce5-405c-bfdc-ceda27c196cd"]
}, Closed]],

Cell[CellGroupData[{

Cell["RandomPoint[]", "Subsubsection",ExpressionUUID->"5aef37b4-8e7e-4e78-8436-4ba089791318"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RandomPoint", "[", " ", 
   RowBox[{"f_framework", ",", " ", "reg___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RandomPoint", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "reg"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RandomPoint", "[", " ", 
   RowBox[{"f_origami", ",", " ", "reg___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RandomPoint", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "reg"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[760]:=",ExpressionUUID->"17113e68-20ca-4fc5-b9c9-b00d33e0fb3d"]
}, Closed]],

Cell[CellGroupData[{

Cell["RegionCentroid[]", "Subsubsection",ExpressionUUID->"51d396bd-59b9-41b5-8132-3e59ac3c087f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegionCentroid", "[", " ", "f_framework", " ", "]"}], " ", "^:=", 
  " ", 
  RowBox[{"RegionCentroid", "[", " ", 
   RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionCentroid", "[", " ", "f_origami", " ", "]"}], " ", "^:=", 
  " ", 
  RowBox[{"RegionCentroid", "[", " ", 
   RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}]}]}], "Code",
 CellLabel->
  "In[762]:=",ExpressionUUID->"39a0c5e5-34c0-48f6-8ad7-a3093cefd676"]
}, Closed]],

Cell[CellGroupData[{

Cell["RegionDistance[], SignedRegionDistance[]", "Subsubsection",ExpressionUUID->"72d58bed-db3c-4a7d-9208-04f5cef0b41d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegionDistance", "[", " ", 
   RowBox[{"f_framework", ",", " ", "p___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionDistance", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "p"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionDistance", "[", " ", 
   RowBox[{"f_origami", ",", " ", "p___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"RegionDistance", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "p"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[764]:=",ExpressionUUID->"ef666df7-d4d4-42ba-a742-668ead4cc0eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SignedRegionDistance", "[", " ", 
   RowBox[{"f_framework", ",", " ", "p___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"SignedRegionDistance", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "p"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"SignedRegionDistance", "[", " ", 
   RowBox[{"f_origami", ",", " ", "p___"}], " ", "]"}], " ", "^:=", " ", 
  RowBox[{"SignedRegionDistance", "[", " ", 
   RowBox[{
    RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], ",", " ", "p"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[766]:=",ExpressionUUID->"00cc8537-555f-44c2-a479-a17ad44530f5"]
}, Closed]],

Cell[CellGroupData[{

Cell["tierEdges[] - experimental", "Subsubsection",ExpressionUUID->"629e0869-a792-448b-b759-8452461b16c9"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"tierEdges", "::", "usage"}], "=", 
    "\"\<tierEdges[m] partitions the edges of a 2D mechanism into tiers so \
that no two edges sharing a vertex are on the same tier.\>\""}], ";"}], 
  "*)"}]], "Code",
 CellLabel->
  "In[768]:=",ExpressionUUID->"77d06f1b-f7ab-4500-a658-4079097e7227"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"selectEdgeTiers", "[", " ", 
    RowBox[{"{", 
     RowBox[{"edgeList_", ",", " ", "other_"}], "}"}], " ", "]"}], " ", ":=", 
   " ", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"pass", " ", "=", 
       RowBox[{"Sort", "/@", 
        RowBox[{"(", 
         RowBox[{"List", "@@@", 
          RowBox[{"FindIndependentEdgeSet", "[", 
           RowBox[{"UndirectedEdge", "@@@", "edgeList"}], "]"}]}], ")"}]}]}], 
      "\n", "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"DeleteCases", "[", " ", 
        RowBox[{
         RowBox[{"Sort", " ", "/@", " ", "edgeList"}], ",", " ", 
         RowBox[{"Alternatives", "@@", "pass"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "pass", "}"}], ",", "other"}], "]"}]}], 
      "\[IndentingNewLine]", "\t", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tierEdges", "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"edges", " ", "=", " ", 
        RowBox[{"listEdges", "[", "m", "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"Reverse", "[", 
       RowBox[{
        RowBox[{"NestWhile", "[", 
         RowBox[{"selectEdgeTiers", ",", 
          RowBox[{"{", 
           RowBox[{"edges", ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"First", "[", "#", "]"}], "]"}], ">", "0"}], "&"}]}], 
         "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "\n", "]"}], " ", "/;", " ", 
    
    RowBox[{
     RowBox[{"embeddingDimension", "[", "m", "]"}], "\[Equal]", "2"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tierEdges", "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
    RowBox[{"Message", "[", 
     RowBox[{"tierEdges", "::", "embdim"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tierEdges", "::", "embdim"}], "=", 
   "\"\<Mechanism embedding dimension must be 2.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[769]:=",ExpressionUUID->"63542191-1f62-4e2b-9a55-5238b3bb62ea"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["input/output", "Section",ExpressionUUID->"1057eff9-5f17-4068-acc7-4bffd91fc573"],

Cell[CellGroupData[{

Cell["saveToFOLD[], loadFromFOLD[]", "Subsection",ExpressionUUID->"570218bd-49b5-4ca4-b546-bea8c4815be7"],

Cell["\<\
Save the mechanism using the .fold specification \
(https://github.com/edemaine/fold/blob/master/doc/spec.md)\
\>", "Text",ExpressionUUID->"7de08b25-a660-4064-8f9f-9c0584610130"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"incrementVertices", "[", "d_List", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "+", "1"}], "&"}], "/@", "d"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"decrementVertices", "[", "d_List", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "-", "1"}], "&"}], "/@", "d"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"surfaceQ", "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", " ", 
    RowBox[{
     RowBox[{"Length", " ", "/@", " ", 
      RowBox[{"connectivity", "[", " ", 
       RowBox[{"m", ",", " ", 
        RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], 
       " ", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"#", " ", "\[LessEqual]", " ", "2"}], "&"}]}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"saveToFOLD", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], " ", ",", " ", "filename_String"}], 
   " ", "]"}], ":=", "\n", 
  RowBox[{"Export", "[", 
   RowBox[{"filename", ",", "\n", "\t", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{
      "\"\<file_spec\>\"", " ", "\[Rule]", " ", "$mechanismsVersion"}], ",", 
      "\n", "\t", 
      RowBox[{
      "\"\<file_creator\>\"", " ", "\[Rule]", " ", "\"\<mechanisms\>\""}], 
      ",", "\n", "\t", 
      RowBox[{"\"\<file_classes\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", "\"\<singleModel\>\"", "}"}]}], ",", "\n", "\t", 
      RowBox[{"\"\<frame_classes\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", "\"\<creasePattern\>\"", "}"}]}], ",", "\n", "\t", 
      RowBox[{"\"\<frame_attributes\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Switch", "[", " ", 
          RowBox[{
           RowBox[{"displayDimension", "[", "m", "]"}], ",", " ", "2", ",", 
           " ", "\"\<2D\>\"", ",", " ", "3", ",", " ", "\"\<3D\>\"", ",", "_",
            ",", " ", "Nothing"}], " ", "]"}], ",", "\n", "\t\t", 
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "m", "]"}], "===", 
            RowBox[{"origami", " ", ">", " ", "0"}]}], ",", " ", 
           "\"\<manifold\>\"", ",", " ", "Nothing"}], " ", "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{"orientedQ", "[", " ", "m", " ", "]"}], ",", " ", 
           "\"\<orientable\>\"", ",", " ", "\"\<nonOrientable\>\""}], " ", 
          "]"}]}], "\n", "\t", "}"}]}], ",", "\n", "\t", 
      RowBox[{"\"\<frame_unit\>\"", " ", "\[Rule]", " ", "\"\<unit\>\""}], 
      ",", "\n", "\t", 
      RowBox[{"\"\<vertices_coords\>\"", " ", "\[Rule]", " ", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], ",", "\n", "\t", 
      RowBox[{"\"\<edges_vertices\>\"", " ", "\[Rule]", " ", 
       RowBox[{"decrementVertices", " ", "/@", " ", 
        RowBox[{"connectivity", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{
          "\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], 
         "]"}]}]}], ",", "\n", "\t", 
      RowBox[{"\"\<faces_vertices\>\"", " ", "\[Rule]", " ", 
       RowBox[{"decrementVertices", " ", "/@", " ", 
        RowBox[{"listFaces", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{
          "\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<vertices\>\""}]}], 
         "]"}]}]}]}], "\n", "}"}], ",", "\"\<JSON\>\""}], "]"}]}]}], "Code",
 CellLabel->
  "In[773]:=",ExpressionUUID->"8fc21ec3-bd31-48c7-99a9-e6f2bd594953"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "loadFromFOLD", "]"}], "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"\"\<face\>\"", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"face", "[", "#", "]"}], "&"}], ")"}]}], "}"}], ",", " ", 
      RowBox[{"Options", "[", "origami", "]"}]}], " ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"loadFromFOLD", "[", 
   RowBox[{"filename_String", ",", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"inputData", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"filename", ",", "\"\<JSON\>\""}], "]"}]}], ",", "\n", "\t", 
      "coords", ",", "edges", ",", "faces"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"inputData", " ", "===", " ", "$Failed"}], ",", "\n", "\t\t", 
      "$Failed", ",", "\n", "\n", "\t\t", 
      RowBox[{
       RowBox[{"coords", "=", 
        RowBox[{"\"\<vertices_coords\>\"", " ", "/.", " ", "inputData"}]}], 
       ";", "\n", "\t\t", 
       RowBox[{"edges", "=", 
        RowBox[{"\"\<edges_vertices\>\"", " ", "/.", " ", "inputData"}]}], 
       ";", "\n", "\t\t", 
       RowBox[{"faces", "=", 
        RowBox[{"\"\<faces_vertices\>\"", " ", "/.", " ", "inputData"}]}], 
       ";", "\n", "\n", "\t\t", 
       RowBox[{"origami", "[", " ", 
        RowBox[{"coords", ",", " ", 
         RowBox[{"Join", "[", " ", 
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<face\>\"", "]"}], " ", "/@", " ", 
           
           RowBox[{"incrementVertices", " ", "/@", " ", "faces"}]}], "]"}], 
         ",", " ", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "opt", "}"}], ",", 
           RowBox[{"Options", "[", "origami", "]"}]}], "]"}]}], " ", 
        "]"}]}]}], "\n", "\t", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[777]:=",ExpressionUUID->"8ac23fb1-7284-4a34-87b9-593e96f3af72"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["post", "Section",ExpressionUUID->"6e6b1080-8143-41c2-bf56-a613ed97817c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[779]:=",ExpressionUUID->"f4f9e795-777e-433c-97fa-0aa5d3bb0d3a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanisms`rigidity: rigidity and linkage functions", "Chapter",ExpressionUUID->"b2dba352-41ac-4c41-8cd0-89374938bec7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<mechanisms`rigidity`\>\"", "]"}], 
  ";"}]], "Code",
 CellLabel->
  "In[781]:=",ExpressionUUID->"b82d541f-dac9-4957-9bce-6f05e2b763c2"],

Cell[CellGroupData[{

Cell["usage", "Section",ExpressionUUID->"73915429-1494-4af5-b0a0-500eb7ba478d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"toFramework", "::", "usage"}], "=", "\n", 
    "\"\<toFramework[ obj ] attempts to create a framework from some other \
object (e.g. Graph[], MeshRegion[], etc.).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomCellNetwork", "::", "usage"}], "=", 
    "\"\<randomCellNetwork[n] returns a random network of cells that can be \
tesselated in 2D.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomTriangulatedNetwork", "::", "usage"}], "=", 
    "\"\<randomTriangulatedNetwork[n] returns a random triangulated network \
that can be tesselated in 2D.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Henneberg", "::", "usage"}], "=", 
   "\"\<Henneberg[1][vertices, label -> pos] is an Henneberg operation of \
type 1 that creates a new vertex at a position and attaches it to vertices.\n\
Henneberg[2][ {v1,v2,v3},label -> pos] is a Henneberg operation of type 2 \
that subdivides an edge {v1,v2} and places the new vertex and connects it to \
vertex v3.\nHenneberg[t][pos] is a random Henneberg operation of type t, \
placing the new vertex at position pos.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[782]:=",ExpressionUUID->"d062486e-3334-4371-b057-cc402806a5aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cellData", "::", "usage"}], " ", "=", " ", 
    "\"\<cellData[ m, cellPattern ] returns the equilibrium data cells \
matching a pattern.\ncellData[ m, positions, cellPattern ] uses provided \
vertex positions to compute equilibrium data where not specified \
explicitly.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constrainedCells", "::", "usage"}], "=", 
   "\"\<constrainedComponents[m] returns a list of cells with infinite \
stiffness.\nconstrainedComponents[m , {head, indices}] returns a list of \
cells matching the specification with infinite stiffness.\n\
constrainedComponents[m, patt] returns a list of cells matching a pattern \
with infinite stiffness.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constrainedComponents", "::", "usage"}], "=", 
   "\"\<Use constrainedCells[] instead.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[786]:=",ExpressionUUID->"54d13d81-bc52-43f3-b92b-77ecb238a8aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"constraintEquations", "::", "usage"}], "=", "\n", 
    "\"\<constraintEquations[\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\
\"]\)(, \!\(\*StyleBox[\"positions\",FontSlant->\"Italic\"]\)), \
\!\(\*StyleBox[\"order\",FontSlant->\"Italic\"]\)] returns constraint \
equations valid to some order in the displacements.\n\
\!\(\*StyleBox[\"order\",FontSlant->\"Italic\"]\) should be 1, 2 or Infinity. \
Use option \\\"constraints\\\" to set additional constraints.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mechanismEnergy", "::", "usage"}], "=", "\n", 
    "\"\<mechanismEnergy[ \!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\
\) ] returns an energy expression for a mechanism.\nmechanismEnergy[ \
\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"positions\",FontSlant->\"Italic\"]\) ] returns an energy \
expression for vertices at arbitrary positions but using the provided \
positions to determine equilibrium parameters where necessary.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compiledMechanismEnergy", "::", "usage"}], "=", "\n", 
    "\"\<compiledMechanismEnergy[ \
\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\) ] compiles an energy \
and gradient for a mechanism.\ncompiledMechanismEnergy[ \
\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\",\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"positions\",FontSlant->\"Italic\"]\
\) ] compiles an energy and gradient for a mechanism starting from a set of \
positions.\n\nUndefined symbols in the energy must be set using ReplaceAll[].\
\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compiledMechanismEnergyQ", "::", "usage"}], "=", "\n", 
    "\"\<compiledMechanismEnergyQ[ energy ] returns True if and only if \
energy is a compiledMechanismEnergy[] object.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "::", "usage"}], "=", 
   "\"\<$defaultStiffness[\!\(\*StyleBox[\"component\",FontSlant->\"Italic\"]\
\)] returns the default stiffness in case the constraint is rigid.\nUse \
$defaultStiffness[\\\"constraints\\\"] to find the stiffness of added \
constraints.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[789]:=",ExpressionUUID->"d3d232a2-d2f0-4edd-811a-e6bfe8f464d3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"constraintMatrix", "::", "usage"}], "=", 
    "\"\<constraintMatrix[ m ] returns a constraint matrix for the \
first-order constraints.\nconstraintMatrix[ m, positions ] returns a \
constraint matrix using positions to determine matrix element.\n\nOptions: \\\
\"constraints\\\" to add additional constraints, \\\"pattern\\\" to restrict \
which components will provide constraints, \\\"rules\\\" eliminates variables \
from the constraint matrix.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"zeroModes", "::", "usage"}], "=", 
    "\"\<zeroModes[m] returns a list of numerical zero modes (linear \
isometries) associated with the constraints of mechanism m.\n\nIt takes the \
options of constraintMatrix[] and Eigensystem. Option Tolerance can be used \
to set a numerical value to correspond to 0.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"selfStresses", "::", "usage"}], "=", 
    "\"\<selfStresses[m] returns a list of numerical self-stresses () modes \
associated with the constraints of mechanism m.\n\nIt takes the options of \
constraintMatrix[] and Eigensystem. Option Tolerance can be used to set a \
numerical value to correspond to 0.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"infinitesimalMotions", "::", "usage"}], "=", "\n", 
    "\"\<infinitesimalMotions[\!\(\*StyleBox[\\\"mechanism\\\",FontSlant->\\\"\
Italic\\\"]\)(, \
\!\(\*StyleBox[\\\"positions\\\",FontSlant->\\\"Italic\\\"]\))] returns a \
list of two elements: an infinitesimal linear motion and, if necessary, a \
list of quadratic constraints they must satisfy.\n\nUse option \
\\\"variables\\\" to control the form of the output.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stressMatrix", "::", "usage"}], "=", "\n", 
   "\"\<stressMatrix[ m, vec ] returns a stress matrix associated with the \
stress vector vec. The (i,j) component of the stress matrix is the negative \
of the corresponding stress vector component (and zero otherwise) and \
diagonal components are chosen so that rows and columns sum to zero.\n\n(see \
Connelly on generic global rigidity)\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[794]:=",ExpressionUUID->"9f3c6bc3-e1f2-404a-b458-b61b234f2a0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"minimizeEnergy", "::", "usage"}], "=", "\n", 
    "\"\<minimizeEnergy[\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\
\)\!\(\*StyleBox[\" \",FontSlant->\"Italic\"]\)], minimizeEnergy[ \
\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"energy\",FontSlant->\"Italic\"]\) ] minimizes the energy of \
a mechanism, returning {\!\(\*StyleBox[\"minimum\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"energy\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"mininal\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"vertex\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"positions\",FontSlant->\"Italic\"]\
\)\!\(\*StyleBox[\"}\",FontSlant->\"Italic\"]\).\n\nThe optional argument \
\!\(\*StyleBox[\"energy\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)can be either an expression or a compiled \
mechanism energy.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dynamicalSystem", "::", "usage"}], "=", "\n", 
    "\"\<dynamicalSystem[\!\(\*StyleBox[\"m\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"{\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\"initial\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"positions\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"initial\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"velocities\",FontSlant->\"Italic\"\
]\)\!\(\*StyleBox[\"}\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\",\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"{\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\"time\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"variable\",FontSlant->\"Italic\"]\
\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"start\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"time\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"end\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"time\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\"}\",FontSlant->\"Italic\"]\)] returns a list of functions \
specifying how vertices will move as a function of \
\!\(\*StyleBox[\"time\",FontSlant->\"Italic\"]\).\n\nUse options \\\"mass\\\" \
and \\\"drag\\\" to set the mass and drag coefficient for the \
particles.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dynamicalSystemEquations", "::", "usage"}], "=", "\n", 
    "\"\<dynamicalSystemEquations[\!\(\*StyleBox[\"mech\",FontSlant->\"Italic\
\"]\), {\!\(\*StyleBox[\"variable\",FontSlant->\"Italic\"]\), \!\(\*StyleBox[\
\"time\",FontSlant->\"Italic\"]\)}] returns dynamical equations for vertex \
positions, using \!\(\*StyleBox[\"variable\",FontSlant->\"Italic\"]\) as \
vertex names, and \!\(\*StyleBox[\"time\",FontSlant->\"Italic\"]\) as the \
symbol for time.\n\nUse options \\\"mass\\\" and \\\"drag\\\" to set the mass \
and drag coefficient for the particles.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "usage"}], "=", 
   "\"\<monteCarloRun[ m, \[Beta], n, distribution ] attempts n Monte Carlo \
steps at inverse temperature \[Beta] using a probability distribution.\nThe \
results are output as {list of energies, list of positions}.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[799]:=",ExpressionUUID->"26ac018e-d3cd-4b8e-8be3-ef6964a705fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"isometricTrajectory", "::", "usage"}], "=", "\n", 
    "\"\<isometricTrajectory[\!\(\*StyleBox[\"mechanism\",FontSlant->\"Italic\
\"]\), \!\(\*StyleBox[\"{\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"{\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\[CapitalDelta]x1\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\[CapitalDelta]y1\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"..\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\"}\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"..\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\"}\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)] creates a trajectory using \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\) steps through the configuration \
space of a mechanism starting in the\ndisplacement direction \
\!\(\*StyleBox[\"{\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"{\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"\[CapitalDelta]x1\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\[CapitalDelta]y1\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"..\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\"}\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"..\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\"}\",FontSlant->\"Italic\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"findMinimalTrajectory", "::", "usage"}], "=", "\n", 
    "\"\<findMinimalTrajectory[\!\(\*StyleBox[\"mechanism\",FontSlant->\"\
Italic\"]\), \!\(\*StyleBox[\"start\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"end\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)] attempts to find a valid \
trajectory from \!\(\*StyleBox[\"start\",FontSlant->\"Italic\"]\) to \
\!\(\*StyleBox[\"end\",FontSlant->\"Italic\"]\) configurations using \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\) intermediate steps.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"genericGloballyRigidQ", "::", "usage"}], "=", "\n", 
   "\"\<genericGloballyRigidQ[m] returns True if it can be determined that \
the system is generically globally rigid according to Connelly's criteria \
based on the stress matrix.\nIf it returns True, the specific mechanism may \
still be non-rigid.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[803]:=",ExpressionUUID->"b5932bf9-eb16-4733-95a2-c0d28cbc74eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotStress", "::", "usage"}], "=", 
   "\"\<plotStress[ m, edges, stresses ] plots a mechanism with edge stresses \
denoted by double-headed arrows.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[806]:=",ExpressionUUID->"7b07195b-81ae-4c6b-b53b-c12da7b91d15"]
}, Closed]],

Cell[CellGroupData[{

Cell["global data", "Section",ExpressionUUID->"8a9e5486-2df6-4b93-9dc2-b554504ae96d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`geometry`\>\"", "]"}], ";"}]}], "Code",\

 CellLabel->
  "In[807]:=",ExpressionUUID->"e1d9d711-2332-45c6-b149-b767382b3d44"]
}, Open  ]],

Cell[CellGroupData[{

Cell["private rigidity functions", "Section",ExpressionUUID->"9fbb1e8d-4aff-41c8-a1c6-577a2f9fb10e"],

Cell[CellGroupData[{

Cell["linearMotions[]", "Subsection",ExpressionUUID->"99d232f2-b91d-458c-a3db-d922760b95e4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "linearMotions", "]"}], " ", "=", " ", 
    RowBox[{"Options", "[", "NullSpace", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"linearMotions", "[", " ", 
   RowBox[{"m_", " ", ",", " ", "rigidityMatrix_", " ", ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"embeddingDimension", "[", "m", "]"}]}], ",", " ", 
      RowBox[{"lin", " ", "=", " ", 
       RowBox[{"NullSpace", "[", 
        RowBox[{"rigidityMatrix", ",", "opt"}], "]"}]}]}], "}"}], ",", "\n", 
    "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "lin", "]"}], ">", "0"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Partition", "[", " ", 
        RowBox[{
         RowBox[{"Orthogonalize", "[", "lin", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "dim"}], "}"}]}], " ", "]"}], "[", 
       RowBox[{"[", " ", 
        RowBox[{"All", ",", " ", "All", ",", " ", "1"}], " ", "]"}], "]"}], 
      ",", "\n", "\t\t", 
      RowBox[{"{", "}"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[810]:=",ExpressionUUID->"acfcd0c2-af8a-418c-a3d7-96424de01343"]
}, Closed]],

Cell[CellGroupData[{

Cell["numericExpressionQ[]", "Subsection",ExpressionUUID->"1dfd8d13-1b68-4298-a629-f270fa825602"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "does", " ", "an", " ", "expression", " ", "evaluate", " ", "to", " ", "a",
     " ", "number", " ", "if", " ", "the", " ", "vertex", " ", "positions", 
    " ", "or", " ", "displacements", " ", "are", " ", 
    RowBox[{"set", "?"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"numericExpressionQ", "[", 
    RowBox[{"positions_", ",", " ", "expression_"}], "]"}], ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"reducedExpression", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", " ", ".", " ", "#"}], "&"}], ")"}], "[", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"expression", " ", "/.", " ", 
            RowBox[{"Dispatch", "@", 
             RowBox[{"positionRules", "[", " ", 
              RowBox[{"N", "[", "positions", "]"}], " ", "]"}]}]}], " ", "/.",
            " ", 
           RowBox[{
            RowBox[{"vertexDisplacement", "[", 
             RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0.001"}]}], "}"}], 
         " ", "]"}], " ", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"NumericQ", "[", "reducedExpression", "]"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"Chop", "[", 
        RowBox[{"Im", "[", "reducedExpression", "]"}], "]"}], "\[Equal]", 
       "0"}]}]}], "\n", "]"}]}]}]], "Code",ExpressionUUID->"c096df45-35d7-\
4194-bb7d-c685fc4d292d"]
}, Closed]],

Cell[CellGroupData[{

Cell["parseExpression[]", "Subsection",ExpressionUUID->"8488fe5a-cff7-4dfa-ac4b-5654c56b2c7f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parseValidTokenQ", "[", 
   RowBox[{"foldAngle", "[", 
    RowBox[{"{", 
     RowBox[{"_Integer", ",", "_Integer"}], "}"}], "]"}], "]"}], ":=", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"parseValidTokenQ", "[", 
   RowBox[{"displacementLength", "[", 
    RowBox[{"{", 
     RowBox[{"_Integer", ",", "_Integer"}], "}"}], "]"}], "]"}], ":=", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"parseValidTokenQ", "[", 
   RowBox[{"displacementLengthSquared", "[", 
    RowBox[{"{", 
     RowBox[{"_Integer", ",", "_Integer"}], "}"}], "]"}], "]"}], ":=", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parseValidTokenQ", "[", "_", "]"}], ":=", "False"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parseExtractTokens", "[", "expr_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rawTokens", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Variables", "[", "expr", "]"}], ",", "parseValidTokenQ"}], 
        "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "&"}], "/@", 
      RowBox[{"GatherBy", "[", 
       RowBox[{"rawTokens", ",", "Head"}], "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"parseEvaluateTokens", "[", 
   RowBox[{"m_", ",", "positions_", ",", 
    RowBox[{"foldAngle", "[", "data_", "]"}]}], "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"foldAngle", "/@", "data"}], ")"}], " ", "\[Rule]", " ", 
    RowBox[{"foldAngle", "[", 
     RowBox[{"m", ",", "positions", ",", "data"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"parseEvaluateTokens", "[", 
   RowBox[{"m_", ",", "positions_", ",", 
    RowBox[{"displacementLength", "[", "data_", "]"}]}], "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"displacementLength", "/@", "data"}], ")"}], " ", "\[Rule]", " ", 
    RowBox[{"displacementLength", "[", 
     RowBox[{"m", ",", "positions", ",", "data"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"parseEvaluateTokens", "[", 
   RowBox[{"m_", ",", "positions_", ",", 
    RowBox[{"displacementLengthSquared", "[", "data_", "]"}]}], "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"displacementLengthSquared", "/@", "data"}], ")"}], " ", 
    "\[Rule]", " ", 
    RowBox[{"displacementLengthSquared", "[", 
     RowBox[{"m", ",", "positions", ",", "data"}], "]"}]}], "]"}]}]}], "Code",\

 CellLabel->
  "In[813]:=",ExpressionUUID->"379532fc-ab3b-4100-8b5e-6183b7f55947"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parseComponentData", "[", 
    RowBox[{"m_", ",", "positions_", ",", 
     RowBox[{"rigidBar", "[", 
      RowBox[{"indices_", ",", "data_"}], "]"}]}], "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"lengths", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#2", "===", "Automatic"}], ",", "#1", ",", "#2"}], 
            "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"displacementLength", "[", 
             RowBox[{"positions", ",", "indices"}], "]"}], ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
       ",", "\n", "\t", 
       RowBox[{"stiffnesses", "=", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "\n", "}"}], ",", "\n",
      "\t", 
     RowBox[{"Join", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"length", "/@", "indices"}], ")"}], "\[Rule]", "lengths"}], 
        "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"length", "/@", 
           RowBox[{"(", 
            RowBox[{"Reverse", "/@", "indices"}], ")"}]}], ")"}], "\[Rule]", 
         "lengths"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"lengthSquared", "/@", "indices"}], ")"}], "\[Rule]", 
         RowBox[{"lengths", "^", "2"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"lengthSquared", "/@", 
           RowBox[{"(", 
            RowBox[{"Reverse", "/@", "indices"}], ")"}]}], ")"}], "\[Rule]", 
         RowBox[{"lengths", "^", "2"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"stiffness", "/@", "indices"}], ")"}], "\[Rule]", 
         "stiffnesses"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"stiffness", "/@", 
           RowBox[{"(", 
            RowBox[{"Reverse", "/@", "indices"}], ")"}]}], ")"}], "\[Rule]", 
         "stiffnesses"}], "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parseComponentData", "[", 
    RowBox[{"m_", ",", "positions_", ",", 
     RowBox[{"foldAngle", "[", 
      RowBox[{"indices_", ",", "data_"}], "]"}]}], "]"}], ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"angles", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#2", "===", "Automatic"}], ",", "#1", ",", "#2"}], 
            "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"displacementLength", "[", 
             RowBox[{"positions", ",", "indices"}], "]"}], ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
       ",", "\n", "\t", 
       RowBox[{"torsionalStiffnesses", "=", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "\n", "}"}], ",", "\n",
      "\t", 
     RowBox[{"Join", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"angle", "/@", "indices"}], ")"}], "\[Rule]", "angles"}], 
        "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"angle", "/@", 
           RowBox[{"(", 
            RowBox[{"Reverse", "/@", "indices"}], ")"}]}], ")"}], "\[Rule]", 
         "angles"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"torsionalStiffness", "/@", "indices"}], ")"}], "\[Rule]", 
         "torsionalStiffnesses"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"torsionalStiffness", "/@", 
           RowBox[{"(", 
            RowBox[{"Reverse", "/@", "indices"}], ")"}]}], ")"}], "\[Rule]", 
         "torsionalStiffnesses"}], "]"}]}], "\n", "\t", "]"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"parseComponentData", "[", 
   RowBox[{"m_", ",", "positions_", ",", "_"}], "]"}], ":=", 
  RowBox[{"{", "}"}]}]}], "Code",
 CellLabel->
  "In[821]:=",ExpressionUUID->"2e6066e1-9346-4cd8-aed9-3d85923df3d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"parseExpression", "[", 
   RowBox[{"m_", ",", "positions_", ",", "expr_"}], "]"}], ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"parsingRules", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"parseComponentData", "[", 
            RowBox[{"m", ",", "positions", ",", "#"}], "]"}], "&"}], "/@", 
          RowBox[{"m", "[", "\"\<components\>\"", "]"}]}], ",", "\n", "\t\t", 
         
         RowBox[{
          RowBox[{
           RowBox[{"parseEvaluateTokens", "[", 
            RowBox[{"m", ",", 
             RowBox[{"vertexPosition", "[", "m", "]"}], ",", "#"}], "]"}], 
           "&"}], "/@", 
          RowBox[{"parseExtractTokens", "[", "expr", "]"}]}]}], "\n", "\t", 
        "}"}], "]"}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"expr", "//.", 
     RowBox[{"Dispatch", "[", "parsingRules", "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[824]:=",ExpressionUUID->"1215db5f-4226-4914-976f-95e9ec2bdd56"]
}, Closed]],

Cell[CellGroupData[{

Cell["constraintVector[], reduceConstraintToOrder[]", "Subsection",ExpressionUUID->"ad6ad24c-4f7b-4beb-92a1-ed99eb40f1e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"constraintVector", "[", " ", 
      RowBox[{"positions", ",", " ", "constraints"}], " ", "]"}], " ", 
     "takes", " ", "arbitrary", " ", "constraints"}], ",", " ", 
    RowBox[{
    "written", " ", "as", " ", "equations", " ", "or", " ", "in", " ", "some",
      " ", "other", " ", "form"}], ",", "\n", 
    RowBox[{"parses", " ", "them"}], ",", " ", 
    RowBox[{
    "and", " ", "returns", " ", "a", " ", "standard", " ", "vector", " ", 
     "map", " ", "from", " ", "positions", " ", "to", " ", "a", " ", 
     RowBox[{"\"\<constraint space\>\"", "."}]}]}], "\n", "*)"}], "\n", "\n", 
  
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"get", " ", "a", " ", "set", " ", "of", " ", "user"}], "-", 
    RowBox[{
    "specified", " ", "constraints", " ", "into", " ", "the", " ", "form", 
     " ", "of", " ", "a", " ", "vector", " ", "equal", " ", "to", " ", "zero",
      " ", "when", " ", "constraints", " ", "are", " ", "satisfied"}]}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"constraintVector", "[", 
     RowBox[{"positions_", ",", "None"}], "]"}], ":=", 
    RowBox[{"{", "}"}]}], "\n", 
   RowBox[{
    RowBox[{"constraintVector", "[", 
     RowBox[{"positions_", ",", "constraints_"}], "]"}], ":=", 
    RowBox[{"With", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"equations", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"equationToExpression", "[", "constraints", "]"}], "}"}], 
          "]"}]}], ",", "\n", 
        RowBox[{"dimensions", "=", 
         RowBox[{"Dimensions", "[", "positions", "]"}]}]}], "\n", "}"}], ",", 
      "\n", "\t", 
      RowBox[{"equations", " ", "/.", " ", 
       RowBox[{"Dispatch", "[", 
        RowBox[{"displacementRules", "[", " ", 
         RowBox[{
          RowBox[{"vertexPosition", "[", " ", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"dimensions", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
            RowBox[{"All", "[", 
             RowBox[{"dimensions", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], " ", "]"}], " ", "-", 
          " ", "positions"}], "]"}], "]"}]}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"equationToExpression", "[", 
     RowBox[{"Equal", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}], "]"}], ":=", 
    RowBox[{"a", "-", "b"}]}], "\n", 
   RowBox[{
    RowBox[{"equationToExpression", "[", 
     RowBox[{"Equal", "[", 
      RowBox[{"a_", ",", "b__"}], "]"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"a", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "b", "}"}], "]"}]}], "]"}], "-", 
     RowBox[{"{", "b", "}"}]}]}], "\n", 
   RowBox[{
    RowBox[{"equationToExpression", "[", 
     RowBox[{"a", ":", 
      RowBox[{"Except", "[", "_Equal", "]"}]}], "]"}], ":=", "a"}], "\n", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"equationToExpression", ",", "Listable"}], "]"}], 
    ";"}]}]}]], "Code",
 CellLabel->
  "In[825]:=",ExpressionUUID->"47297589-ee37-43ff-bf7f-7c152204d265"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"reduceConstraintToOrder", "[", " ", 
     RowBox[{"positions", ",", " ", "constraintMap", ",", " ", "order"}], " ",
      "]"}], " ", "changes", " ", "the", " ", "order", " ", "of", " ", "the", 
    " ", "constraint", " ", 
    RowBox[{"map", "."}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "express", " ", "the", " ", "constraints", " ", "to", " ", "be", " ", 
    "valid", " ", "at", " ", "a", " ", "certain", " ", "order"}], "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"reduceConstraintToOrder", "[", 
     RowBox[{"positions_", ",", "constraintVector_", ",", 
      RowBox[{"order_Integer", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", ">=", "0"}], "&"}], ")"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"dimensions", "=", 
         RowBox[{"Dimensions", "[", "positions", "]"}]}], ",", "\n", 
        "expandedExpression", ",", "x"}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"expandedExpression", " ", "=", " ", 
        RowBox[{"constraintVector", " ", "/.", " ", 
         RowBox[{"Dispatch", "[", " ", 
          RowBox[{"positionRules", "[", " ", 
           RowBox[{"positions", " ", "+", " ", 
            RowBox[{"x", " ", 
             RowBox[{"vertexDisplacement", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"dimensions", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
               RowBox[{"All", "[", 
                RowBox[{"dimensions", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}], 
          "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"Total", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{"expandedExpression", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "#"}], "}"}]}], "]"}], "/", 
            RowBox[{"Factorial", "[", "#", "]"}]}], "&"}], " ", "/@", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "order"}], "]"}]}], " ", "/.", " ", 
         RowBox[{"x", "\[Rule]", "0"}]}], "]"}]}]}], "\n", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"reduceConstraintToOrder", "[", 
     RowBox[{"positions_", ",", "constraintVector_", ",", "_"}], "]"}], ":=", 
    "constraintVector"}]}]}]], "Code",
 CellLabel->
  "In[831]:=",ExpressionUUID->"11766d39-10ef-4cf6-927c-a440d6c8c708"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
solveLinearConstraints[], dynamicVariables[], processConstraintEquations[], \
nonlinearConstraintVector[]\
\>", "Subsection",ExpressionUUID->"af2c53f5-a9de-4109-a13f-82f175ddf7f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Fastest", " ", "way", " ", "to", " ", "pull", " ", "out", " ", 
    "equations", " ", "that", " ", "are", " ", "definitely", " ", "linear", 
    " ", "and", " ", "can", " ", "be", " ", "solved", " ", "explicitly"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"linearEquationQ", "[", 
     RowBox[{"eq_", ",", "var_"}], "]"}], ":=", 
    RowBox[{"VectorQ", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"eq", ",", 
        RowBox[{"{", "var", "}"}]}], "]"}], ",", "NumericQ"}], "]"}]}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"given", " ", "a", " ", "set", " ", "constraints"}], ",", " ", 
     RowBox[{
     "select", " ", "out", " ", "the", " ", "linear", " ", "ones", " ", "and",
       " ", "solve", " ", 
      RowBox[{"them", "."}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"solveLinearEquations", "[", 
     RowBox[{"constraintVec_", ",", " ", "var_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", " ", 
     RowBox[{
      RowBox[{"{", "soln", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Quiet", "[", " ", 
        RowBox[{"soln", " ", "=", " ", 
         RowBox[{"Solve", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Select", "[", " ", 
             RowBox[{"constraintVec", ",", " ", 
              RowBox[{
               RowBox[{"linearEquationQ", "[", 
                RowBox[{"#", ",", " ", "var"}], "]"}], "&"}]}], " ", "]"}], 
            " ", "\[Equal]", " ", "0"}], ",", " ", "var"}], " ", "]"}]}], " ",
         "]"}], ";", "\n", "\t", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "soln", "]"}], " ", "=!=", " ", "Solve"}], ",",
          " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"{", "}"}]}], " ", "]"}]}]}], "\n", "]"}]}]}]}]], "Code",
 CellLabel->
  "In[833]:=",ExpressionUUID->"db6a5df8-19c5-4bab-8ac6-3147ffb02c54"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", "\t", 
   RowBox[{"processConstraintEquations", "[", " ", 
    RowBox[{
     RowBox[{"initial", " ", "positions"}], ",", " ", 
     RowBox[{"constraint", " ", "equations"}]}], " ", "]"}], "\n", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"processConstraintEquations", "[", 
     RowBox[{"positions_", ",", " ", "constraintEq_"}], "]"}], " ", ":=", " ",
     "\n", 
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"constraints", " ", "=", " ", 
         RowBox[{"constraintVector", "[", " ", 
          RowBox[{"positions", ",", " ", "constraintEq"}], " ", "]"}]}], ",", 
        "\n", "\t", 
        RowBox[{"vars", " ", "=", " ", 
         RowBox[{"Flatten", " ", "@", " ", 
          RowBox[{"Array", "[", " ", 
           RowBox[{"vertexPosition", ",", " ", 
            RowBox[{"Dimensions", "[", "positions", "]"}]}], " ", "]"}]}]}], 
        ",", "\n", "\t", "linearEquationSelector", ",", "\n", "\t", 
        "solvedLinearConstraints", ",", "\n", "\t", "constrainedPositions"}], 
       "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"linearEquationSelector", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"linearEquationQ", "[", 
           RowBox[{"#", ",", " ", "vars"}], "]"}], "&"}], " ", "/@", " ", 
         "constraints"}]}], ";", "\n", "\t", 
       RowBox[{"solvedLinearConstraints", " ", "=", " ", 
        RowBox[{"Quiet", "[", " ", 
         RowBox[{"Solve", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Pick", "[", " ", 
             RowBox[{"constraints", ",", " ", "linearEquationSelector"}], " ",
              "]"}], " ", "\[Equal]", " ", "0"}], ",", " ", "vars"}], " ", 
          "]"}], " ", "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "solvedLinearConstraints", "]"}], " ", "===", 
          " ", "Solve"}], ",", "\n", "\t\t", 
         RowBox[{"Association", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"\"\<linear solutions\>\"", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", " ", "\n", "\t\t\t", 
           RowBox[{"\"\<constrained positions\>\"", " ", "\[Rule]", " ", 
            RowBox[{"Array", "[", 
             RowBox[{"vertexPosition", ",", " ", 
              RowBox[{"Dimensions", "[", "positions", "]"}]}], " ", "]"}]}], 
           ",", "\n", "\t\t\t", 
           RowBox[{
           "\"\<nonlinear constraints\>\"", " ", "\[Rule]", " ", 
            "constraints"}]}], "\n", "\t\t", "]"}], ",", "\n", "\t", "\n", 
         "\t\t", 
         RowBox[{"Association", "[", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{
           "rules", " ", "that", " ", "solve", " ", "the", " ", "linear", " ",
             "constraints"}], "*)"}], "\n", "\t\t", 
          RowBox[{
           RowBox[{"\"\<linear solutions\>\"", " ", "\[Rule]", " ", 
            RowBox[{"First", "[", "solvedLinearConstraints", "]"}]}], ",", 
           "\n", "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{
            "positions", " ", "with", " ", "linear", " ", "solutions", " ", 
             "applied"}], "*)"}], "\n", "\t\t", 
           RowBox[{"\"\<constrained positions\>\"", " ", "\[Rule]", " ", 
            RowBox[{"(", " ", 
             RowBox[{"constrainedPositions", " ", "=", " ", 
              RowBox[{
               RowBox[{"Array", "[", 
                RowBox[{"vertexPosition", ",", " ", 
                 RowBox[{"Dimensions", "[", "positions", "]"}]}], "]"}], " ", 
               "/.", " ", 
               RowBox[{"Dispatch", "[", 
                RowBox[{"First", "[", "solvedLinearConstraints", "]"}], 
                "]"}]}]}], " ", ")"}]}], ",", "\n", "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{"remaining", " ", "nonlinear", " ", "constraints"}], 
            "*)"}], "\n", "\t\t", 
           RowBox[{"\"\<nonlinear constraints\>\"", " ", "\[Rule]", " ", 
            RowBox[{"Pick", "[", " ", 
             RowBox[{
             "constraints", ",", " ", "linearEquationSelector", ",", " ", 
              "False"}], " ", "]"}]}]}], "\n", "\t\t", "]"}]}], "\n", "\t", 
        "]"}]}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"nonlinearConstraintVector", "[", 
     RowBox[{"positions_", ",", " ", "constraintEq_"}], "]"}], " ", ":=", " ",
     "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"constraints", " ", "=", " ", 
         RowBox[{"constraintVector", "[", " ", 
          RowBox[{"positions", ",", " ", "constraintEq"}], " ", "]"}]}], ",", 
        " ", 
        RowBox[{"vars", " ", "=", " ", 
         RowBox[{"Flatten", "[", " ", 
          RowBox[{"Array", "[", 
           RowBox[{"vertexPosition", ",", " ", 
            RowBox[{"Dimensions", "[", "positions", "]"}]}], "]"}], " ", 
          "]"}]}]}], " ", "}"}], ",", "\n", "\t", 
      RowBox[{"Select", "[", " ", 
       RowBox[{"constraints", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"linearEquationQ", "[", 
           RowBox[{"#", ",", "vars"}], "]"}], "&"}], " ", "/@", " ", 
         "constraintEq"}]}], "]"}]}], "\n", "]"}]}]}]}]], "Code",
 CellLabel->
  "In[835]:=",ExpressionUUID->"b298e006-af04-4d16-996b-24e3bd33eb73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "is", " ", "an", " ", "old", " ", "version", " ", "of", " ", 
    "the", " ", "function", " ", "that", " ", "will", " ", "be", " ", 
    "removed", " ", "eventually"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"dynamicVariables", "[", 
     RowBox[{"m_", ",", " ", "pinnedVertices_", ",", "initialPositions_"}], 
     "]"}], ":=", "\n", "\t", 
    RowBox[{"DeleteDuplicatesBy", "[", 
     RowBox[{
      RowBox[{"Cases", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Flatten", " ", "@", " ", 
             RowBox[{"vertexPosition", "[", "m", "]"}]}], ",", 
            RowBox[{"Flatten", " ", "@", " ", "initialPositions"}]}], "}"}], 
          "]"}], " ", "/.", " ", "pinnedVertices"}], ",", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"_vertexPosition", ",", "_"}], "}"}]}], "\n", "\t", "]"}], 
      ",", " ", "First"}], " ", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"dynamicVariables", "[", " ", 
     RowBox[{"positions_", ",", " ", "processedConstraints_Association"}], 
     " ", "]"}], " ", ":=", " ", 
    RowBox[{"dynamicVariables", "[", " ", 
     RowBox[{"positions", ",", " ", 
      RowBox[{
      "processedConstraints", "[", "\"\<constrained positions\>\"", "]"}]}], 
     " ", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"dynamicVariables", "[", " ", 
     RowBox[{"positions_", ",", " ", "constrainedPositions_"}], " ", "]"}], 
    " ", ":=", " ", "\n", "\t", 
    RowBox[{"DeleteDuplicatesBy", "[", " ", 
     RowBox[{
      RowBox[{"Cases", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Transpose", "[", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"Flatten", " ", "@", " ", "constrainedPositions"}], ",", 
           " ", 
           RowBox[{"Flatten", " ", "@", " ", "positions"}]}], " ", "}"}], " ",
          "]"}], ",", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"_vertexPosition", ",", " ", "_"}], "}"}]}], "\n", "\t", 
       "]"}], ",", " ", "First"}], " ", "]"}]}]}]}]], "Code",
 CellLabel->
  "In[837]:=",ExpressionUUID->"d950c243-7cbd-4fa7-9959-4787123d60ec"]
}, Closed]],

Cell[CellGroupData[{

Cell["evaluateEnergy[]", "Subsection",ExpressionUUID->"05958150-2753-49a1-bcff-ad04e453151c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"energy", ":", " ", 
      RowBox[{"Except", "[", "_compiledMechanismEnergy", "]"}]}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"energy", " ", "/.", " ", 
    RowBox[{"Dispatch", "[", 
     RowBox[{"positionRules", "[", "positions", "]"}], "]"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "VectorQ"}], ",", " ", 
     RowBox[{"energy", ":", " ", 
      RowBox[{"Except", "[", "_compiledMechanismEnergy", "]"}]}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"energy", " ", "/.", " ", 
    RowBox[{"Dispatch", "[", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"vertexPosition", "[", "m", "]"}], "]"}], "\[Rule]", 
       "positions"}], "]"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"energy_", "?", "compiledMechanismEnergyQ"}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"energy", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "positions", "]"}], ",", 
     RowBox[{"energy", "[", "\"\<data\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "VectorQ"}], ",", " ", 
     RowBox[{"energy_", "?", "compiledMechanismEnergyQ"}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"energy", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"positions", ",", 
     RowBox[{"energy", "[", "\"\<data\>\"", "]"}]}], "]"}]}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"energy", ":", " ", 
      RowBox[{"Except", "[", "_compiledMechanismEnergy", "]"}]}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"energy", " ", "/.", " ", 
    RowBox[{"Dispatch", "[", 
     RowBox[{"positionRules", "[", "positions", "]"}], "]"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "VectorQ"}], ",", " ", 
     RowBox[{"energy", ":", " ", 
      RowBox[{"Except", "[", "_compiledMechanismEnergy", "]"}]}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"energy", " ", "/.", " ", 
    RowBox[{"Dispatch", "[", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"vertexPosition", "[", "m", "]"}], "]"}], "\[Rule]", 
       "positions"}], "]"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"evaluateEnergy", "[", 
    RowBox[{
     RowBox[{"positions_", "?", "MatrixQ"}], ",", " ", 
     RowBox[{"energy_", "?", "compiledMechanismEnergyQ"}]}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"energy", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "positions", "]"}], ",", 
     RowBox[{"energy", "[", "\"\<data\>\"", "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"evaluateEnergy", "[", 
   RowBox[{
    RowBox[{"positions_", "?", "VectorQ"}], ",", " ", 
    RowBox[{"energy_", "?", "compiledMechanismEnergyQ"}]}], "]"}], ":=", "\n",
   "\t", 
  RowBox[{
   RowBox[{"energy", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"positions", ",", 
    RowBox[{"energy", "[", "\"\<data\>\"", "]"}]}], "]"}]}]}], "Code",
 CellLabel->
  "In[840]:=",ExpressionUUID->"5e7cf034-611a-4000-a371-7ce6fd7d8af1"]
}, Closed]],

Cell[CellGroupData[{

Cell["analyticEnergyQ[]", "Subsection",ExpressionUUID->"8bb00a64-b11b-49dc-8019-90801a7f898c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"analyticEnergyQ", "[", 
    RowBox[{"Automatic", " ", ",", " ", "positions_"}], "]"}], ":=", "True"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"analyticEnergyQ", "[", 
   RowBox[{"energyExpression_", " ", ",", " ", "positions_"}], "]"}], ":=", 
  "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"number", " ", "=", " ", 
      RowBox[{"N", "[", " ", 
       RowBox[{"energyExpression", " ", "/.", " ", 
        RowBox[{"Dispatch", "[", 
         RowBox[{"positionRules", "[", "positions", "]"}], "]"}]}], " ", 
       "]"}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Im", "[", 
       RowBox[{"Chop", "[", "number", "]"}], "]"}], " ", "\[Equal]", " ", 
      "0"}], " ", "&&", " ", 
     RowBox[{"NumericQ", "[", "number", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Chop", "[", 
       RowBox[{"Im", "[", "number", "]"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[848]:=",ExpressionUUID->"d5b77de4-6377-4475-99bc-9c004e543f84"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["modifying and creating linkages", "Section",ExpressionUUID->"be412990-58f1-4e3c-bc6b-ba37fa0aa38e"],

Cell[CellGroupData[{

Cell["toFramework[]", "Subsection",ExpressionUUID->"a7008bb2-24cc-448f-8adf-7c2a22dda581"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meshCells", "[", " ", "mr_MeshRegion", " ", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "i", "}"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Property", "[", " ", 
          RowBox[{
           RowBox[{"MeshCells", "[", " ", 
            RowBox[{"mr", ",", " ", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", "#"}], "}"}]}], " ", "]"}], ",", " ", 
           RowBox[{"getProperties", "[", " ", 
            RowBox[{"mr", ",", " ", "i", ",", " ", "#"}], " ", "]"}]}], " ", 
          "]"}], "&"}], " ", "/@", " ", 
        RowBox[{"Range", "[", " ", 
         RowBox[{"MeshCellCount", "[", " ", 
          RowBox[{"mr", ",", " ", "i"}], " ", "]"}], " ", "]"}]}], ",", "\n", 
       "\t\t", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "\n", "\t", "]"}]}], "\n",
     "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"getProperties", "[", " ", 
   RowBox[{"mr_MeshRegion", ",", " ", "d_", ",", " ", "cell_"}], " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"#", " ", "\[Rule]", " ", 
     RowBox[{"PropertyValue", "[", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mr", ",", " ", 
         RowBox[{"{", 
          RowBox[{"d", ",", " ", "cell"}], "}"}]}], "}"}], ",", " ", "#"}], 
      " ", "]"}]}], " ", "&"}], " ", "/@", " ", 
   "$meshRegionProperties"}]}]}], "Code",
 CellLabel->
  "In[850]:=",ExpressionUUID->"f5ba25d8-abb2-4a17-9b94-d7776304b74e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "toFramework", "]"}], "=", 
    RowBox[{"Options", "[", "framework", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toFramework", "[", 
    RowBox[{"mr_MeshRegion", ",", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"framework", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"MeshCoordinates", "[", "mr", "]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"meshCells", "[", "mr", "]"}], " ", "/.", " ", 
      RowBox[{"Line", "->", "rigidBar"}]}], ",", "\n", "\t", "opt"}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toFramework", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g_Graph", ",", "data___"}], "}"}], ",", " ", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"framework", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"GraphEmbedding", "[", 
      RowBox[{"g", ",", "data"}], "]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"rigidBar", "[", 
        RowBox[{"List", "@@", "#"}], "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"EdgeList", "[", "g", "]"}]}], ",", "\n", "\t", "opt"}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toFramework", "[", 
    RowBox[{"g_Graph", ",", " ", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"framework", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"GraphEmbedding", "[", "g", "]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"rigidBar", "[", 
        RowBox[{"List", "@@", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"EdgeList", "[", "g", "]"}]}], ",", "\n", "\t", "opt"}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toFramework", "::", "bad"}], "=", 
   "\"\<Unable to turn `1` into a framework.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"toFramework", "[", " ", 
   RowBox[{"obj_", " ", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{
     RowBox[{"toFramework", "::", "bad"}], ",", " ", 
     RowBox[{"Head", "[", "obj", "]"}]}], " ", "]"}]}]}]}], "Code",
 CellLabel->
  "In[852]:=",ExpressionUUID->"950dff22-28f0-4fb2-a83f-4d38bd914428"]
}, Closed]],

Cell[CellGroupData[{

Cell["randomCellNetwork[]", "Subsection",ExpressionUUID->"544c5086-1df8-4504-beb9-cdd9287aa475"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "a", " ", "periodic", " ", "Voronoi", " ", "mesh", " ", "by",
     " ", "tiling", " ", "the", " ", "vertices", " ", "and", " ", 
    "extracting", " ", "only", " ", "the", " ", "cells", " ", "associated", 
    " ", "with", " ", "the", " ", "original", " ", 
    RowBox[{"vertices", "."}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "randomCellNetwork", "]"}], ":=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"\"\<faces\>\"", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"\"\<map\>\"", "\[Rule]", "Identity"}]}], " ", "}"}], ",", 
       " ", 
       RowBox[{"Options", "[", "framework", "]"}]}], " ", "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"randomCellNetwork", "[", 
     RowBox[{
      RowBox[{"numPoints_Integer", "?", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"#", ">", "0"}], " ", "&"}], " ", ")"}]}], ",", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "selectedPrimitives", ",", " ", "positions", ",", 
        " ", "mappedPositions"}], "}"}], ",", "\n", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"randomPoints", "=", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "/", "2"}], ",", 
              RowBox[{"1", "/", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"numPoints", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\n", "\n", "\t", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"expandedMesh", "=", 
            RowBox[{"MeshPrimitives", "[", 
             RowBox[{
              RowBox[{"VoronoiMesh", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"randomPoints", "+", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", ",", "j"}], "}"}], ",", "numPoints"}], 
                    "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
                 "2"}], "]"}], "]"}], ",", "2"}], "]"}]}], "}"}], ",", "\n", 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{"selectedPrimitives", " ", "=", " ", 
            RowBox[{"Select", "[", 
             RowBox[{"expandedMesh", ",", 
              RowBox[{
               RowBox[{"Or", " ", "@@", " ", 
                RowBox[{"RegionMember", "[", 
                 RowBox[{"#", ",", " ", "randomPoints"}], "]"}]}], "&"}]}], 
             "]"}]}], ";", "\n", "\t\t", 
           RowBox[{"positions", " ", "=", " ", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"selectedPrimitives", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
             "]"}]}], ";", "\n", "\t\t", 
           RowBox[{"mappedPositions", " ", "=", " ", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<map\>\"", "]"}], " ", "/@", " ",
              "positions"}]}], ";", "\n", "\n", "\t\t", 
           RowBox[{
            RowBox[{"With", "[", "\n", "\t\t", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"mesh", " ", "=", " ", 
                RowBox[{"MeshRegion", "[", 
                 RowBox[{"positions", ",", " ", 
                  RowBox[{"Polygon", " ", "/@", " ", 
                   RowBox[{"Flatten", " ", "/@", " ", 
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{"selectedPrimitives", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "/.", " ", 
                    RowBox[{"PositionIndex", "[", "positions", "]"}]}], " ", 
                    ")"}]}]}]}], "]"}]}], "}"}], ",", "\t", "\n", "\n", 
              "\t\t\t", 
              RowBox[{"If", "[", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"BooleanQ", "[", 
                  RowBox[{"OptionValue", "[", "\"\<faces\>\"", "]"}], "]"}], 
                 " ", "&&", " ", 
                 RowBox[{
                  RowBox[{"OptionValue", "[", "\"\<faces\>\"", "]"}], " ", 
                  "\[Equal]", " ", "True"}]}], ",", "\n", "\t\t\t\t", 
                RowBox[{"framework", "[", " ", 
                 RowBox[{"mappedPositions", ",", " ", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{"mesh", ",", "2"}], "]"}], " ", "/.", " ", 
                   RowBox[{"Polygon", "\[Rule]", "face"}]}], ",", " ", 
                  RowBox[{"FilterRules", "[", 
                   RowBox[{
                    RowBox[{"{", "opt", "}"}], ",", " ", 
                    RowBox[{"Options", "[", "framework", "]"}]}], " ", 
                   "]"}]}], " ", "]"}], ",", "\n", "\t\t\t\t", 
                RowBox[{"framework", "[", " ", 
                 RowBox[{"mappedPositions", ",", " ", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{"mesh", ",", "1"}], "]"}], " ", "/.", " ", 
                   RowBox[{"Line", "\[Rule]", "spring"}]}], ",", " ", 
                  RowBox[{"FilterRules", "[", 
                   RowBox[{
                    RowBox[{"{", "opt", "}"}], ",", " ", 
                    RowBox[{"Options", "[", "framework", "]"}]}], " ", 
                   "]"}]}], " ", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\n",
              "\t\t", "]"}], " ", "/;", " ", 
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"MatrixQ", "[", 
                RowBox[{"mappedPositions", ",", "NumericQ"}], "]"}], " ", "&&",
                " ", 
               RowBox[{
                RowBox[{"Last", "[", 
                 RowBox[{"Dimensions", "[", "mappedPositions", "]"}], "]"}], 
                "\[Equal]", "2"}]}], ",", "\n", "\t\t\t", "True", ",", "\n", 
              "\t\t\t", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{"randomCellNetwork", "::", "map"}], "]"}], ";", " ", 
               "False"}]}], "\n", "\t\t", "]"}]}]}]}], "\n", "\t", "]"}]}], 
       "]"}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"randomCellNetwork", "[", 
     RowBox[{"numPoints_", ",", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
     RowBox[{"Message", "[", 
      RowBox[{"randomCellNetwork", "::", "num"}], "]"}]}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomCellNetwork", "::", "map"}], "=", 
     "\"\<Option \\\"map\\\" is not a function taking a point in 2D to a \
point in 2D.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomCellNetwork", "::", "num"}], "=", 
     "\"\<Number of points should be a positive integer.\>\""}], 
    ";"}]}]}]], "Code",
 CellLabel->
  "In[858]:=",ExpressionUUID->"1ff66576-f1b4-46d1-9239-013556c9f5eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["randomTriangulatedNetwork[]", "Subsection",ExpressionUUID->"e5fb46ed-8d91-476b-90c1-a5a692e9c7b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "a", " ", "periodic", " ", "Voronoi", " ", "mesh", " ", "by",
     " ", "tiling", " ", "the", " ", "vertices", " ", "and", " ", 
    "extracting", " ", "only", " ", "the", " ", "cells", " ", "associated", 
    " ", "with", " ", "the", " ", "original", " ", 
    RowBox[{"vertices", "."}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "randomTriangulatedNetwork", "]"}], ":=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"\"\<faces\>\"", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"\"\<map\>\"", "\[Rule]", "Identity"}]}], " ", "}"}], ",", 
       " ", 
       RowBox[{"Options", "[", "framework", "]"}]}], " ", "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"randomTriangulatedNetwork", "[", 
     RowBox[{
      RowBox[{"numPoints_Integer", "?", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"#", ">", "0"}], " ", "&"}], " ", ")"}]}], ",", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "selectedPrimitives", ",", " ", "positions", ",", 
        " ", "mappedPositions"}], "}"}], ",", "\n", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"randomPoints", "=", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "/", "2"}], ",", 
              RowBox[{"1", "/", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"numPoints", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\n", "\n", "\t", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"expandedMesh", "=", 
            RowBox[{"MeshPrimitives", "[", 
             RowBox[{
              RowBox[{"DelaunayMesh", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"randomPoints", "+", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", ",", "j"}], "}"}], ",", "numPoints"}], 
                    "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
                 "2"}], "]"}], "]"}], ",", "2"}], "]"}]}], "}"}], ",", "\n", 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{"selectedPrimitives", " ", "=", " ", 
            RowBox[{"Select", "[", 
             RowBox[{"expandedMesh", ",", 
              RowBox[{
               RowBox[{"Or", " ", "@@", " ", 
                RowBox[{"RegionMember", "[", 
                 RowBox[{"#", ",", " ", "randomPoints"}], "]"}]}], "&"}]}], 
             "]"}]}], ";", "\n", "\t\t", 
           RowBox[{"positions", " ", "=", " ", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"selectedPrimitives", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
             "]"}]}], ";", "\n", "\t\t", 
           RowBox[{"mappedPositions", " ", "=", " ", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<map\>\"", "]"}], " ", "/@", " ",
              "positions"}]}], ";", "\n", "\n", "\t\t", 
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"mesh", " ", "=", " ", 
                RowBox[{"MeshRegion", "[", 
                 RowBox[{"positions", ",", " ", 
                  RowBox[{"Polygon", " ", "/@", " ", 
                   RowBox[{"Flatten", " ", "/@", " ", 
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{"selectedPrimitives", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "/.", " ", 
                    RowBox[{"PositionIndex", "[", "positions", "]"}]}], " ", 
                    ")"}]}]}]}], "]"}]}], "}"}], ",", "\t", "\n", "\n", 
              "\t\t\t", 
              RowBox[{"If", "[", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"BooleanQ", "[", 
                  RowBox[{"OptionValue", "[", "\"\<faces\>\"", "]"}], "]"}], 
                 " ", "&&", " ", 
                 RowBox[{
                  RowBox[{"OptionValue", "[", "\"\<faces\>\"", "]"}], " ", 
                  "\[Equal]", " ", "True"}]}], ",", "\n", "\t\t\t\t", 
                RowBox[{"framework", "[", " ", 
                 RowBox[{"mappedPositions", ",", " ", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{"mesh", ",", "2"}], "]"}], " ", "/.", " ", 
                   RowBox[{"Polygon", "\[Rule]", "face"}]}], ",", " ", 
                  RowBox[{"FilterRules", "[", 
                   RowBox[{
                    RowBox[{"{", "opt", "}"}], ",", " ", 
                    RowBox[{"Options", "[", "framework", "]"}]}], " ", 
                   "]"}]}], " ", "]"}], ",", "\n", "\t\t\t\t", 
                RowBox[{"framework", "[", " ", 
                 RowBox[{"mappedPositions", ",", " ", 
                  RowBox[{
                   RowBox[{"MeshCells", "[", 
                    RowBox[{"mesh", ",", "1"}], "]"}], " ", "/.", " ", 
                   RowBox[{"Line", "\[Rule]", "spring"}]}], ",", " ", 
                  RowBox[{"FilterRules", "[", 
                   RowBox[{
                    RowBox[{"{", "opt", "}"}], ",", " ", 
                    RowBox[{"Options", "[", "framework", "]"}]}], " ", 
                   "]"}]}], " ", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\n",
              "\t\t", "]"}], " ", "/;", " ", 
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"MatrixQ", "[", 
                RowBox[{"mappedPositions", ",", "NumericQ"}], "]"}], " ", "&&",
                " ", 
               RowBox[{
                RowBox[{"Last", "[", 
                 RowBox[{"Dimensions", "[", "mappedPositions", "]"}], "]"}], 
                "\[Equal]", "2"}]}], ",", "\n", "\t\t\t", "True", ",", "\n", 
              "\t\t\t", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{"randomCellNetwork", "::", "map"}], "]"}], ";", " ", 
               "False"}]}], "\n", "\t\t", "]"}]}]}]}], "\n", "\t", "]"}]}], 
       "]"}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"randomTriangulatedNetwork", "[", 
     RowBox[{"numPoints_", ",", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
     RowBox[{"Message", "[", 
      RowBox[{"randomTriangulatedNetwork", "::", "num"}], "]"}]}]}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomTriangulatedNetwork", "::", "map"}], "=", 
     "\"\<Option \\\"map\\\" is not a function taking a point in 2D to a \
point in 2D.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomTriangulatedNetwork", "::", "num"}], "=", 
     "\"\<Number of points should be a positive integer.\>\""}], 
    ";"}]}]}]], "Code",
 CellLabel->
  "In[863]:=",ExpressionUUID->"c1058285-daa4-49c3-b6e6-cf523195583e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Henneberg", "Subsection",ExpressionUUID->"1d6849e4-8a93-416b-9629-816a8d713505"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Henneberg", "[", "1", "]"}], "[", 
     RowBox[{
      RowBox[{"n_", "?", "VectorQ"}], ",", " ", 
      RowBox[{"label_", " ", "\[Rule]", " ", 
       RowBox[{"pos_", "?", "VectorQ"}]}]}], "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"addCells", "[", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"joint", "[", 
        RowBox[{"label", " ", "\[Rule]", " ", 
         RowBox[{"PadRight", "[", 
          RowBox[{"pos", ",", " ", 
           RowBox[{"embeddingDimension", "[", "m", "]"}]}], "]"}]}], " ", 
        "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"rigidBar", "[", 
          RowBox[{"{", 
           RowBox[{"#", ",", "label"}], "}"}], "]"}], "&"}], " ", "/@", " ", 
        "n"}]}], " ", "}"}], " ", "]"}], "[", "m", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Henneberg", "[", "1", "]"}], "[", 
    RowBox[{"pos_", "?", "VectorQ"}], "]"}], "[", " ", 
   RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"vertices", " ", "=", " ", 
      RowBox[{"RandomSample", "[", " ", 
       RowBox[{
        RowBox[{"Range", "[", " ", 
         RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], " ", "]"}], ",", 
        " ", "2"}], " ", "]"}]}], " ", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Henneberg", "[", "1", "]"}], "[", 
      RowBox[{"vertices", ",", " ", 
       RowBox[{
        RowBox[{"Unique", "[", "]"}], " ", "\[Rule]", " ", "pos"}]}], " ", 
      "]"}], "[", "m", "]"}]}], "\n", "\t", "]"}]}]}], "Code",
 CellLabel->
  "In[868]:=",ExpressionUUID->"91d3ea7e-b367-4d8f-a2e1-b86f413fad70"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Henneberg", "[", "2", "]"}], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n1_", ",", " ", "n2_", ",", "n3_"}], "}"}], ",", " ", 
      RowBox[{"label_", " ", "\[Rule]", " ", "pos_"}]}], "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"placeVertices", "[", 
     RowBox[{"label", " ", "\[Rule]", " ", "pos"}], "]"}], " ", "@", " ", 
    RowBox[{
     RowBox[{"addCells", "[", 
      RowBox[{"{", 
       RowBox[{"rigidBar", "[", 
        RowBox[{"{", 
         RowBox[{"label", ",", " ", "n3"}], "}"}], "]"}], "}"}], "]"}], " ", 
     "@", " ", 
     RowBox[{
      RowBox[{"subdivideCell", "[", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n1", ",", "n2"}], "}"}], ",", " ", "label"}], " ", "]"}], 
      "[", " ", "m", " ", "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Henneberg", "[", "2", "]"}], "[", 
     RowBox[{"pos_", "?", "VectorQ"}], "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"edge", " ", "=", " ", 
       RowBox[{"RandomChoice", "[", " ", 
        RowBox[{"m", "[", "\"\<edges\>\"", "]"}], " ", "]"}]}], " ", "}"}], 
     ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Henneberg", "[", "2", "]"}], "[", 
       RowBox[{
        RowBox[{"Flatten", "[", " ", 
         RowBox[{"{", " ", 
          RowBox[{"edge", ",", " ", 
           RowBox[{"RandomChoice", "[", " ", 
            RowBox[{"Complement", "[", " ", 
             RowBox[{
              RowBox[{"Range", "[", " ", 
               RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], " ", "]"}], 
              ",", " ", "edge"}], "]"}], " ", "]"}]}], " ", "}"}], " ", "]"}],
         ",", " ", 
        RowBox[{
         RowBox[{"Unique", "[", "]"}], " ", "\[Rule]", " ", "pos"}]}], " ", 
       "]"}], "[", "m", "]"}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Henneberg", "[", 
    RowBox[{"d", ":", 
     RowBox[{"1", "|", "2"}]}], "]"}], "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "x__"}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Henneberg", "[", "d", "]"}], "[", "x", "]"}], "[", "m", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[870]:=",ExpressionUUID->"83cf1a8f-e72b-4988-9fbc-31a4ee901dc2"]
}, Closed]],

Cell[CellGroupData[{

Cell["blockFaces[] - not done", "Subsection",ExpressionUUID->"4ad8f35c-0c6e-432e-92bd-045a2058c437"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"faceToBlock", "[", " ", 
    RowBox[{
    "thickness_", ",", " ", "label_", ",", " ", "centroid_", " ", ",", " ", 
     "normal_", " ", ",", " ", "indices_"}], " ", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"joint", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"label", "[", "1", "]"}], " ", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{"centroid", " ", "+", " ", 
          RowBox[{"thickness", " ", "normal"}]}], ")"}]}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<shape\>\"", "\[Rule]", "None"}], ",", 
         "\"\<blockJoint\>\""}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"joint", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"label", "[", "2", "]"}], " ", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{"centroid", " ", "-", " ", 
          RowBox[{"thickness", " ", "normal"}]}], ")"}]}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<shape\>\"", "\[Rule]", "None"}], ",", 
         "\"\<blockJoint\>\""}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"rigidBar", "[", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", " ", 
           RowBox[{"label", "[", "1", "]"}]}], "}"}], " ", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<shape\>\"", " ", "\[Rule]", " ", "None"}], ",", " ", 
           "\"\<blockEdge\>\""}], "}"}]}], " ", "]"}], "&"}], " ", "/@", " ", 
      "indices"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"rigidBar", "[", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", " ", 
           RowBox[{"label", "[", "2", "]"}]}], "}"}], " ", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<shape\>\"", " ", "\[Rule]", " ", "None"}], ",", " ", 
           "\"\<blockEdge\>\""}], "}"}]}], " ", "]"}], "&"}], " ", "/@", " ", 
      "indices"}]}], "\n", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"blockFaces", "[", " ", "faces_", " ", "]"}], "[", " ", 
    RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"normals", " ", "=", " ", 
        RowBox[{"normalVector", "[", " ", 
         RowBox[{"m", " ", ",", " ", "faces", " ", ",", " ", 
          RowBox[{"\"\<normalize\>\"", " ", "\[Rule]", " ", "False"}]}], 
         "]"}]}], ",", "\n", "\t", 
       RowBox[{"centroids", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"m", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "#"}], "]"}], "]"}], "]"}], "&"}], " ", "/@", 
         " ", "faces"}]}], ",", "\n", "\t", 
       RowBox[{"labels", " ", "=", " ", 
        RowBox[{
         RowBox[{"Unique", "[", "]"}], " ", "/@", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "faces", "]"}], "]"}]}]}]}], "\n", "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"addCells", "[", " ", 
       RowBox[{"MapThread", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"faceToBlock", "[", " ", 
           RowBox[{
           "0.1", ",", " ", "#1", ",", " ", "#2", ",", " ", "#3", ",", " ", 
            "#4"}], " ", "]"}], "&"}], ",", " ", 
         RowBox[{"{", " ", 
          RowBox[{
          "labels", ",", " ", "centroids", ",", " ", "normals", ",", " ", 
           "faces"}], " ", "}"}]}], " ", "]"}], " ", "]"}], "[", "m", "]"}]}],
     "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"blockFaces", "[", " ", 
   RowBox[{"m_", "?", "mechanismQ"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"faces", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"listFaces", "[", "m", "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], ">", "3"}], "&"}]}], "]"}]}], 
     " ", "}"}], ",", " ", 
    RowBox[{
     RowBox[{"blockFaces", "[", " ", "faces", " ", "]"}], "[", "m", "]"}]}], 
   " ", "]"}]}]}], "Code",
 CellLabel->
  "In[873]:=",ExpressionUUID->"aac3bd51-98d4-4ee4-9066-cb36ede9eb5c"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["extracting rigidity data", "Section",ExpressionUUID->"a179735a-0e92-4be5-8c11-2f14787a7022"],

Cell[CellGroupData[{

Cell["cellData[]", "Subsection",ExpressionUUID->"9f7f7300-e093-4608-bdc0-515eb88529f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cellData", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "MatrixQ"}], " ", ",", " ", 
     RowBox[{"cellSpec_", " ", ":", " ", "_"}]}], " ", "]"}], " ", ":=", " ", 
   "\n", 
   RowBox[{
    RowBox[{"Module", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", "\n", 
       RowBox[{
        RowBox[{"cells", " ", "=", " ", 
         RowBox[{"mechanismCells", "[", 
          RowBox[{"m", ",", " ", "cellSpec"}], "]"}]}], ",", "\n", 
        "activeCells", ",", " ", "inactiveCells"}], "\n", "}"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"activeCells", " ", "=", " ", 
        RowBox[{"Cases", "[", 
         RowBox[{"cells", ",", "_Rule"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"inactiveCells", " ", "=", " ", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{"cells", ",", "_Rule"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"Join", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
             RowBox[{"cellDataInternal", "[", " ", 
              RowBox[{"m", ",", " ", "positions", ",", " ", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
                RowBox[{"Merge", "[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", "Join"}], "]"}]}]}], 
              " ", "]"}]}], " ", ")"}], " ", "&"}], " ", "/@", " ", 
          "activeCells"}], ",", "\n", "\t\t", "inactiveCells"}], "\n", "\t", 
        "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Length", "[", "positions", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellData", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"cellSpec_", " ", ":", " ", "_"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"cellData", "[", 
    RowBox[{"m", ",", " ", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "cellSpec"}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellDataInternal", "[", " ", 
    RowBox[{"m_", ",", " ", "positions_", " ", ",", " ", 
     RowBox[{"Rule", "[", " ", 
      RowBox[{
       RowBox[{"rigidBar", "[", "indices_", "]"}], ",", " ", 
       "data_Association"}], "]"}]}], " ", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"automaticCells", " ", ",", " ", "newlengths"}], " ", "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"automaticCells", " ", "=", " ", 
       RowBox[{"Position", "[", " ", 
        RowBox[{
         RowBox[{"data", "[", "\"\<length\>\"", "]"}], ",", " ", 
         "Automatic"}], " ", "]"}]}], ";", "\n", "\t", 
      RowBox[{"newlengths", " ", "=", " ", 
       RowBox[{"displacementLength", "[", 
        RowBox[{"m", ",", " ", "positions", ",", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"indices", ",", "automaticCells"}], "]"}]}], " ", "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"ReplacePart", "[", " ", 
       RowBox[{"data", ",", " ", 
        RowBox[{"\"\<length\>\"", " ", "\[Rule]", " ", 
         RowBox[{"ReplacePart", "[", " ", 
          RowBox[{
           RowBox[{"data", "[", "\"\<length\>\"", "]"}], ",", " ", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "automaticCells", "]"}], " ", "\[Rule]", 
             " ", "newlengths"}], "]"}]}], " ", "]"}]}]}], " ", "]"}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellDataInternal", "[", " ", 
    RowBox[{"m_", ",", " ", "positions_", " ", ",", " ", 
     RowBox[{"Rule", "[", " ", 
      RowBox[{
       RowBox[{"spring", "[", "indices_", "]"}], ",", " ", 
       "data_Association"}], "]"}]}], " ", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
      "automaticCells", " ", ",", " ", "newlengths", " ", ",", " ", 
       "newstrains"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"automaticCells", " ", "=", " ", 
       RowBox[{"Position", "[", " ", 
        RowBox[{
         RowBox[{"data", "[", "\"\<length\>\"", "]"}], ",", " ", 
         "Automatic"}], " ", "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"newlengths", " ", "=", " ", 
       RowBox[{"ReplacePart", "[", " ", 
        RowBox[{
         RowBox[{"data", "[", "\"\<length\>\"", "]"}], ",", 
         RowBox[{"Thread", "[", " ", 
          RowBox[{
           RowBox[{"Flatten", "[", " ", "automaticCells", " ", "]"}], " ", 
           "\[Rule]", " ", 
           RowBox[{"displacementLength", "[", 
            RowBox[{"m", ",", " ", "positions", ",", " ", 
             RowBox[{"Extract", "[", 
              RowBox[{"indices", ",", "automaticCells"}], "]"}]}], " ", 
            "]"}]}], " ", "]"}]}], " ", "]"}]}], ";", "\t", "\n", "\t", 
      RowBox[{"newstrains", " ", "=", " ", 
       RowBox[{
        RowBox[{"data", "[", "\"\<strain\>\"", "]"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<linear\>\"", " ", "\[Rule]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#1", "-", "#2"}], ")"}], "/", "#2"}], " ", "&"}], 
           ")"}]}], " ", "}"}]}]}], ";", "\n", "\n", "\t", 
      RowBox[{"ReplacePart", "[", " ", 
       RowBox[{"data", ",", " ", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"\"\<length\>\"", " ", "\[Rule]", " ", "newlengths"}], ",", 
          "\n", "\t\t", 
          RowBox[{"\"\<strain\>\"", " ", "\[Rule]", " ", "newstrains"}]}], 
         "\n", "\t\t", "}"}]}], "\n", "\t", "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellDataInternal", "[", " ", 
    RowBox[{"m_", ",", " ", "positions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"fold", "[", "indices_", "]"}], ",", " ", "data_Association"}],
       " ", "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"automaticCells", ",", " ", "newangles"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"automaticCells", " ", "=", " ", 
       RowBox[{"Position", "[", " ", 
        RowBox[{
         RowBox[{"data", "[", "\"\<angle\>\"", "]"}], ",", " ", "Automatic"}],
         " ", "]"}]}], ";", "\n", "\t", 
      RowBox[{"newangles", " ", "=", " ", 
       RowBox[{"foldAngle", "[", 
        RowBox[{"m", ",", " ", "positions", ",", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"indices", ",", "automaticCells"}], "]"}]}], " ", "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"ReplacePart", "[", " ", 
       RowBox[{"data", ",", " ", 
        RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", 
         RowBox[{"ReplacePart", "[", " ", 
          RowBox[{
           RowBox[{"data", "[", "\"\<angle\>\"", "]"}], ",", " ", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "automaticCells", "]"}], " ", "\[Rule]", 
             " ", "newangles"}], "]"}]}], " ", "]"}]}]}], " ", "]"}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellDataInternal", "[", " ", 
    RowBox[{"m_", ",", " ", "positions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"angleJoint", "[", "indices_", "]"}], ",", " ", 
       "data_Association"}], " ", "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"automaticCells", ",", " ", "newangles"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"automaticCells", " ", "=", " ", 
       RowBox[{"Position", "[", " ", 
        RowBox[{
         RowBox[{"data", "[", "\"\<angle\>\"", "]"}], ",", " ", "Automatic"}],
         " ", "]"}]}], ";", "\n", "\t", 
      RowBox[{"newangles", " ", "=", " ", 
       RowBox[{"turningAngle", "[", 
        RowBox[{"m", ",", " ", "positions", ",", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"indices", ",", "automaticCells"}], "]"}]}], " ", "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"ReplacePart", "[", " ", 
       RowBox[{"data", ",", " ", 
        RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", 
         RowBox[{"ReplacePart", "[", " ", 
          RowBox[{
           RowBox[{"data", "[", "\"\<angle\>\"", "]"}], ",", " ", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "automaticCells", "]"}], " ", "\[Rule]", 
             " ", "newangles"}], "]"}]}], " ", "]"}]}]}], " ", "]"}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cellDataInternal", "[", " ", 
    RowBox[{"m_", ",", " ", "positions_", ",", " ", 
     RowBox[{"Rule", "[", " ", 
      RowBox[{
       RowBox[{"pinnedJoint", "[", "indices_", "]"}], ",", " ", 
       "data_Association"}], " ", "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"automaticCells", ",", " ", "pos", ",", " ", "newconstraints"}],
       "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"automaticCells", " ", "=", " ", 
       RowBox[{"Position", "[", " ", 
        RowBox[{
         RowBox[{"data", "[", "\"\<constraint\>\"", "]"}], ",", " ", 
         "Automatic"}], " ", "]"}]}], ";", "\n", "\t", 
      RowBox[{"pos", " ", "=", " ", 
       RowBox[{"positions", "[", 
        RowBox[{"[", " ", 
         RowBox[{"Flatten", "[", " ", "automaticCells", " ", "]"}], " ", 
         "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"newconstraints", " ", "=", " ", 
       RowBox[{"ReplacePart", "[", " ", 
        RowBox[{
         RowBox[{"data", "[", "\"\<constraint\>\"", "]"}], ",", " ", 
         RowBox[{"Thread", "[", " ", 
          RowBox[{
           RowBox[{"Flatten", "[", "automaticCells", "]"}], " ", "\[Rule]", 
           " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#1", "-", "#2"}], " ", "&"}], ")"}]}], " ", "]"}]}], 
        " ", "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"ReplacePart", "[", " ", 
       RowBox[{"data", ",", " ", 
        RowBox[{
        "\"\<constraint\>\"", " ", "\[Rule]", " ", "newconstraints"}]}], " ", 
       "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"cellDataInternal", "[", " ", 
   RowBox[{"m_", ",", " ", "positions_", ",", " ", 
    RowBox[{"Rule", "[", " ", 
     RowBox[{"cell_", ",", " ", "data_"}], " ", "]"}]}], "]"}], " ", ":=", 
  " ", "data"}]}], "Code",
 CellLabel->
  "In[876]:=",ExpressionUUID->"b8878c3c-97d6-4b85-9234-4ded19c9f3fd"]
}, Closed]],

Cell[CellGroupData[{

Cell["constrainedCells[]", "Subsection",ExpressionUUID->"cc530052-f836-4fca-b7ce-fe5da13a5e96"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"constrainedComponents", "[", " ", 
    RowBox[{"m_", ",", " ", 
     RowBox[{"c_", " ", ":", " ", "_"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"constrainedCells", "[", 
    RowBox[{"m", ",", "c"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"constrainedCells", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"cellSpec_", " ", ":", " ", "_"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"constrainedCells", "[", " ", 
   RowBox[{"m", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "cellSpec"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"constrainedCells", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "pos_", ",", " ", 
    RowBox[{"cellSpec_", " ", ":", " ", "_"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"dataToCheck", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<stiffness\>\"", ",", " ", "\"\<torsionalStiffness\>\"", ",", 
         " ", "\"\<pinningStiffness\>\"", ",", " ", "\"\<faceStiffness\>\"", 
         ",", "\"\<YoungsModulus\>\""}], "}"}]}], "\n", "}"}], ",", "\n", 
     "\t", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
             RowBox[{"cellDataInternal", "[", 
              RowBox[{"m", ",", " ", "pos", ",", " ", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
                RowBox[{"Merge", "[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", "Join"}], "]"}]}]}], 
              "]"}]}], " ", "&"}], ")"}], " ", "/@", " ", 
          RowBox[{"mechanismCells", "[", " ", 
           RowBox[{"m", ",", " ", "cellSpec", " ", ",", " ", 
            RowBox[{"#1", " ", "\[Rule]", " ", "Infinity"}]}], " ", "]"}]}], 
         ")"}], " ", "&"}], " ", "/@", " ", "dataToCheck"}], "]"}]}], "\n", 
    "]"}], " ", "/;", " ", 
   RowBox[{"vertexCoordinatesQ", "[", 
    RowBox[{"m", ",", "pos"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[884]:=",ExpressionUUID->"669b7e87-e2af-43e9-8628-280eb9053ab1"]
}, Closed]],

Cell[CellGroupData[{

Cell["constraintEquations[]", "Subsection",ExpressionUUID->"b7156b33-cb6c-4b74-aacf-f98656168e47"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", " ", "constraintEquations", " ", "]"}], " ", "=", 
    " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", "None"}], ",", "\n",
       "\t", 
      RowBox[{"\"\<output\>\"", " ", "\[Rule]", " ", "vertexDisplacement"}], 
      ",", "\n", "\t", 
      RowBox[{"\"\<pattern\>\"", " ", "\[Rule]", " ", "_"}]}], "\n", "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"orderQ", "[", " ", 
   RowBox[{"_Integer", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], ")"}]}], " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"orderQ", "[", " ", "Infinity", " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"orderQ", "[", " ", "x_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"constraintEquations", "::", "order"}], "]"}], ";", " ", 
     "False"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"constraintEquations", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{
      RowBox[{"_", "?", "MatrixQ"}], "|", "Automatic"}]}], ",", " ", 
    RowBox[{"order_", "?", "orderQ"}], " ", ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"actualPositions", " ", "=", " ", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"positions", " ", "===", " ", "Automatic"}], ",", " ", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
         "positions"}], " ", "]"}]}], ",", "\n", "\t", 
      RowBox[{"output", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<output\>\"", "]"}]}]}], "\n", "}"}], 
    ",", "\n", "\t", 
    RowBox[{
     RowBox[{"constraintEquationsInternal", "[", 
      RowBox[{"m", ",", " ", "actualPositions", ",", " ", "order", ",", " ", 
       RowBox[{"OptionValue", "[", "\"\<pattern\>\"", "]"}], ",", " ", 
       RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}], ",", " ", 
       "output"}], " ", "]"}], " ", "/;", " ", 
     RowBox[{"Which", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Not", " ", "@", " ", 
        RowBox[{"vertexCoordinatesQ", "[", " ", 
         RowBox[{"m", ",", " ", "positions"}], " ", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"constraintEquations", "::", "pos"}], "]"}], ";", " ", 
        "False"}], ",", "\n", "\t\t", 
       RowBox[{"Not", " ", "@", " ", 
        RowBox[{"Or", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"IntegerQ", "[", "order", "]"}], " ", "&&", " ", 
           RowBox[{"order", " ", ">", " ", "0"}]}], ",", " ", 
          RowBox[{"order", " ", "===", " ", "Infinity"}]}], " ", "]"}]}], ",",
        " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"constraintEquations", "::", "order"}], "]"}], ";", " ", 
        "False"}], ",", "\n", "\t\t", 
       RowBox[{"Not", " ", "@", " ", 
        RowBox[{"MatchQ", "[", 
         RowBox[{"output", ",", " ", 
          RowBox[{"vertexDisplacement", "|", "vertexPosition"}]}], "]"}]}], 
       ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"constraintEquations", "::", "output"}], "]"}], ";", " ", 
        "False"}], ",", "\n", "\t\t", "True", ",", " ", "True"}], "\n", "\t", 
      "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintEquations", "[", " ", 
    RowBox[{"m_", ",", " ", 
     RowBox[{"order_", "?", "orderQ"}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"constraintEquations", "[", " ", 
    RowBox[{"m", ",", " ", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "order", ",", 
     " ", "opt"}], " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintEquations", "::", "pos"}], "=", 
   "\"\<Positions do not correspond to mechanism vertices.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintEquations", "::", "output"}], "=", 
   "\"\<Option \\\"output\\\" must be either vertexDisplacement or \
vertexPosition.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintEquations", "::", "order"}], "=", 
   "\"\<Order of expansion must be a positive integer or Infinity.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[887]:=",ExpressionUUID->"b0b15184-d1a1-457a-8b95-c43845ad02d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"constraintEquationsInternal", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "order_", ",", " ", "pattern_", 
    ",", " ", "constraints_", ",", " ", 
    RowBox[{"output", " ", ":", " ", 
     RowBox[{"vertexDisplacement", " ", "|", " ", "vertexPosition"}]}]}], " ",
    "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tmp", ",", " ", "tmpPositions"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"tmpPositions", " ", "=", " ", 
      RowBox[{"positions", " ", "/.", " ", 
       RowBox[{"vertexPosition", " ", "\[Rule]", " ", "tmp"}]}]}], ";", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"ReplaceAll", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"reduceConstraintToOrder", "[", "\n", "\t\t\t", 
         RowBox[{"positions", ",", "\n", "\t\t\t", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"componentToConstraints", "[", 
                 RowBox[{"m", " ", ",", " ", "tmpPositions", ",", " ", 
                  RowBox[{"vertexPosition", "[", "m", "]"}], ",", " ", "#"}], 
                 " ", "]"}], "&"}], " ", "/@", " ", 
               RowBox[{"constrainedCells", "[", 
                RowBox[{
                "m", " ", ",", " ", "tmpPositions", ",", " ", "pattern"}], 
                " ", "]"}]}], ")"}], ",", "\n", "\t\t\t\t", 
             RowBox[{"constraintVector", "[", " ", 
              RowBox[{"tmpPositions", ",", " ", "constraints"}], " ", "]"}]}],
             "\n", "\t\t\t", "}"}], "]"}], ",", "\n", "\t\t\t", "order"}], 
         "\n", "\t\t", "]"}], ",", "\n", "\n", "\t\t", 
        RowBox[{"Which", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"order", " ", "===", " ", "Infinity"}], " ", "&&", " ", 
           RowBox[{"output", " ", "===", " ", "vertexDisplacement"}]}], ",", 
          " ", 
          RowBox[{"Dispatch", "[", 
           RowBox[{"positionRules", "[", " ", 
            RowBox[{"positions", " ", "+", " ", 
             RowBox[{"vertexDisplacement", "[", "m", "]"}]}], " ", "]"}], 
           "]"}], ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"IntegerQ", "[", "order", "]"}], " ", "&&", " ", 
           RowBox[{"output", " ", "===", " ", "vertexPosition"}]}], ",", " ", 
          
          RowBox[{"Dispatch", "[", 
           RowBox[{"displacementRules", "[", " ", 
            RowBox[{
             RowBox[{"vertexPosition", "[", "m", "]"}], " ", "-", " ", 
             "positions"}], " ", "]"}], "]"}], ",", "\n", "\t\t\t", "True", 
          ",", " ", 
          RowBox[{"{", "}"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}], " ",
       "/.", " ", 
      RowBox[{"tmp", " ", "\[Rule]", " ", "vertexPosition"}]}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[896]:=",ExpressionUUID->"1541376a-e966-4f59-8e04-b3265424a372"],

Cell[CellGroupData[{

Cell["componentToConstraints[]", "Subsubsection",ExpressionUUID->"8eb12589-13d0-4db1-8d82-5a7f3627cf24"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"componentToConstraints", "[", " ", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"rigidBar", "[", "indices_", "]"}], ",", " ", "data_"}], 
      "]"}]}], " ", "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"displacementLengthSquared", "[", " ", 
     RowBox[{"arbitraryPositions", ",", " ", "indices"}], " ", "]"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"data", "[", "\"\<length\>\"", "]"}], "^", "2"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentToConstraints", "[", " ", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"elasticFace", "[", "indices_", "]"}], ",", " ", "data_"}], 
      "]"}]}], " ", "]"}], ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"edges", " ", "=", " ", 
       RowBox[{"DeleteDuplicatesBy", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Partition", "[", 
            RowBox[{"indices", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", "1", ",", "1"}], "]"}], 
           ",", "2"}], "]"}], ",", "Sort"}], " ", "]"}]}], "\n", "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"displacementLengthSquared", "[", " ", 
       RowBox[{"arbitraryPositions", ",", " ", "edges"}], " ", "]"}], " ", 
      "-", " ", 
      RowBox[{"displacementLengthSquared", "[", " ", 
       RowBox[{"positions", ",", " ", "edges"}], " ", "]"}]}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentToConstraints", "[", " ", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"spring", "[", "indices_", "]"}], ",", " ", "data_"}], "]"}]}],
     " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"MapThread", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", "[", 
       RowBox[{"#2", ",", "#3"}], "]"}], "&"}], ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"data", "[", "\"\<strain\>\"", "]"}], ",", " ", 
       RowBox[{"displacementLength", "[", " ", 
        RowBox[{"arbitraryPositions", ",", " ", "indices"}], " ", "]"}], ",", 
       " ", 
       RowBox[{"data", "[", "\"\<length\>\"", "]"}]}], " ", "}"}]}], " ", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentToConstraints", "[", " ", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"fold", "[", "indices_", "]"}], ",", " ", "data_"}], " ", 
      "]"}]}], " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"foldAngle", "[", " ", 
     RowBox[{"m", ",", " ", "arbitraryPositions", ",", " ", "indices"}], " ", 
     "]"}], " ", "-", " ", 
    RowBox[{"data", "[", "\"\<angle\>\"", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"componentToConstraints", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
    RowBox[{"Rule", "[", 
     RowBox[{
      RowBox[{"pinnedJoint", "[", "indices_", "]"}], ",", " ", "data_"}], " ",
      "]"}]}], " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"MapThread", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"#1", "[", 
      RowBox[{"#2", ",", "#3"}], "]"}], "&"}], ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"data", "[", "\"\<constraint\>\"", "]"}], ",", " ", 
      RowBox[{"vertexPosition", "[", " ", 
       RowBox[{"indices", ",", " ", 
        RowBox[{"All", "[", " ", 
         RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], " ", "]"}]}], 
       " ", "]"}], ",", " ", 
      RowBox[{"positions", "[", 
       RowBox[{"[", " ", "indices", " ", "]"}], "]"}]}], " ", "}"}]}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[897]:=",ExpressionUUID->"d23ba088-27d1-4486-af97-c5061397f6ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"componentToConstraints", "[", " ", "___", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"{", "}"}]}]], "Code",
 CellLabel->
  "In[902]:=",ExpressionUUID->"49ff6c33-b326-4e81-9f7f-58b38ecac55a"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanismEnergy[]", "Subsection",ExpressionUUID->"534dfc5d-c63b-4c6e-ba63-758d27e8d0e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "\"\<Methods\>\"", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
    "rigidBar", ",", " ", "spring", ",", " ", "fold", ",", " ", "joint", ",", 
     " ", "angleJoint", ",", " ", "\"\<constraints\>\""}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "rigidBar", "]"}], "=", "1"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "spring", "]"}], "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "fold", "]"}], "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "4"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "elasticFace", "]"}], " ", "=", " ", 
   "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "pinnedJoint", "]"}], "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "4"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "angleJoint", "]"}], "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "4"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$defaultStiffness", "[", "\"\<constraints\>\"", "]"}], "=", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "::", "err"}], "=", 
   "\"\<`1` does not have a default stiffness.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$defaultStiffness", "[", "s_", "]"}], ":=", 
   RowBox[{"\"\<nothing\>\"", "/;", " ", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"$defaultStiffness", "::", "err"}], ",", "s"}], "]"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "mechanismEnergy", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<constraints\>\"", "->", "None"}], ",", " ", 
      RowBox[{"\"\<pattern\>\"", " ", "\[Rule]", " ", "_"}]}], "}"}]}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismEnergy", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", " ", ":", " ", "Automatic"}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"actualPositions", " ", "=", " ", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"positions", " ", "===", " ", "Automatic"}], ",", " ", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
         "positions"}], "]"}]}], " ", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"mechanismEnergyInternal", "[", 
       RowBox[{"m", ",", " ", "actualPositions", ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<pattern\>\"", "]"}]}], " ", "]"}], 
      " ", "/;", " ", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", " ", "actualPositions"}], "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismEnergy", "::", "pos"}], "=", 
   "\"\<Positions do not correspond to mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "_", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
    RowBox[{"Message", "[", 
     RowBox[{"mechanismEnergy", "::", "pos"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"mechanismEnergyInternal", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "constraints_", ",", " ", 
    "pattern_"}], " ", "]"}], " ", ":=", " ", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"components", " ", "=", " ", 
       RowBox[{"cellData", "[", 
        RowBox[{"m", ",", " ", "positions", ",", " ", "pattern"}], "]"}]}], 
      ",", "\n", 
      RowBox[{"(*", "\t", 
       RowBox[{
        RowBox[{"nonlinearConstraints", " ", "=", " ", 
         RowBox[{"nonlinearConstraintVector", "[", 
          RowBox[{"positions", ",", " ", "constraints"}], "]"}]}], ","}], 
       "*)"}], "\n", "\t", 
      RowBox[{"constraintData", " ", "=", " ", 
       RowBox[{"processConstraintEquations", "[", 
        RowBox[{"positions", " ", ",", " ", "constraints"}], "]"}]}], " ", 
      ",", "\n", "\t", 
      RowBox[{"arbitraryPositions", " ", "=", " ", 
       RowBox[{"vertexPosition", "[", "m", "]"}]}]}], "\n", "}"}], ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"Total", " ", "@", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"componentEnergy", "[", 
            RowBox[{
            "m", ",", " ", "positions", ",", " ", "arbitraryPositions", ",", 
             " ", "#"}], "]"}], "&"}], " ", "/@", " ", "components"}], ",", 
         "\n", "\t\t", 
         RowBox[{
          RowBox[{"$defaultStiffness", "[", "\"\<constraints\>\"", "]"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
             "constraintData", "[", "\"\<nonlinear constraints\>\"", "]"}], 
             " ", ".", " ", 
             RowBox[{
             "constraintData", "[", "\"\<nonlinear constraints\>\"", "]"}]}], 
            ")"}], "/", "2"}]}]}], "\n", "\t", "}"}], "]"}]}], " ", "/.", " ", 
     RowBox[{"constraintData", "[", "\"\<linear solutions\>\"", "]"}]}]}], 
   "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[903]:=",ExpressionUUID->"f995f568-5603-423b-b92c-73f086e5526e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"componentEnergy", "[", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"rigidBar", "[", "indices_", "]"}], ",", "data_"}], "]"}]}], 
    "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"data", "[", "\"\<stiffness\>\"", "]"}], " ", "/.", " ", 
      RowBox[{"Infinity", " ", "\[Rule]", " ", 
       RowBox[{"$defaultStiffness", "[", "rigidBar", "]"}]}]}], " ", ")"}], 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", " ", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"displacementLengthSquared", "[", 
          RowBox[{"arbitraryPositions", ",", " ", "indices"}], " ", "]"}], 
         "/", 
         RowBox[{
          RowBox[{"data", "[", "\"\<length\>\"", "]"}], "^", "2"}]}], " ", 
        "-", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "[", "indices", "]"}]}], "]"}]}], "\n", "\t", 
       ")"}], "^", "2"}], "/", "8"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentEnergy", "[", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"spring", "[", "indices_", "]"}], ",", "data_"}], "]"}]}], 
    "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"stiffness", " ", "=", " ", 
       RowBox[{
        RowBox[{"data", "[", "\"\<stiffness\>\"", "]"}], " ", "/.", " ", 
        RowBox[{"Infinity", " ", "\[Rule]", " ", 
         RowBox[{"$defaultStiffness", "[", "spring", "]"}]}]}]}], "\n", "}"}],
      ",", "\n", "\t", 
     RowBox[{"stiffness", " ", 
      RowBox[{"MapThread", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"#2", ",", "#3"}], "]"}], "^", "2"}], "&"}], ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"data", "[", "\"\<strain\>\"", "]"}], ",", " ", 
          RowBox[{"displacementLength", "[", 
           RowBox[{"arbitraryPositions", ",", " ", "indices"}], " ", "]"}], 
          ",", " ", 
          RowBox[{"data", "[", "\"\<length\>\"", "]"}]}], " ", "}"}]}], " ", 
       "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentEnergy", "[", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"fold", "[", "indices_", "]"}], ",", " ", "data_"}], "]"}]}], 
    "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"stiffness", " ", "=", " ", 
       RowBox[{
        RowBox[{"data", "[", "\"\<torsionalStiffness\>\"", "]"}], " ", "/.", 
        " ", 
        RowBox[{"Infinity", " ", "\[Rule]", " ", 
         RowBox[{"$defaultStiffness", "[", "fold", "]"}]}]}]}], "\n", "}"}], 
     ",", "\n", "\t", 
     RowBox[{"stiffness", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"foldAngle", "[", 
           RowBox[{"m", ",", "arbitraryPositions", ",", " ", "indices"}], " ",
            "]"}], " ", "-", " ", 
          RowBox[{"data", "[", "\"\<angle\>\"", "]"}]}], ")"}], "^", "2"}], 
       "/", "2"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentEnergy", "[", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"elasticFace", "[", "indices_", "]"}], ",", " ", "data_"}], 
      "]"}]}], "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"stiffness", " ", "=", " ", 
        RowBox[{
         RowBox[{"data", "[", "\"\<YoungsModulus\>\"", "]"}], " ", "/.", " ", 
         
         RowBox[{"Infinity", " ", "\[Rule]", " ", 
          RowBox[{"$defaultStiffness", "[", "elasticFace", "]"}]}]}]}], ",", 
       "\n", "\t", 
       RowBox[{"poissonratio", " ", "=", " ", 
        RowBox[{"data", "[", "\"\<PoissonRatio\>\"", "]"}]}]}], "\n", "}"}], 
     ",", "\n", "\t", 
     RowBox[{"MapThread", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"elasticFaceEnergy", "[", " ", 
         RowBox[{"#1", ",", " ", "#2", ",", " ", 
          RowBox[{"positions", "[", 
           RowBox[{"[", " ", "#3", " ", "]"}], "]"}], ",", " ", 
          RowBox[{"arbitraryPositions", "[", 
           RowBox[{"[", " ", "#3", " ", "]"}], "]"}]}], " ", "]"}], "&"}], 
       ",", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"stiffness", ",", " ", "poissonratio", ",", " ", "indices"}], 
        "}"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentEnergy", "[", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"angleJoint", "[", "indices_", "]"}], ",", " ", "data_"}], 
      "]"}]}], "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"stiffness", " ", "=", " ", 
       RowBox[{
        RowBox[{"data", "[", "\"\<angularStiffness\>\"", "]"}], " ", "/.", 
        " ", 
        RowBox[{"Infinity", " ", "\[Rule]", " ", 
         RowBox[{"$defaultStiffness", "[", "fold", "]"}]}]}]}], "\n", "}"}], 
     ",", "\n", "\t", 
     RowBox[{"stiffness", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"turningAngle", "[", 
           RowBox[{"m", ",", "arbitraryPositions", ",", " ", "indices"}], " ",
            "]"}], " ", "-", " ", 
          RowBox[{"data", "[", "\"\<angle\>\"", "]"}]}], ")"}], "^", "2"}], 
       "/", "2"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"componentEnergy", "[", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "arbitraryPositions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"pinnedJoint", "[", "indices_", "]"}], ",", " ", "data_"}], 
      "]"}]}], "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"stiffness", " ", "=", " ", 
       RowBox[{
        RowBox[{"data", "[", "\"\<pinningStiffness\>\"", "]"}], " ", "/.", 
        " ", 
        RowBox[{"Infinity", " ", "\[Rule]", " ", 
         RowBox[{"$defaultStiffness", "[", "fold", "]"}]}]}]}], "\n", "}"}], 
     ",", "\n", "\t", 
     RowBox[{"stiffness", " ", 
      RowBox[{"MapThread", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#1", "[", 
            RowBox[{"#2", ",", "#3"}], "]"}], "^", "2"}], "/", "2"}], "&"}], 
        " ", ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"data", "[", "\"\<constraint\>\"", "]"}], ",", " ", 
          RowBox[{"arbitraryPositions", "[", 
           RowBox[{"[", " ", "indices", " ", "]"}], "]"}], ",", " ", 
          RowBox[{"positions", "[", 
           RowBox[{"[", " ", "indices", " ", "]"}], "]"}]}], " ", "}"}]}], 
       " ", "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"componentEnergy", "[", 
   RowBox[{"m_", ",", "_", ",", "_", ",", "_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "0", "}"}]}]}], "Code",
 CellLabel->
  "In[918]:=",ExpressionUUID->"b05402af-776c-4acb-bfe9-c46f1bc36e1e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"elasticFaceEnergy", "[", 
   RowBox[{"Y_", ",", "\[Nu]_", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1_", ",", "y1_", ",", "z1_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2_", ",", "y2_", ",", "z2_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x3_", ",", "y3_", ",", "z3_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X1_", ",", "Y1_", ",", "Z1_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"X2_", ",", "Y2_", ",", "Z2_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"X3_", ",", "Y3_", ",", "Z3_"}], "}"}]}], "}"}]}], "]"}], " ", 
  ":=", " ", "\n", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Nu]"}], ")"}]}]], "Y", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "x1"}], "+", "x2"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "y1"}], "+", "y2"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "z1"}], "+", "z2"}], ")"}], "2"]}]], "-", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "X1"}], "+", "X2"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "Y1"}], "+", "Y2"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "Z1"}], "+", "Z2"}], ")"}], "2"]}]]}], ")"}], 
        "2"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x1"}], "+", "x2"}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "y1"}], "+", "y2"}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "z1"}], "+", "z2"}], ")"}], "2"]}]], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["x1", "2"], "+", 
                 RowBox[{"x2", " ", "x3"}], "-", 
                 RowBox[{"x1", " ", 
                  RowBox[{"(", 
                   RowBox[{"x2", "+", "x3"}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"y1", "-", "y2"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"y1", "-", "y3"}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"z1", "-", "z2"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"z1", "-", "z3"}], ")"}]}]}], ")"}], "2"], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"x1", "-", "x2"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"y1", "-", "y2"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"z1", "-", "z2"}], ")"}], "2"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"x1", "-", "x3"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"y1", "-", "y3"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"z1", "-", "z3"}], ")"}], "2"]}], ")"}]}]]}]], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "x1"}], "+", "x3"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "y1"}], "+", "y3"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "z1"}], "+", "z3"}], ")"}], "2"]}]]}], "-", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["X1", "2"], "+", 
                 RowBox[{"X2", " ", "X3"}], "-", 
                 RowBox[{"X1", " ", 
                  RowBox[{"(", 
                   RowBox[{"X2", "+", "X3"}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Y1", "-", "Y2"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"Y1", "-", "Y3"}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Z1", "-", "Z2"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"Z1", "-", "Z3"}], ")"}]}]}], ")"}], "2"], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"X1", "-", "X2"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"Y1", "-", "Y2"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"Z1", "-", "Z2"}], ")"}], "2"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"X1", "-", "X3"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"Y1", "-", "Y3"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"Z1", "-", "Z3"}], ")"}], "2"]}], ")"}]}]]}]], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "X1"}], "+", "X3"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "Y1"}], "+", "Y3"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "Z1"}], "+", "Z3"}], ")"}], "2"]}]]}]}], ")"}], 
        "2"], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["x1", "2"], "+", 
               RowBox[{"x2", " ", "x3"}], "-", 
               RowBox[{"x1", " ", 
                RowBox[{"(", 
                 RowBox[{"x2", "+", "x3"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"y1", "-", "y2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"y1", "-", "y3"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"z1", "-", "z2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"z1", "-", "z3"}], ")"}]}]}], ")"}], "2"], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"x1", "-", "x2"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"y1", "-", "y2"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"z1", "-", "z2"}], ")"}], "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"x1", "-", "x3"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"y1", "-", "y3"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"z1", "-", "z3"}], ")"}], "2"]}], ")"}]}]]}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x1"}], "+", "x3"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "y1"}], "+", "y3"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "z1"}], "+", "z3"}], ")"}], "2"]}], ")"}]}], 
        ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "X1"}], "+", "X2"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "Y1"}], "+", "Y2"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "Z1"}], "+", "Z2"}], ")"}], "2"]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["x1", "2"], "+", 
               RowBox[{"x2", " ", "x3"}], "-", 
               RowBox[{"x1", " ", 
                RowBox[{"(", 
                 RowBox[{"x2", "+", "x3"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"y1", "-", "y2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"y1", "-", "y3"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"z1", "-", "z2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"z1", "-", "z3"}], ")"}]}]}], ")"}], " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "x1"}], "+", "x3"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "y1"}], "+", "y3"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "z1"}], "+", "z3"}], ")"}], "2"]}]]}], ")"}], 
           "/", 
           RowBox[{"(", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"x1", "-", "x2"}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"y1", "-", "y2"}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"z1", "-", "z2"}], ")"}], "2"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"x1", "-", "x3"}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"y1", "-", "y3"}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"z1", "-", "z3"}], ")"}], "2"]}], ")"}]}]], ")"}]}],
           "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "x1"}], "+", "x2"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "y1"}], "+", "y2"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "z1"}], "+", "z2"}], ")"}], "2"]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["X1", "2"], "+", 
               RowBox[{"X2", " ", "X3"}], "-", 
               RowBox[{"X1", " ", 
                RowBox[{"(", 
                 RowBox[{"X2", "+", "X3"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Y1", "-", "Y2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"Y1", "-", "Y3"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Z1", "-", "Z2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"Z1", "-", "Z3"}], ")"}]}]}], ")"}], " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "X1"}], "+", "X3"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "Y1"}], "+", "Y3"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "Z1"}], "+", "Z3"}], ")"}], "2"]}]]}], ")"}], 
           "/", 
           RowBox[{"(", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"X1", "-", "X2"}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"Y1", "-", "Y2"}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"Z1", "-", "Z2"}], ")"}], "2"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"X1", "-", "X3"}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"Y1", "-", "Y3"}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"Z1", "-", "Z3"}], ")"}], "2"]}], ")"}]}]], 
            ")"}]}]}], ")"}], "2"], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x1"}], "+", "x2"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "y1"}], "+", "y2"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "z1"}], "+", "z2"}], ")"}], "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["x1", "2"], "+", 
               RowBox[{"x2", " ", "x3"}], "-", 
               RowBox[{"x1", " ", 
                RowBox[{"(", 
                 RowBox[{"x2", "+", "x3"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"y1", "-", "y2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"y1", "-", "y3"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"z1", "-", "z2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"z1", "-", "z3"}], ")"}]}]}], ")"}], "2"], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"x1", "-", "x2"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"y1", "-", "y2"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"z1", "-", "z2"}], ")"}], "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"x1", "-", "x3"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"y1", "-", "y3"}], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"z1", "-", "z3"}], ")"}], "2"]}], ")"}]}]]}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x1"}], "+", "x3"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "y1"}], "+", "y3"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "z1"}], "+", "z3"}], ")"}], "2"]}], ")"}]}], 
        ")"}]}]}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Nu]"}], ")"}]}]], "Y", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "x1"}], "+", "x2"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "y1"}], "+", "y2"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "z1"}], "+", "z2"}], ")"}], "2"]}]], "-", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "X1"}], "+", "X2"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "Y1"}], "+", "Y2"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "Z1"}], "+", "Z2"}], ")"}], "2"]}]]}], 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x1"}], "+", "x2"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "y1"}], "+", "y2"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "z1"}], "+", "z2"}], ")"}], "2"]}]]]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["x1", "2"], "+", 
                 RowBox[{"x2", " ", "x3"}], "-", 
                 RowBox[{"x1", " ", 
                  RowBox[{"(", 
                   RowBox[{"x2", "+", "x3"}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"y1", "-", "y2"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"y1", "-", "y3"}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"z1", "-", "z2"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"z1", "-", "z3"}], ")"}]}]}], ")"}], "2"], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"x1", "-", "x2"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"y1", "-", "y2"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"z1", "-", "z2"}], ")"}], "2"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"x1", "-", "x3"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"y1", "-", "y3"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"z1", "-", "z3"}], ")"}], "2"]}], ")"}]}]]}]], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "x1"}], "+", "x3"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "y1"}], "+", "y3"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "z1"}], "+", "z3"}], ")"}], "2"]}]]}], "-", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["X1", "2"], "+", 
                 RowBox[{"X2", " ", "X3"}], "-", 
                 RowBox[{"X1", " ", 
                  RowBox[{"(", 
                   RowBox[{"X2", "+", "X3"}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Y1", "-", "Y2"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"Y1", "-", "Y3"}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Z1", "-", "Z2"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"Z1", "-", "Z3"}], ")"}]}]}], ")"}], "2"], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"X1", "-", "X2"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"Y1", "-", "Y2"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"Z1", "-", "Z2"}], ")"}], "2"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"X1", "-", "X3"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"Y1", "-", "Y3"}], ")"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"Z1", "-", "Z3"}], ")"}], "2"]}], ")"}]}]]}]], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "X1"}], "+", "X3"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "Y1"}], "+", "Y3"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "Z1"}], "+", "Z3"}], ")"}], "2"]}]]}]}], ")"}], 
        "/", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{"1", "-", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["x1", "2"], "+", 
                RowBox[{"x2", " ", "x3"}], "-", 
                RowBox[{"x1", " ", 
                 RowBox[{"(", 
                  RowBox[{"x2", "+", "x3"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"y1", "-", "y2"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"y1", "-", "y3"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"z1", "-", "z2"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"z1", "-", "z3"}], ")"}]}]}], ")"}], "2"], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"x1", "-", "x2"}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"y1", "-", "y2"}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"z1", "-", "z2"}], ")"}], "2"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"x1", "-", "x3"}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"y1", "-", "y3"}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"z1", "-", "z3"}], ")"}], "2"]}], ")"}]}]]}]], " ", 
          
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "x1"}], "+", "x3"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "y1"}], "+", "y3"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "z1"}], "+", "z3"}], ")"}], "2"]}]]}], ")"}]}]}], 
      ")"}], "2"], " ", "\[Nu]"}]}]}]], "Code",
 CellLabel->
  "In[925]:=",ExpressionUUID->"2df2e8ac-6715-419b-b5cd-63a7ffa6face"]
}, Closed]],

Cell[CellGroupData[{

Cell["compiledMechanismEnergy[]", "Subsection",ExpressionUUID->"fdb08a27-d392-4708-8d7c-e22a50d18359"],

Cell[CellGroupData[{

Cell["compiledMechanismEnergy[] data structure", "Subsubsection",ExpressionUUID->"043fba01-a9ed-4a37-9182-6e60ca559505"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compiledMechanismEnergy", "[", 
     RowBox[{
     "variables_List", ",", "energy_CompiledFunction", ",", 
      "gradient_CompiledFunction"}], "]"}], "[", "\"\<variables\>\"", "]"}], ":=",
    "variables"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{"compiledMechanismEnergy", "[", 
    RowBox[{
    "variables_List", ",", "energy_CompiledFunction", ",", 
     "gradient_CompiledFunction"}], "]"}], "]"}], ":=", "\n", 
  RowBox[{"StringJoin", "[", "\n", "\t", 
   RowBox[{"\"\<compiledMechanismEnergy[\>\"", ",", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "variables", "]"}], "<", "10"}], ",", "\n", 
      "\t\t", 
      RowBox[{"ToString", "[", "variables", "]"}], ",", "\n", "\t\t", 
      RowBox[{"\"\<{\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"First", "[", "variables", "]"}], "<>", "\"\<...\>\"", "<>", 
         
         RowBox[{"Last", "[", "variables", "]"}], "<>", "\"\<}\>\""}], 
        "]"}]}]}], "\n", "\t", "]"}], ",", "\n", "\t", "\"\<]\>\""}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[926]:=",ExpressionUUID->"066adf50-6828-4aea-a6bb-c6afb7d98a82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compiledMechanismEnergy", "[", 
     RowBox[{
      RowBox[{"variables_", "?", "VectorQ"}], ",", "energy_CompiledFunction", 
      ",", "gradient_CompiledFunction"}], "]"}], "[", "\"\<data\>\"", "]"}], ":=",
    "variables"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compiledMechanismEnergy", "[", 
     RowBox[{
     "variables_List", ",", "energy_CompiledFunction", ",", 
      "gradient_CompiledFunction"}], "]"}], "[", "\"\<energy\>\"", "]"}], "[", 
   RowBox[{
    RowBox[{"pos_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"VectorQ", "[", 
        RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", "data_"}],
    "]"}], " ", ":=", " ", "\n", "\t", 
  RowBox[{"energy", "[", 
   RowBox[{"pos", ",", "data"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"compiledMechanismEnergy", "[", 
      RowBox[{
      "variables_List", ",", "energy_CompiledFunction", ",", 
       "gradient_CompiledFunction"}], "]"}], "[", "\"\<gradient\>\"", "]"}], 
    "[", 
    RowBox[{
     RowBox[{"pos_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"VectorQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", 
     "data_"}], "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"gradient", "[", 
    RowBox[{"pos", ",", "data"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compiledMechanismEnergy", "[", 
    RowBox[{
    "variables_List", ",", "energy_CompiledFunction", ",", 
     "gradient_CompiledFunction"}], "]"}], "[", 
   RowBox[{"v_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"VectorQ", "[", 
       RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], "]"}], " ", ":=",
   " ", "\n", "\t", 
  RowBox[{"compiledMechanismEnergy", "[", 
   RowBox[{"v", ",", "energy", ",", "gradient"}], "]"}]}]}], "Code",
 CellLabel->
  "In[928]:=",ExpressionUUID->"ce6d6f2c-48d8-4ec7-ade0-2516669648a1"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
compiledMechanismEnergyQ[], compiledNumericalMechanismEnergyQ[]\
\>", "Subsubsection",ExpressionUUID->"60e19505-c58d-41b9-83e1-93382c6b5f0e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"compiledMechanismEnergyQ", "[", 
   RowBox[{"compiledMechanismEnergy", "[", 
    RowBox[{
    "variables_", ",", "energy_CompiledFunction", ",", 
     "gradient_CompiledFunction"}], "]"}], "]"}], ":=", 
  RowBox[{"VectorQ", "[", "variables", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compiledMechanismEnergyQ", "[", "_", "]"}], ":=", "False"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"compiledNumericalMechanismEnergyQ", "[", 
   RowBox[{"compiledMechanismEnergy", "[", 
    RowBox[{
    "variables_", ",", "energy_CompiledFunction", ",", 
     "gradient_CompiledFunction"}], "]"}], "]"}], ":=", 
  RowBox[{"VectorQ", "[", 
   RowBox[{"variables", ",", "NumericQ"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"compiledNumericalMechanismEnergyQ", "[", "_", "]"}], ":=", 
  "False"}]}], "Code",
 CellLabel->
  "In[932]:=",ExpressionUUID->"012050bf-af43-467f-8c4c-ab008faf4d1a"]
}, Closed]],

Cell[CellGroupData[{

Cell["compiledMechanismEnergy[]", "Subsubsection",ExpressionUUID->"bc228997-732f-4570-80d8-fa2b9bd50f25"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "compiledMechanismEnergy", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<constraints\>\"", "\[Rule]", "None"}], ",", " ", 
     RowBox[{"\"\<additional\>\"", "\[Rule]", "0"}], ",", " ", 
     RowBox[{"\"\<pattern\>\"", " ", "\[Rule]", " ", "_"}]}], "}"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[936]:=",ExpressionUUID->"b21c5234-5bbb-457a-92fc-46ee4c5f0e27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"compiledMechanismEnergy", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"pos", " ", ":", " ", 
      RowBox[{"Except", "[", "_Rule", "]"}], " ", ":", " ", "Automatic"}], 
     ",", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"actualPositions", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pos", "===", "Automatic"}], ",", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "pos"}], "]"}]}], 
      "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"Module", "[", "\n", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"res", "=", 
          RowBox[{"compiledMechanismEnergyInternal", "[", 
           RowBox[{"m", ",", "actualPositions", ",", 
            RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}], ",", 
            RowBox[{"OptionValue", "[", "\"\<additional\>\"", "]"}], ",", " ", 
            RowBox[{"OptionValue", "[", "\"\<pattern\>\"", "]"}]}], " ", 
           "]"}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"res", "/;", 
         RowBox[{"res", "=!=", "$Failed"}]}]}], "\n", "]"}], "/;", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "actualPositions"}], "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compiledMechanismEnergy", "::", "pos"}], "=", 
   "\"\<Provided positions do not correspond to mechanism.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"compiledMechanismEnergy", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"pos", " ", ":", " ", 
     RowBox[{"Except", "[", 
      RowBox[{"_Rule", "|", "Automatic"}], "]"}]}], ",", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"compiledMechanismEnergy", "::", "pos"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[937]:=",ExpressionUUID->"7b32ddb1-db56-4cb0-9b8d-da5ec6e9a55b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compiledMechanismEnergyInternal", "[", 
   RowBox[{
   "m_", ",", "positions_", ",", "constraints_", ",", "additional_", ",", " ",
     "pattern_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"symbols", ",", 
      RowBox[{"energy", "=", 
       RowBox[{
        RowBox[{"mechanismEnergy", "[", 
         RowBox[{"m", ",", "positions", ",", 
          RowBox[{"\"\<constraints\>\"", "\[Rule]", "constraints"}], ",", " ", 
          RowBox[{"\"\<pattern\>\"", " ", "\[Rule]", " ", "_"}]}], "]"}], "+",
         "additional"}]}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"symbols", "=", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{"energy", ",", "_Symbol", ",", "Infinity"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"NumericQ", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}]}], 
     ";", "\n", "\n", "\t", 
     RowBox[{"Check", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"compiledMechanismEnergy", "[", "\n", "\t\t\t", 
        RowBox[{"symbols", ",", "\n", "\t\t\t", 
         RowBox[{"compileEnergy", "[", 
          RowBox[{
          "m", ",", "energy", ",", "symbols", ",", "$compilationTarget"}], 
          "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"compileGradient", "[", 
          RowBox[{
          "m", ",", "energy", ",", "symbols", ",", "$compilationTarget"}], 
          "]"}]}], "\n", "\t\t", "]"}], ",", "\n", "\t\t", "$Failed"}], "\n", 
      "\t", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[940]:=",ExpressionUUID->"a5364f25-eff6-4acb-91ec-f48e03bebed9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compileEnergy", "[", 
   RowBox[{"m_", ",", "energy_", ",", "symbols_", ",", "compiler_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{"body", ",", "\n", 
      RowBox[{"variables", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"vertexPosition", "[", "m", "]"}], "]"}]}], ",", "\n", 
      "injector", ",", "c", ",", "\n", "dataInjector", ",", "data"}], "\n", 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"injector", "=", 
      RowBox[{"Dispatch", "@", 
       RowBox[{"Thread", "[", 
        RowBox[{"variables", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Hold", "[", 
             RowBox[{"c", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "@", "variables"}], "]"}]}], ")"}]}], "]"}]}]}],
      ";", "\n", "\t", 
     RowBox[{"dataInjector", "=", 
      RowBox[{"Dispatch", "@", 
       RowBox[{"Thread", "[", 
        RowBox[{"symbols", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Hold", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "@", "symbols"}], "]"}]}], ")"}]}], "]"}]}]}], 
     ";", "\n", "\t", 
     RowBox[{"body", "=", 
      RowBox[{
       RowBox[{"energy", "/.", "injector"}], "/.", "dataInjector"}]}], ";", 
     "\n", "\t", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{
       RowBox[{"Hold", "[", "Compile", "]"}], "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"c", ",", "_Real", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"data", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
        "\n", "\t\t", "body", ",", "\n", "\t\t", 
        RowBox[{"RuntimeOptions", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<Speed\>\"", ",", 
           RowBox[{"\"\<EvaluateSymbolically\>\"", "->", "False"}]}], "}"}]}],
         ",", "\n", "\t\t", 
        RowBox[{"CompilationTarget", "->", "compiler"}], ",", "\n", "\t\t", 
        RowBox[{"Parallelization", "\[Rule]", "True"}]}], "\n", "\t", "]"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[941]:=",ExpressionUUID->"92ffeed0-c3d9-4161-bdf3-36b3e40fc494"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compileGradient", "[", 
   RowBox[{"m_", ",", "energy_", ",", "symbols_", ",", "compiler_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{"body", ",", "\n", 
      RowBox[{"variables", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"vertexPosition", "[", "m", "]"}], "]"}]}], ",", "\n", 
      "injector", ",", "c", ",", "\n", "dataInjector", ",", "data"}], "\n", 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"injector", "=", 
      RowBox[{"Dispatch", "@", 
       RowBox[{"Thread", "[", 
        RowBox[{"variables", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Hold", "[", 
             RowBox[{"c", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "@", "variables"}], "]"}]}], ")"}]}], "]"}]}]}],
      ";", "\n", "\t", 
     RowBox[{"dataInjector", "=", 
      RowBox[{"Dispatch", "@", 
       RowBox[{"Thread", "[", 
        RowBox[{"symbols", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Hold", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "@", "symbols"}], "]"}]}], ")"}]}], "]"}]}]}], 
     ";", "\n", "\t", 
     RowBox[{"body", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"energy", ",", 
          RowBox[{"{", "variables", "}"}]}], "]"}], "/.", "injector"}], "/.", 
       "dataInjector"}]}], ";", "\n", "\t", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{
       RowBox[{"Hold", "[", "Compile", "]"}], "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"c", ",", "_Real", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"data", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
        "\n", "\t\t", "body", ",", "\n", "\t\t", 
        RowBox[{"RuntimeOptions", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<Speed\>\"", ",", 
           RowBox[{"\"\<EvaluateSymbolically\>\"", "->", "False"}]}], "}"}]}],
         ",", "\n", "\t\t", 
        RowBox[{"CompilationTarget", "->", "compiler"}], ",", "\n", "\t\t", 
        RowBox[{"Parallelization", "\[Rule]", "True"}]}], "\n", "\t", "]"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[942]:=",ExpressionUUID->"fc66d059-3816-4b04-a69b-80ebdc0fcb74"]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["local rigidity", "Section",ExpressionUUID->"333eb685-a2c4-4c84-bd5e-8615e1631051"],

Cell[CellGroupData[{

Cell["constraintMatrix[]", "Subsection",ExpressionUUID->"7175c9bb-4b34-456a-961e-4df84c76e52c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "constraintMatrix", "]"}], "=", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", "None"}], ",", " ", 
      
      RowBox[{"\"\<pattern\>\"", " ", "\[Rule]", " ", "_"}], ",", " ", 
      RowBox[{"\"\<rules\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", "}"}]}]}], " ", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"constraintMatrix", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"constraintMatrix", "[", " ", 
   RowBox[{"m", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "opt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintMatrix", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "positions_", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"constraintMatrices", ",", " ", "vars"}], " ", "}"}], ",", 
      "\n", "\n", "\t", 
      RowBox[{
       RowBox[{"vars", " ", "=", " ", 
        RowBox[{"Check", "[", " ", 
         RowBox[{
          RowBox[{"reduceVariables", "[", " ", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}], " ", ",", 
            " ", 
            RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}]}], " ", "]"}], 
          ",", " ", "$Failed"}], " ", "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"constraintMatrices", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vars", " ", "===", " ", "$Failed"}], ",", "\n", "\n", 
          "\t\t", 
          RowBox[{"CoefficientArrays", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"constraintEquations", "[", " ", 
             RowBox[{"m", ",", " ", "positions", ",", " ", "1", ",", " ", 
              RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", 
               RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}]}], 
              ",", " ", 
              RowBox[{"\"\<pattern\>\"", "\[Rule]", 
               RowBox[{"OptionValue", "[", "\"\<pattern\>\"", "]"}]}], ",", 
              " ", 
              RowBox[{
              "\"\<output\>\"", " ", "\[Rule]", " ", "vertexDisplacement"}]}],
              " ", "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"Flatten", "[", 
             RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}]}], "\n", 
           "\t\t", "]"}], ",", "\n", "\n", "\t\t", 
          RowBox[{"CoefficientArrays", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"constraintEquations", "[", " ", 
              RowBox[{"m", ",", " ", "positions", ",", " ", "1", ",", " ", 
               RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", 
                RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}]}], 
               ",", " ", 
               RowBox[{"\"\<pattern\>\"", "\[Rule]", 
                RowBox[{"OptionValue", "[", "\"\<pattern\>\"", "]"}]}], ",", 
               " ", 
               RowBox[{
               "\"\<output\>\"", " ", "\[Rule]", " ", 
                "vertexDisplacement"}]}], " ", "]"}], " ", "//.", " ", 
             RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}]}], ",", "\n", 
            "\t\t\t", "vars"}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}], 
       ";", "\n", "\t", "\n", "\t", 
       RowBox[{"Which", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"constraintMatrices", "\[Equal]", 
          RowBox[{"{", 
           RowBox[{"{", "}"}], "}"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", " ", 
            RowBox[{
             RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], " ", 
             RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], "]"}], 
          "}"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{
          RowBox[{"MatrixQ", "[", 
           RowBox[{"positions", ",", " ", "NumericQ"}], "]"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"Chop", "[", " ", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"constraintMatrices", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", ".", " ", 
             RowBox[{"N", "[", 
              RowBox[{"constraintMatrices", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], " ", "]"}], " ", 
           "\[NotEqual]", " ", "0"}]}], ",", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"outputStressError", "[", " ", 
           RowBox[{"N", "[", 
            RowBox[{"constraintMatrices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "]"}], ";", "\n", 
          "\t\t\t", 
          RowBox[{"constraintMatrices", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "\n", "\t\t", "\n", "\t\t", 
         "True", ",", "\n", "\t\t\t", 
         RowBox[{"constraintMatrices", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "\n", "\t", "]"}]}]}], "\n", 
     "]"}], " ", "/;", " ", 
    RowBox[{"vertexCoordinatesQ", "[", 
     RowBox[{"m", ",", " ", "positions"}], " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintMatrix", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"Except", "[", " ", "__Rule", " ", "]"}], ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
    RowBox[{"Message", "[", 
     RowBox[{"constraintMatrix", "::", "vcoord"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"outputStressError", "[", " ", "vec_", " ", "]"}], " ", ":=", " ", 
   
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"stresses", " ", "=", " ", 
       RowBox[{
        RowBox[{"Select", "[", " ", 
         RowBox[{
          RowBox[{"Transpose", "[", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "[", "vec", "]"}], "]"}], ",", " ", "vec"}], 
            "}"}], " ", "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Chop", "[", 
             RowBox[{"Abs", "[", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", "]"}], "]"}], " ", ">", 
            " ", "0"}], " ", "&"}]}], " ", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], " ", "}"}], ",", "\n", 
     "\t", 
     RowBox[{"Message", "[", " ", 
      RowBox[{
       RowBox[{"constraintMatrix", "::", "stressed"}], ",", " ", 
       RowBox[{
        RowBox[{"N", "[", "vec", "]"}], " ", ".", " ", 
        RowBox[{"N", "[", "vec", "]"}]}], ",", " ", "stresses"}], " ", 
      "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"reduceVariables", "[", 
   RowBox[{"vars_", ",", 
    RowBox[{"{", "}"}]}], "]"}], ":=", "vars"}], "\n", 
 RowBox[{
  RowBox[{"reduceVariables", "[", 
   RowBox[{"vars_", ",", 
    RowBox[{"rules", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rule", "[", " ", 
        RowBox[{
         RowBox[{"vertexDisplacement", "[", 
          RowBox[{"_", ",", "_"}], "]"}], ",", " ", "_"}], " ", "]"}], ".."}],
       "}"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"Variables", "[", 
     RowBox[{"vars", " ", "//.", " ", "rules"}], "]"}], ",", 
    "_vertexDisplacement"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"reduceVariables", "[", 
    RowBox[{"vars_", ",", " ", "notRules_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", " ", 
      RowBox[{"constraintMatrix", "::", "rules"}], "]"}], ";", " ", "vars"}], 
    ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintMatrix", "::", "vcoord"}], "=", 
   "\"\<Vertex positions do not match mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintMatrix", "::", "stressed"}], "=", 
   "\"\<Warning: Mechanism is stressed (residual is `1`) at constraints `2`. \
Constraint matrix may not be useful.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintMatrix", "::", "rules"}], "=", 
   "\"\<Replacement rules are not of the form { vertexDisplacement[v1, c1] -> \
.., .. }.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[943]:=",ExpressionUUID->"d218d248-ce20-48a5-af65-68e0c4272cc5"]
}, Closed]],

Cell[CellGroupData[{

Cell["zeroModes[], selfStresses[]", "Subsection",ExpressionUUID->"5ea20f50-81a4-427a-bc68-378f73dcb50b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "zeroModes", "]"}], " ", "=", " ", 
    RowBox[{"Join", "[", " ", 
     RowBox[{
      RowBox[{"Options", "[", "constraintMatrix", "]"}], ",", " ", 
      RowBox[{"Options", "[", "Eigensystem", "]"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"Tolerance", "\[Rule]", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "10"}], ")"}]}]}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"zeroModes", "::", "num"}], "=", 
    "\"\<The constraint matrix is not numerical.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"zeroModes", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"zeroModes", "[", " ", 
   RowBox[{"m", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "opt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"zeroModes", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "positions_", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"mat", "=", 
         RowBox[{"constraintMatrix", "[", 
          RowBox[{"m", ",", " ", "positions", ",", 
           RowBox[{"FilterRules", "[", " ", 
            RowBox[{
             RowBox[{"{", "opt", "}"}], ",", " ", 
             RowBox[{"Options", "[", "constraintMatrix", "]"}]}], " ", 
            "]"}]}], "]"}]}], ",", "\n", "\t", 
        RowBox[{"dim", "=", 
         RowBox[{"embeddingDimension", "[", "m", "]"}]}], ",", "\n", "\t", 
        "evalues"}], "\n", "}"}], ",", 
      RowBox[{
       RowBox[{"(", "\n", "\t", 
        RowBox[{
         RowBox[{"evalues", " ", "=", " ", 
          RowBox[{"Chop", "[", 
           RowBox[{
            RowBox[{"Eigensystem", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Transpose", "[", "mat", "]"}], " ", ".", " ", "mat"}],
               ",", " ", 
              RowBox[{"FilterRules", "[", " ", 
               RowBox[{
                RowBox[{"{", "opt", "}"}], ",", " ", 
                RowBox[{"Options", "[", "Eigenvalues", "]"}]}], " ", "]"}]}], 
             "]"}], ",", " ", 
            RowBox[{"OptionValue", "[", "Tolerance", "]"}]}], "]"}]}], ";", 
         "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Partition", "[", 
            RowBox[{"#", ",", " ", "dim"}], "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"evalues", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{"-", 
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"evalues", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "]"}]}]}], 
           "]"}]}]}], "\n", "\t", ")"}], " ", "/;", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", " ", "@", " ", 
          RowBox[{"MatrixQ", "[", 
           RowBox[{"mat", ",", " ", "NumericQ"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"zeroModes", "::", "num"}], "]"}], ";", " ", "False"}], 
         ",", " ", "True"}], "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"numericCoordinatesQ", "[", 
     RowBox[{"m", ",", " ", "positions"}], " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"zeroModes", "::", "vcoord"}], "=", 
   "\"\<Vertex positions do not match mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zeroModes", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"Except", "[", " ", "__Rule", " ", "]"}], ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"zeroModes", "::", "vcoord"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[954]:=",ExpressionUUID->"ae1e713b-def1-4284-a80c-7c15c0aec447"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "selfStresses", "]"}], " ", "=", " ", 
    RowBox[{"Join", "[", " ", 
     RowBox[{
      RowBox[{"Options", "[", "constraintMatrix", "]"}], ",", " ", 
      RowBox[{"Options", "[", "Eigensystem", "]"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"Tolerance", "\[Rule]", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "10"}], ")"}]}]}], "}"}]}], " ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"selfStresses", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"selfStresses", "[", " ", 
   RowBox[{"m", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "opt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"selfStresses", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "positions_", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"mat", "=", 
         RowBox[{"constraintMatrix", "[", 
          RowBox[{"m", ",", " ", "positions", ",", 
           RowBox[{"FilterRules", "[", " ", 
            RowBox[{
             RowBox[{"{", "opt", "}"}], ",", " ", 
             RowBox[{"Options", "[", "constraintMatrix", "]"}]}], " ", 
            "]"}]}], "]"}]}], ",", "\n", "\t", "evalues"}], "\n", "}"}], ",", 
      
      RowBox[{
       RowBox[{"(", "\n", "\t", 
        RowBox[{
         RowBox[{"evalues", " ", "=", " ", 
          RowBox[{"Chop", "[", 
           RowBox[{
            RowBox[{"Eigensystem", "[", " ", 
             RowBox[{
              RowBox[{"mat", " ", ".", " ", 
               RowBox[{"Transpose", "[", "mat", "]"}]}], " ", ",", " ", 
              RowBox[{"FilterRules", "[", " ", 
               RowBox[{
                RowBox[{"{", "opt", "}"}], ",", " ", 
                RowBox[{"Options", "[", "Eigenvalues", "]"}]}], " ", "]"}]}], 
             "]"}], ",", " ", 
            RowBox[{"OptionValue", "[", "Tolerance", "]"}]}], "]"}]}], ";", 
         "\n", "\t", 
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"evalues", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
           RowBox[{"-", 
            RowBox[{"Count", "[", 
             RowBox[{
              RowBox[{"evalues", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "]"}]}]}], "]"}]}],
         "\n", "\t", ")"}], " ", "/;", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", " ", "@", " ", 
          RowBox[{"MatrixQ", "[", 
           RowBox[{"mat", ",", " ", "NumericQ"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"selfStresses", "::", "num"}], "]"}], ";", " ", "False"}], 
         ",", " ", "True"}], "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"numericCoordinatesQ", "[", 
     RowBox[{"m", ",", " ", "positions"}], " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"selfStresses", "::", "vcoord"}], "=", 
   "\"\<Vertex positions do not match mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"selfStresses", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"Except", "[", " ", "__Rule", " ", "]"}], ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"selfStresses", "::", "vcoord"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[960]:=",ExpressionUUID->"84c86739-b364-471a-beae-96cff8470e91"]
}, Closed]],

Cell[CellGroupData[{

Cell["stressMatrix[]", "Subsection",ExpressionUUID->"3fdd0cdc-6a5f-4e8e-92b2-1a97ac4fb176"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"stressMatrix", "[", " ", 
     RowBox[{"m", ",", " ", "vec"}], " ", "]"}], " ", "returns", " ", "a", 
    " ", "stress", " ", "matrix", " ", "associated", " ", "with", " ", "the", 
    " ", "stress", " ", "vector", " ", 
    RowBox[{"vec", ".", " ", "The"}], " ", 
    RowBox[{"(", 
     RowBox[{"i", ",", "j"}], ")"}], " ", "component", " ", "of", " ", "the", 
    " ", "stress", " ", "matrix", " ", "is", " ", "the", " ", "negative", " ",
     "of", " ", "the", " ", "corresponding", "\n", "stress", " ", "vector", 
    " ", "component", " ", 
    RowBox[{"(", 
     RowBox[{"and", " ", "zero", " ", "otherwise"}], ")"}], " ", "and", " ", 
    "diagonal", " ", "components", " ", "are", " ", "chosen", " ", "so", " ", 
    "that", " ", "rows", " ", "sum", " ", "to", " ", 
    RowBox[{"zero", ".", "\n", "\n", "Columns"}], " ", "should", " ", "also", 
    " ", "sum", " ", "to", " ", 
    RowBox[{"zero", ".", "\n", "\n", 
     RowBox[{"(", 
      RowBox[{
      "see", " ", "Connelly", " ", "on", " ", "generic", " ", "global", " ", 
       "rigidity"}], ")"}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"stressMatrix", "[", " ", 
     RowBox[{
      RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "stressVector_"}], " ", 
     "]"}], " ", ":=", "\n", 
    RowBox[{
     RowBox[{"Module", "[", " ", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
        "offDiagonalComponents", ",", " ", "diagonalComponents", ",", " ", 
         RowBox[{"edges", " ", "=", " ", 
          RowBox[{"connectivity", "[", 
           RowBox[{"m", ",", " ", 
            RowBox[{
            "\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<edges\>\""}]}], 
           "]"}]}]}], " ", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"offDiagonalComponents", " ", "=", " ", "\n", "\t", 
         RowBox[{
          RowBox[{"(", "\n", "\t\t", 
           RowBox[{"(*", "symmetrize", "*)"}], "\n", "\t\t", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", " ", "+", " ", 
              RowBox[{"Transpose", "[", "#", "]"}]}], " ", "&"}], " ", ")"}], 
           "\n", "\t", ")"}], " ", "@", " ", 
          RowBox[{"SparseArray", "[", " ", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Thread", "[", " ", 
             RowBox[{
              RowBox[{"m", "[", "\"\<edges\>\"", "]"}], " ", "\[Rule]", " ", 
              RowBox[{"-", "stressVector"}]}], " ", "]"}], ",", "\n", "\t\t", 
            
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], ",", " ", 
              RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], " ", "}"}]}],
            "\n", "\t", "]"}]}]}], ";", "\n", "\t", 
        RowBox[{"diagonalComponents", " ", "=", " ", 
         RowBox[{"SparseArray", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Thread", "[", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", "#"}], "}"}], "&"}], " ", "/@", " ", 
               RowBox[{"Range", "[", " ", 
                RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], " ", "]"}]}],
               ")"}], " ", "\[Rule]", " ", 
             RowBox[{"(", 
              RowBox[{"-", " ", 
               RowBox[{"Total", " ", "/@", " ", 
                RowBox[{"Map", "[", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"offDiagonalComponents", "[", 
                    RowBox[{"[", " ", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], "]"}], 
                   "&"}], ",", " ", 
                  RowBox[{"connectivity", "[", 
                   RowBox[{"m", ",", " ", 
                    RowBox[{
                    "\"\<vertices\>\"", " ", "\[Rule]", " ", 
                    "\"\<edges\>\""}]}], "]"}], " ", ",", " ", 
                  RowBox[{"{", "2", "}"}]}], " ", "]"}]}]}], ")"}]}], " ", 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], ",", " ", 
             RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], " ", "}"}]}], 
          "\n", "\t", "]"}]}], ";", "\n", "\t", "\n", "\t", 
        RowBox[{
        "offDiagonalComponents", " ", "+", " ", "diagonalComponents"}]}]}], 
      "\n", "]"}], " ", "/;", " ", 
     RowBox[{"stressMatrixArgumentsQ", "[", " ", 
      RowBox[{"m", ",", " ", "stressVector"}], " ", "]"}]}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"stressMatrix", "::", "svec"}], "=", 
     "\"\<Stress vector is not a vector.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"stressMatrix", "::", "len"}], "=", 
     "\"\<Stress vector length is not the same as the number of edges.\>\""}],
     ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"stressMatrixArgumentsQ", "[", " ", 
     RowBox[{"m_", ",", " ", "stressVector_"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"Which", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Not", " ", "@", " ", 
       RowBox[{"VectorQ", "[", " ", "stressVector", " ", "]"}]}], " ", ",", 
      "\n", "\t\t", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"stressMatrix", "::", "svec"}], "]"}], ";", " ", "False"}], 
      ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"m", "[", "\"\<edges\>\"", "]"}], "]"}], " ", "\[NotEqual]", 
       " ", 
       RowBox[{"Length", "[", "stressVector", "]"}]}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"stressMatrix", "::", "len"}], "]"}], ";", " ", "False"}], 
      ",", "\n", "\t", "True", ",", " ", "True"}], "\n", "]"}]}]}]}]], "Code",\

 CellLabel->
  "In[965]:=",ExpressionUUID->"bb3a7d49-4ce8-41fc-b235-752e697856ab"]
}, Closed]],

Cell[CellGroupData[{

Cell["infinitesimalMotions[]", "Subsection",ExpressionUUID->"4943eeb1-0a06-427a-8438-0fa94c25262d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "infinitesimalMotions", "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<constraints\>\"", "\[Rule]", "None"}], ",", " ", 
       RowBox[{"\"\<variables\>\"", "\[Rule]", "Automatic"}]}], "}"}], ",", 
     " ", 
     RowBox[{"Options", "[", "NullSpace", "]"}]}], " ", "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[969]:=",ExpressionUUID->"b649267b-3eb7-488c-aa47-6711a6ebdcc9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions", ":", " ", 
      RowBox[{"Except", "[", "_Rule", "]"}], " ", ":", " ", "Automatic"}], 
     ",", " ", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"actualPositions", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"positions", "===", "Automatic"}], ",", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "positions"}], 
        "]"}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Module", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"res", "=", 
          RowBox[{"infinitesimalMotionsInternal", "[", 
           RowBox[{"m", ",", "actualPositions", ",", 
            RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}], ",", 
            RowBox[{"OptionValue", "[", "\"\<variables\>\"", "]"}], ",", " ", 
            
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"{", "opt", "}"}], ",", 
              RowBox[{"Options", "[", "NullSpace", "]"}]}], "]"}]}], "]"}]}], 
         "}"}], ",", "\n", "\t\t", 
        RowBox[{"res", " ", "/;", " ", 
         RowBox[{"res", "=!=", "$Failed"}]}]}], "\n", "\t ", "]"}], " ", "/;",
       " ", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "actualPositions"}], "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "::", "failed"}], "=", 
   "\"\<Failed to find an appropriate solution. Check the constraints.\>\""}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "::", "pos"}], "=", 
   "\"\<Positions do not match those of mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"infinitesimalMotions", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{"Except", "[", 
      RowBox[{"Automatic", "|", "_Rule"}], "]"}]}], ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", "\n", "\t", 
   RowBox[{"Which", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Not", "[", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "positions"}], "]"}], "]"}], ",", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"infinitesimalMotions", "::", "pos"}], "]"}], ";", " ", 
      "False"}], ",", "\n", "\t\t", "True", ",", " ", "False"}], "\n", "\t", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[970]:=",ExpressionUUID->"83a592c0-4483-4c46-8440-5e3cfc26f34a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "::", "var"}], "=", 
   "\"\<Variables listed are not of the form vertexDisplacement[n,c].\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "::", "sing"}], "=", 
   "\"\<Jacobian matrix is singular. Recovering using generic \
variables.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "::", "jac"}], "=", 
   "\"\<Jacobian matrix may not be invertible. Choosing different \
displacements may give better results.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infinitesimalMotions", "::", "lin"}], "=", 
   "\"\<Found `1` linear motions so `1` displacements are needed.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[974]:=",ExpressionUUID->"52dcd2cd-c194-44c3-a973-37f1d0ee3ac9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"infinitesimalMotionsInternal", "[", 
   RowBox[{
   "m_", ",", "positions_", ",", "inputConstraints_", ",", "v_", ",", 
    "nullspaceOptions_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"matrix", ",", "dependencies", ",", "solution"}], "}"}], ",", 
    "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"variables", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}]}], ",", "\n", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
         "collect", " ", "all", " ", "the", " ", "constraints", " ", "valid", 
          " ", "to", " ", "2", "nd", " ", "order", " ", "in", " ", "the", " ",
           "displacements"}], " ", "*)"}], "\n", 
        RowBox[{"equations", "=", 
         RowBox[{"constraintEquationsInternal", "[", 
          RowBox[{
          "m", ",", " ", "positions", ",", " ", "2", ",", " ", "_", ",", " ", 
           "inputConstraints", ",", " ", "vertexDisplacement"}], "]"}]}]}], 
       "\n", "}"}], ",", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"linearize", " ", "the", " ", "equations"}], "*)"}], "\n", 
      "\t", 
      RowBox[{
       RowBox[{"matrix", "=", 
        RowBox[{"CoefficientArrays", "[", 
         RowBox[{"equations", ",", "variables", ",", " ", 
          RowBox[{"\"\<Symmetric\>\"", "\[Rule]", "True"}]}], "]"}]}], ";", 
       "\n", "\n", "\t", 
       RowBox[{"(*", "\n", "\t", 
        RowBox[{
         RowBox[{
         "Find", " ", "dependencies", " ", "among", " ", "the", " ", "linear",
           " ", 
          RowBox[{"equations", ".", "\n", "\n", "\t", "When"}], " ", "the", 
          " ", "constraints", " ", "arise", " ", "only", " ", "from", " ", 
          "edge", " ", "stretching"}], ",", " ", 
         RowBox[{
          RowBox[{
          "these", " ", "dependences", " ", "are", " ", "the", " ", "self"}], 
          "-", 
          RowBox[{"stresses", "."}]}]}], "\n", "\t", "*)"}], "\n", "\t", 
       RowBox[{"dependencies", "=", 
        RowBox[{"Orthogonalize", "[", 
         RowBox[{"NullSpace", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"matrix", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "nullspaceOptions"}],
           "]"}], "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "the", " ", "linear", " ", "displacements", " ", "that", " ", "are", 
         " ", "allowed"}], "*)"}], "\n", "\t", 
       RowBox[{"solution", "=", 
        RowBox[{"linearMotionsToDisplacementRules", "[", 
         RowBox[{"m", ",", 
          RowBox[{"linearMotions", "[", 
           RowBox[{"m", ",", 
            RowBox[{"matrix", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "nullspaceOptions"}], "]"}],
           ",", "v"}], "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"Which", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"solution", "===", "$Failed"}], ",", " ", "$Failed", ",", 
         "\n", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Length", "[", "solution", "]"}], ">", "0"}], ",", "\n", 
         "\t\t\t", 
         RowBox[{"Expand", "[", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "analytical", " ", "processing", " ", "that", " ", "I", " ", 
             "prefer"}], ",", " ", 
            RowBox[{
            "but", " ", "should", " ", "not", " ", "take", " ", "a", " ", 
             "long", " ", "time", " ", "to", " ", "perform"}]}], "*)"}], "\n",
           "\t\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"vertexDisplacement", "[", "m", "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "dependencies", "]"}], ">", "0"}], ",", 
               RowBox[{"dependencies", " ", ".", " ", "equations"}], ",", 
               RowBox[{"{", "}"}]}], "]"}]}], "\n", "\t\t\t\t", "}"}], " ", "/.",
            " ", 
           RowBox[{"Dispatch", "[", "solution", "]"}]}], "\n", "\t\t\t", 
          "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
          "no", " ", "solution", " ", "but", " ", "no", " ", "errors", " ", 
           "either"}], "*)"}], "\n", "\t\t", "True", ",", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"infinitesimalMotions", "::", "failed"}], "]"}], ";", "\n",
           "\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}]}]}], "\n", "\t", "]"}]}]}], "\n", 
     "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[978]:=",ExpressionUUID->"b327d84b-f6fd-4e10-a64a-483813cf0a29"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"linearMotionsToDisplacementRules", "[", 
    RowBox[{"m_", ",", "linearMotions_", ",", "inputDisplacements_"}], "]"}], 
   ":=", 
   RowBox[{
    RowBox[{"{", "}"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Length", "[", "linearMotions", "]"}], "\[Equal]", "0"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"linearMotionsToDisplacementRules", "[", 
    RowBox[{"m_", ",", "linearMotions_", ",", "inputDisplacements_List"}], 
    "]"}], ":=", "\n", 
   RowBox[{"With", "[", "\n", 
    RowBox[{"(*", 
     RowBox[{"preprocess", " ", "arguments"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"displacements", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "inputDisplacements", "}"}], "]"}]}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"Module", "[", "\n", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "x", ",", "y", ",", "c", ",", "rules", ",", "jacobianMatrix", ",", 
          "inverseJacobian", ",", "displacementIndices"}], "}"}], ",", "\n", 
        "\t", 
        RowBox[{
         RowBox[{"displacementIndices", "=", 
          RowBox[{
           RowBox[{"displacements", "/.", 
            RowBox[{
             RowBox[{"vertexDisplacement", "[", 
              RowBox[{"x_", ",", "y_"}], "]"}], "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}]}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<x\>\"", "\[Rule]", "1"}], ",", 
             RowBox[{"\"\<y\>\"", "\[Rule]", "2"}], ",", 
             RowBox[{"\"\<z\>\"", "\[Rule]", "3"}]}], "}"}]}]}], ";", "\n", 
         "\t", 
         RowBox[{"jacobianMatrix", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"linearMotions", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"Sequence", "@@", "#"}]}], "]"}], "]"}], "&"}], "/@", 
           "displacementIndices"}]}], ";", "\n", "\t", "\n", "\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "if", " ", "inverting", " ", "the", " ", "jacobian", " ", "fails", 
            " ", "entirely"}], ",", " ", 
           RowBox[{
            RowBox[{"we", "'"}], "ll", " ", "need", " ", "to", " ", "deal", 
            " ", "with", " ", 
            RowBox[{"that", "."}]}]}], "*)"}], "\n", "\t", 
         RowBox[{"inverseJacobian", "=", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"Inverse", "[", "jacobianMatrix", "]"}], ",", "\n", 
            "\t\t", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{"infinitesimalMotions", "::", "sing"}], "]"}], ";", 
             "\n", "\t\t", 
             RowBox[{"Return", "[", 
              RowBox[{"linearMotionsToDisplacementRules", "[", 
               RowBox[{"m", ",", "linearMotions", ",", "Automatic"}], "]"}], 
              "]"}]}], ",", "\n", "\t\t", 
            RowBox[{"Inverse", "::", "sing"}]}], "\n", "\t", "]"}]}], ";", 
         "\n", "\t", 
         RowBox[{"(*", 
          RowBox[{
          "warn", " ", "that", " ", "the", " ", "jacobian", " ", "matrix", 
           " ", "is", " ", "almost", " ", "singular"}], "*)"}], "\n", "\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"Det", "[", "jacobianMatrix", "]"}], "]"}], "<", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "16"}], ")"}]}]}], ",", 
           RowBox[{"Message", "[", 
            RowBox[{"infinitesimalMotions", "::", "jac"}], "]"}]}], "]"}], 
         ";", "\n", "\n", "\t", 
         RowBox[{"rules", "=", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"Array", "[", 
             RowBox[{"c", ",", 
              RowBox[{"Length", "[", "jacobianMatrix", "]"}]}], "]"}], "->", 
            RowBox[{"inverseJacobian", " ", ".", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", "displacements", "}"}], "]"}]}]}], "]"}]}], ";", 
         "\n", "\t", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}], "\[Rule]", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Array", "[", 
               RowBox[{"c", ",", 
                RowBox[{"Length", "[", "jacobianMatrix", "]"}]}], "]"}], " ", 
              ".", " ", "linearMotions"}], "/.", "rules"}], "]"}]}], 
          "]"}]}]}], "\n", "\n", "]"}], "/;", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "linearMotions", "]"}], "\[Equal]", 
        RowBox[{"Length", "[", "displacements", "]"}]}], "&&", 
       RowBox[{"MatchQ", "[", 
        RowBox[{"displacements", ",", 
         RowBox[{"{", "__vertexDisplacement", "}"}]}], "]"}]}]}]}], " ", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"linearMotionsToDisplacementRules", "[", 
    RowBox[{"m_", ",", "linearMotions_", ",", "Automatic"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", "=", 
        RowBox[{"Unique", "[", "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}], "\[Rule]", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Array", "[", 
           RowBox[{"v", ",", 
            RowBox[{"Length", "[", "linearMotions", "]"}]}], "]"}], " ", ".", 
          " ", "linearMotions"}], "]"}]}], "]"}]}], "\n", "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "linearMotions", "]"}], ">", "0"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"linearMotionsToDisplacementRules", "[", 
   RowBox[{"m_", ",", "linearMotions_", ",", "c_Symbol"}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}], "\[Rule]", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Array", "[", 
        RowBox[{"c", ",", 
         RowBox[{"Length", "[", "linearMotions", "]"}]}], "]"}], " ", ".", 
       " ", "linearMotions"}], "]"}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "linearMotions", "]"}], ">", "0"}]}]}]}], "Code",
 CellLabel->
  "In[979]:=",ExpressionUUID->"acf53775-617a-4c64-abce-1ca8d0a00a98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"linearMotionsToDisplacementRules", "[", 
   RowBox[{"m_", ",", "linearMotions_", ",", "displacements_"}], "]"}], ":=", 
  
  RowBox[{"Which", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Not", "[", 
     RowBox[{"MatchQ", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"{", "displacements", "}"}], "]"}], ",", 
       RowBox[{"{", "__vertexDisplacement", "}"}]}], "]"}], "]"}], ",", "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"infinitesimalMotions", "::", "var"}], "]"}], ";", "\n", "\t\t",
      "$Failed"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"Length", "[", "linearMotions", "]"}], "\[NotEqual]", 
     RowBox[{"Length", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", "displacements", "}"}], "]"}], "]"}]}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"infinitesimalMotions", "::", "lin"}], ",", 
       RowBox[{"Length", "[", "linearMotions", "]"}]}], "]"}], ";", "\n", 
     "\t\t", "$Failed"}], ",", "\n", "\t", "True", ",", "\n", "\t\t", 
    "$Failed"}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[983]:=",ExpressionUUID->"cc158a20-c3f3-4d03-9644-fc087c2118ee"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["some functions to do faster computations", "Section",ExpressionUUID->"d6a44126-9792-4309-a17f-48bcc9564428"],

Cell[CellGroupData[{

Cell["constraintMatrixFunction[]", "Subsection",ExpressionUUID->"5e57b61a-d219-4934-a890-cd59956902d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "constraintMatrixFunction", "]"}], "=", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", "None"}], ",", " ", 
      
      RowBox[{"\"\<pattern\>\"", " ", "\[Rule]", " ", "_"}], ",", " ", 
      RowBox[{"\"\<rules\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", "}"}]}]}], " ", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintMatrixFunction", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], " ", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   "\n", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"constraintMatrices", ",", " ", "vars", " ", ",", " ", 
       RowBox[{"symb", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Unique", "[", "\"\<x\>\"", "]"}], "&"}], ",", 
          RowBox[{"Length", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"vertexPosition", "[", "m", "]"}], "]"}], "]"}]}], 
         "]"}]}], ",", " ", "map"}], "}"}], ",", "\n", "\n", "\t", 
     RowBox[{
      RowBox[{"vars", " ", "=", " ", 
       RowBox[{"Check", "[", " ", 
        RowBox[{
         RowBox[{"reduceVariables", "[", " ", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}], " ", ",", 
           " ", 
           RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}]}], " ", "]"}], 
         ",", " ", "$Failed"}], " ", "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"constraintMatrices", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"vars", " ", "===", " ", "$Failed"}], ",", "\n", "\n", 
         "\t\t", 
         RowBox[{"CoefficientArrays", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"constraintEquations", "[", " ", 
            RowBox[{"m", ",", " ", 
             RowBox[{"vertexPosition", "[", "m", "]"}], ",", " ", "1", ",", 
             " ", 
             RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", 
              RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}]}], ",",
              " ", 
             RowBox[{"\"\<pattern\>\"", "\[Rule]", 
              RowBox[{"OptionValue", "[", "\"\<pattern\>\"", "]"}]}], ",", 
             " ", 
             RowBox[{
             "\"\<output\>\"", " ", "\[Rule]", " ", "vertexDisplacement"}]}], 
            " ", "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"Flatten", "[", 
            RowBox[{"vertexDisplacement", "[", "m", "]"}], "]"}]}], "\n", 
          "\t\t", "]"}], ",", "\n", "\n", "\t\t", 
         RowBox[{"CoefficientArrays", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"constraintEquations", "[", " ", 
             RowBox[{"m", ",", " ", 
              RowBox[{"vertexPosition", "[", "m", "]"}], ",", " ", "1", ",", 
              " ", 
              RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", 
               RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}]}], 
              ",", " ", 
              RowBox[{"\"\<pattern\>\"", "\[Rule]", 
               RowBox[{"OptionValue", "[", "\"\<pattern\>\"", "]"}]}], ",", 
              " ", 
              RowBox[{
              "\"\<output\>\"", " ", "\[Rule]", " ", "vertexDisplacement"}]}],
              " ", "]"}], " ", "//.", " ", 
            RowBox[{"OptionValue", "[", "\"\<rules\>\"", "]"}]}], ",", "\n", 
           "\t\t\t", "vars"}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}], 
      ";", "\n", "\t", "\n", "\t", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"constraintMatrices", "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"{", "}"}], "}"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{
            RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], " ", 
            RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], "]"}], "}"}],
         ",", "\n", "\t\t", "\n", "\t\t", "True", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"map", "=", 
          RowBox[{"Dispatch", "@", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"vertexPosition", "[", "m", "]"}], "]"}], "\[Rule]", 
             "symb"}], "]"}]}]}], ";", "\n", "\t\t\t", 
         RowBox[{"Function", " ", "@@", " ", 
          RowBox[{"{", " ", 
           RowBox[{"symb", ",", " ", 
            RowBox[{
             RowBox[{"Normal", "@", 
              RowBox[{"constraintMatrices", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], " ", "/.", " ", "map"}]}], 
           "}"}]}]}]}], "\n", "\t", "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"reduceVariables", "[", 
   RowBox[{"vars_", ",", 
    RowBox[{"{", "}"}]}], "]"}], ":=", "vars"}], "\n", 
 RowBox[{
  RowBox[{"reduceVariables", "[", 
   RowBox[{"vars_", ",", 
    RowBox[{"rules", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rule", "[", " ", 
        RowBox[{
         RowBox[{"vertexDisplacement", "[", 
          RowBox[{"_", ",", "_"}], "]"}], ",", " ", "_"}], " ", "]"}], ".."}],
       "}"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"Variables", "[", 
     RowBox[{"vars", " ", "//.", " ", "rules"}], "]"}], ",", 
    "_vertexDisplacement"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"reduceVariables", "[", 
    RowBox[{"vars_", ",", " ", "notRules_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", " ", 
      RowBox[{"constraintMatrixFunction", "::", "rules"}], "]"}], ";", " ", 
     "vars"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constraintMatrixFunction", "::", "rules"}], "=", 
   "\"\<Replacement rules are not of the form { vertexDisplacement[v1, c1] -> \
.., .. }.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[984]:=",ExpressionUUID->"b8f6c0e1-9575-4565-94e8-3146faa40eae"]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanismEnergyFunction[]", "Subsection",ExpressionUUID->"bc938ce6-3992-448f-acc2-17a2ed40c182"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "mechanismEnergyFunction", "]"}], " ", ":=", " ", 
    
    RowBox[{"Options", "[", "mechanismEnergy", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"mechanismEnergyFunction", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"energy", " ", "=", " ", 
       RowBox[{"mechanismEnergy", "[", 
        RowBox[{"m", ",", " ", "opt"}], " ", "]"}]}], ",", " ", "\n", 
      RowBox[{"symb", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Unique", "[", "\"\<x\>\"", "]"}], "&"}], ",", 
         RowBox[{"Length", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"vertexPosition", "[", "m", "]"}], "]"}], "]"}]}], "]"}]}],
       ",", " ", "\n", "map"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"map", "=", 
      RowBox[{"Dispatch", "@", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"vertexPosition", "[", "m", "]"}], "]"}], "\[Rule]", 
         "symb"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"Function", " ", "@@", " ", 
      RowBox[{"{", " ", 
       RowBox[{"symb", ",", " ", 
        RowBox[{"energy", " ", "/.", " ", "map"}]}], "}"}]}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[990]:=",ExpressionUUID->"dad8f07f-6e82-4d90-82ad-f6ac6a36ef22"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["energy minimization", "Section",ExpressionUUID->"3a07a406-3a93-4f1d-9018-62647c8f04a2"],

Cell[CellGroupData[{

Cell["minimizeEnergy[]", "Subsection",ExpressionUUID->"73422a9f-f78f-40d0-b5cf-0b9ca1818700"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "minimizeEnergy", "]"}], "=", 
   RowBox[{"Join", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<initial\>\"", "->", "Automatic"}], "}"}], ",", " ", 
     RowBox[{"Options", "[", "mechanismEnergy", "]"}], ",", " ", 
     RowBox[{"Options", "[", "FindMinimum", "]"}]}], " ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"minimizeEnergy", ",", "HoldRest"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"minimizeEnergy", "::", "badinitial"}], "=", 
   "\"\<Initial conditions are not well-formed numeric positions matching the \
mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"minimizeEnergy", "::", "data"}], "=", 
   "\"\<Data for compiled function not a vector of numerical values.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"minimizeEnergy", "::", "energy"}], "=", 
   "\"\<Energy is not numerical at initial condition.\>\""}], ";"}]}], "Code",\

 CellLabel->
  "In[992]:=",ExpressionUUID->"3e97a0de-a970-4d5c-ab00-d0691ecf3e87"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"minimizeEnergy", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"energy", " ", ":", " ", 
      RowBox[{"Except", "[", "_Rule", "]"}], " ", ":", " ", "Automatic"}], 
     ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"minimizeEnergyInternal", "[", " ", 
        RowBox[{"m", ",", " ", "energy", ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<initial\>\"", "]"}], ",", " ", 
         RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], " ", "}"}], ",", "\n", 
     "\t", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"minimizeEnergyInternal", "[", " ", 
   RowBox[{
   "m_", ",", " ", "energyExpression_", ",", " ", "initial_", ",", " ", 
    "opt_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"energy", " ", "=", " ", 
       RowBox[{"minimizeEnergyComputeEnergy", "[", 
        RowBox[{"m", ",", " ", "energyExpression", ",", " ", "opt"}], " ", 
        "]"}]}], ",", "\n", "\t", 
      RowBox[{"initialPositions", " ", "=", " ", 
       RowBox[{"minimizeEnergyInitialPositions", "[", 
        RowBox[{"m", ",", " ", "initial"}], " ", "]"}]}], ",", "\n", "\t", 
      "res"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"energy", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
       RowBox[{"initialPositions", " ", "=!=", " ", "$Failed"}]}], ",", "\n", 
      "\t\t", 
      RowBox[{
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"minimizeEnergyMinimize", "[", " ", 
         RowBox[{
         "m", ",", " ", "energy", ",", " ", "initialPositions", ",", " ", 
          "opt"}], " ", "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", " ", 
           RowBox[{"Dimensions", "[", "initial", "]"}], " ", "]"}], " ", 
          "\[Equal]", " ", "3"}], ",", " ", "res", ",", " ", 
         RowBox[{"First", "[", "res", "]"}]}], " ", "]"}]}], ",", "\n", 
      "\t\t", "$Failed"}], "\n", "\t", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[997]:=",ExpressionUUID->"cad7656e-ac79-4b74-bd8a-9e72c0644b19"],

Cell[CellGroupData[{

Cell["\<\
minimizeEnergyInitialPositions[], minimizeEnergyComputeEnergy[]\
\>", "Subsubsection",ExpressionUUID->"ce099429-1333-43b9-b495-fa2b90f21605"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", "\t", 
   RowBox[{"parse", " ", "the", " ", "arguments"}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"minimizeEnergyInitialPositions", "[", " ", 
     RowBox[{"m_", ",", " ", "Automatic"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "}"}]}], "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyInitialPositions", "[", " ", 
     RowBox[{"m_", ",", " ", 
      RowBox[{"initialPositions_", "?", "MatrixQ"}]}], " ", "]"}], " ", ":=", 
    " ", 
    RowBox[{
     RowBox[{"{", "initialPositions", "}"}], " ", "/;", " ", 
     RowBox[{"numericCoordinatesQ", "[", 
      RowBox[{"m", ",", " ", "initialPositions"}], "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyInitialPositions", "[", " ", 
     RowBox[{"m_", ",", " ", 
      RowBox[{"initialPositions_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ArrayQ", "[", 
          RowBox[{"#", ",", "_", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], 
     " ", "]"}], " ", ":=", " ", 
    RowBox[{"initialPositions", " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", "initialPositions", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;"}], "]"}], "]"}], " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], ",", 
        RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], "}"}]}]}]}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyInitialPositions", "[", " ", 
     RowBox[{"m_", ",", " ", "pos_"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"minimizeEnergy", "::", "badinitial"}], "]"}], ";", " ", 
      "$Failed"}], ")"}]}], "\n", "\n", 
   RowBox[{"(*", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyComputeEnergy", "[", " ", 
     RowBox[{"m_", ",", " ", "Automatic", ",", " ", "options_"}], " ", "]"}], 
    " ", ":=", " ", 
    RowBox[{"mechanismEnergy", "[", 
     RowBox[{"m", ",", " ", 
      RowBox[{"FilterRules", "[", 
       RowBox[{
        RowBox[{"{", "options", "}"}], ",", " ", 
        RowBox[{"Options", "[", "mechanismEnergy", "]"}]}], "]"}]}], " ", 
     "]"}]}], "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyComputeEnergy", "[", " ", 
     RowBox[{"m_", ",", " ", 
      RowBox[{"energy_", "?", "compiledNumericalMechanismEnergyQ"}], ",", " ",
       "options_"}], " ", "]"}], " ", ":=", " ", "energy"}], "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyComputeEnergy", "[", " ", 
     RowBox[{"m_", ",", " ", "analyticEnergy_", ",", " ", "options_"}], " ", 
     "]"}], " ", ":=", " ", 
    RowBox[{"analyticEnergy", " ", "/;", " ", 
     RowBox[{"analyticEnergyQ", "[", 
      RowBox[{"analyticEnergy", ",", " ", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "]"}]}]}], "\n", "\n", 
   
   RowBox[{
    RowBox[{"minimizeEnergyComputeEnergy", "[", " ", 
     RowBox[{"m_", ",", " ", 
      RowBox[{"energy_", "?", "compiledMechanismEnergyQ"}], ",", " ", 
      "options_"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"minimizeEnergy", "::", "data"}], "]"}], ";", " ", "$Failed"}],
      ")"}]}], "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyComputeEnergy", "[", " ", 
     RowBox[{"m_", ",", " ", "badEnergy_", ",", " ", "options_"}], " ", "]"}],
     " ", ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"minimizeEnergy", "::", "energy"}], "]"}], ";", " ", 
      "$Failed"}], ")"}]}]}]}]], "Code",
 CellLabel->
  "In[999]:=",ExpressionUUID->"9357dc4e-c4b9-4298-9e85-37d87e5d3ebc"]
}, Closed]],

Cell[CellGroupData[{

Cell["minimizeEnergyMinimize[]", "Subsubsection",ExpressionUUID->"603d4498-8b6c-4503-933d-b4a9c97b5661"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"energy", " ", "is", " ", "a", " ", "compiled", " ", "function"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"minimizeEnergyMinimize", "[", " ", 
     RowBox[{"m_", ",", " ", 
      RowBox[{"energy_", "?", "compiledNumericalMechanismEnergyQ"}], ",", " ",
       "initialPositions_", ",", " ", "options_"}], " ", "]"}], " ", ":=", 
    "\n", 
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"constraintData", " ", "=", " ", 
         RowBox[{"processConstraintEquations", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "\n", "\t\t", 
           RowBox[{"constraintEquations", "[", " ", 
            RowBox[{"m", ",", " ", 
             RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
             "Infinity", ",", " ", 
             RowBox[{"Flatten", " ", "@", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "\"\<output\>\"", " ", "\[Rule]", " ", "vertexPosition"}], 
                ",", " ", 
                RowBox[{"FilterRules", "[", 
                 RowBox[{"options", ",", " ", 
                  RowBox[{"Options", "[", "constraintEquations", "]"}]}], " ",
                  "]"}]}], " ", "}"}]}]}], " ", "]"}]}], "\n", "\t", "]"}]}], 
        ",", "\n", "\t", 
        RowBox[{"data", " ", "=", " ", 
         RowBox[{"energy", "[", "\"\<data\>\"", "]"}]}], ",", " ", 
        RowBox[{"allVariables", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"vertexPosition", "[", "m", "]"}], "]"}]}], ",", "\n", "\t",
         "variables", ",", " ", "variableSpecifications", ",", " ", 
        "linearConstraints", ",", "\n", "\t", "\n", "\t", 
        RowBox[{"minimizationOptions", " ", "=", " ", 
         RowBox[{"FilterRules", "[", 
          RowBox[{"options", ",", " ", 
           RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], ",", "\n",
         "\t", "minimizationResults"}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"variables", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
         "constraintData", "[", " ", "\"\<constrained positions\>\"", " ", 
          "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"variableSpecifications", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", " ", 
           RowBox[{"{", 
            RowBox[{"allVariables", ",", " ", 
             RowBox[{"Flatten", " ", "@", " ", "#"}]}], "}"}], " ", "]"}], 
          "&"}], " ", "/@", " ", "initialPositions"}]}], ";", "\n", "\n", 
       "\t", 
       RowBox[{"(*", 
        RowBox[{
        "turn", " ", "the", " ", "solved", " ", "linear", " ", "constraints", 
         " ", "into", " ", "simple", " ", "linear", " ", "constraints"}], 
        "*)"}], "\n", "\t", 
       RowBox[{"linearConstraints", " ", "=", " ", 
        RowBox[{"Equal", " ", "@@@", " ", 
         RowBox[{
         "constraintData", "[", " ", "\"\<linear solutions\>\"", " ", 
          "]"}]}]}], ";", "\n", "\n", "\t", 
       RowBox[{"minimizationResults", " ", "=", " ", 
        RowBox[{"Cases", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Map", "[", " ", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"executeMinimizationCompiled", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"energy", "[", "\"\<energy\>\"", "]"}], "[", 
                RowBox[{"variables", ",", " ", "data"}], "]"}], ",", " ", 
               "\n", "\t\t\t\t", "linearConstraints", ",", " ", "\n", 
               "\t\t\t\t", "#", ",", " ", "\n", "\t\t\t\t", 
               RowBox[{
                RowBox[{"energy", "[", "\"\<gradient\>\"", "]"}], "[", 
                RowBox[{"variables", ",", "data"}], "]"}], ",", " ", "\n", 
               "\t\t\t\t", "minimizationOptions"}], " ", "\n", "\t\t\t", 
              "]"}], "&"}], ",", "\n", "\t\t\t", "variableSpecifications"}], 
           "\n", "\t\t", "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"{", " ", 
           RowBox[{"_", " ", ",", " ", 
            RowBox[{"{", "__Rule", "}"}]}], " ", "}"}]}], "\n", "\t", "]"}]}],
        ";", "\n", "\t", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "minimizationResults", "]"}], ">", "0"}], 
         ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
             RowBox[{
              RowBox[{
              "constraintData", "[", "\"\<constrained positions\>\"", "]"}], 
              " ", "/.", " ", 
              RowBox[{"Dispatch", "[", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], " ", "]"}]}]}], " ", "}"}], 
           "&"}], " ", "/@", " ", "minimizationResults"}], ",", "\n", "\t\t", 
         
         RowBox[{"{", "}"}]}], "\n", "\t", "]"}]}]}], "\n", "]"}]}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"executeMinimizationCompiled", "[", " ", 
     RowBox[{"energy_", ",", " ", 
      RowBox[{"{", "}"}], ",", " ", "initial_", ",", " ", "gradient_", ",", 
      " ", "options_"}], " ", "]"}], ":=", " ", 
    RowBox[{"Module", "[", " ", 
     RowBox[{
      RowBox[{"{", "tmp", "}"}], ",", "\n", "\t", 
      RowBox[{"Check", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"tmp", " ", "=", " ", 
         RowBox[{"FindMinimum", " ", "@@", " ", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{"energy", ",", " ", 
            RowBox[{"Sequence", " ", "@@", " ", "initial"}], ",", " ", 
            RowBox[{"Gradient", " ", "\[RuleDelayed]", " ", "gradient"}], ",",
             " ", "options"}], " ", "\n", "\t\t", "}"}]}]}], ",", "\n", 
        "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "tmp", "]"}], "\[Equal]", "2"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<error\>\"", "@", 
             RowBox[{"tmp", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
            RowBox[{"tmp", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], " ", "}"}], ",", " ", 
          "$Failed"}], " ", "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"executeMinimizationCompiled", "[", " ", 
     RowBox[{
     "energy_", ",", " ", "constraints_", ",", " ", "initial_", ",", " ", 
      "gradient_", ",", " ", "options_"}], " ", "]"}], ":=", " ", 
    RowBox[{"Module", "[", " ", 
     RowBox[{
      RowBox[{"{", "tmp", "}"}], ",", "\n", "\t", 
      RowBox[{"tmp", " ", "=", " ", 
       RowBox[{"Check", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"FindMinimum", " ", "@@", " ", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Flatten", "[", " ", 
             RowBox[{"{", 
              RowBox[{"energy", ",", " ", "constraints"}], "}"}], " ", "]"}], 
            ",", " ", 
            RowBox[{"Sequence", " ", "@@", " ", "initial"}], ",", " ", 
            RowBox[{"Gradient", " ", "\[RuleDelayed]", " ", "gradient"}], ",",
             " ", "options"}], " ", "\n", "\t\t", "}"}]}], ",", "\n", "\t\t", 
         
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "tmp", "]"}], "\[Equal]", "2"}], ",", " ", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<error\>\"", " ", "@", " ", 
              RowBox[{"tmp", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
             RowBox[{"tmp", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], " ", "}"}], ",", " ", 
           "$Failed"}], " ", "]"}]}], "\n", "\t", "]"}]}]}], "\n", "]"}]}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "energy", " ", "is", " ", "an", " ", "analytic", " ", "expression"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"minimizeEnergyMinimize", "[", " ", 
     RowBox[{
     "m_", ",", " ", "energy_", ",", " ", "initialPositions_", ",", " ", 
      "options_"}], " ", "]"}], " ", ":=", " ", "\n", 
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"constraintData", " ", "=", " ", 
         RowBox[{"processConstraintEquations", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "\n", "\t\t", 
           RowBox[{"constraintEquations", "[", " ", 
            RowBox[{"m", ",", " ", 
             RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
             "Infinity", ",", " ", 
             RowBox[{"Flatten", " ", "@", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "\"\<output\>\"", " ", "\[Rule]", " ", "vertexPosition"}], 
                ",", " ", 
                RowBox[{"FilterRules", "[", 
                 RowBox[{"options", ",", " ", 
                  RowBox[{"Options", "[", "constraintEquations", "]"}]}], " ",
                  "]"}]}], " ", "}"}]}]}], " ", "]"}]}], "\n", "\t", "]"}]}], 
        ",", "\n", "\t", "constrainedEnergy", ",", " ", 
        "variableSpecifications", ",", "\n", "\t", 
        RowBox[{"minimizationOptions", " ", "=", " ", 
         RowBox[{"FilterRules", "[", 
          RowBox[{"options", ",", 
           RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], ",", "\n",
         "\t", "minimizationResults"}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"variableSpecifications", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"dynamicVariables", "[", " ", 
           RowBox[{"#", ",", " ", "constraintData"}], " ", "]"}], "&"}], " ", 
         "/@", " ", "initialPositions"}]}], ";", "\n", "\t", 
       RowBox[{"constrainedEnergy", " ", "=", " ", 
        RowBox[{"energy", " ", "/.", " ", 
         RowBox[{"constraintData", "[", "\"\<linear solutions\>\"", "]"}]}]}],
        ";", "\n", "\n", "\t", 
       RowBox[{"minimizationResults", " ", "=", " ", 
        RowBox[{"Cases", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Map", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"executeMinimizationAnalytic", "[", " ", 
              RowBox[{
              "constrainedEnergy", ",", " ", "#", ",", " ", 
               "minimizationOptions"}], " ", "]"}], " ", "&"}], " ", ",", " ",
             "variableSpecifications"}], " ", "]"}], ",", "\n", "\t\t", 
          RowBox[{"{", " ", 
           RowBox[{"_", ",", " ", 
            RowBox[{"{", "__Rule", "}"}]}], "}"}]}], "\n", "\t", "]"}]}], ";",
        "\n", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "minimizationResults", "]"}], ">", "0"}], 
         ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
             RowBox[{
              RowBox[{
              "constraintData", "[", "\"\<constrained positions\>\"", "]"}], 
              " ", "/.", " ", 
              RowBox[{"Dispatch", "[", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], " ", "]"}]}]}], " ", "}"}], 
           "&"}], " ", "/@", " ", "minimizationResults"}], ",", "\n", "\t\t", 
         
         RowBox[{"{", "}"}]}], "\n", "\t", "]"}]}]}], "\n", "]"}]}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"executeMinimizationAnalytic", "[", " ", 
     RowBox[{"energy_", ",", " ", "data_", ",", " ", "options_"}], " ", "]"}],
     " ", ":=", " ", 
    RowBox[{"Module", "[", " ", 
     RowBox[{
      RowBox[{"{", "tmp", "}"}], ",", " ", "\n", "\t", 
      RowBox[{"Check", "[", " ", 
       RowBox[{
        RowBox[{"tmp", " ", "=", " ", 
         RowBox[{"FindMinimum", " ", "@@", " ", 
          RowBox[{"{", 
           RowBox[{"energy", ",", " ", "data", ",", " ", 
            RowBox[{"Sequence", " ", "@@", " ", "options"}]}], " ", "}"}]}]}],
         ",", "\n", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "tmp", "]"}], "\[Equal]", "2"}], ",", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"\"\<error\>\"", " ", "@", " ", 
             RowBox[{"tmp", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
            RowBox[{"tmp", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], " ", "}"}], " ", ",", " ", 
          "$Failed"}], " ", "]"}]}], "\n", "\t", "]"}]}], "\n", 
     "]"}]}]}]}]], "Code",
 CellLabel->
  "In[1008]:=",ExpressionUUID->"9c6a83e3-770d-4c96-b30e-1d9e09063824"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["dynamicalSystem[], dynamicalSystemEquations[]", "Subsection",ExpressionUUID->"f771deb2-a4a2-400f-b0c2-7680cc5b00ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "dynamicalSystemEquations", "]"}], "=", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<constraints\>\"", "\[Rule]", "None"}], ",", " ", 
      RowBox[{"(*", 
       RowBox[{"a", " ", "list", " ", "of", " ", "constraints"}], "*)"}], 
      "\n", "\t", 
      RowBox[{"\"\<mass\>\"", "\[Rule]", "1"}], ",", "\n", "\t", 
      RowBox[{"\"\<drag\>\"", "\[Rule]", "0"}], ",", "\n", "\t", 
      RowBox[{"\"\<additional\>\"", "\[Rule]", "0"}]}], " ", 
     RowBox[{"(*", 
      RowBox[{
      "additional", " ", "terms", " ", "to", " ", "add", " ", "to", " ", 
       "the", " ", "energy"}], "*)"}], "\n", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "dynamicalSystem", "]"}], "=", 
   RowBox[{"Join", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Options", "[", "dynamicalSystemEquations", "]"}], ",", "\n", 
     "\t", 
     RowBox[{"Options", "[", "NDSolve", "]"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellLabel->
  "In[1013]:=",ExpressionUUID->"4315eb56-9425-419f-b071-2e2f797f402d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystemEquations", "::", "drag"}], "=", 
   "\"\<Option \\\"drag\\\" cannot be parsed.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystemEquations", "::", "mass"}], "=", 
   "\"\<Option \\\"mass\\\" cannot be parsed.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystemEquations", "::", "pos"}], "=", 
   "\"\<Not a valid set of positions.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystemEquations", "::", "var"}], "=", 
   "\"\<Variables should be of the form {variable, time}.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[1015]:=",ExpressionUUID->"f36975ed-8d9f-4ec4-babc-cce78e40b1a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"validEquationsParamQ", "[", 
   RowBox[{"value_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"value", " ", "\[GreaterEqual]", " ", "0"}]}], "\n", 
 RowBox[{
  RowBox[{"validEquationsParamQ", "[", 
   RowBox[{"value", " ", ":", " ", 
    RowBox[{"Except", "[", "_List", "]"}]}], "]"}], ":=", 
  RowBox[{"Not", "[", 
   RowBox[{"NumericQ", "[", "value", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validEquationsParamQ", "[", "_", "]"}], ":=", "False"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"expandEquationDrags", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"drags_", "?", "validEquationsParamQ"}]}], "]"}], ":=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"drags", ",", " ", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"expandEquationDrags", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"drags", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "validEquationsParamQ"}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"drags", " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "drags", "]"}], "\[Equal]", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"expandEquationDrags", "[", 
   RowBox[{"m_", ",", " ", "None"}], "]"}], ":=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"0", ",", " ", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expandEquationDrags", "[", 
    RowBox[{"m_", ",", " ", "_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"dynamicalSystemEquations", "::", "drag"}], "]"}], ";", " ", 
     "$Failed"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"expandEquationMasses", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"masses_", "?", "validEquationsParamQ"}]}], "]"}], ":=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"masses", ",", " ", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"expandEquationMasses", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"masses", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "validEquationsParamQ"}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"masses", " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "masses", "]"}], "\[Equal]", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"expandEquationMasses", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"None", " ", "|", " ", "0"}]}], "]"}], ":=", "None"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expandEquationMasses", "[", 
    RowBox[{"m_", ",", " ", "_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"dynamicalSystemEquations", "::", "mass"}], "]"}], ";", " ", 
     "$Failed"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"evaluateEquationPositions", "[", 
   RowBox[{"m_", ",", " ", "Automatic"}], "]"}], ":=", 
  RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"evaluateEquationPositions", "[", 
   RowBox[{"m_", ",", " ", "positions_"}], "]"}], ":=", 
  RowBox[{"positions", " ", "/;", " ", 
   RowBox[{"vertexPositionsQ", "[", 
    RowBox[{"m", ",", "positions"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"evaluateEquationPositions", "[", 
   RowBox[{"m_", ",", " ", "_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"dynamicalSystemEquations", "::", "pos"}], "]"}], ";", " ", 
    "$Failed"}], ")"}]}]}], "Code",
 CellLabel->
  "In[1019]:=",ExpressionUUID->"bd2ebe0c-ce7f-45f7-bfc1-49aa1aec9a95"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystemEquations", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"initialPositions_", " ", ":", " ", "Automatic"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"variableName_Symbol", ",", " ", "timeVariable_Symbol"}], "}"}],
      ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"energy", " ", "=", " ", 
        RowBox[{
         RowBox[{"mechanismEnergy", "[", 
          RowBox[{"m", ",", " ", 
           RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", 
            RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}]}]}], 
          "]"}], " ", "+", " ", 
         RowBox[{"OptionValue", "[", "\"\<additional\>\"", "]"}]}]}], ",", 
       "\n", 
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"evaluateEquationPositions", "[", 
         RowBox[{"m", ",", "initialPositions"}], "]"}]}], ",", "\n", 
       RowBox[{"drags", " ", "=", " ", 
        RowBox[{"expandEquationDrags", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<drag\>\"", "]"}]}], "]"}]}], ",", 
       "\n", 
       RowBox[{"masses", " ", "=", " ", 
        RowBox[{"expandEquationMasses", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<mass\>\"", "]"}]}], "]"}]}]}], 
      "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"res", "=", 
          RowBox[{"dynamicalSystemEquationsInternal", "[", 
           RowBox[{
           "m", ",", " ", "positions", ",", " ", "variableName", ",", " ", 
            "timeVariable", ",", " ", "masses", ",", " ", "drags", ",", " ", 
            "energy"}], " ", "]"}]}], "}"}], ",", "\n", "\t\t", 
        RowBox[{"res", " ", "/;", " ", 
         RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", "\t", "]"}], 
      " ", "/;", " ", 
      RowBox[{
       RowBox[{"drags", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
       RowBox[{"masses", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
       RowBox[{"positions", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
       RowBox[{"variableName", " ", "=!=", " ", "timeVariable"}]}]}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"dynamicalSystemEquations", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"initialPositions_", " ", ":", " ", "Automatic"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"_", ",", "_"}], "}"}], ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"dynamicalSystemEquations", "::", "vars"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"dynamicalSystemEquations", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"initialPositions_", " ", ":", " ", "Automatic"}], ",", " ", 
    RowBox[{"Except", "[", "_List", "]"}], " ", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"dynamicalSystemEquations", "::", "vars"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[1033]:=",ExpressionUUID->"1b30499b-3dd1-4129-8c80-b3664c73ca01"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystem", "::", "drag"}], "=", 
   "\"\<Option \\\"drag\\\" cannot be parsed.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystem", "::", "mass"}], "=", 
   "\"\<Option \\\"mass\\\" cannot be parsed.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystem", "::", "timespec"}], "=", 
   "\"\<The last argument should be of the form {time variable, start time, \
end time} with start and end times being numerical and the time variable \
being a Symbol.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1036]:=",ExpressionUUID->"e01b2e15-065d-44be-a333-3bb058054274"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"validDynamicalParamQ", "[", "value_", "]"}], ":=", 
   RowBox[{
    RowBox[{"NumericQ", "[", "value", "]"}], " ", "&&", " ", 
    RowBox[{"value", " ", "\[GreaterEqual]", " ", "0"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalDrags", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"drags_", "?", "validDynamicalParamQ"}]}], "]"}], ":=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"drags", ",", " ", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalDrags", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"drags", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "validDynamicalParamQ"}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"drags", " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "drags", "]"}], "\[Equal]", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalDrags", "[", 
   RowBox[{"m_", ",", " ", "None"}], "]"}], ":=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"0", ",", " ", 
    RowBox[{"MeshCellCount", "[", 
     RowBox[{"m", ",", "0"}], "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expandDynamicalDrags", "[", 
    RowBox[{"m_", ",", " ", "_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"dynamicalSystem", "::", "drag"}], "]"}], ";", " ", "$Failed"}],
     ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "expandDynamicalMasses", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalMasses", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"None", " ", "|", " ", "0"}]}], "]"}], ":=", " ", 
  "None"}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalMasses", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"masses_", "?", "validDynamicalParamQ"}]}], "]"}], ":=", " ", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"masses", ",", " ", 
    RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalMasses", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"masses", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "validDynamicalParamQ"}], "}"}]}]}], "]"}], ":=", 
  " ", 
  RowBox[{"masses", " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "masses", "]"}], " ", "\[Equal]", " ", 
    RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"expandDynamicalMasses", "[", 
   RowBox[{"m_", ",", " ", "_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"dynamicalSystem", "::", "mass"}], "]"}], ";", " ", "$Failed"}], 
   ")"}]}]}], "Code",
 CellLabel->
  "In[1039]:=",ExpressionUUID->"a850dc3b-621f-4bd6-aaee-873395b1bb45"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parseInitialConditions", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{
      RowBox[{"_", "?", "MatrixQ"}], " ", "|", " ", "Automatic"}]}]}], "]"}], 
  ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"parsePositions", "[", 
     RowBox[{"m", ",", " ", "positions"}], "]"}], ",", " ", 
    RowBox[{"parseVelocities", "[", 
     RowBox[{"m", ",", " ", "None"}], "]"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"parseInitialConditions", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"positions", " ", ":", " ", 
       RowBox[{
        RowBox[{"_", "?", "MatrixQ"}], " ", "|", " ", "Automatic"}]}], ",", 
      " ", 
      RowBox[{"velocities_", "?", "MatrixQ"}]}], "}"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"parsePositions", "[", 
     RowBox[{"m", ",", " ", "positions"}], "]"}], ",", " ", 
    RowBox[{"parseVelocities", "[", 
     RowBox[{"m", ",", " ", "velocities"}], "]"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parseInitialConditions", "[", 
    RowBox[{"m_", ",", " ", "_"}], "]"}], ":=", "$Failed"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"parsePositions", "[", 
   RowBox[{"m_", ",", " ", "Automatic"}], "]"}], ":=", 
  RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"parsePositions", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"positions_", "?", "MatrixQ"}]}], "]"}], ":=", 
  RowBox[{"positions", " ", "/;", " ", 
   RowBox[{"numericCoordinatesQ", "[", 
    RowBox[{"m", ",", "positions"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parsePositions", "[", 
    RowBox[{"m_", ",", " ", 
     RowBox[{"positions_", "?", "MatrixQ"}]}], "]"}], ":=", "$Failed"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"parseVelocities", "[", 
   RowBox[{"m_", ",", " ", "velocities_"}], "]"}], ":=", " ", 
  RowBox[{"velocities", " ", "/;", " ", 
   RowBox[{"numericCoordinatesQ", "[", 
    RowBox[{"m", ",", " ", "velocities"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"parseVelocities", "[", 
   RowBox[{"m_", ",", " ", "None"}], "]"}], ":=", " ", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"0", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], ",", " ", 
      RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], "}"}]}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[1049]:=",ExpressionUUID->"d0b96612-939a-4fb2-8f6e-a03a87c8f541"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dynamicalSystem", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"initialConditions_", " ", ":", " ", "Automatic"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"time_Symbol", ",", " ", 
       RowBox[{"start_", "?", "NumericQ"}], ",", " ", 
       RowBox[{"end_", "?", "NumericQ"}]}], "}"}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"energy", " ", "=", " ", 
        RowBox[{
         RowBox[{"mechanismEnergy", "[", 
          RowBox[{"m", ",", " ", 
           RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", 
            RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}]}]}], 
          "]"}], " ", "+", " ", 
         RowBox[{"OptionValue", "[", "\"\<additional\>\"", "]"}]}]}], ",", 
       "\n", 
       RowBox[{"parsedInitialConditions", " ", "=", " ", 
        RowBox[{"parseInitialConditions", "[", 
         RowBox[{"m", ",", " ", "initialConditions"}], "]"}]}], ",", "\n", 
       RowBox[{"drags", " ", "=", " ", 
        RowBox[{"expandDynamicalDrags", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<drag\>\"", "]"}]}], "]"}]}], ",", 
       "\n", 
       RowBox[{"masses", " ", "=", " ", 
        RowBox[{"expandDynamicalMasses", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<mass\>\"", "]"}]}], "]"}]}]}], 
      "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"res", "=", 
          RowBox[{"dynamicalSystemInternal", "[", 
           RowBox[{
           "m", ",", " ", "masses", ",", " ", "drags", ",", " ", 
            "parsedInitialConditions", ",", " ", "energy", ",", " ", 
            RowBox[{"{", 
             RowBox[{"time", ",", " ", "start", ",", " ", "end"}], "}"}], ",",
             " ", 
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"{", "opt", "}"}], ",", " ", 
              RowBox[{"Options", "[", "NDSolve", "]"}]}], "]"}]}], " ", 
           "]"}]}], "}"}], ",", "\n", "\t\t", 
        RowBox[{"res", " ", "/;", " ", 
         RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", "\t", "]"}], 
      " ", "/;", " ", 
      RowBox[{
       RowBox[{"drags", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
       RowBox[{"masses", " ", "=!=", " ", "$Failed"}], " ", "&&", " ", 
       RowBox[{"parsedInitialConditions", " ", "=!=", " ", "$Failed"}]}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"dynamicalSystem", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"_", " ", ":", " ", "Automatic"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"_", ",", "_", ",", "_"}], "}"}]}], " ", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"dynamicalSystem", "::", "timespec"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"dynamicalSystem", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"_", " ", ":", " ", "Automatic"}], ",", " ", 
    RowBox[{"Except", "[", "_List", "]"}]}], " ", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"dynamicalSystem", "::", "timespec"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[1057]:=",ExpressionUUID->"d9dde884-5ff3-466a-b915-739df74cc11a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dynamicalSystemEquationsInternal", "[", 
   RowBox[{
   "m_", ",", " ", "initialPositions_", ",", " ", "v_", ",", " ", 
    "timeVariable_", ",", " ", "masses_", ",", " ", "drags_", ",", " ", 
    "energy_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pinnedVertices", " ", "=", " ", 
       RowBox[{"Dispatch", "[", " ", 
        RowBox[{"solveLinearEquations", "[", 
         RowBox[{
          RowBox[{"constraintEquations", "[", 
           RowBox[{"m", ",", "initialPositions", ",", "Infinity", ",", 
            RowBox[{"\"\<output\>\"", "\[Rule]", "vertexPosition"}]}], "]"}], 
          ",", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{"vertexPosition", "[", "m", "]"}], "]"}]}], " ", "]"}], 
        " ", "]"}]}], ",", " ", "\n", "variables", ",", " ", "gradient", ",", 
      " ", "equationSystem", ",", " ", "i", ",", " ", "j", ",", " ", "t"}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"variables", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"vertexPosition", "[", "m", "]"}], " ", "/.", " ", 
        "pinnedVertices"}], " ", "/.", " ", 
       RowBox[{
        RowBox[{"vertexPosition", "[", 
         RowBox[{"i_", ",", " ", "j_"}], "]"}], " ", "\[RuleDelayed]", " ", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"i", ",", " ", "j"}], "]"}], "[", "t", "]"}]}]}]}], ";", 
     "\n", "\t", 
     RowBox[{"gradient", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Partition", "[", " ", 
         RowBox[{
          RowBox[{"D", "[", " ", 
           RowBox[{"energy", ",", " ", 
            RowBox[{"{", " ", 
             RowBox[{"Flatten", "[", " ", 
              RowBox[{"vertexPosition", "[", "m", "]"}], " ", "]"}], " ", 
             "}"}]}], "]"}], ",", " ", 
          RowBox[{"embeddingDimension", "[", "m", "]"}]}], " ", "]"}], " ", "/.",
         " ", "pinnedVertices"}], " ", "/.", " ", 
       RowBox[{
        RowBox[{"vertexPosition", "[", 
         RowBox[{"i_", ",", " ", "j_"}], "]"}], " ", "\[RuleDelayed]", " ", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"i", ",", " ", "j"}], "]"}], "[", "t", "]"}]}]}]}], ";", 
     "\n", "\t", "\n", "\t", 
     RowBox[{"equationSystem", " ", "=", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"masses", " ", "===", " ", "None"}], ",", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{"Dimensions", "[", "initialPositions", "]"}]}], " ", 
            "]"}], ",", " ", 
           RowBox[{
            RowBox[{"DiagonalMatrix", "[", " ", "masses", " ", "]"}], " ", 
            ".", " ", 
            RowBox[{"D", "[", " ", 
             RowBox[{"variables", ",", " ", 
              RowBox[{"{", 
               RowBox[{"t", ",", " ", "2"}], "}"}]}], " ", "]"}]}]}], " ", 
          "]"}], " ", "\n", "\t\t\t", "+", " ", 
         RowBox[{
          RowBox[{"DiagonalMatrix", "[", " ", "drags", " ", "]"}], " ", ".", 
          " ", 
          RowBox[{"D", "[", " ", 
           RowBox[{"variables", ",", " ", 
            RowBox[{"{", 
             RowBox[{"t", ",", " ", "1"}], "}"}]}], " ", "]"}]}], " ", "+", 
         " ", "gradient"}], "\n", "\t", "]"}], " ", "/.", " ", 
       RowBox[{"t", "\[Rule]", "timeVariable"}]}]}], ";", "\n", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "we", " ", "need", " ", "to", " ", "explicitly", " ", "eliminate", " ", 
       "the", " ", "equations", " ", "that", " ", "are", " ", "predetermined",
        " ", "by", " ", "the", " ", "pinned", " ", "vertices", " ", "or", " ",
        "there", " ", "will", " ", "be", " ", "too", " ", "many", " ", 
       "equations"}], "*)"}], "\n", "\t", 
     RowBox[{"Pick", "[", " ", 
      RowBox[{"equationSystem", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Not", "[", " ", 
          RowBox[{"NumericQ", "[", "#", "]"}], " ", "]"}], "&"}], " ", "/@", 
        " ", 
        RowBox[{"Flatten", "[", "variables", "]"}]}]}], " ", "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[1060]:=",ExpressionUUID->"78b2f67f-dc48-44fe-9713-fc2cd8b3ffff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dynamicalSystemInternal", "[", 
   RowBox[{"m_", ",", " ", "masses_", ",", " ", "drags_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"initialPositions_", ",", " ", "initialVelocities_"}], "}"}], 
    ",", " ", "energy_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"timeVariable_", ",", " ", "start_", ",", " ", "end_"}], "}"}], 
    ",", " ", "opt_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "equations", ",", " ", "v", ",", " ", "variables", ",", " ", 
      "processedVariables", ",", " ", "solution", ",", " ", "i", ",", " ", 
      "j", ",", " ", "\n", 
      RowBox[{"pinnedVertices", " ", "=", " ", 
       RowBox[{"Dispatch", "[", " ", 
        RowBox[{"solveLinearEquations", "[", 
         RowBox[{
          RowBox[{"constraintEquations", "[", 
           RowBox[{"m", ",", "initialPositions", ",", "Infinity", ",", 
            RowBox[{"\"\<output\>\"", "\[Rule]", "vertexPosition"}]}], "]"}], 
          ",", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{"vertexPosition", "[", "m", "]"}], "]"}]}], " ", "]"}], 
        " ", "]"}]}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"list", " ", "only", " ", "the", " ", "non"}], "-", 
      RowBox[{"pinned", " ", "variables"}]}], "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"variables", " ", "=", " ", 
      RowBox[{"Flatten", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"vertexPosition", "[", "m", "]"}], " ", "/.", " ", 
         "pinnedVertices"}], " ", "/.", " ", 
        RowBox[{
         RowBox[{"vertexPosition", "[", 
          RowBox[{"i_", ",", " ", "j_"}], "]"}], " ", "\[RuleDelayed]", " ", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"i", ",", " ", "j"}], "]"}], "[", "timeVariable", 
          "]"}]}]}], " ", "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"equations", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{"the", " ", "dynamical", " ", "system", " ", "equations"}], 
         "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"dynamicalSystemEquationsInternal", "[", 
          RowBox[{
          "m", ",", " ", "initialPositions", ",", " ", "v", ",", " ", 
           "timeVariable", ",", " ", "masses", ",", " ", "drags", ",", " ", 
           "energy"}], "]"}], ",", "\n", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"initial", " ", "positions"}], "*)"}], "\n", "\t\t", 
         RowBox[{"Select", "[", " ", 
          RowBox[{
           RowBox[{"Flatten", "[", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"variables", " ", "/.", " ", 
               RowBox[{"timeVariable", "\[Rule]", "0"}]}], ")"}], " ", "-", 
             " ", 
             RowBox[{"Flatten", "[", "initialPositions", "]"}]}], "]"}], ",", 
           " ", 
           RowBox[{
            RowBox[{"Not", "[", " ", 
             RowBox[{"NumericQ", "[", " ", "#", " ", "]"}], " ", "]"}], 
            "&"}]}], " ", "]"}], ",", "\n", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"initial", " ", "velocities", " ", "if", " ", "needed"}], 
          "*)"}], "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"masses", " ", "===", " ", "None"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"Select", "[", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", " ", 
                RowBox[{
                 RowBox[{"D", "[", " ", 
                  RowBox[{"variables", ",", " ", "timeVariable"}], " ", "]"}],
                  " ", "/.", " ", 
                 RowBox[{"timeVariable", "\[Rule]", "0"}]}], " ", ")"}], " ", 
               "-", " ", 
               RowBox[{"Flatten", "[", "initialVelocities", "]"}]}], ")"}], 
             ",", " ", 
             RowBox[{
              RowBox[{"Not", "[", " ", 
               RowBox[{"NumericQ", "[", " ", "#", " ", "]"}], " ", "]"}], 
              "&"}]}], " ", "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "}"}],
        "]"}]}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"solution", " ", "=", " ", 
      RowBox[{"NDSolve", "[", " ", 
       RowBox[{
        RowBox[{"Thread", "[", " ", 
         RowBox[{"equations", " ", "\[Equal]", " ", "0"}], " ", "]"}], ",", 
        "  ", 
        RowBox[{"Select", "[", " ", 
         RowBox[{"variables", ",", " ", 
          RowBox[{
           RowBox[{"Not", "[", " ", 
            RowBox[{"NumericQ", "[", "#", "]"}], " ", "]"}], " ", "&"}]}], 
         " ", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"timeVariable", ",", " ", "start", ",", " ", "end"}], " ", 
         "}"}], ",", " ", "opt"}], " ", "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "did", " ", "NDSolve", " ", "return", " ", "a", " ", "list", " ", "of", 
       " ", 
       RowBox[{"rules", "?"}]}], "*)"}], "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MatchQ", "[", 
        RowBox[{"solution", ",", 
         RowBox[{"{", 
          RowBox[{"{", "__Rule", "}"}], "}"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"vertexPosition", "[", "m", "]"}], " ", "/.", " ", 
          "pinnedVertices"}], " ", "/.", " ", 
         RowBox[{
          RowBox[{"vertexPosition", "[", 
           RowBox[{"i_", ",", " ", "j_"}], "]"}], " ", "\[RuleDelayed]", " ", 
          
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "[", "timeVariable", 
           "]"}]}]}], " ", "/.", " ", 
        RowBox[{"solution", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t\t", "$Failed"}], 
      "\n", "\t", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[1061]:=",ExpressionUUID->"e09521af-e51f-454e-acee-9ae42f06aee1"]
}, Closed]],

Cell[CellGroupData[{

Cell["monteCarloRun[]", "Subsection",ExpressionUUID->"70fa9bc8-0774-4c9e-b67f-9bd9be81f808"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "monteCarloRun", "]"}], " ", "=", " ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Options", "[", "constraintEquations", "]"}], ",", "\n", "\t", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"\"\<energy\>\"", "\[Rule]", "Automatic"}], ",", " ", 
        RowBox[{"\"\<initial\>\"", "\[Rule]", "Automatic"}]}], "\n", "\t", 
       "}"}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"beta_", "?", "temperatureQ"}], ",", " ", 
     RowBox[{"steps_", "?", "stepsQ"}], " ", ",", " ", 
     RowBox[{"distribution_", "?", "distributionQ"}], ",", " ", 
     RowBox[{"options", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"constraintData", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], " ", "\[Rule]", " ", "0"}], 
             ")"}], "&"}], " ", "/@", " ", 
           RowBox[{
            RowBox[{"processConstraintEquations", "[", "\n", "\t\t", 
             RowBox[{
              RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "\n", "\t\t", 
              RowBox[{"constraintEquations", "[", " ", 
               RowBox[{"m", ",", " ", 
                RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
                "Infinity", ",", " ", 
                RowBox[{"Flatten", " ", "@", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "\"\<output\>\"", " ", "\[Rule]", " ", "vertexPosition"}], 
                   ",", " ", 
                   RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "options", "}"}], ",", " ", 
                    RowBox[{"Options", "[", "constraintEquations", "]"}]}], 
                    " ", "]"}]}], " ", "}"}]}]}], " ", "]"}]}], "\n", "\t", 
             "]"}], "[", "\"\<linear solutions\>\"", "]"}]}], ")"}], " ", "/.",
          " ", 
         RowBox[{"positionRules", "[", " ", 
          RowBox[{
           RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", "+", " ", 
           RowBox[{"vertexDisplacement", "[", "m", "]"}]}], "]"}]}]}], ",", 
       "\n", "\t", 
       RowBox[{"energy", " ", "=", " ", 
        RowBox[{"getEnergy", "[", 
         RowBox[{"m", ",", 
          RowBox[{"OptionValue", "[", "\"\<energy\>\"", "]"}]}], "]"}]}], ",",
        "\n", "\t", "firstEnergy", ",", "\n", "\t", 
       RowBox[{"firstPositions", " ", "=", " ", 
        RowBox[{"processInitialPositions", "[", 
         RowBox[{"m", ",", " ", 
          RowBox[{"OptionValue", "[", "\"\<initial\>\"", "]"}]}], "]"}]}], 
       ",", "\n", "\t", "results"}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"firstEnergy", " ", "=", " ", 
       RowBox[{"evaluateEnergy", "[", " ", 
        RowBox[{"firstPositions", ",", " ", "energy"}], " ", "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"results", " ", "=", " ", 
       RowBox[{"Transpose", " ", "@", " ", 
        RowBox[{"NestList", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"monteCarloStep", "[", " ", 
            RowBox[{
            "energy", ",", " ", "#", ",", " ", "beta", ",", " ", 
             "distribution", ",", " ", "constraintData"}], " ", "]"}], "&"}], 
          ",", " ", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "firstEnergy", ",", " ", "firstPositions"}],
            "}"}], ",", " ", "\n", "\t\t", "steps"}], "\n", "\t", "]"}]}]}], 
      ";", "\n", "\t", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"N", "@", 
          RowBox[{"Total", "[", 
           RowBox[{"results", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "/", 
         RowBox[{"Length", "[", 
          RowBox[{"results", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", " ", 
        RowBox[{"results", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"results", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], " ", "}"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"getEnergy", "[", " ", 
   RowBox[{"m_", ",", " ", "Automatic"}], "]"}], " ", ":=", " ", 
  RowBox[{"mechanismEnergy", "[", "m", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"getEnergy", "[", " ", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"energy_", "?", "compiledMechanismEnergyQ"}]}], "]"}], " ", ":=", 
  " ", "energy"}], "\n", 
 RowBox[{
  RowBox[{"getEnergy", "[", " ", 
   RowBox[{"m_", ",", " ", "expression_"}], "]"}], ":=", " ", 
  RowBox[{"expression", " ", "/;", " ", 
   RowBox[{"analyticEnergyQ", "[", 
    RowBox[{"expression", ",", " ", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergy", "[", " ", 
    RowBox[{"m_", ",", " ", "_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"monteCarloRun", "::", "energy"}], "]"}], ";", "\n", "\t", 
     RowBox[{"mechanismEnergy", "[", "m", "]"}]}], "\n", ")"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"processInitialPositions", "[", 
   RowBox[{"m_", ",", " ", "Automatic"}], "]"}], ":=", 
  RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"processInitialPositions", "[", 
   RowBox[{"m_", ",", " ", "pos_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"pos", " ", "/;", " ", 
   RowBox[{"numericCoordinatesQ", "[", 
    RowBox[{"m", ",", "pos"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"processInitialPositions", "[", 
    RowBox[{"m_", ",", " ", "pos_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"monteCarloRun", "::", "pos"}], "]"}], ";", "  ", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"temperatureQ", "[", " ", 
   RowBox[{"beta_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
       RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], " ", "]"}], " ", ":=", 
  " ", "True"}], "\n", 
 RowBox[{
  RowBox[{"temperatureQ", "[", " ", 
   RowBox[{"beta_", "?", "NumericQ"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"monteCarloRun", "::", "neg"}], "]"}], ";", " ", "False"}], 
   ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"temperatureQ", "[", " ", "beta_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"monteCarloRun", "::", "num"}], "]"}], ";", " ", "False"}], 
    ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"stepsQ", "[", " ", 
   RowBox[{"steps_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"IntegerQ", "[", "#", "]"}], " ", "&&", " ", 
       RowBox[{"#", " ", ">", " ", "0"}]}], " ", "&"}], ")"}]}], " ", "]"}], 
  " ", ":=", " ", "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stepsQ", "[", " ", "steps_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"monteCarloRun", "::", "steps"}], "]"}], ";", " ", "False"}], 
    ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"distributionQ", "[", " ", 
   RowBox[{"distribution_", "?", "DistributionParameterQ"}], " ", "]"}], " ", 
  ":=", " ", "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"distributionQ", "[", " ", "distribution_", " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"monteCarloRun", "::", "distr"}], "]"}], ";", " ", "False"}], 
    ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "energy"}], "=", 
   "\"\<Option \\\"energy\\\" should be an analytical energy, a compiled \
energy, or Automatic.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "neg"}], "=", 
   "\"\<Inverse temperature should be positive.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "pos"}], "=", 
   "\"\<Initial positions are not compatible with mechanism.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "num"}], "=", 
   "\"\<Inverse temperature should be numerical and positive.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "steps"}], "=", 
   "\"\<Third argument should be a positive integer indicated the number of \
steps to take.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"monteCarloRun", "::", "distr"}], "=", 
   "\"\<Fourth argument should be a valid probability distribution.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[1062]:=",ExpressionUUID->"0b3e82e1-9782-44ba-a8ab-6a1e680d3561"],

Cell[BoxData[
 RowBox[{
  RowBox[{"monteCarloStep", "[", " ", 
   RowBox[{"energy_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"_", ",", " ", "oldEnergy_", ",", " ", "oldPositions_"}], "}"}], 
    " ", ",", " ", "beta_", ",", " ", "distribution_", ",", " ", "rules_"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"newPositions", " ", "=", " ", 
       RowBox[{"randomDisplacements", "[", " ", 
        RowBox[{"oldPositions", ",", " ", 
         RowBox[{
         "\"\<distribution\>\"", " ", "\[Rule]", " ", "distribution"}], ",", 
         " ", 
         RowBox[{"\"\<rules\>\"", " ", "\[Rule]", " ", "rules"}]}], " ", 
        "]"}]}], ",", "\n", "\t", "newEnergy"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"newEnergy", " ", "=", " ", 
      RowBox[{"evaluateEnergy", "[", 
       RowBox[{"newPositions", ",", " ", "energy"}], "]"}]}], ";", "\n", "\t",
      "\n", "\t", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"newEnergy", " ", "\[LessEqual]", " ", "oldEnergy"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "newEnergy", ",", " ", "newPositions"}], "}"}],
        ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "<", 
        RowBox[{"Exp", "[", 
         RowBox[{"beta", " ", 
          RowBox[{"(", 
           RowBox[{"oldEnergy", "-", "newEnergy"}], ")"}]}], " ", "]"}]}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "newEnergy", ",", " ", "newPositions"}], "}"}],
        ",", "\[IndentingNewLine]", "\t\t", "True", ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "oldEnergy", ",", "oldPositions"}], "}"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[1084]:=",ExpressionUUID->"908b3a1d-a33f-4549-ac93-a0bb0355f103"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["global rigidity", "Section",ExpressionUUID->"10b53468-301a-456a-9396-7a1b3738e486"],

Cell[CellGroupData[{

Cell["isometricTrajectory[]", "Subsection",ExpressionUUID->"b2ee595b-130d-48ce-a5ad-4e7ffb538f90"],

Cell[TextData[{
 StyleBox["To do",
  FontSlant->"Italic"],
 ": a way to decide if we should terminate a run, fix \
\[OpenCurlyDoubleQuote]RandomWalk\[CloseCurlyDoubleQuote] to take proper \
options"
}], "Text",ExpressionUUID->"4a653e1c-eeb8-4064-b854-41501624a19e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", " ", "isometricTrajectory", " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<initial\>\"", " ", "\[Rule]", " ", "Automatic"}], ",", "\n",
      "\t", 
     RowBox[{"\"\<constraints\>\"", " ", "\[Rule]", " ", "None"}], ",", " ", 
     RowBox[{"\"\<rules\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"Method", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Minimization\>\"", ",", " ", 
        RowBox[{"MaxIterations", " ", "\[Rule]", " ", 
         RowBox[{"10", "^", "4"}]}]}], "}"}]}], ",", "\n", "\t", 
     RowBox[{"Tolerance", " ", "\[Rule]", " ", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "8"}], ")"}]}]}], ",", "\n", "\t", 
     RowBox[{"\"\<stepsize\>\"", " ", "\[Rule]", " ", "0.1"}]}], "\n", 
    "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[1085]:=",ExpressionUUID->"0667504c-8c02-4916-b24b-3bb7bdc2cf26"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectory", "[", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "direction_", ",", " ", 
     RowBox[{"steps_", "?", "stepsQ"}], " ", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"initialPositions", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<initial\>\"", "]"}], "===", 
          "Automatic"}], ",", " ", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<initial\>\"", "]"}]}], "]"}]}], 
      "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{"res", " ", "=", " ", 
          RowBox[{"isometricTrajectoryInternal", "[", 
           RowBox[{
           "m", ",", " ", "initialPositions", ",", " ", "direction", ",", " ",
             "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{"steps", ",", " ", 
              RowBox[{"OptionValue", "[", "\"\<stepsize\>\"", "]"}], ",", " ", 
              RowBox[{"OptionValue", "[", "Tolerance", "]"}]}], "}"}], ",", 
            " ", "\n", "\t\t\t", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"OptionValue", "[", "Method", "]"}], "}"}], "]"}], ",", 
            "\n", "\t\t\t", 
            RowBox[{"{", "opt", "}"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", 
         "}"}], ",", "\n", "\t\t", 
        RowBox[{"res", " ", "/;", " ", 
         RowBox[{
          RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
          "isometricTrajectoryInternal"}]}]}], "\n", "\t", "]"}], " ", "/;", 
      " ", 
      RowBox[{"And", "[", " ", 
       RowBox[{
        RowBox[{"positionsQ", "[", 
         RowBox[{"m", ",", " ", "initialPositions"}], "]"}], " ", ",", " ", 
        RowBox[{"displacementsQ", "[", 
         RowBox[{"m", ",", " ", "direction"}], "]"}], " ", ",", " ", 
        RowBox[{"toleranceQ", "[", " ", 
         RowBox[{"OptionValue", "[", "Tolerance", "]"}], " ", "]"}]}], " ", 
       "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"stepsQ", "[", " ", 
   RowBox[{"steps_Integer", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], ")"}]}], " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stepsQ", "[", " ", "steps_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"isometricTrajectory", "::", "steps"}], "]"}], ";", " ", 
     "False"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"toleranceQ", "[", " ", 
   RowBox[{"tol_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
       RowBox[{"#", "\[GreaterEqual]", "0"}]}], "&"}], ")"}]}], " ", "]"}], 
  " ", ":=", " ", "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toleranceQ", "[", " ", "tol_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"isometricTrajectory", "::", "tol"}], "]"}], ";", " ", 
     "False"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"positionsQ", "[", " ", 
   RowBox[{"m_", " ", ",", " ", "positions_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{"numericCoordinatesQ", "[", 
     RowBox[{"m", ",", "positions"}], "]"}], ",", " ", "True", ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"isometricTrajectory", "::", "pos"}], ",", "positions"}], 
      "]"}], ";", " ", "False"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementsQ", "[", " ", 
    RowBox[{"m_", " ", ",", " ", "positions_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{"numericCoordinatesQ", "[", 
      RowBox[{"m", ",", "positions"}], "]"}], ",", " ", "True", ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"isometricTrajectory", "::", "disp"}], ",", "positions"}], 
       "]"}], ";", " ", "False"}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectory", "::", "steps"}], "=", 
   "\"\<Number of steps is not a positive integer.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectory", "::", "tol"}], " ", "=", " ", 
   "\"\<Tolerance should be a positive real number.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectory", "::", "stepsize"}], " ", "=", " ", 
   "\"\<Stepsize should be a function of positions or a positive real number.\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectory", "::", "pos"}], " ", "=", " ", 
   "\"\<Initial positions `1` should be numerical and correspond to \
mechanism..\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectory", "::", "disp"}], " ", "=", " ", 
   "\"\<Initial displacements `1` should be numerical and correspond to \
mechanism..\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1086]:=",ExpressionUUID->"c18d8317-ae43-4b7f-9da1-c3475f665d7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"isometricTrajectoryInternal", "[", " ", 
   RowBox[{
   "m_", ",", " ", "initialPositions_", ",", " ", "direction_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"steps_", ",", " ", "stepsize_", ",", " ", "tolerance_"}], "}"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{"method_", " ", ",", " ", "methodSpec___"}], "}"}], " ", ",", 
    " ", "options_"}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"minimizationOptions", " ", "=", " ", 
       RowBox[{"FilterRules", "[", " ", 
        RowBox[{
         RowBox[{"{", "methodSpec", "}"}], ",", " ", 
         RowBox[{"Options", "[", "FindMinimum", "]"}]}], " ", "]"}]}], ",", 
      "\n", "\t", 
      RowBox[{"nullspaceOptions", " ", "=", " ", 
       RowBox[{"FilterRules", "[", " ", 
        RowBox[{
         RowBox[{"{", "methodSpec", "}"}], ",", " ", 
         RowBox[{"Options", "[", "NullSpace", "]"}]}], " ", "]"}]}], ",", 
      "\n", "\n", "\t", 
      RowBox[{"normalizedDirection", " ", "=", " ", 
       RowBox[{"direction", "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "direction", "]"}], " ", ".", " ", 
          RowBox[{"Flatten", "[", "direction", "]"}]}], " ", "]"}]}]}], ",", 
      "\n", "\t", "\n", "\t", 
      RowBox[{"constraintMatrixFunc", " ", "=", " ", 
       RowBox[{"constraintMatrixFunction", "[", " ", 
        RowBox[{"m", " ", ",", " ", 
         RowBox[{"FilterRules", "[", " ", 
          RowBox[{"options", ",", " ", 
           RowBox[{"Options", "[", "constraintMatrixFunction", "]"}]}], " ", 
          "]"}]}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"energyFunc", " ", "=", " ", 
       RowBox[{"mechanismEnergy", "[", 
        RowBox[{"m", " ", ",", " ", "initialPositions", " ", ",", " ", 
         RowBox[{"FilterRules", "[", " ", 
          RowBox[{"options", ",", " ", 
           RowBox[{"Options", "[", "mechanismEnergy", "]"}]}], " ", "]"}]}], 
        " ", "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"DeleteCases", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"FoldList", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"isometricTrajectoryStep", "[", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"method", ",", " ", "stepsize", ",", " ", "tolerance"}], 
             "}"}], ",", " ", "m", ",", " ", "#1", ",", " ", "#2", ",", " ", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Quiet", "[", 
               RowBox[{"constraintMatrixFunc", " ", "@@", " ", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"#1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], " ", ",", 
              " ", "nullspaceOptions"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"energyFunc", " ", ",", " ", "minimizationOptions"}], 
             "}"}]}], " ", "]"}], " ", "&"}], ",", "\n", "\t\t\t", 
         RowBox[{"{", 
          RowBox[{"initialPositions", ",", "normalizedDirection"}], "}"}], 
         ",", "\n", "\t\t\t", 
         RowBox[{"Range", "[", "steps", "]"}]}], "\n", "\t\t", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "\n", "\t\t", 
      "$Failed"}], "\n", "\t", "]"}]}], "\n", "]"}]}]], "Code",ExpressionUUID->\
"f0a82410-c535-47a8-948b-b21f94c95228"],

Cell[BoxData[
 RowBox[{
  RowBox[{"isometricTrajectoryStep", "[", " ", 
   RowBox[{"_", ",", "_", ",", 
    RowBox[{"{", 
     RowBox[{"$Failed", ",", " ", "_"}], "}"}], ",", "_", ",", "_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"$Failed", ",", " ", "$Failed"}], "}"}]}]], "Code",
 CellLabel->
  "In[1099]:=",ExpressionUUID->"431662f0-2ecf-4999-bdfc-bca5f77db73b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectoryStep", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"None", ",", " ", "stepsize_", ",", "tolerance_"}], "}"}], ",", 
     "m_", ",", 
     RowBox[{"{", 
      RowBox[{"positions_", ",", "lastDirection_"}], "}"}], ",", " ", "n_", 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"constraintMat_", ",", " ", "nullspaceOptions_"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"constraintEnergy_", ",", " ", "minimizationOptions_"}], 
      "}"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"newDirection", " ", "=", " ", 
       RowBox[{"projectTrialDirection", "[", 
        RowBox[{
        "positions", ",", " ", "lastDirection", ",", " ", "constraintMat", 
         ",", " ", "nullspaceOptions"}], " ", "]"}]}], "\n", "}"}], ",", "\n",
      "\t", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"computeTrialPosition", "[", " ", 
        RowBox[{
        "positions", ",", " ", "newDirection", ",", " ", "stepsize", ",", " ",
          "n"}], " ", "]"}], ",", "\n", "\t\t", "newDirection"}], "\n", "\t", 
      "}"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isometricTrajectoryStep", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<Minimization\>\"", ",", " ", "stepsize_", ",", " ", "tolerance_"}],
       "}"}], " ", ",", " ", "m_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"positions_", ",", " ", "lastDirection_"}], "}"}], ",", " ", 
     "n_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"constraintMat_", ",", " ", "nullspaceOptions_"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"constraintEnergy_", ",", " ", "minimizationOptions_"}], 
      "}"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"newDirection", " ", "=", " ", 
        RowBox[{"projectTrialDirection", "[", " ", 
         RowBox[{
         "positions", ",", " ", "lastDirection", ",", " ", "constraintMat", 
          ",", " ", "nullspaceOptions"}], " ", "]"}]}], ",", "\n", "\t", 
       "trialPosition"}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"trialPosition", " ", "=", " ", 
       RowBox[{"computeTrialPosition", "[", " ", 
        RowBox[{
        "positions", ",", " ", "newDirection", ",", " ", "stepsize", ",", " ",
          "n"}], " ", "]"}]}], ";", "\n", "\t", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"evaluateEnergy", "[", 
            RowBox[{
            "m", ",", " ", "trialPosition", ",", " ", "constraintEnergy"}], 
            "]"}], " ", ">", " ", "tolerance"}], ",", "\n", "\t\t\t", 
          RowBox[{"correctTrialPosition", "[", 
           RowBox[{
           "m", ",", " ", "trialPosition", ",", " ", "constraintEnergy", ",", 
            " ", "minimizationOptions"}], "]"}], ",", "\n", "\t\t\t", 
          "trialPosition"}], "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
        "newDirection"}], "\n", "\t", "}"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"isometricTrajectoryStep", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<RandomWalk\>\"", ",", " ", "stepsize_", ",", " ", "tolerance_"}], 
     "}"}], " ", ",", " ", "m_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"positions_", ",", " ", "lastDirection_"}], "}"}], ",", " ", 
    "n_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"constraintMat_", ",", " ", "nullspaceOptions_"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"constraintEnergy_", ",", " ", "minimizationOptions_"}], "}"}]}],
    " ", "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"newDirection", " ", "=", " ", 
       RowBox[{"projectTrialDirection", "[", " ", 
        RowBox[{"positions", ",", " ", 
         RowBox[{"randomDisplacements", "[", 
          RowBox[{"m", ",", "positions"}], "]"}], ",", " ", "constraintMat", 
         ",", " ", "nullspaceOptions"}], " ", "]"}]}], ",", "\n", "\t", 
      "trialPosition"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"trialPosition", " ", "=", " ", 
      RowBox[{"computeTrialPosition", "[", " ", 
       RowBox[{
       "positions", ",", " ", "newDirection", ",", " ", "stepsize", ",", " ", 
        "n"}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"evaluateEnergy", "[", 
           RowBox[{
           "m", ",", " ", "newDirection", ",", " ", "constraintEnergy"}], 
           "]"}], " ", ">", " ", "tolerance"}], ",", "\n", "\t\t\t", 
         RowBox[{"correctTrialPosition", "[", 
          RowBox[{
          "m", ",", " ", "trialPosition", ",", " ", "constraintEnergy", ",", 
           " ", "minimizationOptions"}], "]"}], ",", "\n", "\t\t\t", 
         "trialPosition"}], "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
       "newDirection"}], "\n", "\t", "}"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[1100]:=",ExpressionUUID->"d4e68e5a-9602-4a4a-b440-17bbf19734d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "returns", " ", "a", " ", "normalized", " ", "displacement", " ", 
    "tangent", " ", "to", " ", "the", " ", "configuration", " ", "space", " ",
     "and", " ", "as", " ", "close", " ", "to", " ", "trialDirection", " ", 
    "as", " ", "possible"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"projectTrialDirection", "[", " ", 
     RowBox[{
     "positions_", " ", ",", " ", "trialDirection_", ",", " ", 
      "constraintMat_", " ", ",", " ", "nullspaceOptions_"}], " ", "]"}], " ",
     ":=", "\n", 
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{"nullspaceBasis", " ", "=", " ", 
        RowBox[{"Orthogonalize", "[", " ", 
         RowBox[{"NullSpace", "[", 
          RowBox[{"constraintMat", ",", " ", "nullspaceOptions"}], " ", "]"}],
          " ", "]"}]}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "nullspaceBasis", "]"}], " ", ">", " ", "0"}],
         ",", "\n", "\t\t", 
        RowBox[{"ArrayReshape", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "nullspaceBasis", "]"}], " ", ".", " ", 
            "nullspaceBasis", " ", ".", " ", 
            RowBox[{"Flatten", "[", "trialDirection", "]"}]}], "]"}], ",", 
          "\n", "\t\t\t", 
          RowBox[{"Dimensions", "[", "positions", "]"}]}], "\n", "\t\t", 
         "]"}], ",", "\n", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"isometricTrajectory", "::", "dirns"}], " ", ",", " ", 
           "positions"}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"ConstantArray", "[", " ", 
          RowBox[{"0", ",", " ", 
           RowBox[{"Dimensions", "[", "positions", "]"}]}], " ", "]"}]}]}], 
       "\n", "\t", "]"}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"isometricTrajectory", "::", "dirns"}], "=", 
     "\"\<Cannot identify tangent space at `1`.\>\""}], ";"}]}]}]], "Code",
 CellLabel->
  "In[1103]:=",ExpressionUUID->"d0c74681-d7be-4943-bdb3-e78c2132a41c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "find", " ", "a", " ", "new", " ", "set", " ", "of", " ", "positions", " ",
     "from", " ", "a", " ", "trial", " ", "step"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"computeTrialPosition", "[", " ", 
     RowBox[{"positions_", " ", ",", " ", "trialStep_", " ", ",", " ", 
      RowBox[{"stepsize_", "?", "NumericQ"}], ",", " ", "n_"}], " ", "]"}], 
    " ", ":=", " ", "\n", "\t\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"stepsize", " ", "\[GreaterEqual]", " ", "0"}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"positions", " ", "+", " ", 
       RowBox[{"stepsize", " ", "trialStep"}]}], ",", "\n", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Message", "[", " ", 
        RowBox[{"isometricTrajectory", "::", "stepsize"}], " ", "]"}], ";", 
       "\n", "\t\t\t", "$Failed"}]}], "\n", "\t\t", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"computeTrialPosition", "[", " ", 
     RowBox[{
     "positions_", " ", ",", " ", "trialStep_", " ", ",", " ", "stepsize_", 
      ",", " ", "n_"}], " ", "]"}], " ", ":=", "\n", 
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"actualSize", " ", "=", " ", 
        RowBox[{"stepsize", "[", 
         RowBox[{"positions", ",", "n"}], "]"}]}], " ", "}"}], ",", "\n", 
      "\t", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericQ", "[", " ", "actualSize", " ", "]"}], " ", "&&", 
         " ", 
         RowBox[{"actualSize", " ", "\[GreaterEqual]", " ", "0"}]}], ",", 
        "\n", "\t\t", 
        RowBox[{"positions", " ", "+", " ", 
         RowBox[{"actualSize", " ", "trialStep"}]}], ",", "\n", "\n", "\t\t", 
        
        RowBox[{
         RowBox[{"Message", "[", " ", 
          RowBox[{"isometricTrajectory", "::", "stepsize"}], " ", "]"}], ";", 
         "\n", "\t\t", "$Failed"}]}], "\n", "\t", "]"}]}], "\n", 
     "]"}]}]}]}]], "Code",
 CellLabel->
  "In[1105]:=",ExpressionUUID->"486130dd-c91f-4635-9d83-1f3bd0aa6d73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"correctTrialPosition", "[", " ", 
   RowBox[{
   "m_", ",", " ", "trialPosition_", " ", ",", " ", "constraintEnergy_", ",", 
    " ", "minimizationOptions_"}], " ", "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"minimizeEnergyInternal", "[", 
    RowBox[{
    "m", ",", " ", "constraintEnergy", ",", " ", "trialPosition", ",", " ", 
     "minimizationOptions"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Code",
 CellLabel->
  "In[1107]:=",ExpressionUUID->"2ef881ff-eeb2-4d0c-9acd-87ee573cc4ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["findMinimalTrajectory[]", "Subsection",ExpressionUUID->"f701af98-4573-44ce-bac9-9fc083472d2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "findMinimalTrajectory", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<additional\>\"", "->", "0"}], ",", "\n", "\t", 
     RowBox[{"\"\<constraints\>\"", "\[Rule]", "None"}], ",", "\n", "\t", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<ElasticBand\>\"", ",", " ", 
        RowBox[{"MaxIterations", "\[Rule]", 
         RowBox[{"10", "^", "5"}]}], ",", " ", 
        RowBox[{"\"\<stiffness\>\"", " ", "\[Rule]", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "4"}], ")"}]}]}]}], "}"}]}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[1108]:=",ExpressionUUID->"c0491458-47ed-4612-a97b-234998126d75"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"findMinimalTrajectory", "[", "\"\<Methods\>\"", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\"\<ElasticBand\>\"", ",", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<stiffness\>\"", "\[Rule]", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "4"}], ")"}]}]}], "}"}], ",", 
         "\"\<Options[FindMinimum]\>\""}], "]"}]}], "}"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findMinimalTrajectory", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "start_", ",", " ", "end_", 
     ",", " ", "steps_", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"method", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"OptionValue", "[", "Method", "]"}], "}"}], "]"}]}], ",", 
       " ", "res"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"First", "[", "method", "]"}], ",", "\n", "\t\t", 
         "\"\<ElasticBand\>\"", ",", "\n", "\t\t\t", 
         RowBox[{"findMinimalTrajectoryElasticBand", "[", 
          RowBox[{
          "m", ",", " ", "start", ",", " ", "end", ",", " ", "steps", ",", 
           " ", 
           RowBox[{
            RowBox[{"mechanismEnergy", "[", 
             RowBox[{"m", ",", " ", 
              RowBox[{"\"\<constraints\>\"", "->", 
               RowBox[{"OptionValue", "[", "\"\<constraints\>\"", "]"}]}]}], 
             "]"}], "+", 
            RowBox[{"OptionValue", "[", "\"\<additional\>\"", "]"}]}], ",", 
           " ", 
           RowBox[{"Sequence", " ", "@@", " ", 
            RowBox[{"Rest", "[", "method", "]"}]}]}], " ", "]"}], ",", "\n", 
         "\t\t", "_", ",", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"findMinimalTrajectory", "::", "meth"}], "]"}], ";", "\n", 
          "\t\t\t", "$Failed"}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", "\n",
       "\t", 
      RowBox[{"res", " ", "/;", " ", 
       RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findMinimalTrajectory", "::", "method"}], "=", 
   "\"\<`1` is not a recognized method. Only \\\"ElasticBand\\\" is currently \
recognized.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1109]:=",ExpressionUUID->"258d98b1-596a-4353-9b32-6afddc286af6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"findMinimalTrajectory", "::", "ebstiff"}], "=", 
   "\"\<Stiffness in \\\"ElasticBand\\\" method must be a positive numerical \
value.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findMinimalTrajectory", "::", "ebstart"}], "=", 
   "\"\<Start positions are not numeric coordinates corresponding to \
mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findMinimalTrajectory", "::", "ebend"}], "=", 
   "\"\<End positions are not numeric coordinates corresponding to mechanism.\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"findMinimalTrajectory", "::", "steps"}], "=", 
    "\"\<Number of steps should be a positive integer.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "findMinimalTrajectoryElasticBand", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "findMinimalTrajectoryElasticBand", "]"}], "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<stiffness\>\"", "\[Rule]", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "4"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"findMinimalTrajectoryElasticBand", "[", 
   RowBox[{
   "m_", ",", " ", "startPositions_", ",", "endPositions_", ",", " ", 
    "steps_", ",", " ", "energy_", ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"stiffness", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<stiffness\>\"", "]"}]}], ",", "\n", 
      RowBox[{"fixedVertices", " ", "=", " ", 
       RowBox[{"solveLinearEquations", "[", 
        RowBox[{
         RowBox[{"constraintEquations", "[", 
          RowBox[{"m", ",", "startPositions", ",", "Infinity", ",", 
           RowBox[{"\"\<output\>\"", "\[Rule]", "vertexPosition"}]}], "]"}], 
         ",", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"vertexPosition", "[", "m", "]"}], "]"}]}], " ", "]"}]}], 
      ",", " ", "\n", "variable", ",", " ", "internalVariables", ",", " ", 
      "partialEnergy", ",", " ", "newVariables", ",", " ", "potentialEnergy", 
      ",", " ", "initialConditions", ",", "\n", 
      RowBox[{"minimizationOptions", " ", "=", " ", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "opt", "}"}], ",", 
         RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], ",", " ", 
      "solution"}], "\n", "}"}], ",", "\n", "\n", "\t", 
    RowBox[{
     RowBox[{"Which", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Not", "[", " ", 
        RowBox[{
         RowBox[{"NumericQ", "[", "stiffness", "]"}], " ", "&&", " ", 
         RowBox[{"stiffness", " ", ">", " ", "0"}]}], " ", "]"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"findMinimalTrajectory", "::", "ebstiff"}], "]"}], ";", " ", 
        
        RowBox[{"Return", "[", "$Failed", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"Not", " ", "@", " ", 
        RowBox[{"numericCoordinatesQ", "[", 
         RowBox[{"m", ",", " ", "startPositions"}], "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"findMinimalTrajectory", "::", "ebstart"}], "]"}], ";", " ", 
        
        RowBox[{"Return", "[", "$Failed", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"Not", " ", "@", " ", 
        RowBox[{"numericCoordinatesQ", "[", 
         RowBox[{"m", ",", " ", "endPositions"}], "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"findMinimalTrajectory", "::", "ebend"}], "]"}], ";", " ", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"Not", "[", " ", 
        RowBox[{
         RowBox[{"IntegerQ", "[", "steps", "]"}], " ", "&&", " ", 
         RowBox[{"steps", ">", "0"}]}], " ", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"findMinimalTrajectory", "::", "steps"}], "]"}], ";", " ", 
        RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "\t", "]"}], ";", 
     "\n", "\n", "\t", 
     RowBox[{"internalVariables", "=", " ", 
      RowBox[{"Join", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"positionRules", "[", "startPositions", "]"}], "}"}], ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"MapThread", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", " ", "\[Rule]", " ", "#2"}], "&"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"vertexPosition", "[", "m", "]"}], ",", " ", "#"}], 
               "}"}], ",", " ", "2"}], "]"}], ",", "2"}], "]"}], "&"}], " ", "/@",
          " ", 
         RowBox[{"Array", "[", 
          RowBox[{"variable", ",", " ", 
           RowBox[{"{", 
            RowBox[{"steps", ",", " ", 
             RowBox[{"MeshCellCount", "[", 
              RowBox[{"m", ",", "0"}], "]"}], ",", 
             RowBox[{"embeddingDimension", "[", "m", "]"}]}], "}"}]}], 
          "]"}]}], ",", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"positionRules", "[", "endPositions", "]"}], "}"}]}], "\n", 
       "\t", "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"newVariables", " ", "=", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"vertexPosition", "[", "m", "]"}], " ", "/.", " ", 
         "fixedVertices"}], "]"}], " ", "/.", " ", "internalVariables"}]}], 
     ";", "\n", "\n", "\t", 
     RowBox[{"partialEnergy", " ", "=", " ", 
      RowBox[{"energy", " ", "/.", " ", "fixedVertices"}]}], ";", "\n", "\n", 
     "\t", 
     RowBox[{"potentialEnergy", " ", "=", " ", 
      RowBox[{"Total", " ", "@", " ", 
       RowBox[{"Flatten", " ", "@", " ", 
        RowBox[{"{", "\n", "\t", 
         RowBox[{"(*", 
          RowBox[{"local", " ", "equations"}], "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"partialEnergy", " ", "/.", " ", "#"}], " ", "&"}], 
            ")"}], " ", "/@", " ", "internalVariables"}], ",", "\n", "\n", 
          "\t", 
          RowBox[{"(*", 
           RowBox[{"elastic", " ", "band", " ", "equations"}], "*)"}], "\n", 
          "\t", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"stiffness", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", ".", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "&"}], ")"}], 
           " ", "/@", " ", 
           RowBox[{"Partition", "[", 
            RowBox[{"newVariables", ",", " ", "2", ",", " ", "1"}], "]"}]}]}],
          "\n", "\t", "}"}]}]}]}], ";", "\n", "\n", "\t", 
     RowBox[{"initialConditions", " ", "=", " ", 
      RowBox[{"DeleteCases", "[", " ", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Transpose", " ", "@", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Flatten", "[", " ", 
            RowBox[{"Drop", "[", " ", 
             RowBox[{
              RowBox[{"Rest", " ", "@", " ", "newVariables"}], ",", " ", 
              RowBox[{"-", "1"}]}], "]"}], " ", "]"}], ",", " ", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"startPositions", " ", "+", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"endPositions", " ", "-", " ", "startPositions"}], 
                  ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"steps", "+", "1"}], ")"}]}], " ", "#"}]}], "&"}], 
             " ", "/@", " ", 
             RowBox[{"Range", "[", "steps", "]"}]}], " ", "]"}]}], "}"}]}], 
        ",", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"_", "?", "NumericQ"}], ",", " ", "_"}], "}"}]}], "\n", 
       "\t", "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"solution", " ", "=", " ", 
      RowBox[{"FindMinimum", " ", "@@", " ", 
       RowBox[{"{", 
        RowBox[{
        "potentialEnergy", ",", " ", "initialConditions", ",", " ", 
         "minimizationOptions"}], " ", "}"}]}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "solution", "]"}], " ", "=!=", " ", 
        "FindMinimum"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{"#", ",", 
           RowBox[{"embeddingDimension", "[", "m", "]"}]}], "]"}], "&"}], " ",
         "/@", " ", 
        RowBox[{"(", 
         RowBox[{"newVariables", " ", "/.", " ", 
          RowBox[{"solution", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ",", " ", "$Failed"}], 
      "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[1112]:=",ExpressionUUID->"709fcb9c-08e6-4684-8f67-e39cfa498891"]
}, Closed]],

Cell[CellGroupData[{

Cell["genericGloballyRigidQ[]", "Subsection",ExpressionUUID->"4db4413b-f7dc-4706-99a3-cf121de60a27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "genericGloballyRigidQ", "]"}], "=", 
    RowBox[{"Options", "[", "selfStresses", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"genericGloballyRigidQ", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}]}], ",", " ", 
      RowBox[{"num", " ", "=", " ", 
       RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}], "}"}], ",", "\n", 
    "\t", 
    RowBox[{"Or", " ", "@@", " ", 
     RowBox[{"(", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MatrixRank", "[", 
           RowBox[{
            RowBox[{"stressMatrix", "[", 
             RowBox[{"m", ",", " ", "#"}], "]"}], ",", " ", 
            RowBox[{"Tolerance", " ", "\[Rule]", " ", 
             RowBox[{"OptionValue", "[", "Tolerance", "]"}]}]}], " ", "]"}], 
          " ", "\[Equal]", " ", 
          RowBox[{"num", " ", "-", " ", "dim", " ", "-", " ", "1"}]}], ")"}], 
        "&"}], " ", "/@", " ", 
       RowBox[{"selfStresses", "[", 
        RowBox[{"m", ",", " ", "opt"}], "]"}]}], "\n", "\t", ")"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[1119]:=",ExpressionUUID->"2e74c90e-7216-4c80-a620-b44fa8b68c06"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["post", "Section",ExpressionUUID->"a9b198e2-0767-48ac-b046-37bfd6084753"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[1121]:=",ExpressionUUID->"6ac1cc87-b8a2-416f-a747-62b9785cc946"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["mechanisms`origami: functions for origami", "Chapter",ExpressionUUID->"5a8b7cb0-9767-43dc-919a-1b0b391815a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<mechanisms`origami`\>\"", "]"}], 
  ";"}]], "Code",
 CellLabel->
  "In[1123]:=",ExpressionUUID->"98df5a5e-b331-47c0-a64d-450182746a38"],

Cell[CellGroupData[{

Cell["usage", "Section",ExpressionUUID->"16e15631-03bf-4f3b-84e8-5ce1094fae6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"origamiQ", "::", "usage"}], "=", 
   "\"\<origamiQ[ obj ] returns True if obj can be turned into origami \
(perhaps with defects).\>\""}], ";"}]], "Code",
 CellLabel->
  "In[1124]:=",ExpressionUUID->"1b53aab2-8ab9-4869-815e-f8ca47d5626d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kawasakiQ", "::", "usage"}], "=", "\n", 
   "\"\<kawasakiQ[\!\(\*StyleBox[\"origami\",FontSlant->\"Italic\"]\)] \
returns True if it can be determined that the origami satisfies Kawasaki's \
theorem at each vertex.\nUse option ZeroTest to modify how the function tests \
for zero. Use option WorkingPrecision to set a number of digits for the test.\
\>\""}], ";"}]], "Code",
 CellLabel->
  "In[1125]:=",ExpressionUUID->"1fefdd08-ab81-4b03-aab1-7eb192b442a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"targetFoldAngles", "::", "usage"}], "=", 
   "\"\<targetFoldAngles[m,(positions), (data)] returns an association \
containing a list of folds, their corresponding target angles, and their \
actual angles.\nOptional argument data is a string that is either \\\"folds\\\
\", \\\"angles\\\", \\\"target\\\".\>\""}], ";"}]], "Code",
 CellLabel->
  "In[1126]:=",ExpressionUUID->"01f2dfa2-986a-4b95-b411-c600af854f43"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"foldMatrix", "::", "usage"}], "=", "\n", 
    "\"\<foldMatrix[\!\(\*StyleBox[\"origami\",FontSlant->\"Italic\"]\)] \
returns the fold matrix mapping linear vertex displacements to linear fold \
angle changes.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"angularFoldMatrix", "::", "usage"}], "=", "\n", 
   "\"\<angularFoldMatrix[\!\(\*StyleBox[\"origami\",FontSlant->\"Italic\"]\),\
 (\!\(\*StyleBox[\"positions\",FontSlant->\"Italic\"]\), ) \
\!\(\*StyleBox[\"vertex\",FontSlant->\"Italic\"]\)] returns the angular fold \
matrix of a vertex mapping the angular displacements of the folds from the xy \
plane to the fold angle changes.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1127]:=",ExpressionUUID->"1628f146-b3f2-4871-bccb-7a246f33a144"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"toOrigami", "::", "usage"}], "=", "\n", 
    "\"\<toOrigami[ \!\(\*StyleBox[\"object\",FontSlant->\"Italic\"]\) ] \
converts an object to an origami mechanism. Effectively, this only works for \
some MeshRegion[] or framework[] objects.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"elasticizeOrigami", "::", "usage"}], "=", 
   "\"\<elasticizeOrigami[ o ] attempts to create an elastic model of an \
origami structure.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1129]:=",ExpressionUUID->"3583d2b8-2386-46fa-a348-7dcfe3f512df"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"singleVertex", "::", "usage"}], "=", "\n", 
    "\"\<singleVertex[ {\!\(\*StyleBox[\"angle\",FontSlant->\"Italic\"]\) 1, \
\!\(\*StyleBox[\"angle\",FontSlant->\"Italic\"]\) 2, ...} ] returns a single \
vertex origami with angles as sector angles.\nsingleVertex[ \
{\!\(\*StyleBox[\"angle\",FontSlant->\"Italic\"]\) 1, \
\!\(\*StyleBox[\"angle\",FontSlant->\"Italic\"]\) 2, ...}, \
{\!\(\*StyleBox[\"length\",FontSlant->\"Italic\"]\) 1, ...} ] returns a \
single vertex origami with angles as sector angles and fold lengths given by \
the list of lengths.\nsingleVertex[ { pt1, pt2, ... } ] returns a single \
vertex origami with vertex at origin and boundary at specified points in 2D \
or 3D.\n\nSee options \\\"angles\\\" and \\\"torsional stiffnesses\\\" to set \
the equilibrium angles and torsional stiffnesses.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomOrigami", "::", "usage"}], "=", "\n", 
    "\"\<randomOrigami[ \!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\) ] \
returns random origami with n internal vertices.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"miuraOri", "::", "usage"}], "=", "\n", 
   "\"\<miuraOri[ {length1, length2}, \
\!\(\*StyleBox[\"angle\",FontSlant->\"Italic\"]\) ] returns a Miura ori unit \
cell at a particular angle and face lengths.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1131]:=",ExpressionUUID->"3ff9fc51-09cf-453d-a299-be49bcf9329b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"flatOrigamiQ", "::", "usage"}], "=", "\n", 
   "\"\<flatOrigamiQ[ \!\(\*StyleBox[\"origami\",FontSlant->\"Italic\"]\) ] \
returns True if the origami mechanism is flat.\nUse option ZeroTest to \
specify how to test for zero. Use option WorkingPrecision to choose the \
precision.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[1134]:=",ExpressionUUID->"d62e8121-9030-4117-ab10-ad253752b5f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kresling", "::", "usage"}], "=", "\n", 
   "\"\<kresling[{\!\(\*StyleBox[\"#\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"azimuthal\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"cells\",FontSlant->\"Italic\"]\), \
#\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"of\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"rings\",FontSlant->\
\"Italic\"]\)(, \
\!\(\*StyleBox[\"twist\",FontSlant->\"Italic\"]\))},\!\(\*StyleBox[\"overall\"\
,FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"scale\",FontSlant->\"Italic\"]\), \
\!\(\*StyleBox[\"height\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"ratio\",FontSlant->\"Italic\"]\)] \
creates a Kresling fold pattern of a particular radius, height, and integer \
twist if specified.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[1135]:=",ExpressionUUID->"1326e1f2-3d36-452d-b09e-f5500f477896"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MVAssignment", "::", "usage"}], " ", "=", " ", 
    "\"\<MVAssignment[ o (, positions), tolerance_ (, assignmentFunction)] \
returns a list of rules assigning a value to mountain or valley folds up to \
the value of tolerance.\nThe function assignmentFunction should take one of \
the values {-1,0,1} for valley, flat, or mountain folds respectively.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flattenOrigami", "::", "usage"}], " ", "=", " ", 
   "\"\<flattenOrigami[m, tolerance] attempts to flatten an origami \
structure.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1136]:=",ExpressionUUID->"e202e950-0e01-4ee2-b0a7-7987cb7e108a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sameFoldAnglesQ", "::", "usage"}], "=", 
   "\"\<sameFoldAnglesQ[ origami, (folds,) (precision) ] is a function that \
compares the positions of two origami structures and returns True if they \
have the same fold angles.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sameMVAnglesQ", "::", "usage"}], "=", 
   "\"\<sameMVAnglesQ[ origami, (folds,) (precision) ] is a function that \
compares the positions of two origami structures and returns True if they \
have the same mountain-valley assignments.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1138]:=",ExpressionUUID->"a41bca8b-ac3e-4dd2-80ef-a0645cc5e5ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"butterflyDecompositionQ", "::", "usage"}], " ", "=", " ", 
   "\"\<butterflyDecompositionQ[ origami ] returns True if origami can be \
decomposed into pairs of \\\"butterfly\\\" faces.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"butterflyDecomposition", "::", "usage"}], " ", "=", " ", 
   "\"\<butterflyDecomposition[ origami ] returns a list of \\\"butterfly\\\" \
face pairs and a non-butterfly-decomposible kernel after removing butterfly \
faces. You can apply deleteDanglingVertices[] to extract the underlying \
origami structure.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1140]:=",ExpressionUUID->"e799e302-d427-4098-ae4e-27d9b8a64416"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deconstructedPlot", "::", "usage"}], "=", 
    "\"\<deconstructedPlot[ origami ] returns a list of vertices for polygons \
corresponding to the individual faces.\nOption \\\"edgeWeights\\\" allows the \
assignment of positive weights that allow some edges to have widths.\nOption \
\\\"defaultWeight\\\" is the default weight on all edges.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extrudedPolygon", "::", "usage"}], "=", 
   "\"\<extrudedPolygon[coords, extrusion vector, (translation vector)] takes \
a Polygon and creates a 3D version.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1142]:=",ExpressionUUID->"83f8a726-efe7-4110-956b-bca1ea384930"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"origamiData", "::", "usage"}], "=", 
   "\"\<origamiData[ origami ] returns an Assocation of data for various \
origami structures. Use origamiData[] to see what is available.\>\""}], 
  ";"}]], "Code",
 CellLabel->
  "In[1144]:=",ExpressionUUID->"b00e700d-c96f-4280-83fe-545c8730966e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MVColor", "::", "usage"}], "=", 
   "\"\<MVColor[ origami, data, styleFunction] attempts to color data \
according to styles specified by styleFunction.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[1145]:=",ExpressionUUID->"b96f0aa2-0ec5-4585-8f0e-6182e0b65a44"]
}, Closed]],

Cell[CellGroupData[{

Cell["global", "Section",ExpressionUUID->"56132169-b503-4fec-ac0f-c8748f365dff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`geometry`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`rigidity`\>\"", "]"}], ";"}]}], "Code",\

 CellLabel->
  "In[1146]:=",ExpressionUUID->"894e1c8a-8944-40bb-90d1-36044a26fac1"]
}, Closed]],

Cell[CellGroupData[{

Cell["new origami structures", "Section",ExpressionUUID->"8f3272e9-4365-46de-a73d-baaa4bf6be97"],

Cell[CellGroupData[{

Cell["origamiQ[]", "Subsection",ExpressionUUID->"8042e1d7-58bf-4a7b-a670-9ef09527dcb3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"origamiQ", "[", " ", "mr_MeshRegion", " ", "]"}], " ", ":=", " ", 
  RowBox[{"And", "[", "\n", "\t", 
   RowBox[{"(*", 
    RowBox[{
    "there", " ", "should", " ", "be", " ", "at", " ", "least", " ", "one", 
     " ", "face"}], "*)"}], "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"RegionDimension", "[", "mr", "]"}], " ", "\[Equal]", " ", "2"}],
     ",", "\n", "\t", 
    RowBox[{"(*", 
     RowBox[{"embedding", " ", "dimension"}], "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[Equal]", "2"}], "||", 
        RowBox[{"#", "\[Equal]", "3"}]}], "&"}], ")"}], " ", "@", " ", 
     RowBox[{"RegionEmbeddingDimension", "[", "mr", "]"}]}]}], "\n", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"origamiQ", "[", " ", "f_framework", " ", "]"}], " ", ":=", " ", 
  "\n", "\t", 
  RowBox[{"And", "[", "\n", "\t\t", 
   RowBox[{"(*", 
    RowBox[{
    "there", " ", "should", " ", "be", " ", "at", " ", "least", " ", "one", 
     " ", "face"}], "*)"}], "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"RegionDimension", "[", " ", 
      RowBox[{"f", "[", "\"\<mesh\>\"", "]"}], " ", "]"}], " ", "\[Equal]", 
     " ", "2"}], ",", "\n", "\t\t", 
    RowBox[{"(*", 
     RowBox[{"embedding", " ", "dimension"}], "*)"}], "\n", "\t\t", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[Equal]", "2"}], "||", 
        RowBox[{"#", "\[Equal]", "3"}]}], "&"}], ")"}], " ", "@", " ", 
     RowBox[{"f", "[", "\"\<EmbeddingDimension\>\"", "]"}]}]}], "\n", "\t", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"origamiQ", "[", " ", "o_origami", " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"origamiQ", "[", " ", "_", " ", "]"}], " ", ":=", " ", 
  "False"}]}], "Code",
 CellLabel->
  "In[1150]:=",ExpressionUUID->"5cbe27db-29f9-4589-9b2f-70c34eebdd51"]
}, Closed]],

Cell[CellGroupData[{

Cell["toOrigami[]", "Subsection",ExpressionUUID->"d7afa0ea-aedd-4d0b-a732-2a15366b9ce5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toOrigami", "::", "notsurface"}], "=", 
   "\"\<Input does not seem to be origami compatible because it is not a \
valid surface.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toOrigami", "::", "prec"}], "=", 
   "\"\<Precision must be valid number of digits.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1154]:=",ExpressionUUID->"a12658c6-fc84-44c7-9c81-b4290ef02c78"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", " ", "toOrigami", " ", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"Precision", " ", "\[Rule]", " ", "Automatic"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toOrigami", "[", 
    RowBox[{
     RowBox[{"mr_MeshRegion", "?", "origamiQ"}], ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"origami", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "Precision", "]"}], " ", "===", " ", 
         "Automatic"}], ",", "\n", "\t\t\t", 
        RowBox[{"MeshCoordinates", "[", "mr", "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"N", "[", " ", 
         RowBox[{
          RowBox[{"MeshCoordinates", "[", "mr", "]"}], ",", " ", 
          RowBox[{"OptionValue", "[", "Precision", "]"}]}], " ", "]"}]}], 
       "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"MeshCells", "[", 
          RowBox[{"mr", ",", "2"}], "]"}], " ", "/.", " ", 
         RowBox[{"Polygon", "->", "face"}]}], " ", "}"}], "]"}]}], "\n", "\t",
      "]"}], " ", "/;", " ", 
    RowBox[{"precisionQ", "[", 
     RowBox[{"OptionValue", "[", "Precision", "]"}], "]"}]}]}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"toOrigami", "[", 
    RowBox[{
     RowBox[{"f_framework", "?", "origamiQ"}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"f", "[", "\"\<positions\>\"", "]"}]}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "Precision", "]"}], " ", "===", " ", 
         "Automatic"}], ",", " ", 
        RowBox[{"origami", "@@", "f"}], ",", " ", 
        RowBox[{"N", "[", " ", 
         RowBox[{
          RowBox[{"origami", "@@", "f"}], ",", " ", 
          RowBox[{"OptionValue", "[", "Precision", "]"}]}], " ", "]"}]}], " ",
        "]"}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"precisionQ", "[", " ", 
     RowBox[{"OptionValue", "[", "Precision", "]"}], " ", "]"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"precisionQ", "[", " ", "prec_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"Which", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"prec", " ", "===", " ", "Automatic"}], ",", " ", "True", ",", 
    "\n", "\t", 
    RowBox[{"prec", " ", "===", " ", "MachinePrecision"}], ",", " ", "True", 
    ",", "\n", "\t", 
    RowBox[{
     RowBox[{"NumericQ", "[", " ", "prec", " ", "]"}], " ", "&&", " ", 
     RowBox[{"prec", " ", ">", " ", "0"}]}], ",", " ", "True", ",", "\n", 
    "\t", "True", ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", " ", 
      RowBox[{"toOrigami", "::", "prec"}], " ", "]"}], ";", " ", "False"}]}], 
   "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[1156]:=",ExpressionUUID->"1387a64e-cae7-4ce2-bf6a-8bfc02903e70"],

Cell[BoxData[
 RowBox[{
  RowBox[{"toOrigami", "[", "_", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"toOrigami", "::", "notsurface"}], "]"}]}]}]], "Code",
 CellLabel->
  "In[1160]:=",ExpressionUUID->"e14ea647-8b7f-4eae-a125-7e43a795f52c"]
}, Closed]],

Cell[CellGroupData[{

Cell["singleVertex[]", "Subsection",ExpressionUUID->"f78cb6e6-e17d-4401-b894-51df89a02adc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "singleVertex", "]"}], "=", 
   RowBox[{"Options", "[", "origami", "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[1161]:=",ExpressionUUID->"baf9e747-4ee8-4def-a102-84008b907460"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"singleVertexQ", "[", " ", 
   RowBox[{"angles_", ",", " ", "lengths_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"deficitAngle", " ", "=", " ", 
      RowBox[{
       RowBox[{"2", " ", "Pi"}], " ", "-", " ", 
       RowBox[{"Total", "[", "angles", "]"}]}]}], "\n", "}"}], ",", "\n", 
    "\t", 
    RowBox[{"And", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"VectorQ", "[", " ", 
          RowBox[{"angles", ",", " ", "NumericQ"}], " ", "]"}], " ", "&&", 
         " ", 
         RowBox[{"AllTrue", "[", " ", 
          RowBox[{"angles", ",", " ", 
           RowBox[{
            RowBox[{"#", ">", "0"}], " ", "&"}]}], " ", "]"}]}], ",", " ", 
        "True", ",", " ", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"singleVertex", "::", "sa"}], "]"}], ";", " ", "False"}]}], 
       " ", "]"}], ",", "\n", "\t\t", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Chop", "[", "deficitAngle", "]"}], " ", "\[Equal]", " ", 
         "0"}], ",", " ", "True", ",", " ", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"singleVertex", "::", "da"}], "]"}], ";", " ", "False"}]}], 
       " ", "]"}], ",", "\n", "\t\t", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"VectorQ", "[", " ", 
          RowBox[{"lengths", ",", " ", "NumericQ"}], " ", "]"}], " ", "&&", 
         " ", 
         RowBox[{"AllTrue", "[", " ", 
          RowBox[{"lengths", ",", " ", 
           RowBox[{
            RowBox[{"#", ">", "0"}], " ", "&"}]}], " ", "]"}]}], ",", " ", 
        "True", ",", " ", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"singleVertex", "::", "sl"}], "]"}], ";", " ", "False"}]}], 
       "]"}], ",", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "angles", "]"}], " ", "\[Equal]", " ", 
         RowBox[{"Length", "[", "lengths", "]"}]}], " ", ",", " ", "True", 
        " ", ",", " ", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"singleVertex", "::", "sl"}], "]"}], ";", " ", "False"}]}], 
       " ", "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertexQ", "[", " ", "angles_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"deficitAngle", " ", "=", " ", 
       RowBox[{
        RowBox[{"2", " ", "Pi"}], " ", "-", " ", 
        RowBox[{"Total", "[", "angles", "]"}]}]}], "\n", "}"}], ",", "\n", 
     "\t", 
     RowBox[{"And", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"VectorQ", "[", " ", 
           RowBox[{"angles", ",", " ", "NumericQ"}], " ", "]"}], " ", "&&", 
          " ", 
          RowBox[{"AllTrue", "[", " ", 
           RowBox[{"angles", ",", " ", 
            RowBox[{
             RowBox[{"#", ">", "0"}], " ", "&"}]}], " ", "]"}]}], ",", " ", 
         "True", ",", " ", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"singleVertex", "::", "sa"}], "]"}], ";", " ", "False"}]}],
         " ", "]"}], ",", "\n", "\t\t", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Chop", "[", "deficitAngle", "]"}], " ", "\[Equal]", " ", 
          "0"}], ",", " ", "True", ",", " ", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"singleVertex", "::", "da"}], "]"}], ";", " ", "False"}]}],
         " ", "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "::", "sa"}], "=", 
   "\"\<Sector angles must be positive real numbers.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "::", "da"}], "=", 
   "\"\<Sum of sector angles must be 2 Pi.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "::", "sl"}], "=", 
   "\"\<Lengths must be positive real numbers.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "::", "n"}], "=", 
   "\"\<You must have the same number of sector angles and lengths.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[1162]:=",ExpressionUUID->"3ada8627-442a-43cd-ad7d-0325bd932b0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "[", " ", 
    RowBox[{
     RowBox[{"pts_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"num", " ", "=", " ", 
        RowBox[{"Length", "[", "pts", "]"}]}], ",", "\n", "\t", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"pts", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "\n", "}"}], ",", "\n", 
     "\t", 
     RowBox[{"origami", "[", "\n", "\t\t", 
      RowBox[{"pts", ",", "\n", "\t\t", 
       RowBox[{"{", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"joint", "[", 
          RowBox[{"0", " ", "\[Rule]", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", " ", "dim"}], "]"}]}], "]"}], ",", "\n", 
         "\t\t\t", 
         RowBox[{"face", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"num", "+", "1"}]}], "}"}], "&"}], " ", "/@", " ", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"Range", "[", "num", "]"}], ",", "2", ",", "1", ",", 
             "1"}], "]"}]}], " ", "]"}]}], "\n", "\t\t", "}"}], ",", "\n", 
       "\t\t", "opt"}], "\n", "\t", "]"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleVertex", "[", " ", 
    RowBox[{"sectorAngles_", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"angles", " ", "=", " ", 
         RowBox[{
          RowBox[{"Accumulate", "[", "sectorAngles", "]"}], " ", "-", " ", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{"sectorAngles", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Length", "[", "sectorAngles", "]"}]}], "]"}]}]}], ",", 
        "\n", "\t", 
        RowBox[{"num", " ", "=", " ", 
         RowBox[{"Length", "[", "sectorAngles", "]"}]}]}], "\n", "}"}], ",", 
      "\n", "\t", 
      RowBox[{"origami", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Map", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "#", "]"}], ",", 
             RowBox[{"Sin", "[", "#", "]"}]}], "}"}], "&"}], " ", ",", " ", 
          "angles"}], " ", "]"}], ",", "\n", "\t\t", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"joint", "[", 
           RowBox[{"0", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"face", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"num", "+", "1"}]}], "}"}], "&"}], " ", "/@", " ", 
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Range", "[", "num", "]"}], ",", "2", ",", "1", ",", 
              "1"}], "]"}]}], " ", "]"}]}], "\n", "\t\t", "}"}], ",", "\n", 
        "\t\t", "opt"}], "\n", "\t", "]"}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"singleVertexQ", "[", "sectorAngles", " ", "]"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"singleVertex", "[", " ", 
   RowBox[{"sectorAngles_", ",", " ", "lengths_", ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"angles", " ", "=", " ", 
        RowBox[{
         RowBox[{"Accumulate", "[", "sectorAngles", "]"}], " ", "-", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"sectorAngles", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Length", "[", "sectorAngles", "]"}]}], "]"}]}]}], ",", 
       "\n", "\t", 
       RowBox[{"num", " ", "=", " ", 
        RowBox[{"Length", "[", "sectorAngles", "]"}]}]}], "\n", "}"}], ",", 
     "\n", "\t", 
     RowBox[{"origami", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"MapThread", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "#2", "]"}], ",", 
             RowBox[{"Sin", "[", "#2", "]"}]}], "}"}]}], "&"}], " ", ",", " ", 
         RowBox[{"{", 
          RowBox[{"lengths", ",", " ", "angles"}], "}"}]}], " ", "]"}], " ", 
       ",", "\n", "\t\t", 
       RowBox[{"{", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"joint", "[", 
          RowBox[{"0", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"face", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"num", "+", "1"}]}], "}"}], "&"}], " ", "/@", " ", 
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"Range", "[", "num", "]"}], ",", "2", ",", "1", ",", 
             "1"}], "]"}]}], " ", "]"}]}], "\n", "\t\t", "}"}], ",", "\n", 
       "\t\t", "opt"}], "\n", "\t", "]"}]}], "\n", "]"}], " ", "/;", " ", 
   RowBox[{"singleVertexQ", "[", 
    RowBox[{"sectorAngles", " ", ",", " ", "lengths"}], " ", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[1168]:=",ExpressionUUID->"086f898d-2364-4076-b6fb-a0b39bc483dd"]
}, Closed]],

Cell[CellGroupData[{

Cell["miuraOri[]", "Subsection",ExpressionUUID->"b01f488c-40c8-4d7f-bcc9-c39f7a7d7b49"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "miuraOri", "]"}], "=", 
    RowBox[{"{", " ", 
     RowBox[{"\"\<triangulate\>\"", "\[Rule]", "False"}], " ", "}"}]}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"miuraOri", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"l1_", "?", "miuraLengthQ"}], ",", " ", 
       RowBox[{"l2_", "?", "miuraLengthQ"}]}], " ", "}"}], " ", ",", " ", 
     RowBox[{"an_", "?", "miuraAngleQ"}], " ", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", " ", "\n", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", " ", "m", " ", "}"}], ",", 
      RowBox[{"With", "[", "\n", 
       RowBox[{
        RowBox[{"{", "\n", "\t", 
         RowBox[{
          RowBox[{"faces", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "5", ",", "6", ",", "2"}], "}"}]}], "}"}]}], 
          ",", "\n", "\t", 
          RowBox[{"folds", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "7"}], "}"}]}], "}"}]}], ",", "\n", "\t", 
          RowBox[{"coordinates", " ", "=", " ", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "\n", "\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"l1", "/", "2"}], ",", "0"}], "}"}], ",", "\n", "\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"l1", "/", "2"}], " ", "-", " ", 
                RowBox[{"l2", " ", 
                 RowBox[{
                  RowBox[{"Cot", "[", "an", "]"}], "/", "2"}]}]}], ",", 
               RowBox[{"l2", "/", "2"}]}], "}"}], ",", "\n", "\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "l2"}], " ", 
                RowBox[{
                 RowBox[{"Cot", "[", "an", "]"}], "/", "2"}]}], ",", " ", 
               RowBox[{"l2", "/", "2"}]}], "}"}], ",", "\n", "\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "l2"}], " ", 
                RowBox[{
                 RowBox[{"Cot", "[", "an", "]"}], "/", "2"}]}], ",", " ", 
               RowBox[{
                RowBox[{"-", "l2"}], "/", "2"}]}], " ", "}"}], ",", "\n", 
             "\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"l1", "/", "2"}], "-", 
                RowBox[{"l2", " ", 
                 RowBox[{
                  RowBox[{"Cot", "[", "an", "]"}], "/", "2"}]}]}], ",", " ", 
               RowBox[{
                RowBox[{"-", "l2"}], "/", "2"}]}], " ", "}"}]}], "\n", "\t", 
            "}"}]}]}], "\n", "}"}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"m", " ", "=", " ", 
          RowBox[{"origami", "[", 
           RowBox[{"coordinates", ",", 
            RowBox[{"face", "/@", "faces"}]}], "]"}]}], ";", "\n", "\t", 
         RowBox[{"tesselateMechanism", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"If", "[", " ", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<triangulate\>\"", "]"}], ",", 
             " ", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"addCells", "[", 
               RowBox[{"{", 
                RowBox[{"fold", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\<passive\>\"", ",", 
                    RowBox[{"\"\<shape\>\"", "\[Rule]", "None"}]}], "}"}]}], 
                 "]"}], "}"}], "]"}], " ", "@", " ", 
              RowBox[{
               RowBox[{"divideFace", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "3"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "6"}], "}"}]}], "}"}], "]"}], " ", "@", 
               " ", "m"}]}], ",", " ", "\n", "\t\t\t", "m"}], "\n", "\t\t", 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "/", "2"}], ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "\n", "\t", "]"}]}]}], "\n", 
       "]"}]}], "]"}], " ", "/;", " ", 
    RowBox[{"miuraOptionsQ", "[", " ", 
     RowBox[{"OptionValue", "[", "\"\<triangulate\>\"", "]"}], " ", "]"}]}]}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"miuraLengthQ", "[", " ", "l_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"NumericQ", "[", "l", "]"}], " ", "&&", " ", 
     RowBox[{"l", " ", ">", " ", "0"}]}], ",", " ", "True", ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"miuraOri", "::", "length"}], "]"}], ";", " ", "False"}]}], " ",
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{"miuraAngleQ", "[", " ", "a_", " ", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"NumericQ", "[", "a", "]"}], " ", "&&", " ", 
     RowBox[{"0", " ", "<", " ", 
      RowBox[{"N", "[", "a", "]"}], " ", "<", " ", "Pi"}]}], ",", " ", "True",
     ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"miuraOri", "::", "angle"}], "]"}], ";", " ", "False"}]}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"miuraOptionsQ", "[", " ", "b_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{"BooleanQ", "[", "b", "]"}], ",", " ", "True", ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"miuraOri", "::", "t"}], "]"}], ";", " ", "False"}]}], " ", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"miuraOri", "::", "length"}], " ", "=", " ", 
   "\"\<Length must be a positive numeric value.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"miuraOri", "::", "angle"}], " ", "=", " ", 
   "\"\<Angle must be a numeric value between 0 and \[Pi].\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"miuraOri", "::", "t"}], " ", "=", " ", 
   "\"\<Option \\\"triangulate\\\" should be a boolean variable.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[1171]:=",ExpressionUUID->"df661cfd-ae0b-44c1-87df-b4da3007a4a3"]
}, Closed]],

Cell[CellGroupData[{

Cell["kresling[]", "Subsection",ExpressionUUID->"6510e159-2aac-4e44-9dbd-d54c70d36be2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "kresling", "]"}], "=", 
   RowBox[{"Options", "[", "origami", "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[1179]:=",ExpressionUUID->"74c13a49-d78f-409b-8cae-4ac581199fcd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kresling", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numTriangles_Integer", ",", "numHeight_Integer", ",", 
      RowBox[{"twist_Integer", ":", "0"}]}], "}"}], ",", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"kresling", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numTriangles", ",", "numHeight", ",", "twist"}], "}"}], ",", 
    "1", ",", "1", ",", "opt"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"kresling", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numTriangles_Integer", ",", "numHeight_Integer", ",", 
      RowBox[{"twist_Integer", ":", "0"}]}], "}"}], ",", 
    RowBox[{"radius_", "?", "NumericQ"}], ",", 
    RowBox[{"heightScale_", "?", "NumericQ"}], ",", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "i", "}"}], ",", "\n", 
     RowBox[{"With", "[", "\n", 
      RowBox[{
       RowBox[{"{", "\n", 
        RowBox[{"height", "=", 
         RowBox[{"heightScale", " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"Pi", "/", "numTriangles"}], "]"}], "-", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"Pi", "/", "numTriangles"}]}], "]"}]}], ")"}]}], 
           "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
       RowBox[{"origami", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"radius", " ", 
          RowBox[{"Join", "@@", 
           RowBox[{"Table", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"2", " ", "Pi", " ", 
                    RowBox[{"#", "/", "numTriangles"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}]}], ")"}], " ", 
                    RowBox[{
                    RowBox[{"Pi", "/", "numTriangles"}], "/", "2"}]}]}], 
                  "]"}], ",", "\n", "\t\t\t", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   RowBox[{"2", " ", "Pi", " ", 
                    RowBox[{"#", "/", "numTriangles"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}]}], ")"}], " ", 
                    RowBox[{
                    RowBox[{"Pi", "/", "numTriangles"}], "/", "2"}]}]}], 
                  "]"}], ",", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], " ", "height"}]}], "\n", 
                "\t\t\t", "}"}], "&"}], "/@", 
              RowBox[{"Range", "[", "numTriangles", "]"}]}], ",", "\n", 
             "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"numHeight", "+", "1"}]}], "}"}]}], "]"}]}]}], ",", 
         "\n", "\t\t", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"face", "[", "\n", "\t\t\t\t", 
                RowBox[{"{", "\n", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{"#", "+", 
                   RowBox[{"i", " ", "numTriangles"}]}], ",", "\n", 
                  "\t\t\t\t", 
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"#", "+", 
                    RowBox[{"i", " ", "numTriangles"}], "+", "1"}], ",", 
                    "numTriangles", ",", 
                    RowBox[{
                    RowBox[{"i", " ", "numTriangles"}], "+", "1"}]}], "]"}], 
                  ",", "\n", "\t\t\t\t", 
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", "i"}]}], ")"}], "/", 
                    "2"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "+", "1"}], ")"}], " ", "numTriangles"}], 
                    "+", "twist"}], ",", "numTriangles", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "+", "1"}], ")"}], " ", "numTriangles"}], 
                    "+", "1"}]}], "]"}]}], "\n", "\t\t\t\t", "}"}], "\n", 
                "\t\t\t", "]"}], "&"}], "/@", 
              RowBox[{"Range", "[", "numTriangles", "]"}]}], ",", "\n", 
             "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"face", "[", "\n", "\t\t\t\t", 
                RowBox[{"{", "\n", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{"#", "+", 
                   RowBox[{"i", " ", "numTriangles"}]}], ",", "\n", 
                  "\t\t\t\t", 
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "+", "1"}], ")"}], " ", "numTriangles"}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", "i"}]}], ")"}], "/", 
                    "2"}], "+", "twist"}], ",", "numTriangles", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "+", "1"}], ")"}], "numTriangles"}], "+", 
                    "1"}]}], "]"}], ",", "\n", "\t\t\t\t", 
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"#", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "+", "1"}], ")"}], " ", "numTriangles"}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", "i"}]}], ")"}], "/", 
                    "2"}], "-", "1", "+", "twist"}], ",", "numTriangles", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "+", "1"}], ")"}], "numTriangles"}], "+", 
                    "1"}]}], "]"}]}], "\n", "\t\t\t\t", "}"}], "\n", "\t\t\t",
                 "]"}], "&"}], "/@", 
              RowBox[{"Range", "[", "numTriangles", "]"}]}]}], "\n", "\t\t", 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{"numHeight", "-", "1"}]}], "}"}]}], "]"}], ",", "\n", 
         "\t\t", "opt"}], "\n", "\t", "]"}]}], "\n", "]"}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"numTriangles", ">=", "2"}], "&&", 
    RowBox[{"numHeight", ">=", "1"}]}]}]}]}], "Code",
 CellLabel->
  "In[1180]:=",ExpressionUUID->"6e9c878d-02b2-4132-96ce-e8e66b822e4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "=", 
  RowBox[{"kresling", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"8", ",", "2", ",", "1"}], "}"}], ",", 
    RowBox[{"MeshCellLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", "\[Rule]", "\"\<Index\>\""}], "}"}]}]}], "]"}]}]], "Input",\
ExpressionUUID->"f325d84e-8b1c-4353-a4a7-917cc61544f8"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = {
    MeshRegion, {Properties -> {{0, 1} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 2} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 3} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 4} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 5} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 6} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 7} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 8} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 9} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 10} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 11} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 12} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 13} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 14} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 15} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 16} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 17} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 18} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 19} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 20} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 21} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 22} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 23} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, 24} -> (MeshCellStyle -> Directive[
           GrayLevel[0]]), {0, Default} -> (MeshCellStyle -> Automatic), {1, 
         1} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 2} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 3} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 4} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 5} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 6} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 7} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 8} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 9} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 10} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 11} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 12} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 13} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 14} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 15} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 16} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 17} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 18} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 19} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 20} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 21} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 22} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 23} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 24} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 25} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 26} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 27} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 28} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 29} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 30} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 31} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 32} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 33} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 34} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 35} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 36} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 37} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 38} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 39} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 40} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 41} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 42} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 43} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 44} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 45} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 46} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 47} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 48} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 49} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 50} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 51} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 52} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 53} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 54} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 55} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, 56} -> (MeshCellStyle -> Directive[
           CapForm["Round"], 
           GrayLevel[0]]), {1, Default} -> (MeshCellStyle -> Automatic), {2, 
         1} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 2} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 3} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 4} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 5} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 6} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 7} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 8} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 9} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 10} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 11} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 12} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 13} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 14} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 15} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 16} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 17} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 18} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 19} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 20} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 21} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 22} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 23} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 24} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 25} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 26} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 27} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 28} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 29} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 30} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 31} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, 32} -> (MeshCellStyle -> Directive[
           GrayLevel[0.85]]), {2, Default} -> (MeshCellStyle -> 
         Automatic)}}}}, 
    TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAGJmID6Rsc7S+vhD+8UL+TTTZr+yZ4ACrmWZNjt+nNi/
Ieb7+elJ7+HiUHX7Yfpg4lB1+2H6YOJQdfth+tDMt4fpQzPfHqYPzXx7mD4c
6u3jX0cmfBF8ao9mPlwczT1wcTT3w8XR/LsfzXxY+OxHMx+uD818uD4c6qH2
fkU3Hy6OHv4wcfTwh4mjhz+a+fao7oebb4/q36/o7ofbCwB/1Bu6
      "], 
      {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        Polygon3DBox[{{1, 2, 11}, {1, 11, 10}, {2, 3, 12}, {2, 12, 11}, {3, 4,
          13}, {3, 13, 12}, {4, 5, 14}, {4, 14, 13}, {5, 6, 15}, {5, 15, 
         14}, {6, 7, 16}, {6, 16, 15}, {7, 8, 9}, {7, 9, 16}, {8, 1, 10}, {8, 
         10, 9}, {9, 10, 18}, {9, 18, 17}, {10, 11, 19}, {10, 19, 18}, {11, 
         12, 20}, {11, 20, 19}, {12, 13, 21}, {12, 21, 20}, {13, 14, 22}, {13,
          22, 21}, {14, 15, 23}, {14, 23, 22}, {15, 16, 24}, {15, 24, 23}, {
         16, 9, 17}, {16, 17, 24}}],
        Annotation[#, "Geometry"]& ], 
       {GrayLevel[0.85], Polygon3DBox[CompressedData["
1:eJwtjrkRwzAQA+lHlkjx1R9aLbkEF2D3n+kwswHm9rAJzu//87s7596Wh+Vm
0T/CuoFOPsIRp+5pSXDCqessGc44dS9LgQtOXW+pcMWpGywe9riBfQEOOA9P
sG6j094ZnnEjexd4wUX2rvCKS+zd4A2X2bvDO66w94APXGVfgxvuArukBog=

         "]]}, 
       {GrayLevel[0], CapForm["Round"], 
        Line3DBox[{{1, 2}, {2, 11}, {11, 1}, {11, 10}, {10, 1}, {2, 3}, {3, 
         12}, {12, 2}, {12, 11}, {3, 4}, {4, 13}, {13, 3}, {13, 12}, {4, 5}, {
         5, 14}, {14, 4}, {14, 13}, {5, 6}, {6, 15}, {15, 5}, {15, 14}, {6, 
         7}, {7, 16}, {16, 6}, {16, 15}, {7, 8}, {8, 9}, {9, 7}, {9, 16}, {8, 
         1}, {10, 8}, {10, 9}, {10, 18}, {18, 9}, {18, 17}, {17, 9}, {11, 
         19}, {19, 10}, {19, 18}, {12, 20}, {20, 11}, {20, 19}, {13, 21}, {21,
          12}, {21, 20}, {14, 22}, {22, 13}, {22, 21}, {15, 23}, {23, 14}, {
         23, 22}, {16, 24}, {24, 15}, {24, 23}, {17, 16}, {17, 24}}]}, 
       {GrayLevel[0], 
        Point3DBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
          18, 19, 20, 21, 22, 23, 24}]}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics3D",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  ImageSize->{365.84716085088616`, 354.1967171904828},
  ImageSizeRaw->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"ShrinkWrap" -> True},
  ViewPoint->{1.1969232879592, -2.279747559887293, 2.1954784685641697`},
  ViewVertical->{-0.04725614614043552, 0.05822357643666488, 
   1.4853612978130926`}]], "Output",
 CellLabel->
  "Out[2450]=",ExpressionUUID->"1f728f58-b5cf-4dcd-9c96-a958c65cdd0a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["randomOrigami[]", "Subsection",ExpressionUUID->"fd1f8c0d-8cd5-461d-a1bd-d14c472d45ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "randomOrigami", "]"}], "=", 
   RowBox[{"Join", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Options", "[", "origami", "]"}], ",", "\n", "\t", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"Precision", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
       RowBox[{"MaxIterations", "->", "20"}], ",", "\n", "\t", 
       RowBox[{"\"\<minimumFolds\>\"", "->", "4"}], ",", "\n", "\t", 
       RowBox[{"\"\<boundary\>\"", "->", 
        RowBox[{"CirclePoints", "[", "4", "]"}]}]}], "\n", "\t", "}"}]}], 
    "\n", "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[1182]:=",ExpressionUUID->"cc6d6793-71d5-4e73-a480-e2ed6df579d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"randomOrigami", "[", " ", 
    RowBox[{"numberOfVertices_", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", " ", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"ctr", " ", "=", " ", "1"}], ",", "\n", 
        RowBox[{"firstMesh", " ", "=", " ", 
         RowBox[{"randomMesh", "[", " ", 
          RowBox[{"numberOfVertices", ",", " ", 
           RowBox[{"OptionValue", "[", "Precision", "]"}], ",", " ", 
           RowBox[{"OptionValue", "[", "\"\<boundary\>\"", "]"}]}], " ", 
          "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"(", "\n", "\t", 
        RowBox[{
         RowBox[{"meshTry", " ", "=", " ", 
          RowBox[{"toOrigami", "[", " ", 
           RowBox[{"firstMesh", " ", ",", " ", 
            RowBox[{"Precision", " ", "\[Rule]", " ", 
             RowBox[{"OptionValue", "[", "Precision", "]"}]}]}], " ", "]"}]}],
          ";", "\n", "\n", "\t", 
         RowBox[{"While", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Not", " ", "@", " ", 
             RowBox[{"validrandomOrigamiQ", "[", " ", 
              RowBox[{"numberOfVertices", ",", " ", "meshTry", ",", " ", 
               RowBox[{"OptionValue", "[", "\"\<minimumFolds\>\"", "]"}], ",",
                " ", 
               RowBox[{"Length", "[", 
                RowBox[{"OptionValue", "[", "\"\<boundary\>\"", "]"}], 
                "]"}]}], " ", "]"}]}], " ", "&&", " ", 
            RowBox[{"ctr", " ", "\[LessEqual]", " ", 
             RowBox[{"OptionValue", "[", "MaxIterations", "]"}]}]}], ",", 
           "\n", "\t\t", 
           RowBox[{
            RowBox[{"meshTry", " ", "=", " ", 
             RowBox[{"toOrigami", "[", " ", 
              RowBox[{
               RowBox[{"randomMesh", "[", " ", 
                RowBox[{"numberOfVertices", ",", " ", 
                 RowBox[{"OptionValue", "[", "Precision", "]"}], ",", " ", 
                 RowBox[{"OptionValue", "[", "\"\<boundary\>\"", "]"}]}], " ",
                 "]"}], ",", " ", 
               RowBox[{"Precision", " ", "\[Rule]", " ", 
                RowBox[{"OptionValue", "[", "Precision", "]"}]}]}], " ", 
              "]"}]}], ";", " ", 
            RowBox[{"ctr", "++"}]}]}], "\n", "\t", "]"}], ";", "\n", "\n", 
         "\t", 
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{"ctr", " ", ">", " ", 
            RowBox[{"OptionValue", "[", "MaxIterations", "]"}]}], ",", " ", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"randomOrigami", "::", "max"}], ",", " ", 
             RowBox[{"ctr", " ", "-", " ", "1"}]}], "]"}]}], " ", "]"}], ";", 
         "\n", "\n", "\t", 
         RowBox[{"origami", "[", " ", 
          RowBox[{"meshTry", ",", " ", 
           RowBox[{"FilterRules", "[", 
            RowBox[{
             RowBox[{"{", "opt", "}"}], ",", " ", 
             RowBox[{"Options", "[", "origami", "]"}]}], "]"}]}], " ", 
          "]"}]}], "\n", "\t", ")"}], " ", "/;", " ", 
       RowBox[{"MeshRegionQ", "[", "firstMesh", "]"}]}]}], "\n", "\n", "]"}], 
    " ", "/;", " ", 
    RowBox[{
     RowBox[{"randomOrigamiMinFoldsQ", "[", " ", 
      RowBox[{"OptionValue", "[", " ", "\"\<minimumFolds\>\"", " ", "]"}], 
      " ", "]"}], " ", "&&", " ", 
     RowBox[{"randomOrigamiMaxIterationsQ", "[", " ", 
      RowBox[{"OptionValue", "[", " ", "MaxIterations", " ", "]"}], " ", 
      "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomOrigami", "::", "max"}], "=", 
    "\"\<Maximum number of iterations reached at `1` without finding a \
suitable random origami.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validrandomOrigamiQ", "[", " ", 
    RowBox[{"numberOfVertices_", ",", " ", 
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", "minimumFolds_", ",", " ", 
     "boundarySize_"}], " ", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"AllTrue", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Length", " ", "/@", " ", 
       RowBox[{"Drop", "[", " ", 
        RowBox[{
         RowBox[{"connectivity", "[", 
          RowBox[{"m", ",", " ", 
           RowBox[{
           "\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<edges\>\""}]}], 
          "]"}], ",", " ", "boundarySize"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"#", " ", "\[GreaterEqual]", " ", "minimumFolds"}], " ", 
       "&"}]}], "\n", "\t", "]"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], "-", "boundarySize"}], 
     " ", "\[Equal]", " ", "numberOfVertices"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randomOrigami", "::", "mfold"}], "=", 
   "\"\<Minimum number of folds, `1`,  must be a position integer.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"randomOrigamiMinFoldsQ", "[", " ", 
   RowBox[{"_Integer", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], ")"}]}], " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randomOrigamiMinFoldsQ", "[", " ", "f_", " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"randomOrigami", "::", "mfold"}], ",", " ", "f"}], "]"}], ";", 
     " ", "False"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randomOrigami", "::", "miter"}], "=", 
   "\"\<Maximum number of iterations, `1`, must be a position integer.\>\""}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"randomOrigamiMaxIterationsQ", "[", " ", 
   RowBox[{"_Integer", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], ")"}]}], " ", "]"}], " ", ":=", " ", 
  "True"}], "\n", 
 RowBox[{
  RowBox[{"randomOrigamiMaxIterationsQ", "[", " ", "f_", " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"randomOrigami", "::", "miter"}], ",", " ", "f"}], "]"}], ";", 
    " ", "False"}], ")"}]}]}], "Code",
 CellLabel->
  "In[1183]:=",ExpressionUUID->"66b5c38e-1661-4fc1-b3bb-2fc79ff6c3b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "get", " ", "a", " ", "Delaunay", " ", "triangulation", " ", "from", " ", 
    "a", " ", "set", " ", "of", " ", "random", " ", "points"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"randomMesh", "[", 
     RowBox[{
      RowBox[{"numberOfVertices_Integer", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ",", " ", 
      RowBox[{"precision", " ", ":", " ", 
       RowBox[{
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"NumericQ", "[", "#", "]"}], " ", "&&", " ", 
            RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], "|", "Automatic", "|", 
        "MachinePrecision"}]}], ",", " ", 
      RowBox[{"boundary_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], "]"}], ":=",
     "\n", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "points", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"points", "=", 
         RowBox[{"Join", "[", "\n", "\t\t", 
          RowBox[{"boundary", ",", "\n", "\t\t", 
           RowBox[{"Select", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"RandomVariate", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"UniformDistribution", "[", 
                RowBox[{"RegionBounds", "[", 
                 RowBox[{"Polygon", "[", "boundary", "]"}], "]"}], "]"}], ",",
                "\n", "\t\t\t\t", "numberOfVertices", ",", "\n", "\t\t\t\t", 
               RowBox[{"WorkingPrecision", "->", "precision"}]}], "\n", 
              "\t\t\t", "]"}], ",", "\n", "\t\t\t", 
             RowBox[{"RegionMember", "[", 
              RowBox[{"Polygon", "[", "boundary", "]"}], "]"}]}], "\n", 
            "\t\t", "]"}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
        RowBox[{"DelaunayMesh", "[", "points", "]"}]}]}], "\n", "]"}], " ", "/;",
      " ", 
     RowBox[{
      RowBox[{"Last", "[", " ", 
       RowBox[{"Dimensions", "[", " ", "boundary", " ", "]"}], " ", "]"}], 
      " ", "\[Equal]", " ", "2"}]}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomOrigami", "::", "vnum"}], "=", 
     "\"\<Number of vertices `1` should be a positive integer.\>\""}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomOrigami", "::", "prec"}], "=", 
     "\"\<Option Precision must be a positive number.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"randomOrigami", "::", "bound"}], "=", 
     "\"\<Boundary points should be a list of vertices in 2D.\>\""}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"randomMesh", "[", " ", 
     RowBox[{
     "numberOfVertices_", ",", " ", "precision_", ",", " ", "boundary_"}], 
     " ", "]"}], " ", ":=", " ", 
    RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
     RowBox[{"(", "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"Not", "[", " ", 
          RowBox[{
           RowBox[{"IntegerQ", "[", "numberOfVertices", "]"}], " ", "&&", " ", 
           RowBox[{"numberOfVertices", " ", "\[GreaterEqual]", " ", "1"}]}], 
          " ", "]"}], ",", " ", 
         RowBox[{"Message", "[", " ", 
          RowBox[{
           RowBox[{"randomOrigami", "::", "vnum"}], ",", " ", 
           "numberOfVertices"}], " ", "]"}]}], " ", "]"}], ";", "\n", "\t", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Not", "[", " ", 
           RowBox[{
            RowBox[{"NumericQ", "[", " ", "precision", " ", "]"}], " ", "&&", 
            " ", 
            RowBox[{"precision", " ", ">", " ", "0"}]}], " ", "]"}], " ", "&&",
           " ", 
          RowBox[{"Not", "[", " ", 
           RowBox[{"precision", " ", "===", " ", "Automatic"}], " ", "]"}]}], 
         ",", " ", 
         RowBox[{"Message", "[", " ", 
          RowBox[{
           RowBox[{"randomOrigami", "::", "prec"}], ",", " ", "precision"}], 
          " ", "]"}]}], " ", "]"}], ";", "\n", "\t", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"Not", "[", " ", 
          RowBox[{
           RowBox[{"MatrixQ", "[", " ", 
            RowBox[{"boundary", ",", " ", "NumericQ"}], " ", "]"}], " ", "&&",
            " ", 
           RowBox[{
            RowBox[{"Last", "[", 
             RowBox[{"Dimensions", "[", " ", "boundary", " ", "]"}], "]"}], 
            " ", "\[Equal]", " ", "2"}]}], " ", "]"}], ",", " ", 
         RowBox[{"Message", "[", " ", 
          RowBox[{"randomOrigami", "::", "bound"}], " ", "]"}]}], " ", "]"}], 
       ";", "\n", "\t", "False"}], "\n", ")"}]}]}]}]}]], "Code",
 CellLabel->
  "In[1192]:=",ExpressionUUID->"2869981c-2b14-4190-aed6-de2de17b05d7"]
}, Closed]],

Cell[CellGroupData[{

Cell["origami[], origamiData[]", "Subsection",ExpressionUUID->"cb5c27e0-90ba-44a2-b621-549bf08cb232"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"origami", "[", " ", "\"\<RandlettBird\>\"", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"origami", "[", " ", 
   RowBox[{"{", "\"\<RandlettBird\>\"", "}"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"origami", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<RandlettBird\>\"", ",", " ", 
     RowBox[{"s_String", " ", ":", " ", "\"\<unfolded coordinates\>\""}]}], 
    "}"}], "]"}], " ", ":=", " ", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"origamiData", "[", " ", "\"\<RandlettBird\>\"", " ", "]"}]}], 
     " ", "}"}], ",", "\n", "\t", 
    RowBox[{"origami", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"data", "[", "s", "]"}], ",", "\n", "\t\t", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"rigidBar", "[", " ", 
         RowBox[{
          RowBox[{"data", "[", "\"\<face folds\>\"", "]"}], " ", ",", " ", 
          RowBox[{"\"\<shape\>\"", " ", "\[Rule]", " ", "None"}]}], "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"face", "[", " ", 
         RowBox[{"data", "[", "\"\<faces\>\"", "]"}], " ", "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"MapThread", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"fold", "[", 
            RowBox[{"#1", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<angle\>\"", "\[Rule]", "#2"}], ",", 
               "\"\<active\>\""}], "}"}]}], "]"}], "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"data", "[", "\"\<folds\>\"", "]"}], ",", " ", 
            RowBox[{"data", "[", "\"\<jihwan\>\"", "]"}]}], "}"}]}], "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"fold", "[", " ", 
         RowBox[{
          RowBox[{"data", "[", "\"\<face folds\>\"", "]"}], " ", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\"\<passive\>\"", ",", " ", 
            RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "0"}]}], "}"}]}], 
         "]"}]}], "\n", "\t\t", "}"}]}], "\n", "\t", "]"}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[1197]:=",ExpressionUUID->"57ab66e2-d535-4e5f-873b-1254aa74d5b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"origamiData", "[", "]"}], " ", ":=", " ", 
    RowBox[{"{", "\"\<RandlettBird\>\"", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"origamiData", "[", " ", "\"\<RandlettBird\>\"", " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"Association", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"\"\<folds\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"16", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "15"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "15"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "13"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "11"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "21"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "11"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "17"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"17", ",", "11"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "17"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"17", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "17"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "18"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"14", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"19", ",", "14"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"14", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "14"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "17"}], "}"}]}], "}"}]}], ",", "\n", "\t", 
    RowBox[{"\"\<boundary\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "18"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"18", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "13"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"13", ",", "19"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"19", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "21"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"21", ",", "1"}], "}"}]}], "}"}]}], ",", "\n", "\t", 
    RowBox[{"\"\<face folds\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "11"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "15"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "18"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "17"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "19"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "19"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"14", ",", "17"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "18"}], "}"}]}], "}"}]}], ",", "\n", "\t", 
    RowBox[{"\"\<faces\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"15", ",", "20", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "17", ",", "15"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "17", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "21", ",", "11"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"18", ",", "2", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "9", ",", "18"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "2", ",", "15"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "2", ",", "20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"13", ",", "3", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "3", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"21", ",", "4", ",", "11"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "4", ",", "19"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"19", ",", "14", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "5", ",", "18"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"18", ",", "9", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "7", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "9", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "14", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"14", ",", "8", ",", "17"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"17", ",", "10", ",", "14"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"17", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "16", ",", "17"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "10", ",", "17"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"19", ",", "13", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "14", ",", "19"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "15", ",", "17"}], "}"}]}], "}"}]}], ",", "\n", 
    "\t", 
    RowBox[{"\"\<face fold lengths\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "0.7913396176795269`", ",", "0.7908518374761098`", ",", 
       "0.4256202239155842`", ",", "0.41820627040046277`", ",", 
       "0.4256214113580315`", ",", "0.3661853242047003`", ",", 
       "0.5778591613439372`", ",", "0.4182055804484132`", ",", 
       "0.36642731880122054`", ",", "0.5778622627981455`"}], "}"}]}], ",", 
    "\n", "\t", 
    RowBox[{"\"\<fold lengths\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "0.6668302449309317`", ",", "0.7905987902232614`", ",", 
       "0.2635292648903121`", ",", "0.5900528686107307`", ",", 
       "0.2260243957445146`", ",", "0.10234385548891164`", ",", 
       "0.19243997335732346`", ",", "0.07476947912792758`", ",", 
       "0.2260251237847865`", ",", "0.07476836902333805`", ",", 
       "0.10234618221503516`", ",", "0.7899358777822478`", ",", 
       "0.5900530310922064`", ",", "0.6668278565928233`", ",", 
       "0.26292795741175695`", ",", "0.33331002589557746`", ",", 
       "0.35349728907839567`", ",", "0.3531715279617028`", ",", 
       "0.33294017146420657`", ",", "1.0001365746515256`", ",", 
       "0.3495350708976718`", ",", "0.2902649617356811`", ",", 
       "0.2902613044683481`", ",", "0.3495354877728568`", ",", 
       "0.5373516043568678`", ",", "0.44156905689970305`", ",", 
       "0.25766229600206336`", ",", "0.5373541657262233`", ",", 
       "0.25766207233991933`", ",", "0.3657613109073552`"}], "}"}]}], ",", 
    "\n", "\t", 
    RowBox[{"\"\<boundary lengths\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "0.2350773277983888`", ",", "1.1792012718458462`", ",", 
       "0.8061889965405188`", ",", "0.42175777675288983`", ",", 
       "0.18620179179423596`", ",", "0.18620363078624286`", ",", 
       "0.4217559689391429`", ",", "0.8061889535079899`", ",", 
       "1.178492447495307`", ",", "0.2355242761556322`"}], "}"}]}], ",", "\n",
     "\t", 
    RowBox[{"\"\<unfolded coordinates\>\"", " ", "\[Rule]", " ", 
     RowBox[{"N", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.414278593427568`", ",", 
          RowBox[{"-", "0.00012107343015166361`"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1.4142678318232762`", ",", "1.4140274916158289`", ",", "0"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
         "0.00011927863201000033`", ",", "1.414016642177331`", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.4142692917736754`", ",", "1.227825699827347`", ",", "0"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.3131744350755659`", ",", "1.211870419723824`", ",", "0"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1.2781932400501788`", ",", "1.2779508631318839`", ",", "0"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
         "0.9659583817161155`", ",", "0.9657127724823382`", ",", "0"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
         "1.0728360008415996`", ",", "0.7312622802432727`", ",", "0"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
         "0.47189742974276605`", ",", "0.9427579377876374`", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.353962452288944`", ",", "0.7077633593785156`", ",", "0"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.2121120814828474`", ",", "1.312933079920714`", ",", "0"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "1.2280642010424148`", ",", "1.4140260798657769`", ",", "0"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"0.731505784488571`", ",", "1.0725852346780647`", ",", "0"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0.7073110670506855`", ",", "0.3537763181270138`", ",", "0"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
         "0.9430090748133337`", ",", "0.47164965094818173`", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0.7074588006059522`", ",", "0.7069478151898358`", ",", "0"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
         "1.4142724979918373`", ",", "0.8060679230868013`", ",", "0"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
         "0.8063082321157269`", ",", "1.4140228586178498`", ",", "0"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
         "0.23507732779834628`", ",", "1.1102230246251565`*^-16", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0.0001931022705954355`", ",", "0.2355241969949885`", ",", "0"}], 
         "}"}]}], "}"}]}]}], ",", "\n", "\t", 
    RowBox[{"\"\<folded coordinates\>\"", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5216212272644043`", ",", "0.0041301921010017395`", ",", 
         RowBox[{"-", "0.5215774178504944`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.6376347541809082`"}], ",", "0.4420289695262909`", 
         ",", 
         RowBox[{"-", "0.16293174028396606`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.435793399810791`"}], ",", 
         RowBox[{"-", "0.10257021337747574`"}], ",", "0.4356272220611572`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "0.16264325380325317`", ",", "0.442157119512558`", ",", 
         "0.6371942758560181`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.4927003085613251`"}], ",", "0.07479492574930191`", 
         ",", "0.4173307418823242`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.4104839861392975`"}], ",", "0.11236074566841125`", 
         ",", "0.36908411979675293`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.4352164566516876`"}], ",", "0.0874059870839119`", 
         ",", "0.43510642647743225`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.22010493278503418`"}], ",", 
         RowBox[{"-", "0.2338118851184845`"}], ",", "0.22003494203090668`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.13188940286636353`"}], ",", 
         RowBox[{"-", "0.15577159821987152`"}], ",", 
         RowBox[{"-", "0.008406173437833786`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "0.11944180727005005`", ",", "0.1096508726477623`", ",", 
         "0.06939235329627991`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.047771066427230835`", ",", 
         RowBox[{"-", "0.13527639210224152`"}], ",", "0.09195645153522491`"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.3691454231739044`"}], ",", "0.11233522742986679`", 
         ",", "0.410442054271698`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.4174804091453552`"}], ",", "0.07477816939353943`", 
         ",", "0.49260756373405457`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.00845295935869217`", ",", 
         RowBox[{"-", "0.15610502660274506`"}], ",", "0.13212451338768005`"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.09123314917087555`"}], ",", 
         RowBox[{"-", "0.13514138758182526`"}], ",", 
         RowBox[{"-", "0.04728326201438904`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.06939570605754852`"}], ",", "0.11028251051902771`", 
         ",", 
         RowBox[{"-", "0.11917997896671295`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.18727263808250427`"}], ",", "0.1310577541589737`", 
         ",", "0.1871875524520874`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.41846323013305664`"}], ",", 
         RowBox[{"-", "0.254423052072525`"}], ",", "0.16566649079322815`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1659073531627655`"}], ",", 
         RowBox[{"-", "0.25454390048980713`"}], ",", "0.4185855984687805`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3550601601600647`", ",", 
         RowBox[{"-", "0.1361958533525467`"}], ",", 
         RowBox[{"-", "0.4324187636375427`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.43267032504081726`", ",", 
         RowBox[{"-", "0.13634231686592102`"}], ",", 
         RowBox[{"-", "0.35442548990249634`"}]}], "}"}]}], "}"}]}], ",", "\n",
     "\t", 
    RowBox[{"\"\<jihwan\>\"", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"13", " ", "\[Pi]"}], "15"]}], ",", 
       FractionBox[
        RowBox[{"143", " ", "\[Pi]"}], "180"], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"17", " ", "\[Pi]"}], "30"]}], ",", 
       FractionBox[
        RowBox[{"41", " ", "\[Pi]"}], "60"], ",", 
       FractionBox[
        RowBox[{"139", " ", "\[Pi]"}], "180"], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"149", " ", "\[Pi]"}], "180"]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"107", " ", "\[Pi]"}], "180"]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"149", " ", "\[Pi]"}], "180"]}], ",", 
       FractionBox[
        RowBox[{"139", " ", "\[Pi]"}], "180"], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"149", " ", "\[Pi]"}], "180"]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"149", " ", "\[Pi]"}], "180"]}], ",", 
       FractionBox[
        RowBox[{"143", " ", "\[Pi]"}], "180"], ",", 
       FractionBox[
        RowBox[{"41", " ", "\[Pi]"}], "60"], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"13", " ", "\[Pi]"}], "15"]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"17", " ", "\[Pi]"}], "30"]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"13", " ", "\[Pi]"}], "15"]}], ",", 
       FractionBox[
        RowBox[{"43", " ", "\[Pi]"}], "60"], ",", 
       FractionBox[
        RowBox[{"43", " ", "\[Pi]"}], "60"], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"13", " ", "\[Pi]"}], "15"]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"79", " ", "\[Pi]"}], "180"]}], ",", "\[Pi]", ",", 
       FractionBox[
        RowBox[{"157", " ", "\[Pi]"}], "180"], ",", 
       FractionBox[
        RowBox[{"157", " ", "\[Pi]"}], "180"], ",", "\[Pi]", ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"23", " ", "\[Pi]"}], "30"]}], ",", 
       FractionBox[
        RowBox[{"107", " ", "\[Pi]"}], "180"], ",", 
       FractionBox[
        RowBox[{"34", " ", "\[Pi]"}], "45"], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"23", " ", "\[Pi]"}], "30"]}], ",", 
       FractionBox[
        RowBox[{"34", " ", "\[Pi]"}], "45"], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"91", " ", "\[Pi]"}], "180"]}]}], "}"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[1199]:=",ExpressionUUID->"cd236665-00fe-4e3a-9fdf-305558993417"],

Cell[BoxData[
 RowBox[{
  RowBox[{"origami", "[", "\"\<WaterBombBase\>\"", "]"}], " ", ":=", " ", 
  RowBox[{"singleVertex", "[", " ", 
   RowBox[{
    RowBox[{"ConstantArray", "[", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"Pi", "/", "8"}]}], ",", "8"}], "]"}], " ", ",", 
    RowBox[{"Flatten", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
      RowBox[{"Range", "[", "4", "]"}]}], "]"}]}], "  ", "]"}]}]], "Code",
 CellLabel->
  "In[1201]:=",ExpressionUUID->"95b63ef6-b4a3-43c9-b577-8fb55e64adf9"]
}, Closed]],

Cell[CellGroupData[{

Cell["elasticizeOrigami[]", "Subsection",ExpressionUUID->"998277f7-e77f-481f-8d03-2b6fa89387fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"elasticizeOrigami", "[", " ", "m_origami", " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"bars", " ", "=", " ", 
        RowBox[{"cellData", "[", 
         RowBox[{"m", ",", " ", "_rigidBar"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"faces", " ", "=", " ", 
        RowBox[{"cellData", "[", 
         RowBox[{"m", ",", "_face"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"folds", " ", "=", " ", 
        RowBox[{"cellData", "[", 
         RowBox[{"m", ",", "_fold"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"possibleFolds", " ", "=", " ", 
        RowBox[{"interiorEdges", "[", "m", "]"}]}], ",", "\n", "\t", 
       "skippedFolds"}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"addCells", "[", " ", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"deleteCells", "[", " ", "\n", "\t\t\t", 
          RowBox[{"Join", "[", " ", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "bars", "]"}], ">", "0"}], ",", " ", 
              RowBox[{"Thread", "[", 
               RowBox[{"bars", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", ",", " ", 
              
              RowBox[{"{", "}"}]}], "]"}], " ", ",", " ", "\n", "\t\t\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "faces", "]"}], ">", "0"}], ",", " ", 
              RowBox[{"Thread", "[", 
               RowBox[{"faces", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", "]"}], ",", " ", 
              
              RowBox[{"{", "}"}]}], " ", "]"}]}], "\n", "\t\t\t", "]"}], " ", 
          "\n", "\t\t", "]"}], " ", "@", " ", "m"}], ",", "\n", "\n", "\t\t", 
        
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "faces", "]"}], ">", "0"}], ",", " ", 
            RowBox[{"elasticFace", " ", "/@", " ", 
             RowBox[{"faces", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], " ", ",", 
            " ", 
            RowBox[{"{", "}"}]}], " ", "]"}], ",", "\n", "\t\t", 
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "folds", "]"}], ">", "0"}], ",", "\n", 
            "\t\t\t", 
            RowBox[{
             RowBox[{"skippedFolds", " ", "=", " ", 
              RowBox[{"Complement", "[", " ", 
               RowBox[{
                RowBox[{"Sort", "/@", "possibleFolds"}], ",", " ", 
                RowBox[{"Sort", "/@", 
                 RowBox[{"folds", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}]}], 
               "]"}]}], ";", "\n", "\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "skippedFolds", "]"}], ">", "0"}], ",",
                " ", 
               RowBox[{"fold", "[", " ", 
                RowBox[{"skippedFolds", " ", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<torsionalStiffness\>\"", " ", "\[Rule]", " ", "0"}], 
                  "}"}]}], "]"}], ",", " ", 
               RowBox[{"{", "}"}]}], " ", "]"}]}], ",", "\n", "\t\t\t", 
            RowBox[{"fold", "[", 
             RowBox[{"possibleFolds", ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<torsionalStiffness\>\"", " ", "\[Rule]", " ", "0"}], 
               "}"}]}], "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t\t", "}"}]}],
        "\n", "\t", "]"}], " ", "/;", " ", 
      RowBox[{"facesWorkQ", "[", " ", "faces", " ", "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"facesWorkQ", "[", " ", 
   RowBox[{"{", "}"}], " ", "]"}], " ", ":=", " ", "True"}], "\n", 
 RowBox[{
  RowBox[{"facesWorkQ", "[", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"face", "[", " ", "indices_", " ", "]"}], " ", "\[Rule]", " ", 
     "data_"}], " ", "}"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"AllTrue", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MatrixQ", "[", "indices", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Last", "[", 
        RowBox[{"Dimensions", "[", "indices", "]"}], "]"}], " ", "\[Equal]", 
       " ", "3"}]}], "}"}], ",", " ", "TrueQ"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"facesWorkQ", "[", " ", "_", " ", "]"}], " ", ":=", " ", "False"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"elasticizeOrigami", "[", " ", "m_origami", " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
    RowBox[{"Message", "[", 
     RowBox[{"elasticizeOrigami", "::", "faces"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"elasticizeOrigami", "::", "faces"}], "=", 
   "\"\<Faces must be triangles to elasticize this origami.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[1202]:=",ExpressionUUID->"6d9f25cf-a57b-4e21-b29e-24805f43aeb2"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["origami queries", "Section",ExpressionUUID->"8d4f30a8-a409-44fe-b780-83c10cec7e9b"],

Cell[CellGroupData[{

Cell["targetFoldAngles[]", "Subsection",ExpressionUUID->"6f76eeb7-891c-4cae-a5ac-4d64373ec68b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"targetFoldAngles", "[", " ", "m_origami", " ", "]"}], ":=", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", "=", 
      RowBox[{"targetFoldAngles", "[", 
       RowBox[{"m", ",", 
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"res", " ", "/;", " ", 
     RowBox[{
      RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
      "targetFoldAngles"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"targetFoldAngles", "[", " ", 
    RowBox[{"m_origami", " ", ",", " ", "s_String"}], "]"}], ":=", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", "=", 
       RowBox[{"targetFoldAngles", "[", 
        RowBox[{"m", ",", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "s"}], "]"}]}], 
      "}"}], ",", " ", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{
       RowBox[{"Head", "[", "res", "]"}], " ", "=!=", " ", 
       "targetFoldAngles"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"targetFoldAngles", "[", " ", 
    RowBox[{"m_origami", ",", " ", "pos_"}], " ", "]"}], " ", ":=", " ", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"data", "=", 
        RowBox[{"cellData", "[", 
         RowBox[{"m", ",", "_fold"}], "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "data", "]"}], ">", "0"}], ",", "\n", "\t\t", 
        
        RowBox[{"Association", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"\"\<folds\>\"", " ", "\[Rule]", " ", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], ",", "\n", 
          "\t\t\t", 
          RowBox[{"\"\<target\>\"", " ", "\[Rule]", " ", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", "\"\<angle\>\"", 
            "]"}]}], ",", "\n", "\t\t\t", 
          RowBox[{"\"\<actual\>\"", " ", "\[Rule]", " ", 
           RowBox[{"foldAngle", "[", 
            RowBox[{"m", ",", " ", "pos", ",", " ", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}]}]}], 
         "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
        RowBox[{"Association", "[", 
         RowBox[{
          RowBox[{"\"\<folds\>\"", "\[Rule]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"\"\<target\>\"", "\[Rule]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"\"\<actual\>\"", "\[Rule]", 
           RowBox[{"{", "}"}]}]}], "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}], 
    " ", "/;", " ", 
    RowBox[{"numericCoordinatesQ", "[", 
     RowBox[{"m", ",", "pos"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"targetFoldAngles", "[", " ", 
    RowBox[{"m_origami", ",", " ", "pos_", " ", ",", "\"\<folds\>\""}], "]"}],
    " ", ":=", " ", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"data", "=", 
        RowBox[{"cellData", "[", 
         RowBox[{"m", ",", "_fold"}], "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "data", "]"}], ">", "0"}], ",", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"numericCoordinatesQ", "[", 
     RowBox[{"m", ",", "pos"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"targetFoldAngles", "[", " ", 
    RowBox[{"m_origami", ",", " ", "pos_", " ", ",", " ", "\"\<target\>\""}], 
    "]"}], " ", ":=", " ", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"data", "=", 
        RowBox[{"cellData", "[", 
         RowBox[{"m", ",", "_fold"}], "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "data", "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", "\"\<angle\>\"", "]"}],
         ",", 
        RowBox[{"{", "}"}]}], "]"}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"numericCoordinatesQ", "[", 
     RowBox[{"m", ",", "pos"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"targetFoldAngles", "[", " ", 
    RowBox[{"m_origami", ",", " ", "pos_", " ", ",", " ", "\"\<actual\>\""}], 
    "]"}], " ", ":=", " ", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"data", "=", 
        RowBox[{"cellData", "[", 
         RowBox[{"m", ",", "_fold"}], "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "data", "]"}], ">", "0"}], ",", 
        RowBox[{"foldAngle", "[", 
         RowBox[{"m", ",", " ", "pos", ",", " ", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{"numericCoordinatesQ", "[", 
     RowBox[{"m", ",", "pos"}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"targetFoldAngles", "::", "data"}], " ", "=", " ", 
   "\"\<Data is not one of \\\"folds\\\", \\\"actual\\\", \
\\\"target\\\"\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"targetFoldAngles", "::", "pos"}], " ", "=", " ", 
    "\"\<Positions are not numeric or do not correspond to mechanism.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"targetFoldAngles", "[", 
   RowBox[{"m_origami", ",", " ", "pos_", ",", " ", "s_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"targetFoldAngles", "::", "data"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"targetFoldAngles", "[", 
   RowBox[{"m_origami", ",", " ", "pos_", ",", " ", 
    RowBox[{"\"\<folds\>\"", "|", "\"\<target\>\"", "|", "\"\<actual\>\""}]}],
    "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"targetFoldAngles", "::", "pos"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[1208]:=",ExpressionUUID->"8b6d2599-7eb7-438a-b947-9bbf95f936df"]
}, Closed]],

Cell[CellGroupData[{

Cell["flatOrigamiQ[]", "Subsection",ExpressionUUID->"dec2368f-a749-4c44-a564-d70303dc01af"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "flatOrigamiQ", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"ZeroTest", "->", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"Precision", "->", "Infinity"}]}], "\n", "}"}]}], ";"}]], "Code",\

 CellLabel->
  "In[1218]:=",ExpressionUUID->"e213c25d-86fb-46a8-bed2-db9cf4e00176"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"flatOrigamiQ", "::", "precision"}], "=", 
   "\"\<Precision is not a positive real number or Infinity.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flatOrigamiQ", "::", "zerotest"}], "=", 
   "\"\<ZeroTest function must return True or False.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1219]:=",ExpressionUUID->"27d9771e-c049-4d42-a05c-24f8aa65a359"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"computePrecision", "[", 
   RowBox[{"m_", ",", "Infinity"}], "]"}], " ", ":=", " ", 
  RowBox[{"Precision", "[", "m", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"computePrecision", "[", 
   RowBox[{"m_", ",", 
    RowBox[{"precision_", "?", "NumericQ"}]}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"Precision", "[", "m", "]"}], ",", "precision"}], "]"}], " ", "/;",
    " ", 
   RowBox[{"precision", ">", "0"}]}]}], "\n", 
 RowBox[{
  RowBox[{"computePrecision", "[", 
   RowBox[{"m_", ",", "_"}], "]"}], " ", ":=", " ", "$Failed"}]}], "Code",
 CellLabel->
  "In[1221]:=",ExpressionUUID->"66c6af84-bc13-4556-a25c-ac0eee18a80e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"computeZeroTestFunction", "[", 
   RowBox[{"Automatic", ",", "Infinity"}], "]"}], " ", ":=", " ", 
  "PossibleZeroQ"}], "\n", 
 RowBox[{
  RowBox[{"computeZeroTestFunction", "[", 
   RowBox[{"Automatic", ",", " ", 
    RowBox[{"precision", " ", ":", " ", 
     RowBox[{"_", "?", "NumericQ"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "#", "]"}], "<=", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "precision"}], "+", "1"}], ")"}]}]}], "&"}], 
   ")"}]}], "\n", 
 RowBox[{
  RowBox[{"computeZeroTestFunction", "[", 
   RowBox[{"f_", ",", "_"}], "]"}], " ", ":=", " ", "f"}]}], "Code",
 CellLabel->
  "In[1224]:=",ExpressionUUID->"47d6ebf0-41ed-4fd2-a121-92c8d4158186"],

Cell[BoxData[
 RowBox[{
  RowBox[{"flatOrigamiQ", "[", 
   RowBox[{"m_origami", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"actualPrecision", " ", "=", " ", 
       RowBox[{"computePrecision", "[", 
        RowBox[{"m", ",", 
         RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], ",", " ", 
      "zerotestFunction", ",", " ", "res"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"zerotestFunction", "=", 
      RowBox[{"computeZeroTestFunction", "[", " ", 
       RowBox[{
        RowBox[{"OptionValue", "[", "ZeroTest", "]"}], ",", " ", 
        "actualPrecision"}], "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"res", "=", 
      RowBox[{"flatOrigamiInternalQ", "[", 
       RowBox[{"m", ",", "actualPrecision", ",", "zerotestFunction"}], 
       "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"res", "/;", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "res", "]"}], "=!=", "flatOrigamiInternalQ"}], 
        ",", "\n", "\t\t\t", "True", ",", "\n", "\t\t", 
        RowBox[{"Not", "[", 
         RowBox[{"BooleanQ", "[", 
          RowBox[{"zerotestFunction", "[", "0", "]"}], "]"}], "]"}], ",", 
        "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"flatOrigamiQ", "::", "zerotest"}], "]"}], ";", " ", 
         "False"}], ",", "\n", "\t\t", 
        RowBox[{"actualPrecision", "===", "$Failed"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"flatOrigamiQ", "::", "precision"}], "]"}], ";", " ", 
         "False"}], ",", "\n", "\t\t", "True", ",", "False"}], "\n", "\t", 
       "]"}]}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[1227]:=",ExpressionUUID->"e3d20717-cfab-4fd4-94cc-77bbf18c68a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"flatOrigamiInternalQ", "[", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"precision", " ", ":", " ", 
     RowBox[{
      RowBox[{"_", "?", "NumericQ"}], " ", "|", " ", "Infinity"}]}], ",", " ", 
    RowBox[{"zerotestFunction_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"BooleanQ", "[", 
        RowBox[{"#", "[", "0", "]"}], "]"}], "&"}], ")"}]}]}], "]"}], ":=", 
  "\n", "\t", 
  RowBox[{"AllTrue", "[", 
   RowBox[{
    RowBox[{"gaussianCurvature", "[", 
     RowBox[{"m", ",", " ", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "precision"}],
        "]"}], " ", ",", " ", 
      RowBox[{"interiorVertices", "[", "m", "]"}]}], " ", "]"}], ",", " ", 
    "zerotestFunction"}], "]"}]}]], "Code",
 CellLabel->
  "In[1228]:=",ExpressionUUID->"05eabc87-f7ca-4d0e-a158-8006e36d6e80"]
}, Closed]],

Cell[CellGroupData[{

Cell["kawasakiQ[]", "Subsection",ExpressionUUID->"008e53a8-5623-407a-9675-c744ce0ab295"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "kawasakiQ", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"ZeroTest", "->", "PossibleZeroQ"}], ",", "\n", "\t", 
     RowBox[{"WorkingPrecision", "->", "Infinity"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[1229]:=",ExpressionUUID->"a68525df-606e-4297-940a-d09936ce44be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kawasakiQ", "[", 
   RowBox[{"m_origami", ",", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"v", "=", 
        RowBox[{"interiorVertices", "[", "m", "]"}]}], ",", "\n", "\t", 
       RowBox[{"mNum", "=", 
        RowBox[{"N", "[", 
         RowBox[{"m", ",", 
          RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}]}], "]"}]}]}], 
      "\n", "}"}], ",", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"flatOrigamiQ", "[", 
        RowBox[{"m", ",", "opt"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"And", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "ZeroTest", "]"}], "[", 
            RowBox[{"kawasakiAlternatingSum", "[", 
             RowBox[{"mNum", ",", "#"}], "]"}], "]"}], "&"}], "/@", "v"}], 
         ")"}]}], ",", "\n", "\t\t", "False"}], "\n", "\t", "]"}]}], "\n", 
    "]"}], "/;", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"NumericQ", "[", 
          RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], "]"}], "&&", 
         
         RowBox[{
          RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ">", "0"}]}],
         ")"}], "||", "\n", "\t", 
       RowBox[{
        RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], "===", 
        "Infinity"}]}], ")"}], "&&", "\n", "\t", 
     RowBox[{"BooleanQ", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "ZeroTest", "]"}], "[", "0", "]"}], 
      "]"}]}], "\n", ")"}]}]}]], "Code",
 CellLabel->
  "In[1230]:=",ExpressionUUID->"a41842bb-7ef0-4b81-9c7f-a828a6df6b23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kawasakiAlternatingSum", "[", 
   RowBox[{"m_", ",", "v_Integer"}], "]"}], ":=", "\n", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"faces", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"RotateRight", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
       RowBox[{"listFaces", "[", 
        RowBox[{"m", ",", "v"}], "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"OddQ", "[", 
       RowBox[{"Length", "[", "faces", "]"}], "]"}], ",", "\n", "\t\t", "1", 
      ",", "\n", "\t\t", 
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "^", "#"}], " ", "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "faces", "]"}], "]"}]}], "]"}], " ", ".", 
        " ", 
        RowBox[{"planarAngle", "[", 
         RowBox[{"m", ",", "faces"}], "]"}]}], "]"}]}], "\n", "\t", "]"}]}], 
   "\n", "]"}]}]], "Code",
 CellLabel->
  "In[1231]:=",ExpressionUUID->"7e7cf3b5-db57-47e6-b6f1-c9d792881662"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"kawasakiQ", "::", "workingprecision"}], "=", 
   "\"\<Working precesion must be a real value larger than 0.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"kawasakiQ", "::", "zerotest"}], "=", 
    "\"\<Zero test does not return True or False.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"kawasakiQ", "[", 
   RowBox[{"m_origami", ",", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Not", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"NumericQ", "[", 
          RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], "]"}], "&&", 
         
         RowBox[{
          RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], ">", "0"}]}],
         ")"}], "||", 
       RowBox[{
        RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], "===", 
        "Infinity"}]}], "]"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"kawasakiQ", "::", "workingprecision"}], "]"}], ";", "\n", 
      "\t\t", "False"}], ",", "\n", "\t", 
     RowBox[{"Not", "[", 
      RowBox[{"BooleanQ", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "ZeroTest", "]"}], "[", "0", "]"}], "]"}],
       "]"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"kawasakiQ", "::", "zerotest"}], "]"}], ";", "\n", "\t\t", 
      "False"}], ",", "\n", "\t", "True", ",", "False"}], "\n", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[1232]:=",ExpressionUUID->"32dba077-af38-4697-a75e-e017261a5468"]
}, Closed]],

Cell[CellGroupData[{

Cell["sameFoldAnglesQ[]", "Subsection",ExpressionUUID->"6f211a16-7cb3-4d11-8722-57c01e19ff28"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sameFoldAnglesQ", "[", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"folds_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
     RowBox[{"precision", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], " ", ":", " ", "0.1"}]}],
     " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"pos1_", "?", "MatrixQ"}], ",", " ", 
    RowBox[{"pos2_", "?", "MatrixQ"}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"angles1", " ", "=", " ", 
        RowBox[{"foldAngle", "[", " ", 
         RowBox[{"m", ",", " ", "pos1", ",", " ", "folds"}], " ", "]"}]}], 
       ",", "\n", "\t", 
       RowBox[{"angles2", " ", "=", " ", 
        RowBox[{"foldAngle", "[", " ", 
         RowBox[{"m", ",", " ", "pos2", ",", " ", "folds"}], " ", "]"}]}]}], 
      "\n", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"angles1", " ", "-", " ", "angles2"}], ")"}], " ", ".", " ", 
       RowBox[{"(", 
        RowBox[{"angles1", " ", "-", " ", "angles2"}], ")"}]}], " ", "<", " ", 
      RowBox[{"precision", "^", "2"}]}]}], "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"Dimensions", "[", "pos2", "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MeshCellCount", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<mesh\>\"", "]"}], ",", "0"}], "]"}], ",", 
       RowBox[{"embeddingDimension", "[", "m", "]"}]}], "}"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sameFoldAnglesQ", "[", 
     RowBox[{"m_origami", ",", " ", 
      RowBox[{"folds_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
      RowBox[{"precision", " ", ":", " ", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
           RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], " ", ":", " ", 
       "0.1"}]}], "]"}], "[", 
    RowBox[{"_", ",", "_"}], "]"}], " ", ":=", " ", "False"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sameFoldAnglesQ", "[", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"precision", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], " ", ":", " ", "0.1"}]}],
     " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"pos1_", "?", "MatrixQ"}], ",", " ", 
    RowBox[{"pos2_", "?", "MatrixQ"}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"folds", " ", "=", " ", 
       RowBox[{"interiorEdges", "[", "m", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"With", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t", 
        RowBox[{
         RowBox[{"angles1", " ", "=", " ", 
          RowBox[{"foldAngle", "[", " ", 
           RowBox[{"m", ",", " ", "pos1", ",", " ", "folds"}], " ", "]"}]}], 
         ",", "\n", "\t", 
         RowBox[{"angles2", " ", "=", " ", 
          RowBox[{"foldAngle", "[", " ", 
           RowBox[{"m", ",", " ", "pos2", ",", " ", "folds"}], " ", "]"}]}]}],
         "\n", "\t", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"angles1", " ", "-", " ", "angles2"}], ")"}], " ", ".", " ", 
         RowBox[{"(", 
          RowBox[{"angles1", " ", "-", " ", "angles2"}], ")"}]}], " ", "<", 
        " ", 
        RowBox[{"precision", "^", "2"}]}]}], "\n", "\t", "]"}]}], "\n", "]"}],
    " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"Dimensions", "[", "pos2", "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MeshCellCount", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<mesh\>\"", "]"}], ",", "0"}], "]"}], ",", 
       RowBox[{"embeddingDimension", "[", "m", "]"}]}], "}"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sameFoldAnglesQ", "[", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"precision", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], " ", ":", " ", "0.1"}]}],
     "]"}], "[", 
   RowBox[{"_", ",", "_"}], "]"}], " ", ":=", " ", "False"}]}], "Code",
 CellLabel->
  "In[1235]:=",ExpressionUUID->"e0bb26a5-0f3a-4748-bdb8-8c1e259c4ad9"]
}, Closed]],

Cell[CellGroupData[{

Cell["sameMVAnglesQ[]", "Subsection",ExpressionUUID->"5e6046c4-fd4b-49b0-b1c7-87f237226e76"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sameMVAnglesQ", "[", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"folds_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
     RowBox[{"precision", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], " ", ":", " ", 
      "0.1"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"pos1_", "?", "MatrixQ"}], ",", " ", 
    RowBox[{"pos2_", "?", "MatrixQ"}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"angles1", " ", "=", " ", 
        RowBox[{"Sign", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], "<", "precision"}], ",", "0", 
             ",", "#"}], "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"foldAngle", "[", " ", 
           RowBox[{"m", ",", " ", "pos1", ",", " ", "folds"}], " ", "]"}]}], 
         " ", "]"}]}], ",", "\n", "\t", 
       RowBox[{"angles2", " ", "=", " ", 
        RowBox[{"Sign", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], "<", "precision"}], ",", "0", 
             ",", "#"}], "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"foldAngle", "[", " ", 
           RowBox[{"m", ",", " ", "pos2", ",", " ", "folds"}], " ", "]"}]}], 
         " ", "]"}]}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{"And", " ", "@@", " ", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "\[Equal]", "#2"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"angles1", ",", "angles2"}], "}"}]}], "]"}]}]}], "\n", "]"}],
    " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"Dimensions", "[", "pos2", "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MeshCellCount", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<mesh\>\"", "]"}], ",", "0"}], "]"}], ",", 
       RowBox[{"embeddingDimension", "[", "m", "]"}]}], "}"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sameMVAnglesQ", "[", 
     RowBox[{"m_origami", ",", " ", 
      RowBox[{"folds_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", "Integer"}], "]"}], "&"}], ")"}]}], ",", " ", 
      RowBox[{"precision", " ", ":", " ", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
           RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], " ", ":", " ", 
       "0.1"}]}], "]"}], "[", 
    RowBox[{"_", ",", "_"}], "]"}], " ", ":=", " ", "False"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sameMVAnglesQ", "[", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"precision", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], " ", ":", " ", "0.1"}]}],
     " ", "]"}], "[", 
   RowBox[{
    RowBox[{"pos1_", "?", "MatrixQ"}], ",", " ", 
    RowBox[{"pos2_", "?", "MatrixQ"}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"folds", " ", "=", " ", 
       RowBox[{"interiorEdges", "[", "m", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"With", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t", 
        RowBox[{
         RowBox[{"angles1", " ", "=", " ", 
          RowBox[{"Sign", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", "#", "]"}], "<", "precision"}], ",", "0", 
               ",", "#"}], "]"}], "&"}], " ", "/@", " ", 
            RowBox[{"foldAngle", "[", " ", 
             RowBox[{"m", ",", " ", "pos1", ",", " ", "folds"}], " ", "]"}]}],
            " ", "]"}]}], ",", "\n", "\t", 
         RowBox[{"angles2", " ", "=", " ", 
          RowBox[{"Sign", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", "#", "]"}], "<", "precision"}], ",", "0", 
               ",", "#"}], "]"}], "&"}], " ", "/@", " ", 
            RowBox[{"foldAngle", "[", " ", 
             RowBox[{"m", ",", " ", "pos2", ",", " ", "folds"}], " ", "]"}]}],
            " ", "]"}]}]}], "\n", "\t", "}"}], ",", "\n", "\t", 
       RowBox[{"And", " ", "@@", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#1", "\[Equal]", "#2"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"angles1", ",", "angles2"}], "}"}]}], "]"}]}]}], "\n", 
      "\t", "]"}]}], "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"Dimensions", "[", "pos2", "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "pos1", "]"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MeshCellCount", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<mesh\>\"", "]"}], ",", "0"}], "]"}], ",", 
       RowBox[{"embeddingDimension", "[", "m", "]"}]}], "}"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sameMVAnglesQ", "[", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"precision", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], " ", ":", " ", "0.1"}]}],
     "]"}], "[", 
   RowBox[{"_", ",", "_"}], "]"}], " ", ":=", " ", "False"}]}], "Code",
 CellLabel->
  "In[1239]:=",ExpressionUUID->"e7f3cc07-671b-468a-9786-71394929206f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["origami data", "Section",ExpressionUUID->"98b2155f-f47a-45bb-8fb7-4b6980d727fb"],

Cell[CellGroupData[{

Cell["foldMatrix[]", "Subsection",ExpressionUUID->"1a122a28-32d1-4a27-90a9-a1528906c8c0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"foldMatrix", "[", "m_origami", "]"}], ":=", 
  RowBox[{"foldMatrixInternal", "[", 
   RowBox[{"m", ",", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
    RowBox[{"interiorEdges", "[", "m", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"foldMatrix", "[", 
   RowBox[{"m_origami", ",", "positions_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"foldMatrixInternal", "[", 
    RowBox[{"m", ",", 
     RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
     RowBox[{"interiorEdges", "[", "m", "]"}]}], "]"}], "/;", 
   RowBox[{"vertexCoordinatesQ", "[", 
    RowBox[{"m", ",", "positions"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"foldMatrix", "[", 
   RowBox[{"m_origami", ",", "positions_", ",", 
    RowBox[{"indices_", "?", "edgeListQ"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"foldMatrixInternal", "[", 
    RowBox[{"m", ",", "positions", ",", "indices"}], "]"}], "/;", 
   RowBox[{"vertexCoordinatesQ", "[", 
    RowBox[{"m", ",", "positions"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[1243]:=",ExpressionUUID->"5a272a8d-b37b-477f-a024-ee728ce8ca49"],

Cell[BoxData[
 RowBox[{
  RowBox[{"foldMatrixInternal", "[", 
   RowBox[{"m_", ",", "positions_", ",", 
    RowBox[{"indices_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}]}], "]"}], ":=", 
  " ", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"displacements", "=", 
      RowBox[{"vertexDisplacement", "[", "m", "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"foldAngle", "[", 
        RowBox[{"m", ",", 
         RowBox[{"positions", "+", "displacements"}], ",", "indices"}], "]"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"Flatten", "[", "displacements", "]"}], "}"}]}], "]"}], "/.", 
     
     RowBox[{"Dispatch", "[", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "displacements", "]"}], "->", "0"}], "]"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[1246]:=",ExpressionUUID->"436752b5-19a3-4653-b22e-045e8ecc949c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"foldMatrix", "::", "notorig"}], "=", 
   "\"\<Mechanism is not origami.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"foldMatrix", "::", "pos"}], "=", 
   "\"\<Positions do not correspond to the mechanism provided.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"foldMatrix", "::", "indices"}], "=", 
    "\"\<Indices provided do not correspond to a list of edges.\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"foldMatrix", "[", "m_", "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"foldMatrix", "::", "notorig"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"foldMatrix", "[", 
   RowBox[{"m_", ",", "positions_"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "=!=", "origami"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"foldMatrix", "::", "notorig"}], "]"}], ",", "\n", "\t", 
     RowBox[{"Not", "[", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "positions"}], "]"}], "]"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"foldMatrix", "::", "pos"}], "]"}], ",", "\n", "\t", "True", 
     ",", "False"}], "\n", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"foldMatrix", "[", 
   RowBox[{"m_", ",", "positions_", ",", "indices_"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "=!=", "origami"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"foldMatrix", "::", "notorig"}], "]"}], ",", "\n", "\t", 
     RowBox[{"Not", "[", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "positions"}], "]"}], "]"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"foldMatrix", "::", "pos"}], "]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Last", "[", 
       RowBox[{"Dimensions", "[", "indices", "]"}], "]"}], "!=", "2"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"foldMatrix", "::", "indices"}], "]"}], ",", "\n", "\t", "True",
      ",", "False"}], "\n", "]"}]}]}]}], "Code",
 CellLabel->
  "In[1247]:=",ExpressionUUID->"0f22cd14-f2c6-414f-9ee6-3d896ed5cfcc"]
}, Closed]],

Cell[CellGroupData[{

Cell["angularFoldMatrix[]", "Subsection",ExpressionUUID->"1b1feca1-c8a4-423e-ae6b-4d0242a1bd3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"angularFoldMatrix", "[", 
   RowBox[{"m_origami", ",", "vertex_Integer"}], "]"}], ":=", 
  RowBox[{"angularFoldMatrix", "[", 
   RowBox[{"m", ",", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "vertex"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"angularFoldMatrix", "[", 
   RowBox[{"m_origami", ",", 
    RowBox[{"positions_", "?", "MatrixQ"}], ",", "vertex_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"vertices", "=", 
        RowBox[{"listVertices", "[", 
         RowBox[{"m", ",", "vertex"}], "]"}]}], ",", "foldLengths", ",", 
       "angles", ",", "heights"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"foldLengths", "=", 
       RowBox[{"displacementLength", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", "vertex"}], "}"}], "&"}], "/@", "vertices"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"heights", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"vertexDisplacement", "[", 
          RowBox[{"vertices", ",", "\"\<z\>\""}], "]"}], "->", 
         RowBox[{"foldLengths", " ", 
          RowBox[{"Array", "[", 
           RowBox[{"angles", ",", 
            RowBox[{"Length", "[", "vertices", "]"}]}], "]"}]}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"Last", "@", 
       RowBox[{"CoefficientArrays", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             RowBox[{"foldMatrixInternal", "[", 
              RowBox[{"m", ",", "positions", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "vertex"}], "}"}], "&"}], "/@", 
                "vertices"}]}], "]"}], " ", ".", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{"vertexDisplacement", "[", 
               RowBox[{"m", ",", 
                RowBox[{"All", "[", "3", "]"}]}], "]"}], "]"}]}]}], "/.", 
           "heights"}], "/.", 
          RowBox[{
           RowBox[{"vertexDisplacement", "[", 
            RowBox[{"_", ",", "_"}], "]"}], "->", "0"}]}], ",", "\n", "\t\t", 
         
         RowBox[{"Array", "[", 
          RowBox[{"angles", ",", 
           RowBox[{"Length", "[", "vertices", "]"}]}], "]"}]}], "\n", "\t", 
        "]"}]}]}]}], "\n", "]"}], "/;", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
     RowBox[{"interiorVertices", "[", "m", "]"}], ",", "vertex"}], 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[1253]:=",ExpressionUUID->"9464b0a7-e384-4ae5-9af9-43a3e239bf92"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"angularFoldMatrix", "::", "notintv"}], "=", 
   "\"\<Vertex should be an interior vertex.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"angularFoldMatrix", "::", "orig"}], "=", 
   "\"\<Mechanism is not origami.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"angularFoldMatrix", "::", "pos"}], "=", 
    "\"\<Positions do not correspond to the mechanism provided.\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"angularFoldMatrix", "[", 
   RowBox[{"m_origami", ",", "_"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"angularFoldMatrix", "::", "notintv"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"angularFoldMatrix", "[", 
   RowBox[{"m_", ",", "positions_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "m", "]"}], "=!=", "origami"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"angularFoldMatrix", "::", "orig"}], "]"}], ",", "\n", "\t", 
     RowBox[{"Not", "[", 
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "positions"}], "]"}], "]"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"angularFoldMatrix", "::", "pos"}], "]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Not", "[", 
       RowBox[{"IntegerQ", "[", "v", "]"}], "]"}], "||", 
      RowBox[{"Not", "[", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"interiorVertices", "[", "m", "]"}], ",", "v"}], "]"}], 
       "]"}]}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"angularFoldMatrix", "::", "notintv"}], "]"}], ",", "\n", "\t", 
     "True", ",", "False"}], "\n", "]"}]}]}]}], "Code",
 CellLabel->
  "In[1255]:=",ExpressionUUID->"abf836c2-0f64-4bef-a1a6-0c0029eb66ae"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["graphics and geometry", "Section",ExpressionUUID->"3a223d20-fd00-4681-bb34-d0d67287ba5a"],

Cell[CellGroupData[{

Cell["butterflyDecomposition[], butterflyDecomposableQ[]", "Subsection",ExpressionUUID->"cdb85ba4-fcc4-4d47-bebf-3f42f4284e57"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"butterflyDecomposition", "[", " ", "o_origami", " ", "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"results", " ", "=", " ", 
        RowBox[{"FixedPointList", "[", " ", 
         RowBox[{"butterflyDecompositionStep", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "o"}], "}"}]}], " ", "]"}]}], ",", " ", 
       "remainingOrigami"}], " ", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"remainingOrigami", " ", "=", " ", 
       RowBox[{
        RowBox[{"Last", "[", "results", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"Drop", "[", " ", 
         RowBox[{
          RowBox[{"Drop", "[", " ", 
           RowBox[{
            RowBox[{"results", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", 
            RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}], ",", " ", 
        "remainingOrigami"}], " ", "}"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"butterflyDecompositionStep", "[", " ", 
   RowBox[{"{", 
    RowBox[{"facepair_", ",", " ", "o_origami"}], "}"}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"boundary", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"boundaryVertices", "[", "o", "]"}], "]"}]}], ",", " ", 
       "faces", ",", " ", "possibleButterflies", ",", " ", "butterfly"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"faces", " ", "=", " ", 
       RowBox[{
        RowBox[{"connectivity", "[", " ", 
         RowBox[{"o", ",", " ", 
          RowBox[{
          "\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], "]"}],
         "[", 
        RowBox[{"[", " ", "boundary", " ", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"possibleButterflies", " ", "=", " ", 
       RowBox[{"Select", "[", " ", 
        RowBox[{
         RowBox[{"Transpose", "[", " ", 
          RowBox[{"{", 
           RowBox[{"boundary", ",", " ", "faces"}], "}"}], " ", "]"}], ",", 
         " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Last", "[", "#", "]"}], "]"}], " ", "\[Equal]", " ", 
           "2"}], " ", "&"}]}], " ", "]"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "possibleButterflies", "]"}], ">", "0"}], ",",
         "\n", "\t\t", 
        RowBox[{
         RowBox[{"butterfly", " ", "=", " ", 
          RowBox[{"RandomChoice", "[", "possibleButterflies", "]"}]}], ";", 
         "\n", "\t\t", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"butterfly", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
           RowBox[{"deleteCells", "[", 
            RowBox[{"o", ",", " ", 
             RowBox[{"Alternatives", "@@", 
              RowBox[{"(", " ", 
               RowBox[{"face", " ", "/@", " ", 
                RowBox[{"butterfly", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], " ", ")"}]}]}], " ", 
            "]"}]}], "  ", "}"}]}], ",", "\n", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"facepair", ",", " ", "o"}], "}"}]}], "\n", "\t", "]"}]}]}], 
    "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"o", "[", "\"\<faces\>\"", "]"}], "]"}], "\[GreaterEqual]", 
    "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"butterflyDecompositionStep", "[", " ", 
    RowBox[{"{", 
     RowBox[{"facepair_", ",", "o_origami"}], "}"}], " ", "]"}], " ", ":=", 
   " ", 
   RowBox[{"{", 
    RowBox[{"facepair", ",", "o"}], "}"}]}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "version", " ", "shows", " ", "little", " ", "speed", " ", 
    "improvements", " ", "over", " ", "solving", " ", "everything", " ", 
    "explicitly"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"butterflyDecompositionQ", "[", " ", "o_origami", " ", "]"}], " ", 
   ":=", " ", 
   RowBox[{"FixedPoint", "[", " ", 
    RowBox[{"butterflyDecompositionStepQ", ",", " ", "o"}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"butterflyDecompositionStepQ", "[", " ", 
   RowBox[{"f_", "?", "BooleanQ"}], " ", "]"}], " ", ":=", " ", "f"}], "\n", 
 RowBox[{
  RowBox[{"butterflyDecompositionStepQ", "[", " ", "o_origami", " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"boundary", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"boundaryVertices", "[", "o", "]"}], "]"}]}], ",", " ", 
       "faces", ",", " ", "possibleButterflies", ",", " ", "butterfly"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"faces", " ", "=", " ", 
       RowBox[{
        RowBox[{"connectivity", "[", " ", 
         RowBox[{"o", ",", " ", 
          RowBox[{
          "\"\<vertices\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], "]"}],
         "[", 
        RowBox[{"[", " ", "boundary", " ", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"possibleButterflies", " ", "=", " ", 
       RowBox[{"Select", "[", " ", 
        RowBox[{
         RowBox[{"Transpose", "[", " ", 
          RowBox[{"{", 
           RowBox[{"boundary", ",", " ", "faces"}], "}"}], " ", "]"}], ",", 
         " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Last", "[", "#", "]"}], "]"}], " ", "\[Equal]", " ", 
           "2"}], " ", "&"}]}], " ", "]"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "possibleButterflies", "]"}], ">", "0"}], ",",
         "\n", "\t\t", 
        RowBox[{
         RowBox[{"butterfly", " ", "=", " ", 
          RowBox[{"RandomChoice", "[", "possibleButterflies", "]"}]}], ";", 
         " ", "\n", "\t\t", 
         RowBox[{"deleteVertices", "[", 
          RowBox[{"o", ",", " ", 
           RowBox[{"{", 
            RowBox[{"butterfly", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}]}], ",", "\n", 
        "\n", "\t\t", "False"}], "\n", "\t", "]"}]}]}], "\n", "]"}], " ", "/;",
    " ", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"o", "[", "\"\<faces\>\"", "]"}], "]"}], "\[GreaterEqual]", 
    "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"butterflyDecompositionStepQ", "[", " ", "o_origami", " ", "]"}], 
  " ", ":=", " ", "True"}]}], "Code",
 CellLabel->
  "In[1260]:=",ExpressionUUID->"86475d85-9a3f-4989-ab14-6a6455a4d8d0"]
}, Closed]],

Cell[CellGroupData[{

Cell["flattenOrigami[]", "Subsection",ExpressionUUID->"1d7082d6-fe88-456f-bbee-ec48dcda4795"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unfoldOrigami", "[", " ", "m_origami", " ", "]"}], " ", ":=", " ", 
  "\n", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"folds", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Property", "[", " ", 
          RowBox[{
           RowBox[{"fold", "[", "#", "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "0"}], "}"}]}], " ",
           "]"}], "&"}], " ", "/@", " ", 
        RowBox[{"interiorEdges", "[", "m", "]"}]}]}], ",", "\n", "\t", 
      "selfflatteningOrigami", ",", " ", "res"}], "\n", "}"}], ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"selfflatteningOrigami", " ", "=", " ", 
      RowBox[{
       RowBox[{"addCells", "[", " ", "folds", " ", "]"}], " ", "@", " ", 
       RowBox[{
        RowBox[{"deleteCells", "[", " ", "_pinnedJoint", " ", "]"}], " ", "@",
         " ", 
        RowBox[{
         RowBox[{"deleteCells", "[", " ", "_fold", " ", "]"}], " ", "@", " ", 
         "m"}]}]}]}], ";", "\n", "\n", "\t", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"minimizeEnergy", "[", " ", 
       RowBox[{"selfflatteningOrigami", ",", " ", 
        RowBox[{"MaxIterations", " ", "\[Rule]", " ", 
         RowBox[{"10", "^", "6"}]}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "res", "]"}], "===", "List"}], ",", " ", "res", 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"Infinity", ",", " ", 
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "}"}]}], " ", 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[1267]:=",ExpressionUUID->"ca0f7ad4-e8c5-4fea-9b64-31539691bedf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"chooseBoundaryFace", "[", " ", "m_origami", " ", "]"}], " ", ":=", 
  " ", 
  RowBox[{"First", " ", "@", " ", 
   RowBox[{"SelectFirst", "[", " ", 
    RowBox[{
     RowBox[{"connectivity", "[", 
      RowBox[{"m", ",", " ", 
       RowBox[{"\"\<edges\>\"", " ", "\[Rule]", " ", "\"\<faces\>\""}]}], " ",
       "]"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], " ", "&"}]}], 
    " ", "]"}]}]}]], "Code",
 CellLabel->
  "In[1268]:=",ExpressionUUID->"cfb7c4f0-3b35-4092-90e4-9984e62ee69e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rotateFaceToXYPlane", "[", " ", 
    RowBox[{"positions_", ",", " ", 
     RowBox[{"face", " ", ":", " ", 
      RowBox[{"{", "__Integer", "}"}]}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"initialPoints", " ", "=", " ", 
        RowBox[{"positions", "[", 
         RowBox[{"[", " ", 
          RowBox[{"face", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}], " ", "]"}], "]"}]}], ",", 
       " ", "lengths", ",", " ", "angle", ",", " ", "newPointLocations", ",", 
       " ", "residual", ",", " ", "transform"}], " ", "}"}], ",", " ", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"lengths", " ", "=", " ", 
       RowBox[{"displacementLength", "[", 
        RowBox[{"positions", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"face", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
           RowBox[{"face", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", "3"}], "]"}], "]"}]}], "}"}]}], " ", "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"angle", " ", "=", " ", 
       RowBox[{"First", " ", "@", " ", 
        RowBox[{"planarAngle", "[", " ", 
         RowBox[{"positions", ",", " ", 
          RowBox[{"{", 
           RowBox[{"face", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "3"}], "]"}], "]"}], "}"}]}], " ", "]"}]}]}], 
      ";", "\t", "\n", "\t", 
      RowBox[{"newPointLocations", " ", "=", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"lengths", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", "0"}], "}"}], ",", 
         "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"lengths", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", " ", "angle", " ", "]"}], ",", " ", 
            RowBox[{"Sin", "[", " ", "angle", " ", "]"}], ",", " ", "0"}], 
           " ", "}"}]}]}], "\n", "\t", "}"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"residual", ",", " ", "transform"}], " ", "}"}], " ", "=", 
       " ", 
       RowBox[{"FindGeometricTransform", "[", " ", 
        RowBox[{"newPointLocations", ",", "initialPoints", ",", " ", 
         RowBox[{
         "TransformationClass", " ", "\[Rule]", " ", "\"\<Rigid\>\""}], ",", 
         " ", 
         RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Linear\>\""}]}], " ", 
        "]"}]}], ";", "\n", "\n", "\t", "transform"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flattenOrigami", "::", "face"}], "=", 
   "\"\<Unable to identify faces.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rotateFaceToXYPlane", "[", " ", 
   RowBox[{"m_origami", ",", " ", "_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"flattenOrigami", "::", "face"}], "]"}], ";", " ", "Identity"}], 
   ")"}]}]}], "Code",
 CellLabel->
  "In[1269]:=",ExpressionUUID->"e70b599e-0dc7-4b77-90cb-c44e0bd5f445"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "flattenOrigami", "]"}], " ", "=", " ", 
    RowBox[{"Options", "[", "MeshRegion", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flattenOrigami", "[", " ", 
    RowBox[{"m_origami", " ", ",", " ", 
     RowBox[{"tol_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericQ", "[", "#", "]"}], " ", "&&", " ", 
         RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
   "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
      "unfoldedEnergy", ",", " ", "unfoldedPositions", ",", " ", "transform", 
       ",", " ", "xyPositions", ",", " ", "newOrigami"}], " ", "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"flatOrigamiQ", "[", 
          RowBox[{"m", ",", " ", 
           RowBox[{"Precision", " ", "\[Rule]", " ", "tol"}]}], " ", "]"}], 
         "]"}], ",", " ", 
        RowBox[{"Message", "[", 
         RowBox[{"flattenOrigami", "::", "flat"}], "]"}]}], " ", "]"}], ";", 
      "\n", "\n", "\t", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"unfoldedEnergy", ",", " ", "unfoldedPositions"}], " ", "}"}],
        " ", "=", " ", 
       RowBox[{"unfoldOrigami", "[", "m", "]"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", " ", ".", " ", "#"}], " ", "&"}], ")"}], " ", "@", 
          " ", 
          RowBox[{"foldAngle", "[", 
           RowBox[{"m", ",", " ", "unfoldedPositions", ",", " ", 
            RowBox[{"interiorEdges", "[", "m", "]"}]}], "]"}]}], " ", ">", 
         " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "4"}], ")"}]}]}], ",", " ", 
        RowBox[{"Message", "[", " ", 
         RowBox[{"flattenOrigami", "::", "notflt"}], " ", "]"}]}], " ", "]"}],
       ";", "\n", "\n", "\t", 
      RowBox[{"transform", " ", "=", " ", 
       RowBox[{"rotateFaceToXYPlane", "[", " ", 
        RowBox[{"unfoldedPositions", ",", " ", 
         RowBox[{"chooseBoundaryFace", "[", "m", "]"}]}], " ", "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"xyPositions", " ", "=", " ", 
       RowBox[{"PadRight", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"transform", "[", " ", "unfoldedPositions", " ", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", "unfoldedPositions", "]"}], ",", " ", "3"}],
           " ", "}"}]}], " ", "]"}]}], ";", "\n", "\t\t\t", "\n", "\t", 
      RowBox[{"mechanisms`Private`addMeshRegion", "[", " ", 
       RowBox[{
        RowBox[{"origami", "[", " ", 
         RowBox[{"xyPositions", ",", " ", 
          RowBox[{"{", "}"}], ",", " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
          RowBox[{"m", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], " ", "]"}], ",", " ", 
        "Automatic", ",", " ", "opt"}], " ", "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flattenOrigami", "::", "notflt"}], "=", 
   "\"\<Origami flat energy may be too large to get good results.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flattenOrigami", "::", "flat"}], "=", 
   "\"\<Gaussian curvature of vertices is not flat to desired tolerance \
`1`.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flattenOrigami", "::", "tol"}], " ", "=", " ", 
   "\"\<Tolerance `1` should be a positive number.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"flattenOrigami", "::", "tol2"}], " ", "=", " ", 
    "\"\<Second argument should be a tolerance.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"flattenOrigami", "[", " ", 
   RowBox[{"m_origami", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"flattenOrigami", "::", "tol2"}], " ", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"flattenOrigami", "[", " ", 
   RowBox[{"m_origami", ",", " ", "tol_", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{
     RowBox[{"flattenOrigami", "::", "tol"}], ",", " ", "tol"}], " ", 
    "]"}]}]}]}], "Code",
 CellLabel->
  "In[1272]:=",ExpressionUUID->"259c06f9-b5bb-48b2-afaf-c7bb31292e07"]
}, Closed]],

Cell[CellGroupData[{

Cell["MVAssignment[]", "Subsection",ExpressionUUID->"dd9e02cb-40b4-433d-a473-cad5e51bf190"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MVAssignment", "[", " ", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"positions_", " ", ":", " ", "Automatic"}], ",", " ", 
     RowBox[{"tol", " ", ":", " ", 
      RowBox[{"_", "?", "NumericQ"}]}], ",", " ", 
     RowBox[{"color_", " ", ":", " ", "Automatic"}]}], " ", "]"}], " ", ":=", 
   " ", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"pos", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"positions", " ", "===", " ", "Automatic"}], ",", " ", 
          RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", 
          "positions"}], "]"}]}], ",", " ", "\n", "\t", 
       RowBox[{"colorFunction", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"color", " ", "===", " ", "Automatic"}], ",", " ", 
          "MVdefaultColor", ",", " ", "color"}], " ", "]"}]}], ",", " ", "\n",
        "\t", 
       RowBox[{"edges", " ", "=", " ", 
        RowBox[{"interiorEdges", "[", "m", "]"}]}]}], "\n", "}"}], ",", "\n", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"With", "[", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"angles", " ", "=", " ", 
          RowBox[{"foldAngle", "[", 
           RowBox[{"m", ",", " ", "pos", ",", " ", "edges"}], "]"}]}], " ", 
         "}"}], ",", "\n", "\t\t", 
        RowBox[{"MapThread", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#1", " ", "\[Rule]", " ", 
             RowBox[{"colorFunction", "[", " ", 
              RowBox[{"assignMVForFold", "[", " ", 
               RowBox[{"#2", ",", " ", "tol"}], " ", "]"}], " ", "]"}]}], " ",
             ")"}], " ", "&"}], " ", ",", " ", 
          RowBox[{"{", " ", 
           RowBox[{"edges", ",", " ", "angles"}], " ", "}"}]}], " ", "]"}]}], 
       "\n", "\t", "]"}], " ", "/;", " ", 
      RowBox[{"numericCoordinatesQ", "[", 
       RowBox[{"m", ",", " ", "pos"}], "]"}]}]}], "\n", "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"assignMVForFold", "[", 
   RowBox[{"angle_", ",", " ", "tol_"}], "]"}], ":=", " ", 
  RowBox[{"1", " ", "/;", " ", 
   RowBox[{"angle", " ", ">", " ", 
    RowBox[{"Abs", "[", "tol", "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"assignMVForFold", "[", 
   RowBox[{"angle_", ",", " ", "tol_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"-", "1"}], " ", "/;", " ", 
   RowBox[{"angle", " ", "<", " ", 
    RowBox[{"-", 
     RowBox[{"Abs", "[", "tol", "]"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"assignMVForFold", "[", 
    RowBox[{"_", ",", "_"}], "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"MVdefaultColor", "[", "1", "]"}], " ", ":=", " ", "Red"}], "\n", 
 RowBox[{
  RowBox[{"MVdefaultColor", "[", 
   RowBox[{"-", "1"}], "]"}], " ", ":=", " ", "Blue"}], "\n", 
 RowBox[{
  RowBox[{"MVdefaultColor", "[", "0", "]"}], " ", ":=", " ", 
  "Black"}]}], "Code",
 CellLabel->
  "In[1280]:=",ExpressionUUID->"3a4da837-219c-420b-a290-9b7db76205bb"]
}, Closed]],

Cell[CellGroupData[{

Cell["MVColor[]", "Subsection",ExpressionUUID->"db3d8342-8d8e-4752-845f-f3b764a796fb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MVColor", "[", 
    RowBox[{
    "m_origami", ",", " ", "s_String", ",", " ", "colorFunction_Function"}], 
    " ", "]"}], ":=", " ", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"targetFoldAngles", "[", "m", "]"}]}], ",", "styles"}], "}"}],
      ",", "\n", "\t", 
     RowBox[{
      RowBox[{"(", "\n", "\t", 
       RowBox[{
        RowBox[{"styles", "=", 
         RowBox[{"colorFunction", "/@", 
          RowBox[{"data", "[", "s", "]"}]}]}], ";", "\n", "\t", 
        RowBox[{"changeCellData", "[", 
         RowBox[{"m", ",", " ", "rigidBar", ",", 
          RowBox[{"data", "[", "\"\<folds\>\"", "]"}], ",", 
          RowBox[{"\"\<style\>\"", " ", "\[Rule]", " ", "styles"}]}], "]"}]}],
        "\n", "\t", ")"}], " ", "/;", " ", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"MemberQ", "[", " ", 
         RowBox[{
          RowBox[{"Keys", "[", "data", "]"}], ",", " ", "s"}], "]"}], ",", 
        " ", "True", ",", " ", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"MVColor", "::", "s"}], ",", "s", ",", 
           RowBox[{"Keys", "[", "data", "]"}]}], "]"}], ";", " ", "False"}]}],
        "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MVColor", "::", "s"}], "=", 
   "\"\<`1` is not a valid string of type `2`.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1287]:=",ExpressionUUID->"63f61e01-74fc-40c9-934b-7d2c34da1f73"]
}, Closed]],

Cell[CellGroupData[{

Cell["SurfaceArea[], RegionMeasure[], RegionMoment[]", "Subsection",ExpressionUUID->"f1b04111-e3f7-4385-ae18-0bacd274da7e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SurfaceArea", "[", 
   RowBox[{"o_origami", ",", " ", "r___"}], "]"}], " ", "^:=", " ", 
  RowBox[{"SurfaceArea", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionMeasure", "[", 
   RowBox[{"o_origami", ",", " ", "r___"}], "]"}], " ", "^:=", " ", 
  RowBox[{"RegionMeasure", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RegionMoment", "[", 
   RowBox[{"o_origami", ",", " ", "r___"}], "]"}], " ", "^:=", " ", 
  RowBox[{"RegionMoment", "[", " ", 
   RowBox[{
    RowBox[{"o", "[", "\"\<mesh\>\"", "]"}], ",", " ", "r"}], " ", 
   "]"}]}]}], "Code",
 CellLabel->
  "In[1289]:=",ExpressionUUID->"5d8708fa-cf07-414f-8126-ace947a8f0e8"]
}, Closed]],

Cell[CellGroupData[{

Cell["deconstructedPlot[]", "Subsection",ExpressionUUID->"e536bc67-8dac-439c-9b64-663526d4bf1d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "deconstructedPlot", "]"}], "=", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<edgeWeights\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", "}"}]}], ",", "\n", "\t", 
      RowBox[{"\"\<defaultWeight\>\"", " ", "\[Rule]", " ", "0"}]}], "\n", 
     "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "[", " ", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", "\t", 
   
   RowBox[{"deconstructedPlot", "[", 
    RowBox[{"m", ",", " ", 
     RowBox[{"mechanismPositions", "[", "m", "]"}], ",", " ", "opt"}], " ", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "[", " ", 
    RowBox[{"m_origami", ",", " ", "coords_", ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"faces", " ", "=", " ", 
         RowBox[{"listFaces", "[", "m", "]"}]}], ",", " ", "\n", "\t", 
        RowBox[{"widths", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"connectivity", "[", 
            RowBox[{"m", ",", 
             RowBox[{
             "\"\<faces\>\"", " ", "\[Rule]", " ", "\"\<edges\>\""}]}], "]"}],
            " ", "/.", " ", 
           RowBox[{"OptionValue", "[", "\"\<edgeWeights\>\"", "]"}]}], " ", "/.",
           " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"_Integer", ",", "_Integer"}], "}"}], " ", "\[Rule]", " ", 
           RowBox[{"OptionValue", "[", "\"\<defaultWeight\>\"", "]"}]}]}]}]}],
        "\n", "}"}], ",", "\n", "\t", 
      RowBox[{"MapThread", "[", " ", 
       RowBox[{"shrinkPolygon", " ", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"coords", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "&"}], " ", "/@", " ", "faces"}],
           ",", "widths"}], "}"}]}], " ", "]"}]}], "\n", "]"}], " ", "/;", 
    " ", 
    RowBox[{"deconstructedPlotQ", "[", 
     RowBox[{"m", " ", ",", " ", "coords", ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<edgeWeights\>\"", "]"}], ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<defaultWeight\>\"", "]"}]}], " ", 
     "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlotQ", "[", 
    RowBox[{
    "m_", ",", " ", "positions_", ",", " ", "rules_", ",", " ", "default_"}], 
    " ", "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"vertexCoordinatesQ", "[", 
       RowBox[{"m", ",", "positions"}], "]"}], ",", " ", "True", ",", " ", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"deconstructedPlot", "::", "pos"}], "]"}], ";", " ", 
       "False"}]}], "]"}], " ", "&&", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"NumericQ", "[", "default", "]"}], "&&", 
       RowBox[{"default", " ", "\[GreaterEqual]", " ", "0"}]}], ",", " ", 
      "True", ",", " ", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"deconstructedPlot", "::", "defaultweight"}], "]"}], ";", " ",
        "False"}]}], " ", "]"}], " ", "&&", " ", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"MatchQ", "[", " ", 
       RowBox[{"rules", ",", " ", 
        RowBox[{"{", "___Rule", "}"}]}], " ", "]"}], ",", " ", "True", ",", 
      " ", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"deconstructedPlot", "::", "weightRules"}], "]"}], ";", " ", 
       "False"}]}], " ", "]"}], " ", "&&", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"VectorQ", "[", " ", 
       RowBox[{
        RowBox[{"rules", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", "\[GreaterEqual]", "0"}]}], "&"}]}], " ", "]"}], ",", 
      " ", "True", ",", " ", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"deconstructedPlot", "::", "weightrules"}], "]"}], ";", " ", 
       "False"}]}], " ", "]"}], " ", "&&", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"MatchQ", "[", " ", 
       RowBox[{
        RowBox[{"rules", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_Integer", ",", "_Integer"}], "}"}], "..."}], "}"}]}], 
       " ", "]"}], ",", " ", "True", ",", " ", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"deconstructedPlot", "::", "weights"}], "]"}], ";", " ", 
       "False"}]}], " ", "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "::", "pos"}], "=", 
   "\"\<The positions do not correspond to the mechanism.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "::", "weights"}], "=", 
   "\"\<The weights must be positive numbers.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "::", "defaultweight"}], "=", 
   "\"\<The default weight must be a positive number.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "::", "edges"}], "=", 
   "\"\<The left hand side of the rules must be well-formed edges.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deconstructedPlot", "::", "weightrules"}], "=", 
   "\"\<Option \\\"edgeWeights\\\" must be a list of rules of the form edge \
-> positive weight.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1292]:=",ExpressionUUID->"a2cd35af-dbac-415c-ae7f-35b450b3699e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"shrinkPolygon", "[", " ", 
    RowBox[{"pts_", ",", " ", "widths_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"pts", " ", "+", " ", 
    RowBox[{"Total", " ", "@", " ", 
     RowBox[{"MapIndexed", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"shrinkPolygonSide", "[", " ", 
         RowBox[{"pts", ",", " ", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", "#1"}], " ", "]"}], 
        "&"}], ",", " ", "widths"}], " ", "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"shrinkPolygonSide", "[", " ", 
   RowBox[{"pts_", ",", " ", "v1_", ",", " ", "width_"}], " ", "]"}], " ", ":=",
   "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "pts", "]"}]}], ",", " ", "v2", ",", " ", 
      "future", ",", " ", "past", ",", " ", "futureEdge", ",", " ", "edge", 
      ",", " ", "pastEdge"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"v2", "=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"v1", "+", "1"}], ",", " ", "n", ",", " ", "1"}], "]"}]}], 
     ";", " ", 
     RowBox[{"future", "=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"v2", "+", "1"}], ",", " ", "n", ",", " ", "1"}], "]"}]}], 
     ";", " ", 
     RowBox[{"past", " ", "=", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"v1", "-", "1"}], ",", "n", ",", "1"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"edge", "=", 
      RowBox[{"Normalize", "[", " ", 
       RowBox[{
        RowBox[{"pts", "[", 
         RowBox[{"[", "v2", "]"}], "]"}], " ", "-", " ", 
        RowBox[{"pts", "[", 
         RowBox[{"[", "v1", "]"}], "]"}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"futureEdge", " ", "=", " ", 
      RowBox[{"Normalize", "[", " ", 
       RowBox[{
        RowBox[{"pts", "[", 
         RowBox[{"[", "future", "]"}], "]"}], " ", "-", " ", 
        RowBox[{"pts", "[", 
         RowBox[{"[", "v2", "]"}], "]"}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"pastEdge", " ", "=", " ", 
      RowBox[{"Normalize", "[", " ", 
       RowBox[{
        RowBox[{"pts", "[", 
         RowBox[{"[", "past", "]"}], "]"}], " ", "-", " ", 
        RowBox[{"pts", "[", 
         RowBox[{"[", "v1", "]"}], "]"}]}], " ", "]"}]}], ";", "\n", "\t", 
     "\n", "\t", 
     RowBox[{"RotateRight", "[", 
      RowBox[{
       RowBox[{"Join", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"width", "*", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"pastEdge", "/", 
             RowBox[{"Norm", "[", " ", 
              RowBox[{"Cross", "[", " ", 
               RowBox[{"pastEdge", ",", " ", "edge"}], " ", "]"}], " ", 
              "]"}]}], ",", "\n", "\t\t\t", 
            RowBox[{"futureEdge", "/", 
             RowBox[{"Norm", "[", " ", 
              RowBox[{"Cross", "[", " ", 
               RowBox[{"futureEdge", ",", " ", "edge"}], " ", "]"}], " ", 
              "]"}]}]}], "\n", "\t\t", "}"}]}], ",", "\n", "\t\t", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"n", "-", "2"}]}], "]"}]}], "\n", "\t", "]"}], ",", " ", 
       RowBox[{"v1", "-", "1"}]}], "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[1301]:=",ExpressionUUID->"26dfeae0-7a2f-41aa-bacf-11526f181415"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["post", "Section",ExpressionUUID->"6ab0f874-d874-4315-8392-aaaebc7a8913"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[1303]:=",ExpressionUUID->"4519db25-af3d-4f88-99eb-7a5b387934cb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanisms`graphics", "Chapter",ExpressionUUID->"4e117d75-efd0-4fbb-9ab5-54303adb6974"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<mechanisms`graphics`\>\"", "]"}], 
  ";"}]], "Code",
 CellLabel->
  "In[1305]:=",ExpressionUUID->"e14f7419-89e3-4783-9198-ab1d0a95c1b9"],

Cell[CellGroupData[{

Cell["usage", "Section",ExpressionUUID->"6034899b-68aa-4037-b918-fc414503a490"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotDisplacement", "::", "usage"}], "=", "\n", 
    "\"\<plotDisplacement[ mechanism, vertex displacements ] plots mechanism \
with arrows correspond to vertex displacements overlayed.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"angleMarker", "::", "usage"}], "=", 
   "\"\<angleMarker[m, {v1,v2,v3}, (radius) ] creates an arc around an angle \
spanning (v1,v2) to (v3,v2).\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"angleText", "::", "usage"}], "=", 
    "\"\<angleTest[m, {v1,v2,v3}, (distance) ] adds a text label to the angle \
spanning (v1,v2) to (v3,v2).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitives", "::", "usage"}], " ", "=", " ", 
   "\"\<mechanismPrimitives[ m, (positions) ] returns a list of mechanism \
primitives.\>\""}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toGraphicsComplex", "::", "usage"}], " ", "=", " ", 
   "\"\<toGraphicsComplex[ m, (positions) ] returns a GraphicsComplex object \
identical to mechanismPrimitives[].\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1306]:=",ExpressionUUID->"2cf6321a-3523-4f5a-99bf-84c1ba3196fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pinnedJointShape", "::", "usage"}], "=", 
   "\"\<pinnedJointShape[] is a triangular pinned joint in 2D.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"springShape", "::", "usage"}], "=", 
   "\"\<springShape[] represents a spring shape function with a particular \
thickness and number of jags.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pinnedJointShape", "::", "usage"}], "=", 
   "\"\<jointShape[] represents a joint shape distinguishing pinned joints \
from free joints.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"chromoElasticShape", "::", "usage"}], "=", 
   "\"\<chromoElasticShape[]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rigidBarShape", "::", "usage"}], "=", 
   "\"\<rigidBarShape[] represents the shape of a rigidBar\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jointShape", "::", "usage"}], "=", 
   "\"\<jointShape[] represents the shape of a free joint.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"faceShape", "::", "usage"}], "=", "\"\<faceShape[]\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[1311]:=",ExpressionUUID->"3cf79f62-832f-451c-8e21-d75c262e0170"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "usage"}], "=", "\n", 
   "\"\<plotMechanism[ mechanism, positions ] plots a mechanism using \
positions.\nplotMechanism[mechanism, {positions 1, positions 2,...}] creates \
a list of plotted mechanisms with uniform size.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[1318]:=",ExpressionUUID->"fec2b29f-ac6a-4f61-b198-9ada7c9935e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"texture", "::", "usage"}], "=", 
   "\"\<texture[ s ] returns a texture having the name s. Use texture[] to \
see examples.\>\""}], ";"}]], "Code",
 CellLabel->
  "In[1319]:=",ExpressionUUID->"e7452ff7-4a1b-486f-843f-361c8ea558a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "$themes", " ", "=", " ", "\"\<List of recognized graphics themes.\>\""}], 
  ";"}]], "Code",
 CellLabel->
  "In[1320]:=",ExpressionUUID->"cf1d931e-3134-4092-81f5-c5441756f7b2"]
}, Closed]],

Cell[CellGroupData[{

Cell["global", "Section",ExpressionUUID->"0f8e42dc-5f2f-405a-b230-3b1f2fd2dc43"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`geometry`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`rigidity`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<mechanisms`origami`\>\"", "]"}], ";"}]}], "Code",\

 CellLabel->
  "In[1321]:=",ExpressionUUID->"3298ad3f-9fe1-4719-b9e0-a54361a0a019"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
some functions for extracting graphics information from mechanisms\
\>", "Section",ExpressionUUID->"264055aa-257e-4658-8e88-c7a82054dd0f"],

Cell[CellGroupData[{

Cell["defaultGraphicsPrimitive[], defaultGraphicsStyle[]", "Subsection",ExpressionUUID->"7e843407-88e6-42e6-a7fb-0d90b64f932d"],

Cell["\<\
Format for adding or modifying default primitives:

defaultGraphicsPrimitive[ primitive, mechanism head, theme ]
defaultGraphicsStyle[ primitive, mechanism head, theme ]\
\>", "Text",ExpressionUUID->"3c8f0d77-a834-4ff0-a98b-0ccc57bb7626"],

Cell[CellGroupData[{

Cell["framework default graphics", "Subsubsection",ExpressionUUID->"8f2974af-9693-44a6-a41d-17072b63e33a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", 
   RowBox[{
    RowBox[{"rigidBar", "|", "Line"}], " ", ",", " ", "framework", " ", ",", 
    " ", "Automatic"}], "]"}], " ", ":=", " ", 
  RowBox[{"rigidBarShape", "[", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", 
   RowBox[{"joint", " ", ",", " ", "framework", " ", ",", " ", "Automatic"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"freeJointShape", "[", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", 
   RowBox[{
   "pinnedJoint", " ", ",", " ", "framework", " ", ",", " ", "Automatic"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"pinnedJointShape", "[", "]"}]}]}], "Code",
 CellLabel->
  "In[1326]:=",ExpressionUUID->"6387c029-df63-4edd-b7e3-3056df6c830d"]
}, Closed]],

Cell[CellGroupData[{

Cell["origami default graphics", "Subsubsection",ExpressionUUID->"47b141fa-f895-4edc-9dc0-60d87ba3481f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", 
   RowBox[{
    RowBox[{"rigidBar", "|", "Line"}], " ", ",", " ", "origami", " ", ",", 
    " ", "Automatic"}], "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Line", "[", "#", "]"}], "&"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", 
   RowBox[{"joint", " ", ",", " ", "origami", " ", ",", " ", "Automatic"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Point", "[", "#", "]"}], "&"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", 
   RowBox[{
   "pinnedJoint", " ", ",", " ", "origami", " ", ",", " ", "Automatic"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Point", "[", "#", "]"}], "&"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultGraphicsPrimitive", "[", 
    RowBox[{"fold", ",", " ", "origami", ",", " ", "Automatic"}], "]"}], " ", 
   ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Line", "[", "#", "]"}], "&"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsStyle", "[", " ", 
   RowBox[{"fold", ",", " ", "origami", ",", " ", "Automatic"}], " ", "]"}], 
  " ", ":=", " ", 
  RowBox[{"{", "Black", "}"}]}]}], "Code",
 CellLabel->
  "In[1329]:=",ExpressionUUID->"55d9b51b-8c8e-45e9-80b1-d9728ad7b809"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", 
   RowBox[{
    RowBox[{"face", " ", "|", " ", "elasticFace"}], ",", " ", "origami", ",", 
    " ", "\"\<thick\>\""}], "]"}], " ", ":=", " ", 
  RowBox[{"faceShape", "[", 
   RowBox[{"\"\<thickness\>\"", "\[Rule]", "0.01"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", 
   RowBox[{
    RowBox[{"face", " ", "|", " ", "elasticFace"}], ",", " ", "origami", ",", 
    " ", 
    RowBox[{"\"\<thick\>\"", "[", "thickness_", "]"}]}], " ", "]"}], " ", ":=",
   " ", 
  RowBox[{"faceShape", "[", 
   RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "thickness"}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[1334]:=",ExpressionUUID->"bedb12a1-7d57-4b9c-bb71-022f3622a323"]
}, Closed]],

Cell[CellGroupData[{

Cell["shared graphics defaults", "Subsubsection",ExpressionUUID->"471a8712-097f-4fd1-9518-c829ff43a184"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", 
   RowBox[{"face", ",", " ", "_", " ", ",", " ", "Automatic"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"faceShape", "[", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", 
   RowBox[{"elasticFace", ",", " ", "_", " ", ",", " ", "Automatic"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"faceShape", "[", 
   RowBox[{"\"\<thickness\>\"", "\[Rule]", "0.01"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", 
   RowBox[{"Polygon", " ", ",", " ", "_", " ", ",", " ", "Automatic"}], "]"}],
   " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Polygon", "[", "#", "]"}], "&"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultGraphicsPrimitive", "[", 
    RowBox[{"spring", " ", ",", " ", "_", " ", ",", " ", "Automatic"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"springShape", "[", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", 
   RowBox[{"_", " ", ",", " ", "_", " ", ",", " ", "_"}], " ", "]"}], " ", ":=",
   " ", "None"}]}], "Code",
 CellLabel->
  "In[1336]:=",ExpressionUUID->"7bef82e9-a442-4fc9-9df7-6bb3f6419724"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", " ", 
   RowBox[{
    RowBox[{"rigidBar", "|", "spring", "|", "Line"}], ",", " ", "_", ",", 
    " ", "\"\<minimal\>\""}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Line", "[", "#", "]"}], "&"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", " ", 
   RowBox[{
    RowBox[{"joint", "|", "pinnedJoint", "|", "Point"}], ",", " ", "_", ",", 
    " ", "\"\<minimal\>\""}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Point", "[", "#", "]"}], "&"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsPrimitive", "[", " ", 
   RowBox[{
    RowBox[{"face", "|", "elasticFace", "|", "Polygon"}], ",", " ", "_", ",", 
    " ", "\"\<minimal\>\""}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Polygon", "[", "#", "]"}], "&"}], ")"}]}]}], "Code",
 CellLabel->
  "In[1341]:=",ExpressionUUID->"9f080a33-4031-4746-8c35-5a48091cda2e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"defaultGraphicsStyle", "[", " ", 
   RowBox[{"rigidBar", " ", ",", " ", "_", " ", ",", " ", "Automatic"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"{", "Black", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsStyle", "[", " ", 
   RowBox[{"joint", " ", ",", " ", "_", " ", ",", " ", "Automatic"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"{", "Black", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsStyle", "[", " ", 
   RowBox[{"pinnedJoint", " ", ",", " ", "_", " ", ",", " ", "Automatic"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"{", "Black", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsStyle", "[", " ", 
   RowBox[{"face", " ", ",", " ", "_", " ", ",", " ", "Automatic"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"GrayLevel", "[", "0.85", "]"}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsStyle", "[", " ", 
   RowBox[{"elasticFace", " ", ",", " ", "_", " ", ",", " ", "Automatic"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"{", 
     RowBox[{"0.85", ",", "0.85", ",", "0.95"}], "}"}], "]"}], 
   "}"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsStyle", "[", " ", 
   RowBox[{"spring", " ", ",", " ", "_", " ", ",", " ", "Automatic"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"defaultGraphicsStyle", "[", " ", 
   RowBox[{"_", " ", ",", " ", "_", " ", ",", " ", "_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"{", "}"}]}]}], "Code",
 CellLabel->
  "In[1344]:=",ExpressionUUID->"b683f485-8aa7-4d61-89c2-98979f63c150"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["positionDimension[]", "Subsection",ExpressionUUID->"7263b898-abdd-4b74-bf48-8401d5363cb9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dimension", "[", " ", 
   RowBox[{"position_", "?", "MatrixQ"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{"position", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dimension", "[", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "MatrixQ"}], "}"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Max", "[", 
    RowBox[{"Length", " ", "/@", " ", 
     RowBox[{"positions", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"sameVertexNumberQ", "[", " ", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"position_", "?", "MatrixQ"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], " ", "\[Equal]", " ", 
   RowBox[{"Length", "[", "position", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"sameVertexNumberQ", "[", " ", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "MatrixQ"}], "}"}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], "}"}], ",", " ", 
    RowBox[{"AllTrue", "[", 
     RowBox[{
      RowBox[{"Length", " ", "/@", " ", "positions"}], " ", ",", " ", 
      RowBox[{
       RowBox[{"#", "\[Equal]", "n"}], "&"}]}], " ", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sameVertexNumberQ", "[", " ", 
    RowBox[{"m_", ",", " ", "Automatic"}], " ", "]"}], " ", ":=", " ", 
   "True"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"flatEnoughQ", "[", " ", 
   RowBox[{"position_", "?", "MatrixQ"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Chop", "[", " ", 
    RowBox[{"Max", "[", " ", 
     RowBox[{"Abs", "[", " ", 
      RowBox[{"position", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", "]"}], " ", "]"}], " ", 
    "]"}], " ", "\[Equal]", " ", "0"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"flatEnoughQ", "[", " ", 
    RowBox[{"positions", ":", " ", 
     RowBox[{"{", 
      RowBox[{"__", "?", "MatrixQ"}], "}"}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Chop", "[", " ", 
     RowBox[{"Max", "[", " ", 
      RowBox[{"Abs", "[", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"positions", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", "3"}], "]"}], "]"}], "]"}], " ", 
       "]"}], " ", "]"}], " ", "]"}], " ", "\[Equal]", " ", "0"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"recastDimension", "[", " ", 
   RowBox[{
    RowBox[{"position_", "?", "MatrixQ"}], " ", ",", " ", "dim_"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"PadRight", "[", 
   RowBox[{"position", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Length", "[", "position", "]"}], ",", "dim"}], "}"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"recastDimension", "[", " ", 
   RowBox[{
    RowBox[{"position", ":", 
     RowBox[{"{", 
      RowBox[{"__", "?", "MatrixQ"}], "}"}]}], " ", ",", " ", "dim_"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"PadRight", "[", 
   RowBox[{"position", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Length", "[", "position", "]"}], ",", 
      RowBox[{"Length", "[", 
       RowBox[{"position", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "dim"}], "}"}]}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[1351]:=",ExpressionUUID->"987031ba-a53c-4f11-a7e4-bcab36c04d09"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"positionDimension", "[", " ", 
    RowBox[{"m_", ",", " ", "Automatic", ",", " ", "dim_"}], " ", "]"}], ":=",
    "\n", "\t", 
   RowBox[{"Switch", "[", " ", 
    RowBox[{"dim", ",", "\n", "\t\t", "Automatic", ",", "\n", "\t\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"embeddingDimension", "[", "m", "]"}], "\[Equal]", "3"}], 
        " ", "&&", " ", 
        RowBox[{
         RowBox[{"displayDimension", "[", "m", "]"}], "\[Equal]", "2"}]}], 
       ",", "\n", "\t\t\t\t", 
       RowBox[{"recastDimension", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "2"}], "]"}], ",",
        "\n", "\t\t\t\t", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], "\n", "\t\t\t", "]"}], 
     ",", "\n", "\t\t", "2", ",", " ", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"embeddingDimension", "[", "m", "]"}], "\[Equal]", "3"}], 
        " ", "&&", " ", 
        RowBox[{"Not", "@", 
         RowBox[{"flatEnoughQ", "[", 
          RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "]"}]}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"mechanism", "::", "notflat"}], "]"}], ";", " ", 
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"recastDimension", "[", 
        RowBox[{
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "2"}], "]"}]}], 
      "\n", "\t\t\t", "]"}], ",", "\n", "\t\t", "3", ",", " ", 
     RowBox[{"recastDimension", "[", 
      RowBox[{
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "3"}], "]"}], ",", 
     "\n", "\t\t", "_", ",", " ", "$Failed"}], "\n", "\t", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"positionDimension", "[", " ", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{
      RowBox[{"_", "?", "vertexCoordinatesQ"}], "|", 
      RowBox[{"{", 
       RowBox[{"__", "?", "vertexCoordinatesQ"}], "}"}]}]}], ",", " ", 
    "dim_"}], " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"Switch", "[", " ", 
    RowBox[{"dim", ",", "\n", "\t\t", "Automatic", ",", "\n", "\t\t\t", 
     RowBox[{"recastDimension", "[", " ", 
      RowBox[{"positions", ",", " ", 
       RowBox[{"dimension", "[", "positions", "]"}]}], " ", "]"}], ",", "\n", 
     "\t\t", "2", ",", "\n", "\t\t\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"dimension", "[", "positions", "]"}], " ", "\[Equal]", " ", 
         "3"}], " ", "&&", " ", 
        RowBox[{"Not", "@", 
         RowBox[{"flatEnoughQ", "[", "positions", "]"}]}]}], ",", "\n", 
       "\t\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"mechanism", "::", "notflat"}], "]"}], ";", "\n", "\t\t\t\t", 
        RowBox[{"recastDimension", "[", " ", 
         RowBox[{"positions", ",", " ", "3"}], "]"}]}], ",", "\n", "\t\t\t\t", 
       RowBox[{"recastDimension", "[", " ", 
        RowBox[{"positions", ",", " ", "2"}], "]"}]}], "\n", "\t\t\t", "]"}], 
     ",", "\n", "\t\t", "3", ",", " ", 
     RowBox[{"recastDimension", "[", " ", 
      RowBox[{"positions", ",", " ", "3"}], "]"}], ",", "\n", "\t\t", "_", 
     ",", " ", "$Failed"}], "\n", "\t", "]"}], " ", "/;", " ", 
   RowBox[{"sameVertexNumberQ", "[", " ", 
    RowBox[{"m", ",", " ", "positions"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"positionDimension", "[", " ", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{
      RowBox[{"_", "?", "vertexCoordinatesQ"}], "|", 
      RowBox[{"{", 
       RowBox[{"__", "?", "vertexCoordinatesQ"}], "}"}]}]}], ",", " ", 
    "dim_"}], " ", "]"}], ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"mechanism", "::", "vn"}], ",", " ", 
      RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], " ", "]"}], ";", " ",
     "$Failed"}], ")"}]}]}], "Code",
 CellLabel->
  "In[1360]:=",ExpressionUUID->"4df19566-3b22-4178-9883-43f4afe6f65f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "notflat"}], " ", "=", " ", 
   "\"\<Cannot project a fully 3D mechanism into 2D.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanism", "::", "vn"}], " ", "=", " ", 
   "\"\<Number of vertices `1` does not agree with number of vertex \
positions.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1363]:=",ExpressionUUID->"de3fa5c5-4fe7-44c1-9fce-7504364314cd"]
}, Closed]],

Cell[CellGroupData[{

Cell["mechanismPrimitives[]", "Subsection",ExpressionUUID->"180e9407-b203-4d4a-b001-0e9302edeaaf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$themes", "=", 
    RowBox[{"{", 
     RowBox[{
     "Automatic", " ", ",", " ", "\"\<minimal\>\"", ",", " ", 
      "\"\<thick\>\""}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"themesQ", "[", 
   RowBox[{"m_", ",", " ", "Automatic"}], "]"}], " ", ":=", " ", 
  "Automatic"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"themesQ", "[", 
    RowBox[{"m_", ",", "theme_"}], " ", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "theme", "]"}], "\[Equal]", "0"}]}], " ", ":=", 
  " ", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"MemberQ", "[", " ", 
      RowBox[{"$themes", ",", " ", "theme"}], " ", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"mechanismPrimitives", "::", "theme"}], ",", " ", "theme"}], 
      "]"}], ";", " ", "Automatic"}], " ", ",", " ", "theme"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"themesQ", "[", 
    RowBox[{"m_", ",", " ", "theme_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{"Not", "@", 
      RowBox[{"MemberQ", "[", " ", 
       RowBox[{"$themes", ",", " ", 
        RowBox[{"Head", "[", "theme", "]"}]}], " ", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"mechanismPrimitives", "::", "theme"}], ",", " ", "theme"}], 
       "]"}], ";", " ", "Automatic"}], " ", ",", " ", "theme"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitives", "::", "theme"}], "=", 
   "\"\<`1` is not a valid theme.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1365]:=",ExpressionUUID->"585395bf-edd0-4922-be90-cf3dd9378903"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "mechanismPrimitives", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<theme\>\"", "\[Rule]", "Automatic"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"mechanismPrimitives", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"dimension", " ", ":", " ", 
     RowBox[{"2", "|", "3", "|", "Automatic"}], " ", ":", " ", "Automatic"}], 
    " ", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pos", "=", 
      RowBox[{"positionDimension", "[", 
       RowBox[{"m", ",", " ", "Automatic", ",", " ", "dimension"}], "]"}]}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"mechanismPrimitivesInternal", "[", " ", 
      RowBox[{"m", ",", " ", "pos", ",", " ", 
       RowBox[{"m", "[", "\"\<positions\>\"", "]"}], " ", ",", " ", 
       RowBox[{"themesQ", "[", 
        RowBox[{"m", ",", 
         RowBox[{"OptionValue", "[", "\"\<theme\>\"", "]"}]}], "]"}]}], " ", 
      "]"}], " ", "/;", " ", 
     RowBox[{"pos", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitives", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "numericCoordinatesQ"}], ",", " ", 
     RowBox[{"dimension", " ", ":", " ", 
      RowBox[{"2", "|", "3", "|", "Automatic"}], " ", ":", " ", "Automatic"}],
      " ", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", 
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"pos", "=", 
       RowBox[{"positionDimension", "[", 
        RowBox[{"m", ",", " ", "positions", ",", " ", "dimension"}], "]"}]}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"mechanismPrimitivesInternal", "[", " ", 
       RowBox[{"m", ",", " ", "pos", ",", " ", "positions", ",", " ", 
        RowBox[{"themesQ", "[", 
         RowBox[{"m", ",", 
          RowBox[{"OptionValue", "[", "\"\<theme\>\"", "]"}]}], "]"}]}], " ", 
       "]"}], " ", "/;", " ", 
      RowBox[{"pos", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"mechanismPrimitives", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions_", "?", "numericCoordinatesQ"}], ",", " ", 
    RowBox[{"dimension", " ", ":", " ", 
     RowBox[{"2", "|", "3", "|", "Automatic"}], " ", ":", " ", "Automatic"}], 
    " ", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{
     RowBox[{"mechanismPrimitives", "::", "coord"}], ",", " ", 
     RowBox[{"Length", "[", "positions", "]"}], ",", " ", 
     RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"mechanismPrimitives", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions_", "?", "numericCoordinatesQ"}], ",", " ", 
    "dimension_", " ", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{"mechanismPrimitives", "::", "dim"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitives", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
     RowBox[{"dimension", " ", ":", " ", 
      RowBox[{"2", "|", "3", "|", "Automatic"}], " ", ":", " ", "Automatic"}],
      " ", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
    RowBox[{"Message", "[", 
     RowBox[{"mechanismPrimitives", "::", "num"}], "]"}]}]}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitives", "::", "coord"}], " ", "=", " ", 
   "\"\<Number of vertices in second argument, `1`, does not match number of \
vertices in mechanism, `2`.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitives", "::", "dim"}], " ", "=", " ", 
   "\"\<Number of dimensions requested is not 2, 3, or Automatic.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitives", "::", "num"}], " ", "=", " ", 
   "\"\<Vertices should be numeric.\>\""}], ";"}]}], "Code",
 CellLabel->
  "In[1370]:=",ExpressionUUID->"475af5c7-e1c8-4503-81f4-44acaf834316"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitivesInternal", "[", " ", 
    RowBox[{
    "m_", ",", " ", "positions_", " ", ",", " ", "actualPositions_", ",", " ",
      "theme_"}], "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"Transpose", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"mechanismPrimitivesFromComponent", "[", " ", 
       RowBox[{
       "m", ",", " ", "positions", ",", " ", "#", " ", ",", " ", "theme"}], 
       "]"}], "&"}], " ", "/@", " ", 
     RowBox[{"sortComponentsForGraphics", "[", " ", 
      RowBox[{"cellData", "[", " ", 
       RowBox[{"m", ",", " ", "actualPositions", ",", " ", "_"}], " ", "]"}], 
      " ", "]"}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mechanismPrimitivesFromComponent", "[", " ", 
    RowBox[{"m_", ",", " ", "positions_", ",", " ", 
     RowBox[{"Rule", "[", 
      RowBox[{
       RowBox[{"head_", "[", " ", "indices_", " ", "]"}], ",", " ", 
       "display_"}], " ", "]"}], " ", ",", " ", "theme_"}], "]"}], " ", ":=", 
   "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"coordinates", " ", "=", " ", 
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"positions", "[", 
            RowBox[{"[", " ", "#", " ", "]"}], "]"}], " ", "&"}], " ", "/@", 
          " ", "indices"}], "]"}]}], ",", " ", "\n", "\t", 
       RowBox[{"data", " ", "=", " ", 
        RowBox[{"Transpose", "[", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ConstantArray", "[", " ", 
             RowBox[{
              RowBox[{"m", "[", "\"\<EmbeddingDimension\>\"", "]"}], " ", ",",
               " ", 
              RowBox[{"Length", "[", "indices", "]"}]}], "]"}], "}"}], ",", 
           " ", 
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"Values", "[", " ", "display", " ", "]"}], ",", 
             RowBox[{"-", "3"}]}], "]"}]}], "]"}], " ", "]"}]}], ",", "\n", 
       "\t", 
       RowBox[{"style", " ", "=", " ", 
        RowBox[{"mechanisms`Private`combineDataList", "[", " ", 
         RowBox[{
          RowBox[{"defaultGraphicsStyle", "[", 
           RowBox[{"head", ",", " ", 
            RowBox[{"Head", "[", "m", "]"}], ",", " ", "theme"}], "]"}], " ", 
          ",", 
          RowBox[{"display", "[", "\"\<style\>\"", "]"}]}], "]"}]}], ",", 
       "\n", "\t", 
       RowBox[{"labels", " ", "=", " ", 
        RowBox[{"display", "[", "\"\<label\>\"", "]"}]}], ",", "\n", "\t", 
       RowBox[{"shapes", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"display", "[", "\"\<shape\>\"", "]"}], " ", "/.", " ", 
          RowBox[{"{", 
           RowBox[{"Automatic", " ", "\[Rule]", " ", 
            RowBox[{"defaultGraphicsPrimitive", "[", 
             RowBox[{"head", ",", " ", 
              RowBox[{"Head", "[", "m", "]"}], ",", " ", "theme"}], "]"}]}], 
           "}"}]}], " ", "/.", " ", 
         RowBox[{"{", " ", 
          RowBox[{"None", " ", "\[Rule]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", "}"}], "&"}], ")"}]}], " ", "}"}]}]}]}], "\n", 
      "}"}], ",", "\n", "\t", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{"applyFunction", " ", ",", "\n", "\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
          "shapes", ",", " ", "\n", "\t\t\t", "coordinates", ",", " ", "\n", 
           "\t\t\t", "data", ",", "\n", "\t\t\t", 
           RowBox[{"head", " ", "/@", " ", "indices"}], ",", "\n", "\t\t\t", 
           "style"}], "\n", "\t\t\t", "}"}]}], "\n", "\t\t", "]"}], ",", "\n",
        "\n", "\t\t", 
       RowBox[{"Flatten", " ", "@", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"applyLabel", ",", "\n", "\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{"MatrixQ", "[", "coordinates", "]"}], ",", " ", 
              "coordinates", ",", " ", 
              RowBox[{"Mean", " ", "/@", " ", "coordinates"}]}], " ", "]"}], 
            ",", "\n", "\t\t\t", "indices", ",", "\n", "\t\t\t", "labels"}], 
           "\n", "\t\t\t", "}"}]}], "\n", "\t\t", "]"}]}]}], "\n", "\t", 
      "}"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"$textOffset", " ", "=", " ", "0.05"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"applyLabel", "[", " ", 
   RowBox[{"coordinates_", ",", " ", "_", ",", " ", "None"}], " ", "]"}], " ",
   ":=", " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"applyLabel", "[", " ", 
   RowBox[{"coordinates_", ",", " ", "label_", ",", " ", "\"\<Index\>\""}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Text", "[", 
   RowBox[{"label", ",", " ", 
    RowBox[{"coordinates", " ", "+", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"$textOffset", ",", 
       RowBox[{"Length", "[", "coordinates", "]"}]}], "]"}]}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"applyLabel", "[", " ", 
   RowBox[{"coordinates_", ",", " ", "_", ",", " ", "lab_"}], " ", "]"}], " ",
   ":=", " ", 
  RowBox[{
   RowBox[{"Text", "[", " ", 
    RowBox[{"lab", ",", " ", 
     RowBox[{"coordinates", " ", "+", " ", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"$textOffset", ",", 
        RowBox[{"Length", "[", "coordinates", "]"}]}], "]"}]}]}], " ", "]"}], 
   " ", "/;", " ", 
   RowBox[{
    RowBox[{"Head", "[", "lab", "]"}], " ", "=!=", " ", "Text"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"applyLabel", "[", " ", 
    RowBox[{"coordinates_", ",", " ", "_", ",", " ", 
     RowBox[{"Text", "[", 
      RowBox[{"lab_", ",", " ", "coord_", ",", " ", "other___"}], "]"}]}], 
    " ", "]"}], " ", ":=", " ", 
   RowBox[{"Text", "[", " ", 
    RowBox[{"lab", ",", " ", 
     RowBox[{"coord", " ", "+", " ", "coordinates"}], ",", " ", "other"}], 
    " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"applyFunction", "[", " ", 
   RowBox[{
   "None", ",", " ", "coordinates_", ",", " ", "primitive_", ",", " ", 
    "data_", ",", " ", "style_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"applyFunction", "[", " ", 
   RowBox[{
   "shapeFunction_", ",", " ", "coordinates_", ",", " ", "primitive_", ",", 
    " ", "data_", ",", " ", "style_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Flatten", "[", " ", 
   RowBox[{"{", 
    RowBox[{"style", ",", " ", 
     RowBox[{"shapeFunction", "[", 
      RowBox[{"coordinates", ",", "primitive", ",", "data"}], "]"}]}], "}"}], 
   " ", "]"}]}]}], "Code",
 CellLabel->
  "In[1379]:=",ExpressionUUID->"36d192d4-81bd-4706-ab71-98a7e1bbfd1e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sortComponentsForGraphics", "[", " ", "components_", " ", "]"}], ":=",
    "\n", "\t", 
   RowBox[{
    RowBox[{"SortBy", "[", 
     RowBox[{
      RowBox[{"DeleteCases", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"graphicsOrder", "[", 
             RowBox[{"Head", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], " ", ",", " ", 
            "#"}], " ", "}"}], "&"}], " ", "/@", " ", "components"}], ",", 
        "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"3", ",", "_"}], "}"}]}], "\n", "\t", "]"}], ",", "First"}], 
     "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"graphicsOrder", "[", " ", 
   RowBox[{"pinnedJoint", "|", "joint", "|", "Point"}], " ", "]"}], ":=", 
  "2"}], "\n", 
 RowBox[{
  RowBox[{"graphicsOrder", "[", " ", 
   RowBox[{"rigidBar", "|", "spring", "|", "Line", "|", "fold"}], " ", "]"}], 
  ":=", "1"}], "\n", 
 RowBox[{
  RowBox[{"graphicsOrder", "[", " ", 
   RowBox[{"face", "|", "elasticFace", "|", "Polygon"}], " ", "]"}], ":=", 
  "0"}], "\n", 
 RowBox[{
  RowBox[{"graphicsOrder", "[", " ", "_", " ", "]"}], ":=", "3"}]}], "Code",
 CellLabel->
  "In[1388]:=",ExpressionUUID->"511a5fd5-e74f-4419-bf75-8c444440d319"]
}, Closed]],

Cell[CellGroupData[{

Cell["toGraphicsComplex[]", "Subsection",ExpressionUUID->"999e6f09-3bf2-414c-b3fc-0ebce2164f6e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "toGraphicsComplex", "]"}], " ", "=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Options", "[", "GraphicsComplex", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<theme\>\"", "\[Rule]", "Automatic"}], "}"}]}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"toGraphicsComplex", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"dimension", " ", ":", " ", 
     RowBox[{"2", "|", "3", "|", "Automatic"}], " ", ":", " ", "Automatic"}], 
    ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{"res", "=", 
      RowBox[{"toGraphicsComplexInternal", "[", " ", 
       RowBox[{"m", ",", " ", 
        RowBox[{"positionDimension", "[", 
         RowBox[{"m", ",", " ", "Automatic", ",", " ", "dimension"}], "]"}], 
        ",", " ", 
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", "\n", "\t", 
        "dimension", ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<theme\>\"", "]"}], ",", " ", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"{", "opt", "}"}], ",", 
          RowBox[{"Options", "[", "GraphicsComplex", "]"}]}], "]"}]}], " ", 
       "]"}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"res", " ", "/;", " ", 
     RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"toGraphicsComplex", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions_", "?", "vertexCoordinatesQ"}], ",", " ", 
    RowBox[{"dimension", " ", ":", " ", 
     RowBox[{"2", "|", "3", "|", "Automatic"}], " ", ":", " ", "Automatic"}], 
    ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"toGraphicsComplexInternal", "[", " ", 
        RowBox[{"m", ",", " ", 
         RowBox[{"positionDimension", "[", 
          RowBox[{"m", ",", " ", "positions", ",", " ", "dimension"}], "]"}], 
         ",", " ", "positions", ",", " ", "\n", "\t", "dimension", ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<theme\>\"", "]"}], ",", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "opt", "}"}], ",", 
           RowBox[{"Options", "[", "GraphicsComplex", "]"}]}], "]"}]}], " ", 
        "]"}]}], "\n", "}"}], ",", "\n", "\t", 
     RowBox[{"res", " ", "/;", " ", 
      RowBox[{"res", " ", "=!=", " ", "$Failed"}]}]}], "\n", " ", "]"}], " ", 
   "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", "positions", "]"}], " ", "\[Equal]", " ", 
    RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}]}]}]}]}], "Code",
 CellLabel->
  "In[1393]:=",ExpressionUUID->"4527b9b8-c59b-40fe-ac46-8b880e1d29af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"canonicalizePrimitiveRules", " ", "=", " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"p", " ", ":", " ", 
        RowBox[{"_Polyhedron", "|", "_Parallelepiped", "|", "_Cuboid"}]}], 
       " ", "\[RuleDelayed]", " ", 
       RowBox[{"CanonicalizePolyhedron", "[", "p", "]"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"p", " ", ":", " ", "_Polygon"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"CanonicalizePolygon", "[", "p", "]"}]}]}], "\n", "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"extractVertexCoordinates", "[", "primitives_", "]"}], " ", ":=", 
  " ", "\n", 
  RowBox[{"DeleteDuplicates", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Flatten", "[", " ", 
     RowBox[{
      RowBox[{"Cases", "[", " ", 
       RowBox[{
        RowBox[{"Flatten", "[", "primitives", "]"}], " ", ",", 
        RowBox[{
         RowBox[{"_", "?", "RegionQ"}], "|", "_Text"}]}], "]"}], " ", "/.", 
      " ", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"p_Polygon", " ", "\[RuleDelayed]", " ", 
         RowBox[{"(", 
          RowBox[{"Point", " ", "/@", " ", 
           RowBox[{"PolygonCoordinates", "[", "p", "]"}]}], ")"}]}], ",", 
        "\n", "\t\t", 
        RowBox[{"p_Polyhedron", " ", "\[RuleDelayed]", " ", 
         RowBox[{"(", 
          RowBox[{"Point", " ", "/@", " ", 
           RowBox[{"PolyhedronCoordinates", "[", "p", "]"}]}], ")"}]}], ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"p_", " ", "/;", " ", 
           RowBox[{"RegionQ", "[", "p", "]"}]}], ")"}], " ", "\[RuleDelayed]",
          " ", 
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"Dimensions", "[", " ", 
              RowBox[{"p", "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", "]"}], " ", 
            "\[Equal]", " ", "1"}], ",", " ", 
           RowBox[{"Point", "[", 
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", ",", " ", 
           RowBox[{"Point", "/@", 
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}], ",", "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{"_", ",", "p_", ",", "___"}], "]"}], " ", "\[RuleDelayed]", 
         " ", 
         RowBox[{"Point", "[", "p", "]"}]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{"_", ",", "x_", ",", "y_", ",", "___"}], "]"}], " ", 
         "\[RuleDelayed]", " ", 
         RowBox[{"Point", "[", 
          RowBox[{"x", "+", "y"}], "]"}]}]}], "\n", "\t", "}"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[1396]:=",ExpressionUUID->"f4924735-3c86-45f4-9002-8e27c84aebac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"toGraphicsComplexInternal", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "actualPositions_", ",", " ", 
    "dimension_", ",", " ", "theme_", ",", " ", "options_"}], " ", "]"}], " ",
   ":=", "\n", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "prims", ",", " ", "modifiedPrimitives", ",", " ", "coordinates", ",", 
      " ", "coordinateRules", ",", " ", "x"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"prims", " ", "=", " ", 
      RowBox[{
       RowBox[{"mechanismPrimitivesInternal", "[", 
        RowBox[{
        "m", " ", ",", " ", "positions", ",", " ", "actualPositions", " ", 
         ",", " ", 
         RowBox[{"themesQ", "[", 
          RowBox[{"m", ",", "theme"}], "]"}]}], " ", "]"}], " ", "/.", " ", 
       "canonicalizePrimitiveRules"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "prims", "]"}], " ", "===", " ", 
        "mechanismPrimitives"}], ",", "\n", "\t\t", "$Failed", ",", "\n", 
       "\n", "\t\t", 
       RowBox[{
        RowBox[{"coordinates", "=", 
         RowBox[{"extractVertexCoordinates", "[", "prims", "]"}]}], ";", "\n",
         "\t\t", 
        RowBox[{"coordinateRules", " ", "=", " ", 
         RowBox[{"Dispatch", "[", 
          RowBox[{"Thread", "[", 
           RowBox[{"coordinates", " ", "\[Rule]", " ", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "coordinates", "]"}], "]"}]}], "]"}], 
          "]"}]}], ";", "\n", "\n", "\t\t", 
        RowBox[{"modifiedPrimitives", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"prims", " ", "/.", " ", 
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"Polygon", "[", 
                RowBox[{"x_", ",", "y_"}], "]"}], " ", "\[RuleDelayed]", " ", 
               
               RowBox[{"Polygon", "[", " ", 
                RowBox[{"x", "[", 
                 RowBox[{"[", "y", "]"}], "]"}], "  ", "]"}]}], ",", "\n", 
              "\t\t\t", 
              RowBox[{
               RowBox[{"Polyhedron", "[", 
                RowBox[{"x_", ",", "y_"}], "]"}], " ", "\[RuleDelayed]", " ", 
               
               RowBox[{"Polyhedron", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "y"}], " ", 
                "]"}]}]}], "\n", "\t\t", "}"}]}], " ", "/.", " ", 
           "coordinateRules"}], " ", "/.", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"CanonicalizePolyhedron", "[", 
              RowBox[{"Polyhedron", "[", "x_", "]"}], "]"}], " ", 
             "\[RuleDelayed]", " ", 
             RowBox[{"Polyhedron", "[", "x", "]"}]}], ",", 
            RowBox[{
             RowBox[{"CanonicalizePolygon", "[", 
              RowBox[{"Polygon", "[", "x_", "]"}], "]"}], " ", 
             "\[RuleDelayed]", " ", 
             RowBox[{"Polygon", "[", "x", "]"}]}]}], "}"}]}]}], ";", "\n", 
        "\n", "\t\t", 
        RowBox[{"GraphicsComplex", "[", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
         "coordinates", ",", "\n", "\t\t\t", "modifiedPrimitives", ",", "\n", 
          "\t\t\t", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", " ", 
            RowBox[{"options", ",", 
             RowBox[{
             "VertexTextureCoordinates", " ", "\[Rule]", " ", 
              "coordinates"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
         "\t\t", "]"}]}]}], "\n", "\t", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->
  "In[1398]:=",ExpressionUUID->"e79c1415-df48-46af-8022-f0d3c2db1b85"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["graphics elements", "Section",ExpressionUUID->"efa38391-2c04-4250-a9ce-7f700dc2e797"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"coordinate2D", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"_", "?", "NumericQ"}], ",", " ", 
     RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coordinate3D", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"_", "?", "NumericQ"}], ",", 
     RowBox[{"_", "?", "NumericQ"}], ",", 
     RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meshAccessQ", "=", 
   RowBox[{"_Integer", "|", 
    RowBox[{"{", "__Integer", "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plotAccessQ", "=", 
   RowBox[{"_Line", "|", "_Point", "|", "_Polygon"}]}], ";"}]}], "Code",
 CellLabel->
  "In[1399]:=",ExpressionUUID->"c7b53360-ca73-4d43-a302-859f8055c0aa"],

Cell[CellGroupData[{

Cell["rigidBarShape[]", "Subsection",ExpressionUUID->"30beb824-411a-4da9-84d9-c2ad57b065a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "rigidBarShape", "]"}], " ", "=", " ", "\n", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<width\>\"", " ", "\[Rule]", " ", "0.03"}], ",", "\n", "\t", 
     
     RowBox[{"\"\<aspectRatio\>\"", " ", "\[Rule]", " ", "0.5"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0.025"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<startShift\>\"", " ", "\[Rule]", " ", "0"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<endShift\>\"", " ", "\[Rule]", " ", "0"}], ",", "\n", "\t", 
     
     RowBox[{"\"\<heightOffset\>\"", " ", "\[Rule]", " ", "0"}]}], "\n", 
    "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[1403]:=",ExpressionUUID->"00471e94-dc32-4777-a8a8-0f8d241e12c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"embedded", " ", "in", " ", "2", "D"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"rigidBarShape", "[", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", 
       RowBox[{"y", " ", ":", " ", "coordinate2D"}]}], "}"}], ",", " ", "_", 
     " ", ",", " ", 
     RowBox[{"_rigidBar", "|", "_Line"}]}], " ", "]"}], " ", ":=", " ", "\n", 
   
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"length", " ", "=", " ", 
        RowBox[{"Norm", "[", 
         RowBox[{"y", "-", "x"}], "]"}]}], ",", " ", 
       RowBox[{"width", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"TranslationTransform", "[", "x", "]"}], " ", "/@", " ", 
      RowBox[{
       RowBox[{"RotationTransform", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"y", "-", "x"}]}], "}"}], "]"}], " ", "/@", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Polygon", "[", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", "width"}], "/", "2"}]}], "}"}], ",", " ", 
            RowBox[{"{", " ", 
             RowBox[{"length", ",", " ", 
              RowBox[{
               RowBox[{"-", "width"}], "/", "2"}]}], " ", "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"length", ",", " ", 
              RowBox[{"width", "/", "2"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"width", "/", "2"}]}], "}"}]}], " ", "}"}], " ", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{"Disk", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], " ", ",", " ", 
           RowBox[{"width", "/", "2"}], ",", " ", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"Pi", "/", "2"}], ",", " ", 
             RowBox[{"3", " ", 
              RowBox[{"Pi", "/", "2"}]}]}], " ", "}"}]}], "  ", "]"}], ",", 
         "\n", "\t\t", 
         RowBox[{"Disk", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"length", ",", "0"}], "}"}], " ", ",", " ", 
           RowBox[{"width", "/", "2"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
             RowBox[{"Pi", "/", "2"}]}], "}"}]}], " ", "]"}]}], "\n", "\t", 
        "}"}]}]}]}], "\n", "]"}]}]}]], "Code",
 CellLabel->
  "In[1404]:=",ExpressionUUID->"f7ed61a7-d5b6-4982-aed2-6305ff1b8542"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"embedded", " ", "in", " ", "3", "D"}], ",", " ", 
    RowBox[{"plotted", " ", "in", " ", "3", "D"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"rigidBarShape", "[", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
        RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"3", ",", "___"}], "}"}], ",", " ", "_rigidBar"}], " ", "]"}], 
    " ", ":=", " ", 
    RowBox[{"Tube", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], " ", "]"}]}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"rigidBarShape", "[", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
        RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], " ", ",", " ", 
      "_", ",", " ", "_Line"}], " ", "]"}], " ", ":=", " ", 
    RowBox[{"Tube", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], " ", "]"}]}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"embedded", " ", "in", " ", "2", "D"}], ",", " ", 
     RowBox[{"plotted", " ", "in", " ", "3", "D"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"rigidBarShape", "[", " ", 
      RowBox[{"opt", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
        RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"2", ",", "___"}], "}"}], ",", " ", "_rigidBar"}], " ", "]"}], 
    " ", ":=", "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"length", " ", "=", " ", 
         RowBox[{"Norm", "[", " ", 
          RowBox[{"y", "-", "x"}], " ", "]"}]}], ",", " ", 
        RowBox[{"width", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], ",", " ", 
        RowBox[{"shift1", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "\"\<startShift\>\"", "]"}]}], ",", " ", 
        
        RowBox[{"shift2", "=", 
         RowBox[{"OptionValue", "[", "\"\<endShift\>\"", "]"}]}], ",", " ", 
        RowBox[{"thickness", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}], ",", " ", 
        RowBox[{"off", "=", 
         RowBox[{"OptionValue", "[", "\"\<heightOffset\>\"", "]"}]}]}], " ", 
       "}"}], ",", "\n", "\t", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"EdgeForm", "[", "None", "]"}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"TranslationTransform", "[", " ", "x", " ", "]"}], "[", 
         RowBox[{
          RowBox[{"RotationTransform", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1.", ",", "0.", ",", "0."}], "}"}], ",", " ", 
             RowBox[{"y", "-", "x"}]}], " ", "}"}], "]"}], "[", "\n", "\t\t", 
          
          RowBox[{"Cuboid", "[", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"shift1", "*", "length"}], ",", 
              RowBox[{
               RowBox[{"-", "width"}], "/", "2."}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "thickness"}], "/", "2."}], "+", "off"}]}], 
             "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.", "-", "shift2"}], ")"}], "*", "length"}], ",", 
              " ", 
              RowBox[{"width", "/", "2."}], ",", " ", 
              RowBox[{
               RowBox[{"thickness", "/", "2."}], "+", "off"}]}], "}"}]}], " ",
            "]"}], "\n", "\t", "]"}], "]"}]}], "\n", "\t", "}"}]}], "\n", 
     "]"}]}]}]}]], "Code",
 CellLabel->
  "In[1405]:=",ExpressionUUID->"29f39365-7b52-4650-bc5f-963e58ea8fee"]
}, Closed]],

Cell[CellGroupData[{

Cell["freeJointShape[]", "Subsection",ExpressionUUID->"df9a98e6-583c-4e1c-9c5e-9329e90e0833"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "freeJointShape", "]"}], " ", "=", " ", "\n", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<diameter\>\"", " ", "\[Rule]", " ", "0.025"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0.026"}]}], "\n", 
    "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[1408]:=",ExpressionUUID->"3198f40c-a3af-4947-b0c8-cbc49f1ca5e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"freeJointShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", "_", ",", " ", 
    "_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"circleRadius", " ", "=", " ", 
      RowBox[{
       RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "2"}]}], 
     "}"}], ",", " ", 
    RowBox[{"Disk", "[", 
     RowBox[{"x", ",", " ", "circleRadius"}], "]"}]}], " ", "]"}]}]], "Code",
 CellLabel->
  "In[1409]:=",ExpressionUUID->"d5b36931-6876-4fc2-b980-03428a6a3ff4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"freeJointShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "___"}], "}"}], ",", " ", "_joint"}], "]"}], ":=", 
  "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"circleRadius", " ", "=", " ", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "2"}]}], 
      " ", ",", " ", 
      RowBox[{"thickness", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}]}], "}"}], ",",
     "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
      RowBox[{"Cylinder", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", " ", "-", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"thickness", "/", "2"}]}], "}"}]}], ",", 
          RowBox[{"x", "+", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"thickness", "/", "2"}]}], "}"}]}]}], "}"}], ",", " ", 
        "circleRadius"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"freeJointShape", "[", " ", 
     RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"3", ",", "___"}], "}"}], " ", ",", " ", "_"}], " ", "]"}], " ",
    ":=", "\n", 
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sphereRadius", " ", "=", " ", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "2"}]}], 
      "}"}], ",", " ", 
     RowBox[{"Sphere", "[", " ", 
      RowBox[{"x", ",", " ", "sphereRadius"}], "]"}]}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"freeJointShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "_"}], "}"}], " ", ",", " ", "_Point"}], " ", "]"}], 
  " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sphereRadius", " ", "=", " ", 
      RowBox[{
       RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "2"}]}], 
     "}"}], ",", " ", 
    RowBox[{"Sphere", "[", " ", 
     RowBox[{"x", ",", " ", "sphereRadius"}], "]"}]}], " ", "]"}]}]}], "Code",\

 CellLabel->
  "In[1410]:=",ExpressionUUID->"cdcda5f5-532c-463b-899d-7293e5112f81"]
}, Closed]],

Cell[CellGroupData[{

Cell["pinnedJointShape[]", "Subsection",ExpressionUUID->"530308ab-a7d1-4a5c-86d3-f3a59af21d94"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "pinnedJointShape", "]"}], " ", "=", "\n", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<diameter\>\"", " ", "\[Rule]", " ", "0.05"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "0"}], ",", "\n", "\t", 
     RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0.027"}]}], "\n", 
    "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[1413]:=",ExpressionUUID->"3a0274b7-99dd-44b8-a623-57f7847ae21b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pinnedJointShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"pt", " ", ":", " ", "coordinate2D"}], ",", " ", "_", ",", "_"}], 
   "]"}], ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"circleRadius", " ", "=", " ", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "5"}]}], 
      ",", " ", 
      RowBox[{"x", " ", "=", " ", 
       RowBox[{"pt", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
      RowBox[{"y", " ", "=", " ", 
       RowBox[{"pt", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
      RowBox[{"angle", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<angle\>\"", "]"}]}], ",", " ", 
      RowBox[{"size", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}]}]}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"mat", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "angle", "]"}], ",", 
             RowBox[{"-", 
              RowBox[{"Sin", "[", "angle", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "angle", "]"}], ",", 
             RowBox[{"Cos", "[", "angle", "]"}]}], "}"}]}], "}"}]}], ",", 
        "\n", "\t\t", 
        RowBox[{"translation1", " ", "=", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", "4"}], "]"}]}], ",", " ", 
        RowBox[{"translation2", " ", "=", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", "2"}], "]"}]}]}], "\n", "\t",
        "}"}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Circle", "[", " ", 
         RowBox[{"pt", " ", ",", " ", "circleRadius"}], "]"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"Line", "[", 
         RowBox[{"translation1", " ", "+", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"0", "-", "circleRadius"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0", "-", "size"}], ",", 
               RowBox[{"0", "-", "circleRadius", "-", "size"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0", "+", "size"}], ",", 
               RowBox[{"0", "-", "circleRadius", "-", "size"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"0", "-", "circleRadius"}]}], "}"}]}], "}"}], " ", ".",
            " ", "mat"}]}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"Line", "[", 
         RowBox[{"translation2", " ", "+", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0", "-", 
                RowBox[{"2", " ", "size"}]}], ",", 
               RowBox[{"0", "-", "circleRadius", "-", "size"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0", "+", 
                RowBox[{"2", " ", "size"}]}], ",", " ", 
               RowBox[{"0", "-", "circleRadius", "-", "size"}]}], "}"}]}], 
            "}"}], " ", ".", " ", "mat"}]}], "]"}]}], "\n", "\t\t", "}"}]}], 
     "\n", "\t", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Code",
 CellLabel->
  "In[1414]:=",ExpressionUUID->"a0387762-529b-4db0-94ff-175060d25b6c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pinnedJointShape", "[", 
     RowBox[{"OptionsPattern", "[", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", "___"}], "}"}], ",", " ", 
     RowBox[{"_joint", "|", "_pinnedJoint"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"circleRadius", " ", "=", " ", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], " ", "+", " ",
          "0.02"}]}], " ", ",", " ", 
       RowBox[{"thickness", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}]}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"EdgeForm", "[", "None", "]"}], ",", "\n", "\t", 
       RowBox[{"Cylinder", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", " ", "-", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"thickness", "/", "2"}]}], "}"}]}], ",", 
           RowBox[{"x", "+", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"thickness", "/", "2"}]}], "}"}]}]}], "}"}], ",", " ", 
         RowBox[{"circleRadius", "/", "2"}]}], "]"}], ",", "\n", "\t", 
       RowBox[{"Cylinder", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", " ", "-", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"2", " ", "thickness"}]}], "}"}]}], ",", 
           RowBox[{"x", " ", "-", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"thickness", "/", "2"}]}], "}"}]}]}], " ", "}"}], ",", 
         " ", 
         RowBox[{"circleRadius", "/", "4"}]}], "]"}]}], "\n", "\t", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pinnedJointShape", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], "[", 
   RowBox[{
    RowBox[{"pt", " ", ":", " ", "coordinate3D"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"3", ",", "___"}], "}"}], ",", "  ", 
    RowBox[{"_joint", "|", "_pinnedJoint"}]}], " ", "]"}], ":=", " ", 
  RowBox[{"Sphere", "[", 
   RowBox[{"pt", ",", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "2"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pinnedJointShape", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], "[", 
   RowBox[{
    RowBox[{"pt", " ", ":", " ", "coordinate3D"}], ",", " ", "_", " ", ",", 
    " ", "_Point"}], " ", "]"}], ":=", " ", 
  RowBox[{"Sphere", "[", 
   RowBox[{"pt", ",", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\"\<diameter\>\"", "]"}], "/", "2"}]}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[1415]:=",ExpressionUUID->"7d80a007-6464-43b3-9ff2-00f8fc73da18"]
}, Closed]],

Cell[CellGroupData[{

Cell["jointShape[]", "Subsection",ExpressionUUID->"616abae0-499a-42ac-9be1-54c477240393"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "jointShape", "]"}], " ", "=", "\n", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<diameter\>\"", " ", "\[Rule]", " ", "0.01"}], ",", "\n", 
      "\t", 
      RowBox[{"\"\<angle\>\"", " ", "\[Rule]", " ", "0"}], ",", "\n", "\t", 
      RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0.026"}]}], "\n", 
     "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jointShape", "[", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", 
    RowBox[{"a", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"_", ",", " ", "Infinity", ",", " ", "___"}], " ", "}"}]}], " ",
     ",", " ", 
    RowBox[{"b", " ", ":", " ", 
     RowBox[{"_joint", "|", "_pinnedJoint"}]}]}], " ", "]"}], " ", ":=", " ", 
  
  RowBox[{
   RowBox[{"pinnedJointShape", "[", " ", 
    RowBox[{"FilterRules", "[", 
     RowBox[{
      RowBox[{"{", "opt", "}"}], ",", 
      RowBox[{"Options", "[", "pinnedJointShape", "]"}]}], "]"}], " ", "]"}], 
   "[", 
   RowBox[{"x", ",", "a", ",", "b"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"jointShape", "[", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
     RowBox[{"a", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"_", ",", " ", "Infinity", ",", " ", "___"}], " ", "}"}]}], 
     " ", ",", " ", 
     RowBox[{"b", " ", ":", " ", 
      RowBox[{"_joint", "|", "_pinnedJoint"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"pinnedJointShape", "[", " ", 
     RowBox[{"FilterRules", "[", 
      RowBox[{
       RowBox[{"{", "opt", "}"}], ",", 
       RowBox[{"Options", "[", "pinnedJointShape", "]"}]}], "]"}], " ", "]"}],
     "[", 
    RowBox[{"x", ",", "a", ",", "b"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jointShape", "[", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", 
    RowBox[{"a", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"_", ",", " ", "___"}], " ", "}"}]}], " ", ",", " ", 
    RowBox[{"b", " ", ":", " ", 
     RowBox[{"_joint", "|", "_pinnedJoint"}]}]}], " ", "]"}], " ", ":=", " ", 
  
  RowBox[{
   RowBox[{"freeJointShape", "[", " ", 
    RowBox[{"FilterRules", "[", 
     RowBox[{
      RowBox[{"{", "opt", "}"}], ",", 
      RowBox[{"Options", "[", "freeJointShape", "]"}]}], "]"}], " ", "]"}], 
   "[", 
   RowBox[{"x", ",", "a", ",", "b"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"jointShape", "[", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
     RowBox[{"a", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"_", ",", " ", "___"}], " ", "}"}]}], " ", ",", " ", 
     RowBox[{"b", " ", ":", " ", 
      RowBox[{"_joint", "|", "_pinnedJoint"}]}]}], " ", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"freeJointShape", "[", " ", 
     RowBox[{"FilterRules", "[", 
      RowBox[{
       RowBox[{"{", "opt", "}"}], ",", 
       RowBox[{"Options", "[", "freeJointShape", "]"}]}], "]"}], " ", "]"}], 
    "[", 
    RowBox[{"x", ",", "a", ",", "b"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jointShape", "[", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", "a_", ",", " ", 
    "b_Point"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"freeJointShape", "[", " ", 
    RowBox[{"FilterRules", "[", 
     RowBox[{
      RowBox[{"{", "opt", "}"}], ",", 
      RowBox[{"Options", "[", "freeJointShape", "]"}]}], "]"}], " ", "]"}], 
   "[", 
   RowBox[{"x", ",", "a", ",", "b"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jointShape", "[", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", "a_", ",", " ", 
    "b_Point"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"freeJointShape", "[", " ", 
    RowBox[{"FilterRules", "[", 
     RowBox[{
      RowBox[{"{", "opt", "}"}], ",", 
      RowBox[{"Options", "[", "freeJointShape", "]"}]}], "]"}], " ", "]"}], 
   "[", 
   RowBox[{"x", ",", "a", ",", "b"}], "]"}]}]}], "Code",
 CellLabel->
  "In[1418]:=",ExpressionUUID->"f42eb97c-a4fa-4783-8190-ace6cf11e7a8"]
}, Closed]],

Cell[CellGroupData[{

Cell["springShape[]", "Subsection",ExpressionUUID->"21ae16eb-fe33-4b07-a637-3a56dfc61929"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "springShape", "]"}], " ", "=", "\n", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<width\>\"", " ", "\[Rule]", " ", "0.005"}], ",", "\n", "\t", 
     RowBox[{"\"\<number\>\"", " ", "\[Rule]", " ", "10"}], ",", "\n", "\t", 
     RowBox[{"\"\<resolution\>\"", " ", "\[Rule]", " ", "26"}]}], "\n", 
    "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[1425]:=",ExpressionUUID->"0523084d-4d4b-4a9e-8f47-5ce789825232"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"springShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", 
      RowBox[{"y", " ", ":", " ", "coordinate2D"}]}], " ", "}"}], ",", " ", 
    "_", ",", " ", "_"}], " ", "]"}], ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", " ", "\n", 
     RowBox[{
      RowBox[{"length", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{"y", "-", "x"}], "]"}]}], ",", " ", "\n", 
      RowBox[{"width", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], ",", " ", "\n", 
      RowBox[{"period", " ", "=", " ", 
       RowBox[{"2", " ", 
        RowBox[{"OptionValue", "[", "\"\<number\>\"", "]"}]}]}], ",", " ", 
      "\n", 
      RowBox[{"nPoints", " ", "=", " ", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<resolution\>\"", "]"}], "*", 
         RowBox[{"OptionValue", "[", "\"\<number\>\"", "]"}]}], "]"}]}], ",", 
      "\n", 
      RowBox[{"rotMat", " ", "=", " ", 
       RowBox[{"RotationMatrix", "[", " ", 
        RowBox[{"N", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"y", "-", "x"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], " ", "]"}]}]}], 
     "\n", "}"}], ",", "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"delta", " ", "=", " ", 
        RowBox[{"N", "[", 
         RowBox[{"length", "/", "nPoints"}], "]"}]}], "}"}], ",", "\n", "\t", 
      
      RowBox[{"BezierCurve", "[", "\n", "\t\t", 
       RowBox[{"N", "@", 
        RowBox[{"Join", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"{", "x", "}"}], ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"x", ",", 
             RowBox[{"nPoints", "-", "3"}]}], "]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"#", " ", "+", " ", 
                  RowBox[{"width", " ", 
                   RowBox[{"Cos", "[", " ", 
                    RowBox[{"period", " ", "Pi", " ", 
                    RowBox[{"#", "/", "length"}]}], " ", "]"}]}]}], ",", "\n",
                  "\t\t\t\t", 
                 RowBox[{"width", " ", 
                  RowBox[{"Sin", "[", " ", 
                   RowBox[{"period", " ", "Pi", " ", 
                    RowBox[{"#", "/", "length"}]}], " ", "]"}]}]}], "\n", 
                "\t\t\t\t", "}"}], "&"}], " ", "/@", " ", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"2", " ", "delta"}], ",", " ", 
                RowBox[{"length", " ", "-", " ", 
                 RowBox[{"2", " ", "delta"}]}], ",", " ", "delta"}], "]"}]}], 
             ")"}], " ", ".", " ", "rotMat"}]}], ",", "\n", "\t\t\t", 
          RowBox[{"{", "y", "}"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", 
       "]"}]}], "\n", "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[1426]:=",ExpressionUUID->"deeff8cc-8a0f-4967-8ab0-c5317f85b6a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"springShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
      RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], ",", " ", "_", 
    ",", " ", "_"}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"rotMat", " ", "=", " ", 
       RowBox[{"RotationMatrix", "[", 
        RowBox[{"N", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"x", "-", "y"}]}], "}"}], "]"}], "]"}]}], ",", "\n", 
      RowBox[{"length", "=", 
       RowBox[{"Norm", "[", " ", 
        RowBox[{"y", "-", "x"}], " ", "]"}]}], ",", " ", "\n", 
      RowBox[{"numPoints", " ", "=", " ", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<resolution\>\"", "]"}], "*", 
         RowBox[{"OptionValue", "[", "\"\<number\>\"", "]"}]}], "]"}]}], ",", 
      " ", "\n", 
      RowBox[{"number", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<number\>\"", "]"}]}], ",", "\n", 
      RowBox[{"thickness", " ", "=", " ", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}], "/", "2"}]}]}], 
     "\n", "}"}], ",", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"delta", " ", "=", " ", 
        RowBox[{"N", "[", 
         RowBox[{"length", "/", "numPoints"}], "]"}]}], " ", "}"}], ",", "\n",
       "\t", 
      RowBox[{"BezierCurve", "[", "\n", "\t\t", 
       RowBox[{"N", "@", 
        RowBox[{"Join", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", "x", "}"}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"x", ",", 
             RowBox[{"numPoints", "-", "3"}]}], "]"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"{", " ", 
                RowBox[{
                 RowBox[{"thickness", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"number", " ", "2", " ", "Pi", " ", 
                    RowBox[{"#", "/", "length"}]}], "]"}]}], ",", 
                 RowBox[{"thickness", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"number", " ", "2", " ", "Pi", " ", 
                    RowBox[{"#", "/", "length"}]}], "]"}]}], ",", " ", "#"}], 
                " ", "}"}], "&"}], " ", "/@", " ", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"2", " ", "delta"}], ",", 
                RowBox[{"length", "-", 
                 RowBox[{"2", " ", "delta"}]}], ",", "delta"}], "]"}]}], "\n",
              "\t\t", ")"}], " ", ".", " ", "rotMat"}]}], ",", "\n", "\t\t", 
          RowBox[{"{", "y", "}"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", 
       "]"}]}], "\n", "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[1427]:=",ExpressionUUID->"b0a2f514-7a30-4fc7-9f56-23c511b2ec1b"]
}, Closed]],

Cell[CellGroupData[{

Cell["chromoElasticShape[]", "Subsection",ExpressionUUID->"97403945-b908-4eb2-a9b5-f7ad77935592"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "chromoElasticShape", "]"}], " ", "=", " ", "\n", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<width\>\"", " ", "\[Rule]", " ", "0.05"}], ",", "\n", "\t", 
     
     RowBox[{"\"\<aspectRatio\>\"", " ", "\[Rule]", " ", "0.5"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0.025"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<startShift\>\"", " ", "\[Rule]", " ", "0"}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<endShift\>\"", " ", "\[Rule]", " ", "0"}], ",", "\n", "\t", 
     
     RowBox[{"\"\<color\>\"", " ", "\[Rule]", " ", 
      RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}]}], ",", "\n", "\t", 
     RowBox[{"\"\<colorScale\>\"", "\[Rule]", "1"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[1428]:=",ExpressionUUID->"fa2a1883-8f1a-41a0-8fcd-0125b96b94cb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"chromoElasticShape", "[", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", 
      RowBox[{"y", " ", ":", " ", "coordinate2D"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"_", ",", " ", "equil_", ",", "___"}], "}"}], " ", ",", " ", 
    RowBox[{"_rigidBar", "|", "_spring"}]}], " ", "]"}], " ", ":=", " ", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"length", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{"y", "-", "x"}], "]"}]}], ",", " ", 
      RowBox[{"width", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], ",", " ", 
      RowBox[{"color", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<color\>\"", "]"}]}], ",", " ", 
      RowBox[{"scale", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<colorScale\>\"", "]"}]}]}], " ", 
     "}"}], ",", "\n", "\t", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"color", "[", " ", 
       RowBox[{"0.5", " ", "+", " ", 
        RowBox[{"scale", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"length", " ", "-", " ", "equil"}], ")"}], "/", 
          "equil"}]}]}], " ", "]"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"TranslationTransform", "[", "x", "]"}], " ", "/@", " ", 
       RowBox[{
        RowBox[{"RotationTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"y", "-", "x"}]}], "}"}], "]"}], " ", "/@", " ", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Disk", "[", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], " ", ",", " ", 
            RowBox[{"width", "/", "2"}], ",", " ", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Pi", "/", "2"}], ",", " ", 
              RowBox[{"3", " ", 
               RowBox[{"Pi", "/", "2"}]}]}], " ", "}"}]}], "  ", "]"}], ",", 
          "\n", "\t\t", 
          RowBox[{"Disk", "[", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"length", ",", "0"}], "}"}], " ", ",", " ", 
            RowBox[{"width", "/", "2"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
              RowBox[{"Pi", "/", "2"}]}], "}"}]}], " ", "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{"Polygon", "[", " ", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"-", "width"}], "/", "2"}]}], "}"}], ",", " ", 
             RowBox[{"{", " ", 
              RowBox[{"length", ",", " ", 
               RowBox[{
                RowBox[{"-", "width"}], "/", "2"}]}], " ", "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"length", ",", " ", 
               RowBox[{"width", "/", "2"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", 
               RowBox[{"width", "/", "2"}]}], "}"}]}], " ", "}"}], " ", 
           "]"}]}], "\n", "\t", "}"}]}]}]}], "\n", "\t", "}"}]}], "\n", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chromoElasticShape", "[", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"x", " ", ":", " ", "coordinate2D"}], ",", " ", 
       RowBox[{"y", " ", ":", " ", "coordinate2D"}]}], "}"}], ",", " ", "_", 
     " ", ",", " ", "_Line"}], " ", "]"}], " ", ":=", " ", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"length", " ", "=", " ", 
        RowBox[{"Norm", "[", 
         RowBox[{"y", "-", "x"}], "]"}]}], ",", " ", 
       RowBox[{"width", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}]}], " ", "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"TranslationTransform", "[", "x", "]"}], " ", "/@", " ", 
      RowBox[{
       RowBox[{"RotationTransform", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"y", "-", "x"}]}], "}"}], "]"}], " ", "/@", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Disk", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], " ", ",", " ", 
           RowBox[{"width", "/", "2"}], ",", " ", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"Pi", "/", "2"}], ",", " ", 
             RowBox[{"3", " ", 
              RowBox[{"Pi", "/", "2"}]}]}], " ", "}"}]}], "  ", "]"}], ",", 
         "\n", "\t\t", 
         RowBox[{"Disk", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"length", ",", "0"}], "}"}], " ", ",", " ", 
           RowBox[{"width", "/", "2"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
             RowBox[{"Pi", "/", "2"}]}], "}"}]}], " ", "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"Polygon", "[", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", "width"}], "/", "2"}]}], "}"}], ",", " ", 
            RowBox[{"{", " ", 
             RowBox[{"length", ",", " ", 
              RowBox[{
               RowBox[{"-", "width"}], "/", "2"}]}], " ", "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"length", ",", " ", 
              RowBox[{"width", "/", "2"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"width", "/", "2"}]}], "}"}]}], " ", "}"}], " ", 
          "]"}]}], "\n", "\t", "}"}]}]}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"embedded", " ", "in", " ", "3", "D"}], ",", " ", 
    RowBox[{"plotted", " ", "in", " ", "3", "D"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chromoElasticShape", "[", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
       RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"3", ",", "equil_", ",", "___"}], "}"}], ",", " ", 
     RowBox[{"_rigidBar", "|", "_spring"}]}], " ", "]"}], " ", ":=", " ", 
   "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"color", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "\"\<color\>\"", "]"}]}], ",", " ", 
       RowBox[{"length", " ", "=", " ", 
        RowBox[{"Norm", "[", " ", 
         RowBox[{"y", "-", "x"}], " ", "]"}]}], " ", ",", " ", 
       RowBox[{"scale", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "\"\<colorScale\>\"", "]"}]}]}], " ", 
      "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"color", "[", " ", 
        RowBox[{"0.5", " ", "+", " ", 
         RowBox[{"scale", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"length", " ", "-", " ", "equil"}], ")"}], "/", 
           "equil"}]}]}], "]"}], ",", " ", 
       RowBox[{"Tube", "[", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], " ", "]"}]}], 
      "}"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chromoElasticShape", "[", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
       RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], " ", ",", " ", 
     "_", ",", " ", "_Line"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Tube", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", " ", 
     RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], " ", "]"}]}], "\n",
   "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"embedded", " ", "in", " ", "2", "D"}], ",", " ", 
    RowBox[{"plotted", " ", "in", " ", "3", "D"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"chromoElasticShape", "[", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"x", " ", ":", " ", "coordinate3D"}], ",", " ", 
      RowBox[{"y", " ", ":", " ", "coordinate3D"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "equil_", ",", "___"}], "}"}], ",", " ", 
    RowBox[{"_rigidBar", "|", "_spring"}]}], " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", " ", "\n", 
     RowBox[{
      RowBox[{"length", " ", "=", " ", 
       RowBox[{"Norm", "[", " ", 
        RowBox[{"y", "-", "x"}], " ", "]"}]}], ",", " ", "\n", 
      RowBox[{"width", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<width\>\"", "]"}]}], ",", " ", "\n", 
      RowBox[{"shift1", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<startShift\>\"", "]"}]}], ",", " ", 
      "\n", 
      RowBox[{"shift2", "=", 
       RowBox[{"OptionValue", "[", "\"\<endShift\>\"", "]"}]}], ",", " ", 
      "\n", 
      RowBox[{"thickness", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}], ",", " ", 
      "\n", 
      RowBox[{"color", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<color\>\"", "]"}]}], ",", "\n", 
      RowBox[{"scale", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<colorScale\>\"", "]"}]}]}], " ", 
     "}"}], ",", "\n", "\t", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "None", "]"}], ",", "\n", "\t", 
      RowBox[{"color", "[", " ", 
       RowBox[{"0.5", "+", 
        RowBox[{"scale", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"length", " ", "-", " ", "equil"}], ")"}], "/", 
          "equil"}]}]}], " ", "]"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"TranslationTransform", "[", " ", "x", " ", "]"}], "[", 
       RowBox[{
        RowBox[{"RotationTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.", ",", "0.", ",", "0."}], "}"}], ",", " ", 
           RowBox[{"y", "-", "x"}]}], " ", "}"}], "]"}], "[", "\n", "\t\t", 
        RowBox[{"Cuboid", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"shift1", "*", "length"}], ",", 
            RowBox[{
             RowBox[{"-", "width"}], "/", "2."}], ",", 
            RowBox[{
             RowBox[{"-", "thickness"}], "/", "2."}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1.", "-", "shift2"}], ")"}], "*", "length"}], ",", " ", 
            RowBox[{"width", "/", "2."}], ",", " ", 
            RowBox[{"thickness", "/", "2."}]}], "}"}]}], " ", "]"}], "\n", 
        "\t", "]"}], "]"}]}], "\n", "\t", "}"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[1429]:=",ExpressionUUID->"9fdcc750-d6d7-4c7a-9b64-f69b9f25c428"]
}, Closed]],

Cell[CellGroupData[{

Cell["faceShape[]", "Subsection",ExpressionUUID->"a7a35632-47d0-4342-be07-daf07f198317"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "faceShape", "]"}], " ", "=", " ", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0"}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[1434]:=",ExpressionUUID->"e55e08fa-9d58-42bc-abfc-669219f4ba55"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"faceShape", "[", " ", 
     RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"x", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"coordinate2D", ".."}], "}"}]}], ",", " ", "_", ",", " ", 
     "_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Polygon", "[", " ", "x", " ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"faceShape", "[", " ", 
     RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
    RowBox[{
     RowBox[{"x", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"coordinate3D", ".."}], "}"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "|", "3"}], ",", " ", "___"}], " ", "}"}], " ", ",", " ", 
     
     RowBox[{"_face", "|", "_elasticFace"}]}], " ", "]"}], " ", ":=", " ", 
   "\n", "\t", 
   RowBox[{"If", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}], " ", "\[Equal]",
       " ", "0"}], ",", "\n", "\t\t", 
     RowBox[{"Polygon", "[", " ", "x", " ", "]"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"extrudedPolygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}], ",", " ", 
         
         RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}], "}"}], 
       "]"}], "[", "x", "]"}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"faceShape", "[", " ", 
    RowBox[{"OptionsPattern", "[", "]"}], " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{"x", " ", ":", " ", 
     RowBox[{"{", 
      RowBox[{"coordinate3D", ".."}], "}"}]}], ",", " ", "_", ",", " ", 
    "_Polygon"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Polygon", "[", " ", "x", " ", "]"}]}]}], "Code",
 CellLabel->
  "In[1435]:=",ExpressionUUID->"7befbc49-c359-459d-b8be-4c03a3cd4cbc"]
}, Closed]],

Cell[CellGroupData[{

Cell["angleMarker[], angleText[]", "Subsection",ExpressionUUID->"a4787621-3d48-4ae3-bf4b-6c35d714056b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"angleText", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", "v2_Integer", ",", "v3_Integer"}], "}"}], ",",
     " ", 
    RowBox[{"label_", " ", ":", " ", "\"\<\>\""}], ",", 
    RowBox[{"distance", " ", ":", " ", 
     RowBox[{"_", "?", "NumericQ"}], " ", ":", " ", "0"}]}], "]"}], ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"angleLocation", "=", 
       RowBox[{
        RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"v2", ",", 
          RowBox[{"1", ";;", 
           RowBox[{"displayDimension", "[", "m", "]"}]}]}], "]"}], "]"}]}], 
      ",", "\n", "\t", 
      RowBox[{"vectors", "=", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"displacementVector", "[", 
          RowBox[{
           RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"v3", ",", "v2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"v1", ",", "v2"}], "}"}]}], "}"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"1", ";;", 
            RowBox[{"displayDimension", "[", "m", "]"}]}]}], "]"}], 
         "]"}]}]}]}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"Text", "[", 
     RowBox[{"label", ",", 
      RowBox[{"angleLocation", " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"distance", "+", "0.12"}], ")"}], " ", 
        RowBox[{"Mean", "[", "vectors", "]"}]}]}]}], "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->
  "In[1438]:=",ExpressionUUID->"321114ce-c1c2-4259-8f91-54d2a33d7886"],

Cell[BoxData[
 RowBox[{
  RowBox[{"angleMarker", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", "v2_Integer", ",", "v3_Integer"}], "}"}], ",",
     " ", 
    RowBox[{"radius", " ", ":", " ", 
     RowBox[{"_", "?", "NumericQ"}], " ", ":", " ", 
     RowBox[{"1", "/", "10"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "project", " ", "the", " ", "vectors", " ", "making", " ", "this", 
         " ", "angle", " ", "to", " ", "the", " ", "xy"}], "-", "plane"}], 
       "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"angleLocation", "=", 
        RowBox[{
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"v2", ",", 
           RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"vectors", "=", 
        RowBox[{
         RowBox[{"displacementVector", "[", 
          RowBox[{
           RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"v2", ",", "v1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"v2", ",", "v3"}], "}"}]}], "}"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], "\n", "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Circle", "[", 
      RowBox[{"angleLocation", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Abs", "[", "radius", "]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"vectors", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", ".", " ", 
            RowBox[{"vectors", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"vectors", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", ".", " ", 
            RowBox[{"vectors", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}]}], ",", "\n", 
       "\t\t", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Pi", "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "<", 
             RowBox[{"Pi", "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", "Pi"}]}], "}"}], "+", "#"}], ",", "#"}], "]"}], 
          "&"}], ")"}], "[", 
        RowBox[{"ArcTan", "@@@", "vectors"}], "]"}]}], "\n", "\t", "]"}]}], 
    "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"displayDimension", "[", "m", "]"}], "\[Equal]", "2"}], " ", "&&",
     " ", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "]"}], "\[LessEqual]", 
     RowBox[{"MeshCellCount", "[", 
      RowBox[{"m", ",", "0"}], "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "]"}], ">", 
     "0"}]}]}]}]], "Code",
 CellLabel->
  "In[1439]:=",ExpressionUUID->"521bc9c5-de42-41dd-9770-013f3407e73d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Code", " ", "borrowed", " ", "from", " ", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
        "questions"}], "/", "10957"}], "/", "an"}], "-", "efficient", "-", 
     "circular", "-", "arc", "-", "primitive", "-", "for", "-", 
     "graphics3d"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "splineCircle2", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"splineCircle", "[", 
     RowBox[{"m_List", ",", " ", "r_", ",", " ", 
      RowBox[{"angles_List", ":", " ", 
       RowBox[{"{", 
        RowBox[{"0.", ",", " ", 
         RowBox[{"2.", " ", "\[Pi]"}]}], "}"}]}]}], "]"}], " ", ":=", " ", 
    "\n", " ", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "seg", ",", " ", "\[Phi]", ",", " ", "start", ",", " ", "end", ",", 
         " ", "pts", ",", " ", "w", ",", " ", "k", ",", " ", "pihalf"}], 
        "}"}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{"pihalf", " ", "=", " ", 
         RowBox[{"0.5", " ", "\[Pi]"}]}], ";", "\n", "   ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"start", ",", " ", "end"}], "}"}], " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"N", "[", "angles", "]"}], ",", " ", 
           RowBox[{"2.", " ", "\[Pi]"}]}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"end", " ", "<=", " ", "start"}], ",", " ", 
          RowBox[{"end", " ", "+=", " ", 
           RowBox[{"2.", " ", "\[Pi]"}]}]}], "]"}], ";", "\n", "   ", 
        RowBox[{"seg", " ", "=", " ", 
         RowBox[{"Quotient", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"end", " ", "-", " ", "start"}], "]"}], ",", " ", 
           "pihalf"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"\[Phi]", " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"end", " ", "-", " ", "start"}], "]"}], ",", " ", 
           "pihalf"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"seg", " ", "==", " ", "4"}], ",", " ", 
          RowBox[{
           RowBox[{"seg", " ", "=", " ", "3"}], ";", " ", 
           RowBox[{"\[Phi]", " ", "=", " ", "pihalf"}]}]}], "]"}], ";", "\n", 
        "   ", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", "\n", "     ", 
           RowBox[{
            RowBox[{"cseg", " ", "=", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"pihalf", " ", "seg"}], "]"}]}], ",", " ", 
            RowBox[{"sseg", " ", "=", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"pihalf", " ", "seg"}], "]"}]}], ",", "\n", "     ", 
            RowBox[{"c\[Phi]", " ", "=", " ", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", " ", 
            RowBox[{"s\[Phi]", " ", "=", " ", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", " ", "\n", "     ", 
            RowBox[{"t\[Phi]", " ", "=", " ", 
             RowBox[{"Tan", "[", 
              RowBox[{"0.5", " ", "\[Phi]"}], "]"}]}], ",", "\n", "     ", 
            RowBox[{"rcs", " ", "=", " ", 
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", "start", "]"}]}]}], ",", " ", 
            RowBox[{"rss", " ", "=", " ", 
             RowBox[{"r", " ", 
              RowBox[{"Sin", "[", "start", "]"}]}]}]}], "\n", "     ", "}"}], 
          ",", "\n", "    ", 
          RowBox[{"pts", " ", "=", " ", 
           RowBox[{
            RowBox[{"Join", "[", "\n", "       ", 
             RowBox[{
              RowBox[{"Take", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1.", ",", " ", "0."}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"1.", ",", " ", "1."}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"0.", ",", " ", "1."}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1."}], ",", " ", "1."}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1."}], ",", " ", "0."}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1."}], ",", " ", 
                    RowBox[{"-", "1."}]}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"0.", ",", " ", 
                    RowBox[{"-", "1."}]}], "}"}]}], "}"}], ",", " ", 
                RowBox[{
                 RowBox[{"2", " ", "seg"}], " ", "+", " ", "1"}]}], "]"}], 
              ",", "\n", "       ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"cseg", " ", "-", " ", 
                   RowBox[{"sseg", " ", "t\[Phi]"}]}], ",", " ", 
                  RowBox[{"sseg", " ", "+", " ", 
                   RowBox[{"cseg", " ", "t\[Phi]"}]}]}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"cseg", " ", "c\[Phi]"}], " ", "-", " ", 
                   RowBox[{"sseg", " ", "s\[Phi]"}]}], ",", " ", 
                  RowBox[{
                   RowBox[{"c\[Phi]", " ", "sseg"}], " ", "+", " ", 
                   RowBox[{"cseg", " ", "s\[Phi]"}]}]}], "}"}]}], "}"}]}], 
             "\n", "       ", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"rcs", ",", " ", "rss"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "rss"}], ",", " ", "rcs"}], "}"}]}], "}"}]}]}]}],
          "\n", "    ", "]"}], ";", "\n", "   ", 
        RowBox[{"pts", " ", "=", " ", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"m", ",", " ", 
            RowBox[{"Length", "[", "pts", "]"}]}], "]"}], " ", "+", " ", "\n",
           "     ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "m", "]"}], " ", "==", " ", "2"}], ",", 
            " ", "\n", "      ", "pts", ",", " ", "\n", "      ", 
            RowBox[{"Join", "[", 
             RowBox[{"pts", ",", " ", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"{", "0.", "}"}], ",", " ", 
                RowBox[{"Length", "[", "pts", "]"}]}], "]"}], ",", " ", "2"}],
              "]"}]}], "\n", "     ", "]"}]}]}], ";", "\n", "   ", 
        RowBox[{"w", " ", "=", " ", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"c", " ", "=", " ", 
             RowBox[{"1.", "/", 
              RowBox[{"Sqrt", "[", "2.", "]"}]}]}], "}"}], ",", " ", "\n", 
           "     ", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "1.", ",", " ", "c", ",", " ", "1.", ",", " ", "c", ",", " ", 
                 "1.", ",", " ", "c", ",", " ", "1."}], "}"}], ",", " ", 
               RowBox[{
                RowBox[{"2", " ", "seg"}], " ", "+", " ", "1"}]}], "]"}], ",",
              " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"0.5", " ", "\[Phi]"}], "]"}], ",", " ", "1."}], 
              "}"}]}], "]"}]}], "\n", "     ", "]"}]}], ";", "\n", "   ", 
        RowBox[{"k", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Riffle", "[", 
              RowBox[{"#", ",", " ", "#"}], "]"}], " ", "&"}], "@", 
            RowBox[{"Range", "[", 
             RowBox[{"seg", " ", "+", " ", "1"}], "]"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"seg", " ", "+", " ", "1"}], "}"}]}], "]"}]}], ";", "\n", 
        "   ", 
        RowBox[{"BSplineCurve", "[", 
         RowBox[{"pts", ",", " ", 
          RowBox[{"SplineDegree", " ", "->", " ", "2"}], ",", " ", 
          RowBox[{"SplineKnots", " ", "->", " ", "k"}], ",", " ", 
          RowBox[{"SplineWeights", " ", "->", " ", "w"}]}], "]"}]}]}], "\n", 
      "   ", "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "m", "]"}], " ", "==", " ", "2"}], " ", "||", 
      " ", 
      RowBox[{
       RowBox[{"Length", "[", "m", "]"}], " ", "==", " ", "3"}]}]}]}], "\n", 
   " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "circleFromPoints", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"arc", " ", "->", " ", "False"}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"circleFromPoints", "[", 
     RowBox[{
      RowBox[{"m", " ", ":", " ", 
       RowBox[{"{", 
        RowBox[{"q1_", ",", " ", "q2_", ",", " ", "q3_"}], "}"}]}], ",", " ", 
      
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", "\n", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "c", ",", " ", "r", ",", " ", "\[Phi]1", ",", " ", "\[Phi]2", ",", 
         " ", "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "h", ",", " ", 
         "\n", "        ", 
         RowBox[{"rot", " ", "=", " ", 
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
                RowBox[{"Cross", "[", 
                 RowBox[{
                  RowBox[{"#1", " ", "-", " ", "#2"}], ",", " ", 
                  RowBox[{"#3", " ", "-", " ", "#2"}]}], "]"}]}], "}"}], 
              "]"}], ",", 
             RowBox[{"RotationMatrix", "::", "spln"}]}], "]"}], " ", 
           "&"}]}]}], "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], " ", "=", 
         " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q1", ",", " ", "q2", ",", " ", "q3"}], "}"}], ".", 
          RowBox[{"rot", "[", 
           RowBox[{"q1", ",", " ", "q2", ",", " ", "q3"}], "]"}]}]}], ";", 
        "\n", "  ", 
        RowBox[{"h", " ", "=", " ", 
         RowBox[{"p1", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], " ", "=", 
         " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{";;", " ", "2"}]}], "]"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c", ",", " ", "r"}], "}"}], " ", "=", " ", 
         RowBox[{"List", " ", "@@", " ", 
          RowBox[{"Circumsphere", "[", 
           RowBox[{"{", 
            RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], "]"}]}]}], 
        ";", "\n", "  ", 
        RowBox[{"\[Phi]1", " ", "=", " ", 
         RowBox[{"ArcTan", " ", "@@", " ", 
          RowBox[{"(", 
           RowBox[{"p3", " ", "-", " ", "c"}], ")"}]}]}], ";", "\n", "  ", 
        RowBox[{"\[Phi]2", " ", "=", " ", 
         RowBox[{"ArcTan", " ", "@@", " ", 
          RowBox[{"(", 
           RowBox[{"p1", " ", "-", " ", "c"}], ")"}]}]}], ";", "\n", "  ", 
        RowBox[{"c", " ", "=", " ", 
         RowBox[{"Append", "[", 
          RowBox[{"c", ",", " ", "h"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "arc", "]"}], " ", "//", " ", 
           "TrueQ"}], ",", "\n", "    ", 
          RowBox[{"MapAt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Function", "[", 
               RowBox[{
                RowBox[{"{", "p", "}"}], ",", " ", 
                RowBox[{
                 RowBox[{"rot", "[", 
                  RowBox[{"q1", ",", " ", "q2", ",", " ", "q3"}], "]"}], ".", 
                 "p"}]}], "]"}], " ", "/@", " ", "#"}], " ", "&"}], ",", " ", 
            
            RowBox[{"splineCircle", "[", 
             RowBox[{"c", ",", " ", "r", ",", " ", 
              RowBox[{"{", 
               RowBox[{"\[Phi]1", ",", " ", "\[Phi]2"}], "}"}]}], "]"}], ",", 
            " ", 
            RowBox[{"{", "1", "}"}]}], "]"}], ",", "\n", "    ", 
          RowBox[{"MapAt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Function", "[", 
               RowBox[{
                RowBox[{"{", "p", "}"}], ",", " ", 
                RowBox[{
                 RowBox[{"rot", "[", 
                  RowBox[{"q1", ",", " ", "q2", ",", " ", "q3"}], "]"}], ".", 
                 "p"}]}], "]"}], " ", "/@", " ", "#"}], " ", "&"}], ",", " ", 
            
            RowBox[{"splineCircle", "[", 
             RowBox[{"c", ",", " ", "r"}], "]"}], ",", " ", 
            RowBox[{"{", "1", "}"}]}], "]"}]}], "\n", "  ", "]"}]}]}], "\n", 
      "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{"MatrixQ", "[", 
       RowBox[{"m", ",", " ", "NumericQ"}], "]"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"Dimensions", "[", "m", "]"}], " ", "==", " ", 
       RowBox[{"{", 
        RowBox[{"3", ",", " ", "3"}], "}"}]}]}]}]}]}]}]], "Code",
 CellLabel->
  "In[1440]:=",ExpressionUUID->"8a094d13-8b63-400b-b159-c54a5fd2ee60"],

Cell[BoxData[
 RowBox[{
  RowBox[{"angleMarker", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", "v2_Integer", ",", "v3_Integer"}], "}"}], ",",
     " ", 
    RowBox[{"radius", " ", ":", " ", 
     RowBox[{"_", "?", "NumericQ"}], " ", ":", " ", 
     RowBox[{"1", "/", "10"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"With", "[", "\n", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"angleLocation", "=", 
        RowBox[{
         RowBox[{"m", "[", "\"\<positions\>\"", "]"}], "[", 
         RowBox[{"[", "v2", "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "project", " ", "the", " ", "vectors", " ", "making", " ", "this", 
          " ", "angle", " ", "to", " ", "the", " ", "xy"}], "-", "plane"}], 
        "*)"}], "\n", "\t", 
       RowBox[{"vectors", "=", 
        RowBox[{"displacementVector", "[", 
         RowBox[{
          RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"v2", ",", "v1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"v2", ",", "v3"}], "}"}]}], "}"}]}], "]"}]}]}], "\n", 
      "}"}], ",", "\n", "\t", 
     RowBox[{"circleFromPoints", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"angleLocation", "+", 
          RowBox[{"radius", " ", 
           RowBox[{"vectors", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
         RowBox[{"angleLocation", "+", 
          RowBox[{"radius", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"vectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "+", 
              RowBox[{"vectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
            RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], ",", 
         RowBox[{"angleLocation", "+", 
          RowBox[{"radius", " ", 
           RowBox[{"vectors", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
       RowBox[{"arc", " ", "\[Rule]", "True"}]}], "]"}]}], "\n", "]"}], " ", "/;",
    " ", 
   RowBox[{
    RowBox[{
     RowBox[{"displayDimension", "[", "m", "]"}], "\[Equal]", "3"}], " ", "&&",
     " ", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "]"}], "\[LessEqual]", 
     RowBox[{"MeshCellCount", "[", 
      RowBox[{"m", ",", "0"}], "]"}]}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "]"}], ">", 
     "0"}]}]}]}]], "Code",
 CellLabel->
  "In[1444]:=",ExpressionUUID->"bd7f0e33-5f80-428a-989f-41e32909c8eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"angleMarker", "::", "bounds"}], "=", 
   "\"\<Vertices are out of bounds.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"angleMarker", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", "v2_Integer", ",", "v3_Integer"}], "}"}]}], 
   "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"angleMarker", "::", "bounds"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"angleMarker", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", "v2_Integer", ",", "v3_Integer"}], "}"}], ",",
     "_"}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"angleMarker", "::", "bounds"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"angleMarker", "[", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_Integer", ",", "v2_Integer", ",", "v3_Integer"}], "}"}], ",",
     "_", ",", 
    RowBox[{"_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"\"\<nothing\>\"", "/;", 
   RowBox[{"Message", "[", 
    RowBox[{"angleMarker", "::", "bounds"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[1445]:=",ExpressionUUID->"6430d36e-973c-44ca-a619-b4932b524083"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["plotMechanism[]", "Section",ExpressionUUID->"39bcb497-250e-4ccc-b5cc-cc185dc1e82d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "plotMechanism", "]"}], " ", "=", " ", 
   RowBox[{"Join", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Options", "[", "Graphics3D", "]"}], ",", "\n", "\t", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"\"\<theme\>\"", " ", "\[Rule]", " ", "Automatic"}], ",", "\n",
        "\t\t", 
       RowBox[{"\"\<displacement\>\"", " ", "\[Rule]", " ", "None"}], ",", 
       "\n", "\n", "\t\t", 
       RowBox[{"\"\<stress\>\"", " ", "\[Rule]", " ", "None"}], ",", "\n", 
       "\t\t", 
       RowBox[{"\"\<stressStyle\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"RGBColor", "[", 
              RowBox[{"{", 
               RowBox[{"#2", ",", "0", ",", "0"}], "}"}], "]"}], " ", ",", 
             " ", 
             RowBox[{"AbsoluteThickness", "[", 
              RowBox[{"1", "+", 
               RowBox[{"3", "*", "#2"}]}], "]"}], " ", ",", " ", 
             RowBox[{"Line", "[", "#", "]"}]}], "}"}], "&"}], ",", "\n", 
          "\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"RGBColor", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", 
                RowBox[{"-", "#2"}]}], "}"}], "]"}], " ", ",", " ", 
             RowBox[{"AbsoluteThickness", "[", 
              RowBox[{"1", "+", 
               RowBox[{"3", "*", 
                RowBox[{"(", 
                 RowBox[{"-", "#2"}], ")"}]}]}], "]"}], " ", ",", 
             RowBox[{"Line", "[", "#", "]"}]}], "}"}], "&"}]}], "\n", "\t\t", 
         "}"}]}], ",", "\n", "\n", "\t\t", 
       RowBox[{"\"\<displacementStyle\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", "Black", "}"}]}], ",", "\n", "\t\t", 
       RowBox[{"\"\<displacementScale\>\"", " ", "\[Rule]", " ", "0.25"}], 
       ",", "\n", "\n", "\t\t", 
       RowBox[{"\"\<displayDimension\>\"", " ", "\[Rule]", " ", "Automatic"}],
        ",", "\n", "\t\t", 
       RowBox[{"\"\<preamble\>\"", "\[Rule]", 
        RowBox[{"{", "}"}]}]}], "\n", "\t", "}"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[1449]:=",ExpressionUUID->"47c05290-a89e-4761-b409-233504c8abb9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "[", " ", 
    RowBox[{
     RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
     RowBox[{"opt", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", "\n", 
   "\t", 
   RowBox[{"plotMechanism", "[", " ", 
    RowBox[{"m", ",", "\n", "\t\t", 
     RowBox[{"positionDimension", "[", " ", 
      RowBox[{"m", " ", ",", " ", "Automatic", " ", ",", " ", 
       RowBox[{"OptionValue", "[", "\"\<displayDimension\>\"", "]"}]}], " ", 
      "]"}], ",", " ", "\n", "\t\t", "opt"}], "\n", "\t", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"plotMechanism", "[", " ", 
   RowBox[{
    RowBox[{"m_", "?", "mechanismQ"}], ",", " ", 
    RowBox[{"positions", " ", ":", " ", 
     RowBox[{
      RowBox[{"_", "?", "numericCoordinatesQ"}], "|", 
      RowBox[{"{", 
       RowBox[{"__", "?", "numericCoordinatesQ"}], "}"}]}]}], ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
  "\n", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", " ", "\n", 
     RowBox[{"(*", 
      RowBox[{
      "organize", " ", "all", " ", "the", " ", "coordinates", " ", "into", 
       " ", "proper", " ", "form"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"coordinates", " ", "=", " ", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"ArrayDepth", "[", "positions", "]"}], " ", "\[Equal]", " ",
           "2"}], ",", "\n", "\t", 
         RowBox[{"positionDimension", "[", " ", 
          RowBox[{"m", " ", ",", " ", 
           RowBox[{"{", "positions", "}"}], " ", ",", " ", 
           RowBox[{"OptionValue", "[", "\"\<displayDimension\>\"", "]"}]}], 
          " ", "]"}], ",", "\n", "\t", 
         RowBox[{"positionDimension", "[", " ", 
          RowBox[{"m", " ", ",", " ", "positions", " ", ",", " ", 
           RowBox[{"OptionValue", "[", "\"\<displayDimension\>\"", "]"}]}], 
          " ", "]"}]}], "\n", "]"}]}], " ", ",", " ", "\n", "graphics", ",", 
      " ", "dimension", ",", " ", "directive", ",", " ", "options", ",", " ", 
      "stresses", ",", " ", "displacements"}], "\n", "}"}], ",", " ", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"graphics", " ", "=", " ", 
      RowBox[{"createMechanismGraphics", "[", 
       RowBox[{"m", ",", " ", "coordinates", ",", " ", 
        RowBox[{"Length", "[", " ", 
         RowBox[{"coordinates", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", "]"}], ",", " ", 
        RowBox[{"{", "opt", "}"}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"directive", " ", "=", " ", 
      RowBox[{"graphicsDirective", "[", " ", 
       RowBox[{"m", ",", " ", "graphics", ",", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"coordinates", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], " ", "]"}]}], ";", 
     "\n", "\t", 
     RowBox[{"options", " ", "=", " ", 
      RowBox[{"graphicsOptions", "[", " ", 
       RowBox[{
        RowBox[{"{", "opt", "}"}], ",", " ", "directive", ",", " ", 
        RowBox[{"boundingRegions", "[", 
         RowBox[{"m", ",", " ", "coordinates"}], "]"}]}], " ", "]"}]}], ";", 
     "\n", "\n", "\t", 
     RowBox[{"stresses", " ", "=", " ", 
      RowBox[{"createStressGraphics", "[", " ", 
       RowBox[{
        RowBox[{"listEdges", "[", "m", "]"}], ",", " ", "coordinates", ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"OptionValue", "[", "\"\<stress\>\"", "]"}], "}"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<stressStyle\>\"", "]"}]}], " ", 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"displacements", " ", "=", " ", 
      RowBox[{"createDisplacementGraphics", "[", " ", 
       RowBox[{"coordinates", ",", " ", 
        RowBox[{"{", 
         RowBox[{"OptionValue", "[", "\"\<displacement\>\"", "]"}], "}"}], 
        ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<displacementScale\>\"", "]"}], ",", 
        " ", 
        RowBox[{"OptionValue", "[", "\"\<displacementStyle\>\"", "]"}]}], " ",
        "]"}]}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"ArrayDepth", "[", "positions", "]"}], "\[Equal]", "2"}], 
        ",", " ", "First", ",", " ", "Identity"}], "]"}], " ", "@", " ", 
      RowBox[{"MapThread", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"directive", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<preamble\>\"", "]"}], ",", "#1",
              ",", " ", "#2", ",", " ", "#3"}], "}"}], ",", " ", "options"}], 
          " ", "]"}], "&"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "graphics", ",", " ", "stresses", ",", " ", "displacements"}], 
         "}"}]}], " ", "]"}]}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[1450]:=",ExpressionUUID->"d0c0ab08-9f98-424a-87df-306817a5ca19"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"createMechanismGraphics", "[", " ", 
   RowBox[{
   "m_", ",", " ", "$Failed", ",", " ", "dimension_", ",", " ", 
    "inputOptions_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", " ", 
     RowBox[{"plotMechanism", "::", "pos"}], " ", "]"}], ";", " ", 
    RowBox[{"{", "}"}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"createMechanismGraphics", "[", " ", 
   RowBox[{
   "m_", ",", " ", "positions_", ",", " ", "dimension_", ",", " ", 
    "inputOptions_"}], " ", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"mechanismPrimitives", "[", " ", 
     RowBox[{"m", ",", " ", "#", ",", " ", "dimension", ",", " ", 
      RowBox[{"FilterRules", "[", 
       RowBox[{"inputOptions", ",", " ", 
        RowBox[{"Options", "[", "mechanismPrimitives", "]"}]}], "]"}]}], " ", 
     "]"}], " ", "&"}], " ", "/@", " ", "positions"}]}]}], "Code",
 CellLabel->
  "In[1452]:=",ExpressionUUID->"e7b9a2a5-9af3-4abb-88e6-2d4aac3f3e98"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "numstress"}], "=", 
   "\"\<Stress should be a numeric list of stresses.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "stressmatch"}], "=", 
   "\"\<Stresses should agree with the number of edges.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "stressstyle"}], " ", "=", " ", 
   "\"\<Stress style should be of the form { positive stress style, negative \
stress style }.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotMechanism", "::", "numinst"}], " ", "=", " ", 
    "\"\<There must be as many stresses as positions provided.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "numdisp"}], "=", 
   "\"\<Displacements must be a vector of numerical displacements.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "numdispl"}], "=", 
   "\"\<Each vertex needs corresponding displacement in the correct \
dimension.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "displscale"}], "=", 
   "\"\<The displacement scale must be a positive real number.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMechanism", "::", "numinstdisp"}], " ", "=", " ", 
   "\"\<There must be as many displacements as positions provided.\>\""}], 
  ";"}]}], "Code",
 CellLabel->
  "In[1454]:=",ExpressionUUID->"c147ed39-8949-4292-be7f-d71a91d02de6"],

Cell[CellGroupData[{

Cell["plotSizes[]", "Subsubsection",ExpressionUUID->"41036322-b489-45d6-a4a8-c4b2fc22031e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clip", " ", "the", " ", "bounding", " ", "box", " ", "to", " ", "a", " ", 
    "minimum", " ", "size"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"$minsize", "=", "0.25"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"minSize", "[", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"x", "-", "$minsize"}], ",", " ", 
       RowBox[{"x", "+", "$minsize"}]}], " ", "}"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"y", "-", "x"}], "]"}], " ", "<", " ", "$minsize"}]}]}], "\n", 
   
   RowBox[{
    RowBox[{"minSize", "[", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "-", "$minsize"}], ",", " ", 
      RowBox[{"y", "+", "$minsize"}]}], "}"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "figure", " ", "out", " ", "plot", " ", "range", " ", "and", " ", 
     "ratios"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"plotSizes", "[", "positions_", "]"}], " ", ":=", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"boundingRegion", ",", " ", "boundingBoxRatios"}], "\n", "}"}],
       ",", "\n", "\t", 
      RowBox[{
       RowBox[{"boundingRegion", " ", "=", " ", "\n", "\t\t", 
        RowBox[{"minSize", " ", "/@", " ", 
         RowBox[{"(", 
          RowBox[{"Transpose", " ", "@", "  ", 
           RowBox[{"CoordinateBoundingBox", "[", "positions", "]"}]}], 
          ")"}]}]}], ";", "\n", "\t", 
       RowBox[{"boundingBoxRatios", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], " ", "&"}], ")"}], " ", "/@", 
         " ", "boundingRegion"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"boundingRegion", ",", " ", "boundingBoxRatios"}], "}"}]}]}], 
     "\n", "]"}]}]}]}]], "Code",
 CellLabel->
  "In[1462]:=",ExpressionUUID->"1e65c65e-c390-4436-963f-5839fb0f2d6f"]
}, Closed]],

Cell[CellGroupData[{

Cell["boundingRegions[], graphicsDirective[], graphicsOptions[]", \
"Subsubsection",ExpressionUUID->"3158cbe2-8da5-435f-9855-4818c97962d4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"boundingRegions", "[", " ", 
   RowBox[{"m_", ",", " ", "$Failed"}], "]"}], " ", ":=", " ", 
  "$Failed"}], "\n", 
 RowBox[{
  RowBox[{"boundingRegions", "[", " ", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"graphics", " ", ":", " ", 
     RowBox[{"{", "__GraphicsComplex", "}"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"plotSizes", "[", " ", 
   RowBox[{"Flatten", "[", " ", 
    RowBox[{
     RowBox[{"graphics", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", "1"}], " ", "]"}], 
   " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"boundingRegions", "[", " ", 
    RowBox[{"m_", ",", " ", "pos_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"plotSizes", "[", "pos", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"graphicsDirective", "[", " ", 
   RowBox[{"m_", ",", " ", "$Failed", ",", " ", "dim_"}], " ", "]"}], " ", ":=",
   " ", "Identity"}], "\n", 
 RowBox[{
  RowBox[{"graphicsDirective", "[", " ", 
   RowBox[{"m_", ",", " ", 
    RowBox[{"graphics", " ", ":", " ", 
     RowBox[{"{", "__GraphicsComplex", "}"}]}], ",", " ", "expectedDim_"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dims", " ", "=", " ", 
      RowBox[{"Length", " ", "/@", " ", 
       RowBox[{"graphics", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{"Which", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Not", "[", " ", 
       RowBox[{"Equal", " ", "@@", " ", "dims"}], " ", "]"}], ",", " ", 
      "Identity", ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"dims", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "2"}], ",", " ", 
      "Graphics", ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"dims", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "3"}], ",", " ", 
      "Graphics3D", ",", "\n", "\t\t", "True", ",", " ", "Identity"}], "\n", 
     "\t", "]"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"graphicsDirective", "[", 
    RowBox[{"m_", ",", " ", "graphics_", ",", " ", "expectedDim_"}], " ", 
    "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"Switch", "[", " ", 
    RowBox[{
    "expectedDim", ",", "\n", "\t\t", "2", ",", " ", "Graphics", ",", " ", 
     "\n", "\t\t", "3", ",", " ", "Graphics3D", ",", "\n", "\t\t", "_", ",", 
     " ", "Identity"}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"graphicsOptions", "[", " ", 
   RowBox[{"options_", ",", " ", "directive_", ",", " ", "$Failed"}], " ", 
   "]"}], " ", ":=", " ", 
  RowBox[{"{", "}"}]}], "\n", 
 RowBox[{
  RowBox[{"graphicsOptions", "[", " ", 
   RowBox[{"options_", ",", " ", "directive_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"boundingRegion_", ",", " ", "boundingRatios_"}], "}"}]}], " ", 
   "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Join", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"FilterRules", "[", 
     RowBox[{
      RowBox[{"{", "options", "}"}], ",", 
      RowBox[{"Options", "[", "Graphics3D", "]"}]}], "]"}], ",", " ", "\n", 
    "\t\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Boxed", " ", "\[Rule]", " ", "False"}], ",", " ", 
      RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
      RowBox[{"PlotRange", " ", "\[Rule]", " ", "boundingRegion"}], ",", " ", 
      
      RowBox[{"BoxRatios", " ", "\[Rule]", " ", "boundingRatios"}]}], "}"}]}],
    "\n", "\t", "]"}]}]}], "Code",
 CellLabel->
  "In[1466]:=",ExpressionUUID->"274ece50-9947-4d40-9f3e-6f0f5cb59add"]
}, Closed]],

Cell[CellGroupData[{

Cell["createStressGraphics[]", "Subsubsection",ExpressionUUID->"6db47837-09f4-490d-be89-995898f5d632"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createStressGraphics", "[", " ", 
   RowBox[{"edges_", ",", " ", "coordinates_", ",", " ", 
    RowBox[{"None", "|", 
     RowBox[{"{", "None", "}"}]}], ",", " ", "_"}], " ", "]"}], ":=", 
  RowBox[{"ConstantArray", "[", " ", 
   RowBox[{
    RowBox[{"{", "}"}], ",", " ", 
    RowBox[{"Length", "[", "coordinates", "]"}]}], " ", "]"}]}]], "Code",
 CellLabel->
  "In[1474]:=",ExpressionUUID->"d0e19af4-16c0-4707-b689-be8f8be442e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"createStressGraphics", "[", " ", 
    RowBox[{"edges_", " ", ",", " ", "coordinates_", " ", ",", " ", 
     RowBox[{"stress", " ", ":", " ", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], ",", " ", 
     RowBox[{"style", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"_", ",", "_"}], "}"}]}]}], "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"stressScale", " ", "=", " ", 
        RowBox[{"Max", "[", " ", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"stress", ",", "0"}], "]"}], ",", " ", 
          RowBox[{"Abs", " ", "@", " ", 
           RowBox[{"Min", "[", 
            RowBox[{"stress", ",", "0"}], "]"}]}]}], " ", "]"}]}], "\n", 
       "}"}], ",", "\n", "\t", 
      RowBox[{"MapThread", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"plotStresses", "[", " ", 
          RowBox[{
          "stressScale", ",", " ", "edges", ",", " ", "#1", ",", " ", "#2", 
           ",", " ", "style"}], " ", "]"}], "&"}], ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{"coordinates", ",", " ", "stress"}], " ", "}"}]}], " ", 
       "]"}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "stress", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Length", "[", " ", "coordinates", " ", "]"}], ",", " ", 
       RowBox[{"Length", "[", "edges", "]"}]}], " ", "}"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"createStressGraphics", "[", " ", 
   RowBox[{
   "edges_", ",", " ", "coordinates_", ",", " ", "stress_", ",", " ", 
    "style_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"Not", " ", "@", " ", 
       RowBox[{"MatrixQ", "[", " ", 
        RowBox[{"stress", ",", " ", "NumericQ"}], " ", "]"}]}], ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "numstress"}], "]"}]}], "]"}], ";", 
    "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "stress", "]"}], " ", "\[NotEqual]", " ", 
       RowBox[{"Length", "[", " ", "coordinates", " ", "]"}]}], ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "numinst"}], "]"}]}], "]"}], ";", "\n", 
    "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"stress", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "\[NotEqual]", " ", 
       RowBox[{"Length", "[", "edges", "]"}]}], ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "stressmatch"}], "]"}]}], " ", "]"}], 
    ";", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "style", "]"}], " ", "\[NotEqual]", " ", "2"}], 
      ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "stressstyle"}], "]"}]}], " ", "]"}], 
    ";", "\n", "\n", "\t", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"Length", "[", "coordinates", "]"}]}], "]"}]}], "\n", 
   ")"}]}]}], "Code",
 CellLabel->
  "In[1475]:=",ExpressionUUID->"6e3dd12b-7fe5-467b-932c-23f1811752d3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotStresses", "[", " ", 
    RowBox[{
    "stressScale_", ",", " ", "edges_", ",", " ", "coordinates_", ",", " ", 
     "stress_", ",", " ", "stressFunc_Function"}], " ", "]"}], " ", ":=", 
   "\n", "\t", 
   RowBox[{"plotStresses", "[", " ", 
    RowBox[{
    "stressScale", ",", " ", "edges", ",", " ", "coordinates", ",", " ", 
     "stress", ",", " ", 
     RowBox[{"{", 
      RowBox[{"stressFunc", ",", " ", "stressFunc"}], "}"}]}], " ", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"plotStresses", "[", " ", 
   RowBox[{
   "stressScale_", ",", " ", "edges_", ",", " ", "coordinates_", ",", " ", 
    "stress_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"posStress_Function", ",", " ", "negStress_Function"}], "}"}]}], 
   " ", "]"}], " ", ":=", "\n", 
  RowBox[{"With", "[", " ", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"coordinatePairs", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"coordinates", "[", 
          RowBox[{"[", " ", "#", " ", "]"}], "]"}], "&"}], " ", "/@", " ", 
        "edges"}]}], ",", "\n", "\t", 
      RowBox[{"normalizedStresses", " ", "=", " ", 
       RowBox[{"stress", "/", "stressScale"}]}]}], "\n", "}"}], ",", "\n", 
    "\t", 
    RowBox[{"MapThread", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"#2", "<", "0"}], ",", " ", 
         RowBox[{"negStress", "[", " ", 
          RowBox[{"#1", ",", " ", "#2"}], " ", "]"}], ",", " ", 
         RowBox[{"#2", ">", "0"}], ",", " ", 
         RowBox[{"posStress", "[", " ", 
          RowBox[{"#1", ",", " ", "#2"}], " ", "]"}], ",", " ", "True", ",", 
         " ", 
         RowBox[{"{", "}"}]}], " ", "]"}], "&"}], ",", "\n", "\t\t", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{"coordinatePairs", ",", "\n", "\t\t", "normalizedStresses"}], 
       "\n", "\t\t", "}"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[1477]:=",ExpressionUUID->"911928c9-1776-49d7-bdc1-00a706563c2f"]
}, Closed]],

Cell[CellGroupData[{

Cell["createDisplacementGraphics[]", "Subsubsection",ExpressionUUID->"b5eb9bb4-86b7-4453-beb7-26e0f999bb46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createDisplacementGraphics", "[", " ", 
   RowBox[{"coordinates_", ",", " ", 
    RowBox[{"None", "|", 
     RowBox[{"{", "None", "}"}]}], ",", " ", "_", " ", ",", " ", "_"}], "]"}],
   ":=", " ", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"Length", "[", "coordinates", "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[1479]:=",ExpressionUUID->"fe4484fa-0682-4b65-83b1-f4a7594958f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"createDisplacementGraphics", "[", " ", 
    RowBox[{"coordinates_", ",", " ", 
     RowBox[{"displacements", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{"__", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MatrixQ", "[", 
           RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], "}"}]}], 
     ",", " ", 
     RowBox[{"displacementScale_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
         RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], ",", " ", "style_"}], " ",
     "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"maxDisplacement", " ", "=", " ", 
        RowBox[{"Max", "[", " ", 
         RowBox[{"Map", "[", 
          RowBox[{"Norm", " ", ",", " ", "displacements", ",", " ", 
           RowBox[{"{", "2", "}"}]}], " ", "]"}], " ", "]"}]}], " ", "}"}], 
      ",", "\n", "\t", 
      RowBox[{"MapThread", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"plotDisplacements", "[", " ", 
          RowBox[{
          "maxDisplacement", ",", " ", "#1", ",", " ", "#2", ",", " ", 
           "displacementScale", ",", " ", "style"}], " ", "]"}], "&"}], ",", 
        " ", 
        RowBox[{"{", " ", 
         RowBox[{"coordinates", ",", " ", "displacements"}], " ", "}"}]}], 
       " ", "]"}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", " ", "coordinates", " ", "]"}], " ", 
     "\[Equal]", " ", 
     RowBox[{"Dimensions", "[", " ", "displacements", " ", "]"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"createDisplacementGraphics", "[", " ", 
   RowBox[{
   "coordinates_", ",", " ", "displacements_", ",", " ", "displacementScale_",
     ",", " ", "style_"}], " ", "]"}], " ", ":=", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{"Not", " ", "@", " ", 
       RowBox[{"(", 
        RowBox[{"And", "@@", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"MatrixQ", "[", 
             RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], " ", "/@", " ", 
           "displacements"}], ")"}]}], " ", ")"}]}], " ", ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "numdisp"}], "]"}]}], " ", "]"}], ";", 
    "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Not", " ", "@", " ", 
         RowBox[{"NumericQ", "[", "displacementScale", "]"}]}], " ", "||", 
        " ", 
        RowBox[{"#", " ", "\[LessEqual]", " ", "0"}]}], "&"}], ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "displscale"}], "]"}]}], " ", "]"}], 
    ";", "\n", "\t", 
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", " ", "coordinates", " ", "]"}], " ", 
       "\[NotEqual]", " ", 
       RowBox[{"Dimensions", "[", " ", "displacements", " ", "]"}]}], ",", 
      " ", 
      RowBox[{"Message", "[", 
       RowBox[{"plotMechanism", "::", "numinstdisp"}], "]"}]}], " ", "]"}], 
    ";", "\n", "\n", "\t", 
    RowBox[{"ConstantArray", "[", " ", 
     RowBox[{
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"Length", "[", "coordinates", "]"}]}], " ", "]"}]}], "\n", 
   ")"}]}]}], "Code",
 CellLabel->
  "In[1480]:=",ExpressionUUID->"2cc02ac0-f0e0-44be-9b08-7afececde616"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotDisplacements", "[", " ", 
    RowBox[{
    "maxDisplacement_", ",", " ", "coordinates_", ",", " ", "displacement_", 
     ",", " ", "displacementScale_", ",", " ", "style_"}], "]"}], " ", ":=", 
   "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"padding", " ", "=", " ", "0.9"}], "}"}], ",", "\n", "\t", 
     RowBox[{"Flatten", " ", "@", " ", 
      RowBox[{"MapThread", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"displacementGraphic", "[", " ", "style", " ", "]"}], ",", 
        "\n", "\t\t", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{"coordinates", ",", "\n", "\t\t\t", 
          RowBox[{"displacementScale", " ", "*", " ", 
           RowBox[{"displacement", "/", "maxDisplacement"}]}]}], "\n", "\t\t",
          "}"}]}], "\n", "\t", "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displacementGraphic", "[", " ", "style_", " ", "]"}], "[", " ", 
   RowBox[{"vertexLocation_", ",", " ", "displacement_"}], " ", "]"}], " ", ":=",
   " ", "\n", "\t", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"style", ",", "\n", "\t", 
    RowBox[{"Arrow", "[", " ", 
     RowBox[{"{", 
      RowBox[{"vertexLocation", ",", " ", 
       RowBox[{"vertexLocation", " ", "+", " ", "displacement"}]}], "}"}], 
     " ", "]"}]}], "\n", "\t", "}"}]}]}], "Code",
 CellLabel->
  "In[1482]:=",ExpressionUUID->"55774fc6-ee2b-44c0-b416-d3132ebf9238"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["plotOrigami[]", "Section",ExpressionUUID->"22a76298-877b-4f82-9647-137ccd36f0ff"],

Cell[CellGroupData[{

Cell["texture[]", "Subsection",ExpressionUUID->"9b4913e6-0b4a-4a08-b7bd-200f6bcf7b03"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"texture", "[", "]"}], " ", ":=", " ", 
    RowBox[{"{", " ", 
     RowBox[{
     "\"\<WhitePaper\>\"", ",", " ", "\"\<GrayPaper\>\"", ",", " ", 
      "\"\<WrinkledPaper\>\""}], " ", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$dataDirectory", "=", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"First", "@", 
          RowBox[{"PacletFind", "[", "\"\<Mechanisms\>\"", "]"}]}], ")"}], 
        "[", "\"\<Location\>\"", "]"}], ",", "\"\<Resources\>\"", ",", 
       "\"\<Textures\>\""}], "}"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"texture", "[", "\"\<WrinkledPaper\>\"", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"texture", "[", "\"\<WrinkledPaper\>\"", "]"}], " ", "=", " ", 
   RowBox[{"Texture", " ", "@", " ", 
    RowBox[{"Normal", "[", 
     RowBox[{"Import", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$dataDirectory", ",", "\"\<crinkled-paper.jpg\>\""}], "}"}], 
       "]"}], "]"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"texture", "[", "\"\<WhitePaper\>\"", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"texture", "[", "\"\<WhitePaper\>\"", "]"}], " ", "=", " ", 
   RowBox[{"Texture", " ", "@", " ", 
    RowBox[{"Normal", "[", 
     RowBox[{"Import", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$dataDirectory", ",", "\"\<white-paper.jpg\>\""}], "}"}], 
       "]"}], "]"}], "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"texture", "[", "\"\<GrayPaper\>\"", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"texture", "[", "\"\<GrayPaper\>\"", "]"}], " ", "=", " ", 
    RowBox[{"Texture", " ", "@", " ", 
     RowBox[{"Normal", "[", 
      RowBox[{"Import", "[", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"$dataDirectory", ",", "\"\<blue-paper.jpeg\>\""}], "}"}], 
        "]"}], "]"}], "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"texture", "::", "bad"}], "=", 
   "\"\<Unrecognized texture `1`.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"texture", "[", "s_", "]"}], " ", ":=", " ", 
  RowBox[{"\"\<nothing\>\"", " ", "/;", " ", 
   RowBox[{"Message", "[", 
    RowBox[{
     RowBox[{"texture", "::", "bad"}], ",", " ", "s"}], "]"}]}]}]}], "Code",
 CellLabel->
  "In[1484]:=",ExpressionUUID->"9c7cd542-6131-452b-a5de-cf7d5aa66e54"]
}, Closed]],

Cell[CellGroupData[{

Cell["plotOrigami[]", "Subsection",ExpressionUUID->"1fce4c2a-3ad9-4a55-ae6b-d262e817dc47"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", " ", "plotOrigami", " ", "]"}], " ", "=", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"\"\<folds\>\"", " ", "\[Rule]", " ", "None"}], ",", "  ", 
      RowBox[{"\"\<face\>\"", " ", "\[Rule]", " ", "\"\<WrinkledPaper\>\""}], 
      ",", " ", 
      RowBox[{"\"\<thickness\>\"", " ", "\[Rule]", " ", "0.003"}]}], " ", 
     "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"plotOrigami", "[", " ", 
   RowBox[{"m_origami", ",", " ", 
    RowBox[{"opt", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"plotOrigami", "[", " ", 
   RowBox[{"m", ",", " ", 
    RowBox[{"m", "[", "\"\<positions\>\"", "]"}], ",", " ", "opt"}], " ", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotOrigami", "[", " ", 
    RowBox[{"m_origami", ",", " ", 
     RowBox[{"pos_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], " ", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"Module", "[", "\n", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"faces", ",", " ", "positions", " ", ",", "\n", "\t", 
        RowBox[{"folds", " ", "=", " ", 
         RowBox[{"interiorEdges", "[", "m", "]"}]}], ",", "\n", "\t", 
        RowBox[{"boundary", " ", "=", " ", 
         RowBox[{"Flatten", "[", " ", 
          RowBox[{
           RowBox[{"boundaryEdges", "[", "m", "]"}], " ", ",", " ", "1"}], 
          " ", "]"}]}], ",", "\n", "\t", 
        RowBox[{"d", " ", "=", " ", 
         RowBox[{"displayDimension", "[", "m", "]"}]}], ",", "\n", "\t", 
        "positionMap"}], "\n", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"PadRight", "[", " ", 
         RowBox[{"pos", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "pos", "]"}], ",", " ", "d"}], "}"}]}], 
         " ", "]"}]}], ";", "\n", "\t", 
       RowBox[{"positionMap", " ", "=", " ", 
        RowBox[{"Dispatch", "[", " ", 
         RowBox[{"Thread", "[", " ", 
          RowBox[{
           RowBox[{"Range", "[", " ", 
            RowBox[{"Length", "[", "pos", "]"}], " ", "]"}], " ", "\[Rule]", 
           " ", "positions"}], " ", "]"}], " ", "]"}]}], ";", "\n", "\t", 
       RowBox[{"faces", " ", "=", " ", 
        RowBox[{"toGraphicsComplex", "[", " ", 
         RowBox[{
          RowBox[{"embeddingDimension", "[", 
           RowBox[{"m", "\[Rule]", "2"}], "]"}], ",", " ", "positions"}], " ",
          "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"Show", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"d", "\[Equal]", "2"}], ",", " ", "Graphics", ",", " ", 
            "Graphics3D"}], " ", "]"}], " ", "/@", "\n", "\t\t", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"Check", "[", " ", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"StringQ", "[", " ", 
                   RowBox[{"OptionValue", "[", "\"\<face\>\"", "]"}], " ", 
                   "]"}], ",", " ", 
                  RowBox[{"texture", "[", 
                   RowBox[{"OptionValue", "[", "\"\<face\>\"", "]"}], "]"}], 
                  " ", ",", " ", 
                  RowBox[{"OptionValue", "[", "\"\<face\>\"", "]"}]}], " ", 
                 "]"}], " ", ",", " ", "Nothing"}], " ", "]"}], ",", "\n", 
              "\t\t\t", "faces"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
            "\n", "\t\t\t", 
            RowBox[{"Flatten", " ", "@", " ", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"Thickness", "[", " ", 
                RowBox[{"2", " ", 
                 RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}]}], 
                " ", "]"}], ",", " ", "Black", ",", " ", 
               RowBox[{"Line", " ", "/@", " ", 
                RowBox[{"(", 
                 RowBox[{"boundary", " ", "/.", " ", "positionMap"}], 
                 ")"}]}]}], " ", "}"}]}], ",", "\n", "\t\t\t", 
            RowBox[{"Check", "[", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"MapThread", "[", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", " ", 
                   RowBox[{"#1", ",", " ", 
                    RowBox[{"Thickness", "[", " ", 
                    RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}], 
                    " ", "]"}], ",", "  ", 
                    RowBox[{"Line", "[", "#2", "]"}]}], " ", "}"}], "]"}], 
                 " ", "&"}], " ", ",", " ", 
                RowBox[{"{", " ", 
                 RowBox[{
                  RowBox[{"foldStyleGraphics", "[", " ", 
                   RowBox[{"folds", ",", " ", 
                    RowBox[{"OptionValue", "[", "\"\<folds\>\"", "]"}]}], " ",
                    "]"}], ",", "  ", 
                  RowBox[{"(", 
                   RowBox[{"folds", " ", "/.", " ", "positionMap"}], ")"}]}], 
                 "}"}]}], " ", "]"}], ",", "\n", "\t\t\t\t", "Nothing"}], 
             "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "}"}]}], ",", "\n", 
         "\t\t", 
         RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"BoxRatios", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
         RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "\n", "\t", 
        "]"}]}]}], "\n", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"lineThicknessQ", "[", " ", 
      RowBox[{"OptionValue", "[", "\"\<thickness\>\"", "]"}], " ", "]"}], " ",
      "&&", " ", 
     RowBox[{"checkVertexNumberQ", "[", " ", 
      RowBox[{
       RowBox[{"m", "[", "\"\<VertexNumber\>\"", "]"}], " ", "\[Equal]", " ", 
       
       RowBox[{"Length", "[", "pos", "]"}]}], " ", "]"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotOrigami", "::", "vert"}], " ", "=", " ", 
   "\"\<Number of vertices does not match number of vertex positions \
provided.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkVertexNumberQ", "[", " ", 
    RowBox[{"b_", "?", "BooleanQ"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{"Not", "[", "b", "]"}], ",", " ", 
       RowBox[{"Message", "[", 
        RowBox[{"plotOrigami", "::", "vert"}], "]"}]}], " ", "]"}], ";", " ", 
     "b"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotOrigami", "::", "thick"}], " ", "=", " ", 
   "\"\<Line thickness, `1`, should be a positive real number.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"lineThicknessQ", "[", " ", 
   RowBox[{"t_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"NumericQ", "[", "#", "]"}], " ", "&&", " ", 
       RowBox[{"#", ">", "0"}]}], " ", "&"}], ")"}]}], " ", "]"}], " ", ":=", 
  " ", "True"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lineThicknessQ", "[", " ", "t_", " ", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"plotOrigami", "::", "thick"}], ",", " ", "t"}], "]"}], ";", 
     " ", "False"}], ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotOrigami", "::", "folds"}], " ", "=", " ", 
   "\"\<Folds should be of the form {{v1,v2}, ... } -> { style1, ... \
}.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"foldStyleGraphics", "[", " ", 
   RowBox[{"allFolds_", ",", " ", "None"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"ConstantArray", "[", " ", 
   RowBox[{"Black", ",", " ", 
    RowBox[{"Length", "[", "allFolds", "]"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"foldStyleGraphics", "[", " ", 
   RowBox[{"allFolds_", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"folds_", "?", "MatrixQ"}], " ", "\[Rule]", " ", "style_List"}],
      "}"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"foldStyleGraphics", "[", " ", 
   RowBox[{"allFolds", ",", " ", 
    RowBox[{"folds", " ", "\[Rule]", " ", "style"}]}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"foldStyleGraphics", "[", " ", 
   RowBox[{"allFolds_", ",", " ", 
    RowBox[{
     RowBox[{"folds_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"#", ",", "IntegerQ"}], "]"}], "&"}], ")"}]}], " ", 
     "\[Rule]", " ", "style_List"}]}], " ", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"With", "[", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"rules", " ", "=", " ", 
       RowBox[{"Dispatch", " ", "@", " ", 
        RowBox[{"Thread", "[", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Sort", " ", "/@", " ", "folds"}], ")"}], " ", "\[Rule]", 
          " ", "style"}], " ", "]"}]}]}], " ", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Sort", "/@", "allFolds"}], ")"}], " ", "/.", " ", "rules"}], 
      " ", "/.", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], " ", "\[Rule]", 
       " ", "Black"}]}]}], "\n", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Last", "[", 
      RowBox[{"Dimensions", "[", " ", "folds", " ", "]"}], "]"}], " ", 
     "\[Equal]", " ", "2"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{"Length", "[", "folds", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"Length", "[", "style", "]"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"foldStyleGraphics", "[", " ", 
   RowBox[{"_", " ", ",", " ", "_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{"plotOrigami", "::", "folds"}], "]"}], ";", " ", "$Failed"}], 
   ")"}]}]}], "Code",
 CellLabel->
  "In[1491]:=",ExpressionUUID->"d9f2b206-4c71-4b1c-8742-4ad30c3dcdbb"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Experimental code", "Section",ExpressionUUID->"3efe547a-f1ac-4ffb-8444-d2b58598608b"],

Cell[CellGroupData[{

Cell["scalePolygon[]", "Subsection",ExpressionUUID->"030fa22e-305a-45e4-b6b6-74f92db2e39b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"scalePolygon", "[", 
   RowBox[{"coords_", " ", ",", " ", "shrinkBy_"}], " ", "]"}], ":=", "\n", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{"center", " ", "=", " ", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"Mean", "[", "coords", "]"}], ",", 
        RowBox[{"Length", "[", "coords", "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"center", " ", "+", " ", 
     RowBox[{
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{"1", "-", "shrinkBy"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"coords", "-", "center"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellLabel->
  "In[1504]:=",ExpressionUUID->"580bd134-fe46-489b-be75-aa685f0fcd22"]
}, Closed]],

Cell[CellGroupData[{

Cell["extrudedPolygon[]", "Subsection",ExpressionUUID->"50641957-a476-4037-b81c-36b8b7785b1b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extrudedPolygon", "[", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"thickness1_", "?", "NumericQ"}], ",", " ", 
       RowBox[{"thickness2_", "?", "NumericQ"}]}], " ", "}"}], " ", "]"}], 
    "[", "coords_", "]"}], " ", ":=", "\n", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"extrusionVector", " ", "=", " ", 
        RowBox[{"First", " ", "@", " ", 
         RowBox[{"normalVector", "[", 
          RowBox[{"coords", ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}]}], "]"}]}]}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"face1", " ", "=", " ", 
           RowBox[{"coords", " ", "+", " ", 
            RowBox[{"thickness1", " ", 
             RowBox[{"ConstantArray", "[", " ", 
              RowBox[{"extrusionVector", ",", " ", 
               RowBox[{"Length", "[", "coords", "]"}]}], " ", "]"}]}]}]}], 
          ",", "\n", "\t\t", 
          RowBox[{"face2", " ", "=", " ", 
           RowBox[{"coords", " ", "+", " ", 
            RowBox[{"thickness2", " ", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{"extrusionVector", " ", ",", " ", 
               RowBox[{"Length", "[", "coords", "]"}]}], " ", "]"}]}]}]}]}], 
         "\n", "\t\t", "}"}], ",", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Polyhedron", " ", "@", " ", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{
           RowBox[{
           "{", "\[IndentingNewLine]", "\t\t\t", "face1", 
            "\[IndentingNewLine]", "\t\t\t", "}"}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"MapThread", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"#1", ",", 
                RowBox[{"Reverse", "[", "#2", "]"}]}], "]"}], "&"}], " ", ",",
              " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Partition", "[", 
                RowBox[{"face1", ",", "2", ",", "1", ",", "1"}], "]"}], ",", 
               RowBox[{"Partition", "[", 
                RowBox[{"face2", ",", "2", ",", "1", ",", "1"}], "]"}]}], 
              "}"}]}], " ", "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{"Reverse", " ", "@", " ", "face2"}], "\n", "\t\t\t", 
            "}"}]}], "\[IndentingNewLine]", "\t\t", "]"}]}]}], 
       "\[IndentingNewLine]", "\t", "]"}]}], " ", "\n", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"MatrixQ", "[", "coords", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", "coords", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", "3"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extrudedPolygon", "[", " ", 
     RowBox[{
      RowBox[{"extrusionVector", " ", ":", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumericQ"}], ",", " ", 
         RowBox[{"_", "?", "NumericQ"}], ",", " ", 
         RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], " ", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"thickness1_", "?", "NumericQ"}], ",", " ", 
        RowBox[{"thickness2_", "?", "NumericQ"}]}], " ", "}"}]}], " ", "]"}], 
    "[", "coords_", "]"}], " ", ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"face1", " ", "=", " ", 
         RowBox[{"coords", " ", "+", " ", 
          RowBox[{"thickness1", " ", 
           RowBox[{"ConstantArray", "[", " ", 
            RowBox[{"extrusionVector", ",", " ", 
             RowBox[{"Length", "[", "coords", "]"}]}], " ", "]"}]}]}]}], ",", 
        "\n", "\t\t", 
        RowBox[{"face2", " ", "=", " ", 
         RowBox[{"coords", " ", "+", " ", 
          RowBox[{"thickness2", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"extrusionVector", " ", ",", " ", 
             RowBox[{"Length", "[", "coords", "]"}]}], " ", "]"}]}]}]}]}], 
       "\n", "\t\t", "}"}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"Polyhedron", " ", "@", " ", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{
         "{", "\[IndentingNewLine]", "\t\t\t", "face1", "\[IndentingNewLine]",
           "\t\t\t", "}"}], ",", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{"MapThread", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"Reverse", "[", "#2", "]"}]}], "]"}], "&"}], " ", ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Partition", "[", 
              RowBox[{"face1", ",", "2", ",", "1", ",", "1"}], "]"}], ",", 
             RowBox[{"Partition", "[", 
              RowBox[{"face2", ",", "2", ",", "1", ",", "1"}], "]"}]}], 
            "}"}]}], " ", "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{"Reverse", " ", "@", " ", "face2"}], "\n", "\t\t\t", 
          "}"}]}], "\[IndentingNewLine]", "\t\t", "]"}]}]}], 
     "\[IndentingNewLine]", "\t", "]"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"MatrixQ", "[", "coords", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", "coords", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", "3"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extrudedPolygon", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"thickness1_", "?", "NumericQ"}], ",", " ", 
      RowBox[{"thickness2_", "?", "NumericQ"}]}], "}"}], "]"}], "[", 
   "coords_", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"coords2", " ", "=", " ", 
       RowBox[{"PadRight", "[", " ", 
        RowBox[{"coords", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", "coords", "]"}], ",", "3"}], "}"}]}], " ", 
        "]"}]}], " ", "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"face1", " ", "=", " ", 
          RowBox[{"coords2", " ", "+", " ", 
           RowBox[{"thickness1", " ", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}], " ", ",", " ", 
              RowBox[{"Length", "[", "coords", "]"}]}], " ", "]"}]}]}]}], ",",
          "\n", "\t\t", 
         RowBox[{"face2", " ", "=", " ", 
          RowBox[{"coords2", " ", "+", " ", 
           RowBox[{"thickness2", " ", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}], " ", ",", " ", 
              RowBox[{"Length", "[", "coords", "]"}]}], " ", "]"}]}]}]}]}], 
        "\n", "\t\t", "}"}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"Polyhedron", " ", "@", " ", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{
          "{", "\[IndentingNewLine]", "\t\t\t", "face1", 
           "\[IndentingNewLine]", "\t\t\t", "}"}], ",", "\[IndentingNewLine]",
           "\t\t\t", 
          RowBox[{"MapThread", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{"#1", ",", 
               RowBox[{"Reverse", "[", "#2", "]"}]}], "]"}], "&"}], " ", ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{"face1", ",", "2", ",", "1", ",", "1"}], "]"}], ",", 
              RowBox[{"Partition", "[", 
               RowBox[{"face2", ",", "2", ",", "1", ",", "1"}], "]"}]}], 
             "}"}]}], " ", "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{"Reverse", " ", "@", " ", "face2"}], "\n", "\t\t\t", 
           "}"}]}], "\[IndentingNewLine]", "\t\t", "]"}]}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"MatrixQ", "[", "coords", "]"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Dimensions", "[", "coords", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", 
     "2"}]}]}]}]}], "Code",
 CellLabel->
  "In[1505]:=",ExpressionUUID->"da7e70de-e1ad-47c1-a2cd-4e867b497a28"]
}, Closed]],

Cell[CellGroupData[{

Cell["shrinkPolygon[]", "Subsection",ExpressionUUID->"5b510d4d-6e9e-491c-94a7-2f5adbe7cbe3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"shrinkPolygon", "[", " ", 
    RowBox[{"pts_", ",", " ", "widths_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"pts", " ", "+", " ", 
    RowBox[{"Total", " ", "@", " ", 
     RowBox[{"MapIndexed", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"shrinkPolygonSide", "[", " ", 
         RowBox[{"pts", ",", " ", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", "#1"}], " ", "]"}], 
        "&"}], ",", " ", "widths"}], " ", "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"shrinkPolygonSide", "[", " ", 
   RowBox[{"pts_", ",", " ", "v1_", ",", " ", "width_"}], " ", "]"}], " ", ":=",
   "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "pts", "]"}]}], ",", " ", "v2", ",", " ", 
      "future", ",", " ", "past", ",", " ", "futureEdge", ",", " ", "edge", 
      ",", " ", "pastEdge"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"v2", "=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"v1", "+", "1"}], ",", " ", "n", ",", " ", "1"}], "]"}]}], 
     ";", " ", 
     RowBox[{"future", "=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"v2", "+", "1"}], ",", " ", "n", ",", " ", "1"}], "]"}]}], 
     ";", " ", 
     RowBox[{"past", " ", "=", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"v1", "-", "1"}], ",", "n", ",", "1"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"edge", "=", 
      RowBox[{"Normalize", "[", " ", 
       RowBox[{
        RowBox[{"pts", "[", 
         RowBox[{"[", "v2", "]"}], "]"}], " ", "-", " ", 
        RowBox[{"pts", "[", 
         RowBox[{"[", "v1", "]"}], "]"}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"futureEdge", " ", "=", " ", 
      RowBox[{"Normalize", "[", " ", 
       RowBox[{
        RowBox[{"pts", "[", 
         RowBox[{"[", "future", "]"}], "]"}], " ", "-", " ", 
        RowBox[{"pts", "[", 
         RowBox[{"[", "v2", "]"}], "]"}]}], " ", "]"}]}], ";", "\n", "\t", 
     RowBox[{"pastEdge", " ", "=", " ", 
      RowBox[{"Normalize", "[", " ", 
       RowBox[{
        RowBox[{"pts", "[", 
         RowBox[{"[", "past", "]"}], "]"}], " ", "-", " ", 
        RowBox[{"pts", "[", 
         RowBox[{"[", "v1", "]"}], "]"}]}], " ", "]"}]}], ";", "\n", "\t", 
     "\n", "\t", 
     RowBox[{"RotateRight", "[", 
      RowBox[{
       RowBox[{"Join", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"width", "*", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"pastEdge", "/", 
             RowBox[{"Norm", "[", " ", 
              RowBox[{"Cross", "[", " ", 
               RowBox[{"pastEdge", ",", " ", "edge"}], " ", "]"}], " ", 
              "]"}]}], ",", "\n", "\t\t\t", 
            RowBox[{"futureEdge", "/", 
             RowBox[{"Norm", "[", " ", 
              RowBox[{"Cross", "[", " ", 
               RowBox[{"futureEdge", ",", " ", "edge"}], " ", "]"}], " ", 
              "]"}]}]}], "\n", "\t\t", "}"}]}], ",", "\n", "\t\t", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"n", "-", "2"}]}], "]"}]}], "\n", "\t", "]"}], ",", " ", 
       RowBox[{"v1", "-", "1"}]}], "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->
  "In[1508]:=",ExpressionUUID->"ae3899bf-8cac-4133-92d1-6bd45cffea08"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["post", "Section",ExpressionUUID->"a1375d4f-d82f-42cf-9eb3-c76f31ebb81e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[1510]:=",ExpressionUUID->"0f6f47a1-2047-4f40-a070-b68748d33cb4"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1094, 731},
WindowMargins->{{Automatic, 62}, {Automatic, 10}},
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d3d5b704-240b-45dc-9724-92278d2cb5eb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 90, 0, 98, "Title",ExpressionUUID->"130b3787-7aa9-48f9-8ced-30b05119f93a"],
Cell[673, 24, 168, 4, 81, "Text",ExpressionUUID->"a287b323-0ec1-4bfc-ac7b-b122cce5f6f7"],
Cell[CellGroupData[{
Cell[866, 32, 100, 0, 45, "Subsubsection",ExpressionUUID->"6d3b1798-1603-4e1f-a3fb-a831a45b5512"],
Cell[969, 34, 222, 5, 35, "Text",ExpressionUUID->"fd552589-5b13-4cba-8060-e04008711b7b"],
Cell[1194, 41, 164, 4, 35, "Text",ExpressionUUID->"5b61e7c9-2ff5-4e08-9046-4fe654d2bc7d"],
Cell[1361, 47, 234, 5, 35, "Text",ExpressionUUID->"47c99494-6580-4a80-9766-1a2595a00f8d"],
Cell[1598, 54, 202, 4, 35, "Text",ExpressionUUID->"5b4fb190-7420-4fe6-b9ee-0710831e0b2a"],
Cell[1803, 60, 192, 4, 35, "Text",ExpressionUUID->"85ea895a-171e-480f-b701-c119aed055d6"],
Cell[1998, 66, 235, 3, 58, "Text",ExpressionUUID->"e4ef7bb6-5622-4ec5-8d97-20b894f9d806"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2270, 74, 109, 0, 45, "Subsubsection",ExpressionUUID->"5effce6f-d2fc-4343-8138-d788d00f2d13"],
Cell[2382, 76, 387, 7, 58, "Text",ExpressionUUID->"01e0f39a-cdd3-4398-9885-4e9122d860da"],
Cell[2772, 85, 229, 3, 35, "Text",ExpressionUUID->"7e24a6a5-4355-4ea6-b4d0-8c0c5dce255e"],
Cell[3004, 90, 254, 4, 58, "Text",ExpressionUUID->"3c29e79e-c97c-45d3-a1ea-174eedb8cf96"],
Cell[3261, 96, 218, 3, 35, "Text",ExpressionUUID->"33457689-1538-46a7-a7b4-32e05e4d1dbb"],
Cell[3482, 101, 161, 3, 35, "Text",ExpressionUUID->"50f80464-0989-4dbe-adb2-45b20020c8a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3680, 109, 123, 0, 69, "Chapter",ExpressionUUID->"1007bea5-8919-43d5-b2b7-1d591eacbee8"],
Cell[3806, 111, 430, 11, 91, "Code",ExpressionUUID->"79322a72-1ef5-40c5-8b71-24d04e2c58a5"],
Cell[4239, 124, 698, 16, 129, "Code",ExpressionUUID->"c3929045-c234-4a87-9c48-8321231dbffe"],
Cell[CellGroupData[{
Cell[4962, 144, 79, 0, 67, "Section",ExpressionUUID->"86495105-a446-474d-bbe6-03bd1334054f"],
Cell[5044, 146, 478, 11, 72, "Code",ExpressionUUID->"83532984-f8e5-44f9-a21e-beb9bdc10ddf"],
Cell[5525, 159, 1822, 48, 224, "Code",ExpressionUUID->"6058a131-dea1-48d0-a8b1-9755094b2f70"],
Cell[7350, 209, 2301, 42, 490, "Code",ExpressionUUID->"91875964-7201-4edd-b967-73869fbe7944"],
Cell[9654, 253, 998, 22, 129, "Code",ExpressionUUID->"7445fe50-3c2c-4866-8fe2-7eea17dc51c4"],
Cell[10655, 277, 4057, 100, 737, "Code",ExpressionUUID->"1541dce7-e5b5-40a8-8bd4-290f6eff1d3f"],
Cell[14715, 379, 1505, 31, 243, "Code",ExpressionUUID->"9273de87-effd-4686-9b2e-608fcb430619"],
Cell[16223, 412, 526, 9, 72, "Code",ExpressionUUID->"186f7969-7d96-47c8-96e9-fa6761c66af2"],
Cell[16752, 423, 2094, 52, 319, "Code",ExpressionUUID->"e4d10adb-f929-4d10-82bc-4b12de09613d"]
}, Closed]],
Cell[CellGroupData[{
Cell[18883, 480, 98, 0, 53, "Section",ExpressionUUID->"cfa1c0f4-94af-49a0-98cd-e435294e26f2"],
Cell[18984, 482, 170, 3, 52, "Code",ExpressionUUID->"06fc029e-a0bb-4bdb-9997-a62c8c544d33"],
Cell[19157, 487, 1335, 40, 186, "Code",ExpressionUUID->"dc607867-c94e-46c7-a9ad-2c0f7a10f245"],
Cell[CellGroupData[{
Cell[20517, 531, 89, 0, 54, "Subsection",ExpressionUUID->"eff07146-d872-4431-837d-c7f0a6ec7629"],
Cell[20609, 533, 598, 15, 111, "Code",ExpressionUUID->"a5aa8b49-bcf0-48ef-881c-d1ffc63e1b4c"]
}, Closed]],
Cell[CellGroupData[{
Cell[21244, 553, 102, 0, 38, "Subsection",ExpressionUUID->"d1bfb2ec-05b0-4a63-91f8-fcaf3033211d"],
Cell[21349, 555, 2879, 74, 383, "Code",ExpressionUUID->"b000fe75-98e0-4db2-803d-1d40f1814007"]
}, Closed]],
Cell[CellGroupData[{
Cell[24265, 634, 90, 0, 38, "Subsection",ExpressionUUID->"5cf74a85-b4c1-4085-b474-db69e3569d24"],
Cell[24358, 636, 3047, 82, 243, "Code",ExpressionUUID->"f5ce23c9-dd88-49e3-8ce9-d15ea2f4a0f2"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[27454, 724, 111, 0, 53, "Section",ExpressionUUID->"32abf7e8-c1c3-4c59-b203-2f531969c22b"],
Cell[27568, 726, 112, 0, 35, "Text",ExpressionUUID->"17f7f43a-1081-4e0c-abe3-d6fe161117b3"],
Cell[CellGroupData[{
Cell[27705, 730, 87, 0, 54, "Subsection",ExpressionUUID->"af8d39d2-e6d6-4050-8965-bc05f40569d0"],
Cell[27795, 732, 2705, 72, 224, "Code",ExpressionUUID->"e1c8906d-3061-4fe8-9994-991ef705e42c"]
}, Closed]],
Cell[CellGroupData[{
Cell[30537, 809, 88, 0, 38, "Subsection",ExpressionUUID->"3140d306-2fe3-4d80-8519-e5c1a3a2179c"],
Cell[30628, 811, 1929, 52, 243, "Code",ExpressionUUID->"d441c2cb-db4c-4b3c-be58-c401dbbf458e"],
Cell[32560, 865, 1726, 45, 262, "Code",ExpressionUUID->"c533ba08-40c1-4f85-a5d9-ebd3d51e166d"],
Cell[34289, 912, 1628, 43, 224, "Code",ExpressionUUID->"a16e7b04-ada9-4bb9-a6c0-e1b705fe5e06"],
Cell[35920, 957, 15801, 387, 2276, "Code",ExpressionUUID->"86e4ac4f-371a-4d0e-8ec5-01840aa47eca"]
}, Closed]],
Cell[CellGroupData[{
Cell[51758, 1349, 90, 0, 38, "Subsection",ExpressionUUID->"ee5265f2-5b85-4a46-a28b-a243bc9ff076"],
Cell[51851, 1351, 2044, 55, 357, "Code",ExpressionUUID->"4875f961-32d2-4913-98ea-6cdd16c6277c"],
Cell[53898, 1408, 14603, 340, 1307, "Code",ExpressionUUID->"3706d142-5a5e-444a-9e80-e1251af03ac5"]
}, Closed]],
Cell[CellGroupData[{
Cell[68538, 1753, 154, 2, 38, "Subsection",ExpressionUUID->"df7a1f65-a32e-49cc-8c27-29579d1205e6"],
Cell[68695, 1757, 681, 20, 52, "Code",ExpressionUUID->"f1139107-b69c-4fd4-8921-cbf950ea380f"],
Cell[69379, 1779, 694, 20, 52, "Code",ExpressionUUID->"aedb8fbc-7b63-4e91-8f14-89eba922e5be"],
Cell[70076, 1801, 2774, 74, 414, "Code",ExpressionUUID->"b5a4e93b-03e7-40af-85c4-fe8ffd3be9b9"]
}, Closed]],
Cell[CellGroupData[{
Cell[72887, 1880, 108, 0, 38, "Subsection",ExpressionUUID->"530c0200-8cec-4ba0-ac9d-8bb8ee2048af"],
Cell[72998, 1882, 110, 0, 35, "Text",ExpressionUUID->"30722304-63f8-45bb-856c-187e452eb61d"],
Cell[73111, 1884, 921, 24, 110, "Code",ExpressionUUID->"3dcbb299-d60d-4ccd-b0a6-8765b702245a"],
Cell[74035, 1910, 762, 22, 91, "Code",ExpressionUUID->"102c4a3c-1dcf-48e5-af1a-6ac1cb37098a"]
}, Closed]],
Cell[CellGroupData[{
Cell[74834, 1937, 99, 0, 38, "Subsection",ExpressionUUID->"66a4fa93-b1cb-408a-b53d-07229a966a10"],
Cell[74936, 1939, 1913, 49, 243, "Code",ExpressionUUID->"64d17235-533b-4916-b535-0ebabd865c68"]
}, Closed]],
Cell[CellGroupData[{
Cell[76886, 1993, 100, 0, 38, "Subsection",ExpressionUUID->"31a2a4ca-20a8-4cbc-b01c-74d8e07dc5cb"],
Cell[76989, 1995, 1286, 35, 129, "Code",ExpressionUUID->"0a895eca-c68c-4041-b86b-8579247034b0"]
}, Closed]],
Cell[CellGroupData[{
Cell[78312, 2035, 88, 0, 38, "Subsection",ExpressionUUID->"9b7efb19-fa3f-458c-b10d-055c4761c19a"],
Cell[78403, 2037, 1527, 40, 148, "Code",ExpressionUUID->"b44baf22-b49e-49eb-8d47-48ae6f6bc8b6"]
}, Closed]],
Cell[CellGroupData[{
Cell[79967, 2082, 105, 0, 38, "Subsection",ExpressionUUID->"eadd1bf6-0132-4bb4-8f59-3c816e0f837e"],
Cell[80075, 2084, 4892, 124, 381, "Code",ExpressionUUID->"eb718079-61c4-4ca0-995a-7b96ba132a18"],
Cell[84970, 2210, 5301, 127, 624, "Code",ExpressionUUID->"3e48711c-51f0-4af3-a14f-17eb5878f2bb"],
Cell[90274, 2339, 268, 7, 52, "Code",ExpressionUUID->"18f7d81c-3e4a-4d14-8b8f-8a0d0cf9a5fd"],
Cell[90545, 2348, 1688, 45, 205, "Code",ExpressionUUID->"e760c130-8b29-4ddc-8403-453272bb4643"]
}, Closed]],
Cell[CellGroupData[{
Cell[92270, 2398, 90, 0, 38, "Subsection",ExpressionUUID->"732c18fc-515b-4842-b168-c8f2ecbbfe56"],
Cell[92363, 2400, 177, 3, 35, "Text",ExpressionUUID->"ce7524de-e1a1-4a7a-bd48-392ed7009d2d"],
Cell[92543, 2405, 2823, 78, 281, "Code",ExpressionUUID->"ec426106-5275-44e5-a09e-d44cc50595d8"]
}, Closed]],
Cell[CellGroupData[{
Cell[95403, 2488, 195, 3, 38, "Subsection",ExpressionUUID->"b47f0046-da3c-4283-8228-29f1a5615f84"],
Cell[95601, 2493, 6406, 164, 566, "Code",ExpressionUUID->"58cae39b-f26e-4c92-93be-35567681d0c7"]
}, Closed]],
Cell[CellGroupData[{
Cell[102044, 2662, 103, 0, 38, "Subsection",ExpressionUUID->"5de5a8d3-e193-443c-8f31-f2cec7f5741d"],
Cell[102150, 2664, 1309, 33, 281, "Code",ExpressionUUID->"ebd6d1da-3b12-4f71-801c-7e96aa50437e"],
Cell[103462, 2699, 913, 24, 186, "Code",ExpressionUUID->"0b9eb7cd-cd75-419c-b2e5-5ecb30e634b7"]
}, Closed]],
Cell[CellGroupData[{
Cell[104412, 2728, 101, 0, 38, "Subsection",ExpressionUUID->"27f84a4e-e698-437b-94f5-cbe3588f169d"],
Cell[104516, 2730, 7584, 172, 737, "Code",ExpressionUUID->"31a72297-71f7-4b0b-a689-6535b1e08576"],
Cell[112103, 2904, 5221, 133, 528, "Code",ExpressionUUID->"3302b513-e9fe-45e5-b7f9-d675ecefb2c6"],
Cell[117327, 3039, 475, 12, 52, "Code",ExpressionUUID->"2b8c3df9-7cd3-41f4-b20d-28cb2d4c46bc"]
}, Closed]],
Cell[CellGroupData[{
Cell[117839, 3056, 95, 0, 38, "Subsection",ExpressionUUID->"5a94c171-934c-4d12-ad62-4dfa84b8a359"],
Cell[117937, 3058, 824, 23, 72, "Code",ExpressionUUID->"0e91cd52-98a9-4991-bd33-c8a77649afb7"]
}, Closed]],
Cell[CellGroupData[{
Cell[118798, 3086, 90, 0, 38, "Subsection",ExpressionUUID->"b05847f7-0cfe-43d6-88c4-014ef3ddb0dd"],
Cell[118891, 3088, 2128, 59, 262, "Code",ExpressionUUID->"3e3005a5-6c98-4e26-bd10-dad515d4dea7"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[121068, 3153, 115, 0, 53, "Section",ExpressionUUID->"65c5c4a8-5b60-4f27-b9e3-a8f1d4521cff"],
Cell[CellGroupData[{
Cell[121208, 3157, 91, 0, 54, "Subsection",ExpressionUUID->"c0a0b487-7f74-48f4-a1f1-dd679b5bc71d"],
Cell[121302, 3159, 2551, 69, 281, "Code",ExpressionUUID->"731da110-bc83-4f8d-b712-4e7c00d0e5ef"]
}, Closed]],
Cell[CellGroupData[{
Cell[123890, 3233, 107, 0, 38, "Subsection",ExpressionUUID->"3a62305e-7798-4811-a242-8c9fc5e4aa41"],
Cell[124000, 3235, 3919, 98, 605, "Code",ExpressionUUID->"bbfddab8-6ea8-4120-8eb4-f3216479642f"]
}, Closed]],
Cell[CellGroupData[{
Cell[127956, 3338, 113, 0, 38, "Subsection",ExpressionUUID->"fbf41453-ce16-449c-a7d8-392e16ddcde9"],
Cell[128072, 3340, 600, 13, 72, "Code",ExpressionUUID->"c5fa8e38-81f1-4e35-952b-a5bead4479e6"]
}, Closed]],
Cell[CellGroupData[{
Cell[128709, 3358, 94, 0, 38, "Subsection",ExpressionUUID->"f40fca3b-5ac3-45df-9833-1ec262db5844"],
Cell[128806, 3360, 1028, 26, 205, "Code",ExpressionUUID->"89ea601f-aa9b-4950-84c3-22eafdcf6db0"]
}, Closed]],
Cell[CellGroupData[{
Cell[129871, 3391, 112, 0, 38, "Subsection",ExpressionUUID->"50aaa118-7aeb-4322-877d-ed8c6a7663fa"],
Cell[129986, 3393, 3763, 94, 433, "Code",ExpressionUUID->"2fd91df5-6766-4d60-a3c7-53d9a52d7b96"],
Cell[133752, 3489, 2312, 54, 281, "Code",ExpressionUUID->"3ccd1308-4b25-462c-bf14-ca7dea82c5fe"],
Cell[136067, 3545, 2936, 73, 455, "Code",ExpressionUUID->"64b7b531-8b24-4dab-9ace-34e5f065c8da"],
Cell[139006, 3620, 2725, 77, 302, "Code",ExpressionUUID->"c2262ab8-69cd-440e-b350-a060080f50e2"],
Cell[141734, 3699, 799, 21, 148, "Code",ExpressionUUID->"2e1f31ff-6557-4fb9-aaa5-ab2f5e0c76c3"],
Cell[142536, 3722, 2465, 61, 300, "Code",ExpressionUUID->"380d18c6-2716-430c-9643-2330072de554"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145050, 3789, 133, 0, 67, "Section",ExpressionUUID->"5e1bb1ba-4e01-41e6-bdeb-cab641c995ee"],
Cell[CellGroupData[{
Cell[145208, 3793, 88, 0, 54, "Subsection",ExpressionUUID->"770f6e84-4aa1-4881-9af0-1dcf176096a2"],
Cell[145299, 3795, 1099, 28, 129, "Code",ExpressionUUID->"b367c3d5-d8eb-4e11-af07-dd6aca45cd64"],
Cell[146401, 3825, 5285, 129, 738, "Code",ExpressionUUID->"77a841d3-eaaf-4cec-a64e-ba0e1f59f1b1"],
Cell[151689, 3956, 9117, 232, 814, "Code",ExpressionUUID->"271ee591-97c5-48b0-9a63-744c8a95ef8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160843, 4193, 86, 0, 54, "Subsection",ExpressionUUID->"ab454d33-6f2f-4fae-b957-bc3f25e232d1"],
Cell[160932, 4195, 1375, 34, 129, "Code",ExpressionUUID->"7aa32004-142e-4398-b75b-5f4e9b58bc92"],
Cell[162310, 4231, 5619, 137, 775, "Code",ExpressionUUID->"1c3e576c-c667-475f-89cb-197999bffac7"],
Cell[167932, 4370, 9145, 228, 776, "Code",ExpressionUUID->"e8717162-81c3-408e-ac1b-17b556cd74ba"]
}, Closed]],
Cell[CellGroupData[{
Cell[177114, 4603, 126, 0, 38, "Subsection",ExpressionUUID->"dea4a3c2-e7ee-4f47-bf96-66929b110d6a"],
Cell[177243, 4605, 785, 19, 72, "Code",ExpressionUUID->"ab90f3fa-ae59-4b44-82a5-a1e8ed0a62ba"],
Cell[178031, 4626, 4125, 114, 339, "Code",ExpressionUUID->"4095e79d-34ef-435b-84d6-5f5641f09777"]
}, Closed]],
Cell[CellGroupData[{
Cell[182193, 4745, 98, 0, 38, "Subsection",ExpressionUUID->"ee32cfa3-1677-497c-bcdd-41a18a8855c6"],
Cell[182294, 4747, 1968, 53, 148, "Code",ExpressionUUID->"c27dc3fd-0e9b-41f3-aae3-759f9af29b32"]
}, Closed]],
Cell[CellGroupData[{
Cell[184299, 4805, 117, 0, 38, "Subsection",ExpressionUUID->"16160a14-4294-44e2-8cb4-421f6295e059"],
Cell[184419, 4807, 2543, 70, 281, "Code",ExpressionUUID->"f44a31c2-8b21-40ca-a115-2fd8da00a1b5"]
}, Closed]],
Cell[CellGroupData[{
Cell[186999, 4882, 88, 0, 38, "Subsection",ExpressionUUID->"f3b80113-3224-49a9-9e96-60dda4fcc677"],
Cell[187090, 4884, 2477, 72, 148, "Code",ExpressionUUID->"751f4008-59c9-41c2-a965-1bb8d19b428e"]
}, Closed]],
Cell[CellGroupData[{
Cell[189604, 4961, 118, 0, 38, "Subsection",ExpressionUUID->"929a533b-38ca-4691-bbf0-10109000ed9f"],
Cell[189725, 4963, 3894, 112, 186, "Code",ExpressionUUID->"e7d99d5c-47c2-4c13-bb77-affd8f0fda8f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193668, 5081, 108, 0, 67, "Section",ExpressionUUID->"090ed141-5b45-4288-b0a6-e72427c2adbf"],
Cell[CellGroupData[{
Cell[193801, 5085, 88, 0, 54, "Subsection",ExpressionUUID->"412267ca-b4cd-4402-8196-31c933c269a3"],
Cell[193892, 5087, 1374, 38, 72, "Code",ExpressionUUID->"065b9a63-e5d1-40c0-a6bb-fb3c2b40fe15"]
}, Closed]],
Cell[CellGroupData[{
Cell[195303, 5130, 92, 0, 38, "Subsection",ExpressionUUID->"a36ef963-d8b7-466d-9028-89d0a83d022e"],
Cell[195398, 5132, 5749, 138, 510, "Code",ExpressionUUID->"0d644173-0919-476f-bf16-572cb8c77e51"]
}, Closed]],
Cell[CellGroupData[{
Cell[201184, 5275, 105, 0, 38, "Subsection",ExpressionUUID->"f48760e0-20ae-4bdb-9fec-8e23ae133fad"],
Cell[201292, 5277, 3021, 82, 414, "Code",ExpressionUUID->"abbe108b-1bdd-4ca3-a30c-eb279fb340b4"],
Cell[204316, 5361, 3433, 93, 452, "Code",ExpressionUUID->"5198b681-d64a-4e20-97b8-8e031eacc149"]
}, Closed]],
Cell[CellGroupData[{
Cell[207786, 5459, 87, 0, 38, "Subsection",ExpressionUUID->"ba379b12-e39c-49a0-ba40-463bc3626108"],
Cell[207876, 5461, 2721, 70, 243, "Code",ExpressionUUID->"a23612de-3cf0-403e-b850-8a9c7144e63f"]
}, Closed]],
Cell[CellGroupData[{
Cell[210634, 5536, 93, 0, 38, "Subsection",ExpressionUUID->"b8f26f8a-5bdb-43fa-a08b-35a62aaf9744"],
Cell[210730, 5538, 3162, 79, 263, "Code",ExpressionUUID->"ce93bed6-9de0-443b-9529-d0e43a83867e"],
Cell[213895, 5619, 492, 13, 52, "Code",ExpressionUUID->"a153f66e-388f-4c66-aec7-7137116edbba"]
}, Closed]],
Cell[CellGroupData[{
Cell[214424, 5637, 93, 0, 38, "Subsection",ExpressionUUID->"901ddd13-737f-4e91-b19e-1ed99e5bece8"],
Cell[214520, 5639, 11464, 312, 1005, "Code",ExpressionUUID->"70f625df-561a-4796-a043-b09f24c338ff"],
Cell[225987, 5953, 1242, 33, 73, "Code",ExpressionUUID->"125d59ca-1967-4382-af1c-7ee3973c19c1"]
}, Closed]],
Cell[CellGroupData[{
Cell[227266, 5991, 112, 0, 38, "Subsection",ExpressionUUID->"5c30eac8-b497-457e-83bc-5feee9c6f26e"],
Cell[227381, 5993, 5745, 163, 510, "Code",ExpressionUUID->"3b0edd43-f179-414d-aa01-523bd36dc076"],
Cell[233129, 6158, 6498, 179, 586, "Code",ExpressionUUID->"dc6fae3e-0250-465d-b252-f2807af8cf17"],
Cell[239630, 6339, 880, 24, 72, "Code",ExpressionUUID->"e71eaeac-52c8-47a5-808b-97451c4d3a99"]
}, Closed]],
Cell[CellGroupData[{
Cell[240547, 6368, 82, 0, 38, "Subsection",ExpressionUUID->"3ab5e732-329f-4489-88fd-99e349e91f19"],
Cell[240632, 6370, 2733, 66, 224, "Code",ExpressionUUID->"716f9373-6de2-4d61-b7b3-deac55ae485c"]
}, Closed]],
Cell[CellGroupData[{
Cell[243402, 6441, 87, 0, 38, "Subsection",ExpressionUUID->"cb7c2df9-dda8-4d22-bcab-38d90211eab7"],
Cell[243492, 6443, 1844, 51, 224, "Code",ExpressionUUID->"09b6a594-cbdf-4cab-a245-d13a757d3bde"]
}, Closed]],
Cell[CellGroupData[{
Cell[245373, 6499, 97, 0, 38, "Subsection",ExpressionUUID->"b687de83-cd96-4c03-a6c5-674f5c438ade"],
Cell[245473, 6501, 356, 10, 52, "Code",ExpressionUUID->"76ffc6b0-1698-4435-a9f3-a8e4d85ac1ab"],
Cell[245832, 6513, 2582, 71, 300, "Code",ExpressionUUID->"ca5dc61d-eb9d-4c00-9924-201bee91a182"],
Cell[248417, 6586, 1624, 45, 167, "Code",ExpressionUUID->"721a18ca-3636-47ac-8ec2-4481f8e47919"],
Cell[250044, 6633, 2347, 57, 281, "Code",ExpressionUUID->"52292cab-859e-4526-ad11-c2375d158cee"],
Cell[252394, 6692, 2575, 64, 262, "Code",ExpressionUUID->"d24fd5c7-bb15-4547-9025-38b6386831cb"],
Cell[254972, 6758, 2628, 64, 262, "Code",ExpressionUUID->"2cf05f30-ea55-4528-b268-4f693ccc6344"]
}, Closed]],
Cell[CellGroupData[{
Cell[257637, 6827, 89, 0, 38, "Subsection",ExpressionUUID->"0fa84328-818f-4aa0-9af0-dd5dc45722ec"],
Cell[257729, 6829, 1246, 33, 110, "Code",ExpressionUUID->"230fde4b-20eb-4071-99aa-5c8ad4bd0f21"]
}, Closed]],
Cell[CellGroupData[{
Cell[259012, 6867, 108, 0, 38, "Subsection",ExpressionUUID->"43647b8f-478e-4e7c-9742-557e8dc9a078"],
Cell[259123, 6869, 482, 10, 72, "Code",ExpressionUUID->"a3217d07-b263-49db-8e2b-a299c78b318f"],
Cell[259608, 6881, 1006, 26, 72, "Code",ExpressionUUID->"3334406d-4524-4f4f-9a1f-901b483ce449"],
Cell[260617, 6909, 966, 26, 72, "Code",ExpressionUUID->"59f86bc7-1124-49b0-b3e5-f21143d862bd"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[261632, 6941, 106, 0, 53, "Section",ExpressionUUID->"8a6930c3-0554-4d2c-8310-f85820c57ead"],
Cell[CellGroupData[{
Cell[261763, 6945, 92, 0, 54, "Subsection",ExpressionUUID->"807f5525-dcf2-4be3-a3d6-f662db4b35c9"],
Cell[261858, 6947, 8956, 248, 775, "Code",ExpressionUUID->"ce76c6e6-607c-4339-bc44-5002db5363e0"]
}, Closed]],
Cell[CellGroupData[{
Cell[270851, 7200, 89, 0, 38, "Subsection",ExpressionUUID->"1c9d14aa-e4fa-43c7-a463-0fb0f975c854"],
Cell[270943, 7202, 4329, 126, 338, "Code",ExpressionUUID->"88781786-7762-436e-88e7-32ea57b8a248"]
}, Closed]],
Cell[CellGroupData[{
Cell[275309, 7333, 95, 0, 38, "Subsection",ExpressionUUID->"d8651388-086c-4e91-8a1b-4321d177cd65"],
Cell[275407, 7335, 2073, 55, 243, "Code",ExpressionUUID->"c265f046-0659-4ba0-a446-8dd92026215b"],
Cell[277483, 7392, 4034, 111, 281, "Code",ExpressionUUID->"b0c5ca40-ee5c-4e8e-a2be-e6c19ab5e11f"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[281566, 7509, 78, 0, 53, "Section",ExpressionUUID->"a96ef353-fd5d-425a-9621-3fe4e067febe"],
Cell[281647, 7511, 233, 7, 91, "Code",ExpressionUUID->"947147f2-f482-4741-a59e-b93ede67b4b9"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281929, 7524, 124, 0, 69, "Chapter",ExpressionUUID->"95c9d13b-445a-4347-87a7-43f7db6e7a5f"],
Cell[282056, 7526, 195, 5, 52, "Code",ExpressionUUID->"ea0a7c8e-7cd5-49d0-8504-8949ad7ad62c"],
Cell[CellGroupData[{
Cell[282276, 7535, 116, 0, 45, "Subsubsection",ExpressionUUID->"6059f1c6-1fbe-45e0-aea7-add255709cee"],
Cell[282395, 7537, 1443, 38, 186, "Code",ExpressionUUID->"f81e2e99-8a33-43c6-9b07-9a18257ed9eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[283875, 7580, 79, 0, 53, "Section",ExpressionUUID->"648a6476-b797-42cf-8e5a-b9bc1a86e610"],
Cell[283957, 7582, 265, 7, 52, "Code",ExpressionUUID->"d786515a-d3bd-4718-b039-f280d0b9f02b"],
Cell[284225, 7591, 294, 7, 52, "Code",ExpressionUUID->"dbb93444-1867-4df8-88d7-4358e4ecd562"],
Cell[284522, 7600, 2409, 54, 281, "Code",ExpressionUUID->"7b3d57d2-d39e-4905-8b4b-bee6117e5212"],
Cell[286934, 7656, 3710, 84, 471, "Code",ExpressionUUID->"a1e26495-b179-4855-8335-4436fa78fd50"],
Cell[290647, 7742, 2271, 48, 357, "Code",ExpressionUUID->"684246ec-df06-4736-b3a7-7c0cdf468e9b"],
Cell[292921, 7792, 5160, 106, 1079, "Code",ExpressionUUID->"20d4f0d9-5076-4185-aaa7-f1de3061bd9e"]
}, Closed]],
Cell[CellGroupData[{
Cell[298118, 7903, 98, 0, 53, "Section",ExpressionUUID->"6bc0fc48-688d-4ca9-bac5-3a6645a0cdb0"],
Cell[298219, 7905, 274, 7, 91, "Code",ExpressionUUID->"9f392912-8772-4657-8e12-0dfb8191735b"],
Cell[CellGroupData[{
Cell[298518, 7916, 110, 0, 45, "Subsubsection",ExpressionUUID->"ed34d4f5-8774-4cc3-bed1-932ddba5c4e5"],
Cell[298631, 7918, 1067, 28, 148, "Code",ExpressionUUID->"2f231e99-d644-4c44-a094-43842e8b7f0d"],
Cell[299701, 7948, 679, 18, 72, "Code",ExpressionUUID->"401605a1-d130-461c-8461-7baf9010c1df"]
}, Closed]],
Cell[CellGroupData[{
Cell[300417, 7971, 115, 0, 37, "Subsubsection",ExpressionUUID->"993c23a1-4278-4cf3-9ea0-d4f96b7da186"],
Cell[300535, 7973, 529, 15, 52, "Code",ExpressionUUID->"bf84e85d-32d1-4c19-9b38-a35d433a0119"],
Cell[301067, 7990, 2345, 59, 281, "Code",ExpressionUUID->"6ea34ad2-a148-45ae-aa93-a48d3d461e82"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[303461, 8055, 82, 0, 67, "Section",ExpressionUUID->"72e8028f-0cb2-4491-b4a5-832df78eed16"],
Cell[CellGroupData[{
Cell[303568, 8059, 91, 0, 54, "Subsection",ExpressionUUID->"e146d239-1c00-4935-9d62-733890aa073d"],
Cell[CellGroupData[{
Cell[303684, 8063, 92, 0, 45, "Subsubsection",ExpressionUUID->"96f25e17-0c46-43e8-aa86-a343cea151ab"],
Cell[303779, 8065, 337, 8, 127, "Text",ExpressionUUID->"670cccd5-509b-4823-88ac-ff6d4791b777"],
Cell[304119, 8075, 1430, 42, 243, "Code",ExpressionUUID->"fec86841-e1b9-407e-91ed-9bcd2389efbf"],
Cell[305552, 8119, 900, 25, 91, "Code",ExpressionUUID->"b7e701c3-de85-45c2-b52e-9aa223f1ec5f"]
}, Closed]],
Cell[CellGroupData[{
Cell[306489, 8149, 90, 0, 37, "Subsubsection",ExpressionUUID->"dda37c49-20b3-459d-9f34-72d989a2b391"],
Cell[306582, 8151, 876, 27, 72, "Code",ExpressionUUID->"1bd6f123-a777-4f1c-8846-573535afb17e"]
}, Closed]],
Cell[CellGroupData[{
Cell[307495, 8183, 92, 0, 37, "Subsubsection",ExpressionUUID->"d18ddbd8-a5e7-4d3b-9ec8-10b424233e6d"],
Cell[307590, 8185, 492, 15, 52, "Code",ExpressionUUID->"25764a05-dbcb-4169-9936-584628582a73"]
}, Closed]],
Cell[CellGroupData[{
Cell[308119, 8205, 94, 0, 37, "Subsubsection",ExpressionUUID->"cd0203ed-6145-429b-aebb-26a4b4acf7bb"],
Cell[308216, 8207, 551, 16, 52, "Code",ExpressionUUID->"f895924f-63bb-45d4-83c0-970509bfd0f0"],
Cell[308770, 8225, 638, 16, 72, "Code",ExpressionUUID->"6d2abede-f7b3-4efe-a204-8ff504e5f57a"],
Cell[309411, 8243, 2397, 64, 262, "Code",ExpressionUUID->"29675125-fd21-49ee-a583-93961cfab76f"],
Cell[311811, 8309, 1191, 32, 110, "Code",ExpressionUUID->"d4b93424-3000-4189-9724-831b1489b36f"],
Cell[313005, 8343, 3759, 106, 338, "Code",ExpressionUUID->"27e614a4-c2a8-4940-82ad-70b2babd1e0b"],
Cell[316767, 8451, 1038, 29, 110, "Code",ExpressionUUID->"83a6385c-2f36-459e-ab9c-3f8d635ded07"],
Cell[317808, 8482, 2385, 65, 300, "Code",ExpressionUUID->"585ee08c-5fa7-4a7a-a1a7-81f1a9c49466"],
Cell[320196, 8549, 968, 28, 167, "Code",ExpressionUUID->"116e6b48-0fa9-4e1e-a4a5-b2b73fb8e94b"],
Cell[321167, 8579, 574, 17, 52, "Code",ExpressionUUID->"84134194-be7e-4a2f-8524-d78dc34bcbf5"],
Cell[321744, 8598, 580, 15, 72, "Code",ExpressionUUID->"396a376e-926c-47c4-bbd5-12e1440db841"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[322373, 8619, 129, 0, 38, "Subsection",ExpressionUUID->"76374e09-15c0-4285-9873-5b1119f9fbac"],
Cell[322505, 8621, 1555, 41, 281, "Code",ExpressionUUID->"c9b1dabe-f4f7-4958-94d5-a03d27395cf8"],
Cell[324063, 8664, 431, 11, 52, "Code",ExpressionUUID->"7d002678-a532-4bcd-912e-4ff0e5ae48d3"],
Cell[324497, 8677, 1338, 34, 262, "Code",ExpressionUUID->"e8c7d67f-6f52-4ba0-8e76-ccc48f493943"]
}, Closed]],
Cell[CellGroupData[{
Cell[325872, 8716, 112, 0, 38, "Subsection",ExpressionUUID->"1c2c98d9-43ff-4040-a5e0-cf72764ae01b"],
Cell[325987, 8718, 683, 16, 148, "Code",ExpressionUUID->"3068d1eb-a6e1-4120-bfef-ce9fb71e3216"],
Cell[326673, 8736, 539, 14, 129, "Code",ExpressionUUID->"bc5f153c-22ea-4998-8d43-5354d3958a35"]
}, Closed]],
Cell[CellGroupData[{
Cell[327249, 8755, 88, 0, 38, "Subsection",ExpressionUUID->"d44581db-3241-4500-8895-4f9310373c63"],
Cell[327340, 8757, 656, 17, 148, "Code",ExpressionUUID->"8ed6dc61-9ce7-4391-adff-956d7a772019"],
Cell[327999, 8776, 2155, 63, 300, "Code",ExpressionUUID->"62bac1ef-cbd7-4818-bad8-b32d8a0b8cfd"]
}, Closed]],
Cell[CellGroupData[{
Cell[330191, 8844, 117, 0, 38, "Subsection",ExpressionUUID->"0cde69d0-d061-4888-b804-bc8f12ee2607"],
Cell[330311, 8846, 1891, 50, 225, "Code",ExpressionUUID->"69971570-a0ce-4443-96f9-ac9ac653df50"],
Cell[332205, 8898, 1699, 45, 206, "Code",ExpressionUUID->"3546c726-a156-4c7c-afab-f6a3f846e262"]
}, Closed]],
Cell[CellGroupData[{
Cell[333941, 8948, 101, 0, 38, "Subsection",ExpressionUUID->"2b820542-dab3-4d0b-9a97-bb3be4d7c4e1"],
Cell[334045, 8950, 3623, 96, 377, "Code",ExpressionUUID->"96b5897b-36e7-417b-89ca-fc4131507b09"]
}, Closed]],
Cell[CellGroupData[{
Cell[337705, 9051, 147, 2, 38, "Subsection",ExpressionUUID->"92648dd9-fe4b-4454-a084-c84bea5c6cb4"],
Cell[337855, 9055, 1346, 34, 186, "Code",ExpressionUUID->"1bb5502e-b3ac-4710-8ff9-b19fa098d1c7"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[339250, 9095, 108, 0, 53, "Section",ExpressionUUID->"fdebde89-31c1-40e0-a115-f68ade3f301b"],
Cell[CellGroupData[{
Cell[339383, 9099, 169, 3, 54, "Subsection",ExpressionUUID->"6f392222-bf5b-4961-95a1-f64ae3271739"],
Cell[339555, 9104, 1210, 35, 72, "Code",ExpressionUUID->"363014a0-649a-4fa7-9e0b-27134679686f"],
Cell[340768, 9141, 1282, 37, 72, "Code",ExpressionUUID->"1bd477fd-b514-4438-88a5-1f619ede0e10"],
Cell[342053, 9180, 1325, 38, 72, "Code",ExpressionUUID->"48138634-e03b-42d4-9ae9-f9f5ceaaf2e6"]
}, Closed]],
Cell[CellGroupData[{
Cell[343415, 9223, 105, 0, 38, "Subsection",ExpressionUUID->"702d28ea-9096-4e71-ab44-fc7989355b93"],
Cell[343523, 9225, 1418, 38, 110, "Code",ExpressionUUID->"cc24f4ca-ba03-4371-9cf3-0b9712ccd804"],
Cell[344944, 9265, 953, 24, 129, "Code",ExpressionUUID->"e7080ce3-2904-4c72-bd09-95058f237fa4"]
}, Closed]],
Cell[CellGroupData[{
Cell[345934, 9294, 100, 0, 38, "Subsection",ExpressionUUID->"55d1c213-4bb2-4451-ba1c-fdc21c15bcf2"],
Cell[346037, 9296, 456, 12, 52, "Code",ExpressionUUID->"b074e873-e000-444e-bfd3-912d2da5f9f6"]
}, Closed]],
Cell[CellGroupData[{
Cell[346530, 9313, 148, 2, 38, "Subsection",ExpressionUUID->"3f58e51a-22ea-423b-a461-52f70b313601"],
Cell[346681, 9317, 6588, 198, 587, "Code",ExpressionUUID->"962d6ed6-55b6-443c-89ca-3f41ecb08743"]
}, Closed]],
Cell[CellGroupData[{
Cell[353306, 9520, 113, 0, 38, "Subsection",ExpressionUUID->"8f391a10-04f2-4ed7-aea1-145efce6a5b2"],
Cell[353422, 9522, 2307, 59, 281, "Code",ExpressionUUID->"fc8e80b7-f492-45a8-ad2d-80d222d7c4ab"],
Cell[355732, 9583, 2339, 59, 281, "Code",ExpressionUUID->"21b3ac33-1f56-4c92-a764-e44557b03761"]
}, Closed]],
Cell[CellGroupData[{
Cell[358108, 9647, 98, 0, 38, "Subsection",ExpressionUUID->"5ef4575d-ff53-410b-b2dc-0721806c9003"],
Cell[358209, 9649, 4308, 107, 623, "Code",ExpressionUUID->"e2d65e56-4673-4c8e-8227-2994bb1c0619"],
Cell[362520, 9758, 1843, 47, 262, "Code",ExpressionUUID->"097af00b-cd95-484d-a8cd-bcd98c53194e"],
Cell[364366, 9807, 8879, 225, 891, "Code",ExpressionUUID->"eb2c692b-8016-46c8-9bbf-9494375f1de4"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[373294, 10038, 93, 0, 67, "Section",ExpressionUUID->"6c87b55b-aadb-402e-9eef-99119af5b41f"],
Cell[CellGroupData[{
Cell[373412, 10042, 131, 0, 54, "Subsection",ExpressionUUID->"60e056ed-a16c-4841-8b4b-dde35c6dcbd9"],
Cell[373546, 10044, 13587, 342, 1403, "Code",ExpressionUUID->"c31057a9-e7ec-4599-a3a8-91e81672b45a"],
Cell[387136, 10388, 5435, 146, 642, "Code",ExpressionUUID->"894f0b58-5723-4d0e-809d-4ee4d9dc3d49"],
Cell[392574, 10536, 3490, 80, 414, "Code",ExpressionUUID->"05b7ff90-ba72-4264-910c-7dcce83fa5b1"]
}, Closed]],
Cell[CellGroupData[{
Cell[396101, 10621, 106, 0, 38, "Subsection",ExpressionUUID->"9cfdc11c-7ae4-4bc5-9b1d-79dc2c28c20a"],
Cell[396210, 10623, 1198, 30, 110, "Code",ExpressionUUID->"ca2e65ed-8d19-4650-9d7a-afae1df6efcc"]
}, Closed]],
Cell[CellGroupData[{
Cell[397445, 10658, 95, 0, 38, "Subsection",ExpressionUUID->"a08fec2b-4c6d-4ec5-a6c9-19108d52a205"],
Cell[397543, 10660, 3883, 102, 357, "Code",ExpressionUUID->"ffd7ea39-a364-44f4-94e2-69aab71ecae0"],
Cell[401429, 10764, 415, 11, 72, "Code",ExpressionUUID->"f855b1b9-6eff-4966-88ee-3d609bef8039"]
}, Closed]],
Cell[CellGroupData[{
Cell[401881, 10780, 100, 0, 38, "Subsection",ExpressionUUID->"a2de7482-cba2-4331-aa97-96a42e271549"],
Cell[401984, 10782, 2244, 58, 224, "Code",ExpressionUUID->"4f17c454-da11-4447-8d57-5317848adaf8"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[404277, 10846, 82, 0, 67, "Section",ExpressionUUID->"7efcf6d8-4de1-4a1a-8c78-769edd726844"],
Cell[CellGroupData[{
Cell[404384, 10850, 214, 4, 81, "Subsection",ExpressionUUID->"6c532f1a-6b68-4aeb-bf90-019593cda361"],
Cell[CellGroupData[{
Cell[404623, 10858, 98, 0, 45, "Subsubsection",ExpressionUUID->"7d0695ab-1f95-4456-bdd4-8561d1a4a5d3"],
Cell[404724, 10860, 2911, 73, 243, "Code",ExpressionUUID->"ed59bca9-5f7a-4563-afbb-03d341794d53"]
}, Closed]],
Cell[CellGroupData[{
Cell[407672, 10938, 96, 0, 37, "Subsubsection",ExpressionUUID->"c7e5235f-14a6-4abe-b812-30b297accf20"],
Cell[407771, 10940, 2444, 61, 281, "Code",ExpressionUUID->"f046e6c6-b4ba-4075-9f4b-08d736a5ace0"]
}, Closed]],
Cell[CellGroupData[{
Cell[410252, 11006, 96, 0, 37, "Subsubsection",ExpressionUUID->"b00a89e2-31a5-4fdf-a915-adf6c32c6321"],
Cell[410351, 11008, 2138, 54, 167, "Code",ExpressionUUID->"74157408-0c66-4842-b8b7-e411e07d55a7"]
}, Closed]],
Cell[CellGroupData[{
Cell[412526, 11067, 96, 0, 37, "Subsubsection",ExpressionUUID->"f98efa5b-3c69-4077-8d5a-b51de41d58c8"],
Cell[412625, 11069, 2147, 55, 167, "Code",ExpressionUUID->"4b209ac4-fa60-42af-ba35-3792b420927e"]
}, Closed]],
Cell[CellGroupData[{
Cell[414809, 11129, 98, 0, 37, "Subsubsection",ExpressionUUID->"6bd1325f-52af-4db8-98a7-f6e93bc91db9"],
Cell[414910, 11131, 3790, 95, 262, "Code",ExpressionUUID->"0362da2d-fd61-40ec-b51e-c69ed928b0d7"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[418749, 11232, 99, 0, 54, "Subsection",ExpressionUUID->"0fef66b1-5c36-4263-bc92-9241a15dc681"],
Cell[418851, 11234, 1335, 48, 300, "Code",ExpressionUUID->"33cc50ea-c5a6-457f-8f47-13118b690292"]
}, Closed]],
Cell[CellGroupData[{
Cell[420223, 11287, 101, 0, 38, "Subsection",ExpressionUUID->"c6c03fa0-3229-4dd7-afc5-2a195b6c78d6"],
Cell[CellGroupData[{
Cell[420349, 11291, 100, 0, 45, "Subsubsection",ExpressionUUID->"4e2ed6ef-c949-4a3f-abd2-7e4ee843fa95"],
Cell[420452, 11293, 447, 14, 91, "Code",ExpressionUUID->"36f88f0a-d9f2-47b0-a1b3-bed489a613e0"],
Cell[420902, 11309, 1641, 43, 167, "Code",ExpressionUUID->"17b69bef-e499-4349-baa1-daabc117b244"],
Cell[422546, 11354, 2252, 64, 262, "Code",ExpressionUUID->"b3dd01b3-e2b3-4f86-9379-bb750cf02b0f"]
}, Closed]],
Cell[CellGroupData[{
Cell[424835, 11423, 100, 0, 37, "Subsubsection",ExpressionUUID->"ee4062c6-055d-4d98-aa31-c01db58958d2"],
Cell[424938, 11425, 447, 14, 91, "Code",ExpressionUUID->"949d5667-3ae5-4dec-b4c8-b878d6e06539"],
Cell[425388, 11441, 2528, 67, 224, "Code",ExpressionUUID->"4bd86452-df2c-49a9-85be-4186d23886da"],
Cell[427919, 11510, 2719, 67, 414, "Code",ExpressionUUID->"47d503bb-80a8-46f4-adfd-d8e28cca427f"]
}, Closed]],
Cell[CellGroupData[{
Cell[430675, 11582, 107, 0, 37, "Subsubsection",ExpressionUUID->"6e26983a-185e-44bf-ac51-16107024bc44"],
Cell[430785, 11584, 469, 14, 91, "Code",ExpressionUUID->"8d3c9eb9-8577-40c3-b2a9-67a6dbfb2bd7"],
Cell[431257, 11600, 2601, 67, 224, "Code",ExpressionUUID->"d6b7fefc-3c97-48b6-aa3b-634122a7326d"],
Cell[433861, 11669, 2586, 65, 395, "Code",ExpressionUUID->"b38f48e1-50f8-461b-954a-16c4e8e83427"]
}, Closed]],
Cell[CellGroupData[{
Cell[436484, 11739, 94, 0, 37, "Subsubsection",ExpressionUUID->"53909e4a-e9b3-4b91-ba43-6442595c2658"],
Cell[436581, 11741, 426, 14, 91, "Code",ExpressionUUID->"a0547189-6c97-4c22-9294-333665d1f20e"],
Cell[437010, 11757, 2724, 72, 262, "Code",ExpressionUUID->"fe12d61c-c2b8-41f3-93cc-6879d3615206"],
Cell[439737, 11831, 8891, 204, 699, "Code",ExpressionUUID->"c0d5a99a-fc74-4eed-a096-7b22190d0c1a"],
Cell[448631, 12037, 7187, 175, 680, "Code",ExpressionUUID->"f1f67da6-685b-4863-a6e5-867dca6d7d71"]
}, Closed]],
Cell[CellGroupData[{
Cell[455855, 12217, 94, 0, 37, "Subsubsection",ExpressionUUID->"7f555d7d-65ac-41d9-b354-767dbfdea267"],
Cell[455952, 12219, 572, 18, 110, "Code",ExpressionUUID->"1258f73c-5d73-4fd1-89c9-b8572c60a5f2"],
Cell[456527, 12239, 4469, 125, 300, "Code",ExpressionUUID->"383dd186-4709-4e0c-bd04-18a0c8d007c9"],
Cell[460999, 12366, 28470, 680, 2599, "Code",ExpressionUUID->"457f1a6d-3d7b-48cc-9239-8e3f57cf5799"]
}, Closed]],
Cell[CellGroupData[{
Cell[489506, 13051, 90, 0, 37, "Subsubsection",ExpressionUUID->"d3174cc3-0acb-46eb-8dda-1333a3ceb442"],
Cell[489599, 13053, 399, 12, 91, "Code",ExpressionUUID->"f802bda3-d5f3-4d3e-b81c-3e76a69ab79b"],
Cell[490001, 13067, 1109, 31, 148, "Code",ExpressionUUID->"47774888-3edf-4b60-83d4-34a5e6235fb7"],
Cell[491113, 13100, 2752, 80, 281, "Code",ExpressionUUID->"2a0a3d4f-9fca-4409-ad68-00efd98262eb"],
Cell[493868, 13182, 14497, 351, 1497, "Code",ExpressionUUID->"b05096c8-cccb-4a62-8f5e-3eadb3574667"]
}, Closed]],
Cell[CellGroupData[{
Cell[508402, 13538, 93, 0, 37, "Subsubsection",ExpressionUUID->"e1b81da1-dbc7-4247-b5fd-7c771260b4c4"],
Cell[508498, 13540, 420, 13, 91, "Code",ExpressionUUID->"85e56c67-2bab-445d-9c45-3aa8de10dd5c"],
Cell[508921, 13555, 1629, 44, 167, "Code",ExpressionUUID->"39e4fbce-94cb-4ec1-909a-9be6211b734a"],
Cell[510553, 13601, 894, 26, 72, "Code",ExpressionUUID->"c161f406-b316-4337-bc62-09fbc7236f0c"],
Cell[511450, 13629, 9259, 214, 680, "Code",ExpressionUUID->"6969d9a9-f29e-49b1-bd28-24b1e249bfb5"],
Cell[520712, 13845, 3158, 84, 281, "Code",ExpressionUUID->"6e37a092-e53a-4e96-9b44-eafeab8280a0"],
Cell[523873, 13931, 2387, 65, 281, "Code",ExpressionUUID->"eefa33f0-9487-482a-a9f9-75992e7dc134"]
}, Closed]],
Cell[CellGroupData[{
Cell[526297, 14001, 91, 0, 37, "Subsubsection",ExpressionUUID->"43186013-f54c-4925-b767-89869d60a75b"],
Cell[526391, 14003, 298, 9, 72, "Code",ExpressionUUID->"b80bf0d1-baf4-427d-be8d-d95034e606a0"],
Cell[526692, 14014, 5587, 152, 680, "Code",ExpressionUUID->"105425f9-6faa-403b-bf41-cd3b92587bc2"],
Cell[532282, 14168, 19331, 477, 832, "Code",ExpressionUUID->"af3fed59-5075-43ec-8a7e-0533187360f0"]
}, Closed]],
Cell[CellGroupData[{
Cell[551650, 14650, 99, 0, 37, "Subsubsection",ExpressionUUID->"0f8d50f1-afcc-44d1-b384-6e361cf93302"],
Cell[551752, 14652, 323, 10, 72, "Code",ExpressionUUID->"e3cc1134-2603-4b48-a8e9-658a0ea43da5"],
Cell[552078, 14664, 1532, 42, 167, "Code",ExpressionUUID->"c2dc76eb-f1f2-4627-94b2-322d01f7c229"],
Cell[553613, 14708, 2226, 60, 281, "Code",ExpressionUUID->"983639bb-e7ad-4ed8-a16b-1a1e153cc30e"],
Cell[555842, 14770, 6896, 148, 452, "Code",ExpressionUUID->"4da8bcf9-f7fc-4baa-a7fe-2d419e79ddc2"],
Cell[562741, 14920, 753, 23, 72, "Code",ExpressionUUID->"856f48e0-31e2-4ceb-a592-f7ee2ce95867"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[563543, 14949, 102, 0, 54, "Subsection",ExpressionUUID->"cb0705f5-6ee7-42ce-bd98-337ea66e1bcf"],
Cell[CellGroupData[{
Cell[563670, 14953, 122, 0, 45, "Subsubsection",ExpressionUUID->"936edf7f-020a-47a7-9d2d-d59ca5691bea"],
Cell[563795, 14955, 1478, 37, 129, "Code",ExpressionUUID->"8d08c533-5aca-4c92-9115-3251c5110c59"],
Cell[565276, 14994, 1577, 42, 186, "Code",ExpressionUUID->"414a48f8-0460-4f16-beb3-5304ae31782f"],
Cell[566856, 15038, 3439, 97, 262, "Code",ExpressionUUID->"fc7c8ee8-7208-4bfb-b0d2-9a8e8f5faa83"],
Cell[570298, 15137, 2847, 75, 262, "Code",ExpressionUUID->"0cd90e14-bdd3-4e77-87ae-322091a59501"]
}, Closed]],
Cell[CellGroupData[{
Cell[573182, 15217, 92, 0, 37, "Subsubsection",ExpressionUUID->"ad1bcf64-cd10-4ca6-b1cc-585d731370c7"],
Cell[573277, 15219, 2024, 52, 186, "Code",ExpressionUUID->"a8f653e6-0073-4e26-88b3-b7e9ea5fa4e3"]
}, Closed]],
Cell[CellGroupData[{
Cell[575338, 15276, 96, 0, 37, "Subsubsection",ExpressionUUID->"8cce2016-734e-42f2-be2b-cbdd076c933d"],
Cell[575437, 15278, 614, 16, 72, "Code",ExpressionUUID->"a044e23e-1cf7-439c-8988-ba19bc69562f"]
}, Closed]],
Cell[CellGroupData[{
Cell[576088, 15299, 95, 0, 37, "Subsubsection",ExpressionUUID->"82b83af1-364d-4441-ac6f-7d4ab9c93140"],
Cell[576186, 15301, 1034, 26, 129, "Code",ExpressionUUID->"24754796-afb7-45a3-8951-4a536a4a06ac"]
}, Closed]],
Cell[CellGroupData[{
Cell[577257, 15332, 94, 0, 37, "Subsubsection",ExpressionUUID->"40634b5d-5042-457b-b993-97b346712759"],
Cell[577354, 15334, 1029, 27, 129, "Code",ExpressionUUID->"7a361400-0ab0-480a-8540-923e7b45dae0"]
}, Closed]],
Cell[CellGroupData[{
Cell[578420, 15366, 94, 0, 37, "Subsubsection",ExpressionUUID->"b14c81ad-57f2-4d31-b5c8-6ba50d536466"],
Cell[578517, 15368, 631, 17, 72, "Code",ExpressionUUID->"b4b8b7fc-0ce5-405c-bfdc-ceda27c196cd"]
}, Closed]],
Cell[CellGroupData[{
Cell[579185, 15390, 93, 0, 37, "Subsubsection",ExpressionUUID->"5aef37b4-8e7e-4e78-8436-4ba089791318"],
Cell[579281, 15392, 620, 16, 72, "Code",ExpressionUUID->"17113e68-20ca-4fc5-b9c9-b00d33e0fb3d"]
}, Closed]],
Cell[CellGroupData[{
Cell[579938, 15413, 96, 0, 37, "Subsubsection",ExpressionUUID->"51d396bd-59b9-41b5-8132-3e59ac3c087f"],
Cell[580037, 15415, 498, 12, 72, "Code",ExpressionUUID->"39a0c5e5-34c0-48f6-8ad7-a3093cefd676"]
}, Closed]],
Cell[CellGroupData[{
Cell[580572, 15432, 120, 0, 37, "Subsubsection",ExpressionUUID->"72d58bed-db3c-4a7d-9208-04f5cef0b41d"],
Cell[580695, 15434, 624, 16, 72, "Code",ExpressionUUID->"ef666df7-d4d4-42ba-a742-668ead4cc0eb"],
Cell[581322, 15452, 648, 16, 72, "Code",ExpressionUUID->"00cc8537-555f-44c2-a479-a17ad44530f5"]
}, Closed]],
Cell[CellGroupData[{
Cell[582007, 15473, 106, 0, 37, "Subsubsection",ExpressionUUID->"629e0869-a792-448b-b759-8452461b16c9"],
Cell[582116, 15475, 352, 9, 52, "Code",ExpressionUUID->"77d06f1b-f7ab-4500-a658-4079097e7227"],
Cell[582471, 15486, 2468, 68, 357, "Code",ExpressionUUID->"63542191-1f62-4e2b-9a55-5238b3bb62ea"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[585000, 15561, 86, 0, 67, "Section",ExpressionUUID->"1057eff9-5f17-4068-acc7-4bffd91fc573"],
Cell[CellGroupData[{
Cell[585111, 15565, 105, 0, 54, "Subsection",ExpressionUUID->"570218bd-49b5-4ca4-b546-bea8c4815be7"],
Cell[585219, 15567, 188, 3, 35, "Text",ExpressionUUID->"7de08b25-a660-4064-8f9f-9c0584610130"],
Cell[585410, 15572, 3520, 84, 452, "Code",ExpressionUUID->"8fc21ec3-bd31-48c7-99a9-e6f2bd594953"],
Cell[588933, 15658, 2100, 55, 357, "Code",ExpressionUUID->"8ac23fb1-7284-4a34-87b9-593e96f3af72"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[591082, 15719, 78, 0, 67, "Section",ExpressionUUID->"6e6b1080-8143-41c2-bf56-a613ed97817c"],
Cell[591163, 15721, 233, 7, 91, "Code",ExpressionUUID->"f4f9e795-777e-433c-97fa-0aa5d3bb0d3a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[591445, 15734, 125, 0, 58, "Chapter",ExpressionUUID->"b2dba352-41ac-4c41-8cd0-89374938bec7"],
Cell[591573, 15736, 195, 5, 52, "Code",ExpressionUUID->"b82d541f-dac9-4957-9bce-6f05e2b763c2"],
Cell[CellGroupData[{
Cell[591793, 15745, 79, 0, 67, "Section",ExpressionUUID->"73915429-1494-4af5-b0a0-500eb7ba478d"],
Cell[591875, 15747, 1304, 29, 224, "Code",ExpressionUUID->"d062486e-3334-4371-b057-cc402806a5aa"],
Cell[593182, 15778, 996, 22, 167, "Code",ExpressionUUID->"54d13d81-bc52-43f3-b92b-77ecb238a8aa"],
Cell[594181, 15802, 2436, 50, 395, "Code",ExpressionUUID->"d3d232a2-d2f0-4edd-811a-e6bfe8f464d3"],
Cell[596620, 15854, 2329, 47, 452, "Code",ExpressionUUID->"9f3c6bc3-e1f2-404a-b458-b61b234f2a0c"],
Cell[598952, 15903, 4043, 72, 357, "Code",ExpressionUUID->"26ac018e-d3cd-4b8e-8be3-ef6964a705fa"],
Cell[602998, 15977, 2868, 49, 224, "Code",ExpressionUUID->"b5932bf9-eb16-4733-95a2-c0d28cbc74eb"],
Cell[605869, 16028, 302, 7, 52, "Code",ExpressionUUID->"7b07195b-81ae-4c6b-b53b-c12da7b91d15"]
}, Closed]],
Cell[CellGroupData[{
Cell[606208, 16040, 85, 0, 53, "Section",ExpressionUUID->"8a9e5486-2df6-4b93-9dc2-b554504ae96d"],
Cell[606296, 16042, 363, 10, 110, "Code",ExpressionUUID->"e1d9d711-2332-45c6-b149-b767382b3d44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606696, 16057, 100, 0, 67, "Section",ExpressionUUID->"9fbb1e8d-4aff-41c8-a1c6-577a2f9fb10e"],
Cell[CellGroupData[{
Cell[606821, 16061, 92, 0, 54, "Subsection",ExpressionUUID->"99d232f2-b91d-458c-a3db-d922760b95e4"],
Cell[606916, 16063, 1380, 36, 205, "Code",ExpressionUUID->"acfcd0c2-af8a-418c-a3d7-96424de01343"]
}, Closed]],
Cell[CellGroupData[{
Cell[608333, 16104, 97, 0, 38, "Subsection",ExpressionUUID->"1dfd8d13-1b68-4298-a629-f270fa825602"],
Cell[608433, 16106, 1487, 37, 129, "Code",ExpressionUUID->"c096df45-35d7-4194-bb7d-c685fc4d292d"]
}, Closed]],
Cell[CellGroupData[{
Cell[609957, 16148, 94, 0, 38, "Subsection",ExpressionUUID->"8488fe5a-cff7-4dfa-ac4b-5654c56b2c7f"],
Cell[610054, 16150, 2763, 78, 262, "Code",ExpressionUUID->"379532fc-ab3b-4100-8b5e-6183b7f55947"],
Cell[612820, 16230, 4870, 134, 585, "Code",ExpressionUUID->"2e6066e1-9346-4cd8-aed9-3d85923df3d3"],
Cell[617693, 16366, 1108, 29, 205, "Code",ExpressionUUID->"1215db5f-4226-4914-976f-95e9ec2bdd56"]
}, Closed]],
Cell[CellGroupData[{
Cell[618838, 16400, 122, 0, 38, "Subsection",ExpressionUUID->"ad6ad24c-4f7b-4beb-92a1-ed99eb40f1e7"],
Cell[618963, 16402, 3185, 82, 395, "Code",ExpressionUUID->"47297589-ee37-43ff-bf7f-7c152204d265"],
Cell[622151, 16486, 2565, 63, 300, "Code",ExpressionUUID->"11766d39-10ef-4cf6-927c-a440d6c8c708"]
}, Closed]],
Cell[CellGroupData[{
Cell[624753, 16554, 190, 3, 38, "Subsection",ExpressionUUID->"af2c53f5-a9de-4109-a13f-82f175ddf7f2"],
Cell[624946, 16559, 2009, 53, 186, "Code",ExpressionUUID->"db6a5df8-19c5-4bab-8ac6-3147ffb02c54"],
Cell[626958, 16614, 5374, 122, 775, "Code",ExpressionUUID->"b298e006-af04-4d16-996b-24e3bd33eb73"],
Cell[632335, 16738, 2232, 55, 281, "Code",ExpressionUUID->"d950c243-7cbd-4fa7-9959-4787123d60ec"]
}, Closed]],
Cell[CellGroupData[{
Cell[634604, 16798, 93, 0, 38, "Subsection",ExpressionUUID->"05958150-2753-49a1-bcff-ad04e453151c"],
Cell[634700, 16800, 3856, 110, 471, "Code",ExpressionUUID->"5e7cf034-611a-4000-a371-7ce6fd7d8af1"]
}, Closed]],
Cell[CellGroupData[{
Cell[638593, 16915, 94, 0, 38, "Subsection",ExpressionUUID->"8bb00a64-b11b-49dc-8019-90801a7f898c"],
Cell[638690, 16917, 1103, 30, 186, "Code",ExpressionUUID->"d5b77de4-6377-4475-99bc-9c004e543f84"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[639842, 16953, 105, 0, 67, "Section",ExpressionUUID->"be412990-58f1-4e3c-bc6b-ba37fa0aa38e"],
Cell[CellGroupData[{
Cell[639972, 16957, 90, 0, 54, "Subsection",ExpressionUUID->"a7008bb2-24cc-448f-8adf-7c2a22dda581"],
Cell[640065, 16959, 1597, 43, 186, "Code",ExpressionUUID->"f5ba25d8-abb2-4a17-9b94-d7776304b74e"],
Cell[641665, 17004, 2364, 66, 452, "Code",ExpressionUUID->"950dff22-28f0-4fb2-a83f-4d38bd914428"]
}, Closed]],
Cell[CellGroupData[{
Cell[644066, 17075, 96, 0, 38, "Subsection",ExpressionUUID->"544c5086-1df8-4504-beb9-cdd9287aa475"],
Cell[644165, 17077, 7727, 181, 642, "Code",ExpressionUUID->"1ff66576-f1b4-46d1-9239-013556c9f5eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[651929, 17263, 104, 0, 38, "Subsection",ExpressionUUID->"e5fb46ed-8d91-476b-90c1-a5a692e9c7b6"],
Cell[652036, 17265, 7766, 182, 623, "Code",ExpressionUUID->"c1058285-daa4-49c3-b6e6-cf523195583e"]
}, Closed]],
Cell[CellGroupData[{
Cell[659839, 17452, 86, 0, 38, "Subsection",ExpressionUUID->"1d6849e4-8a93-416b-9629-816a8d713505"],
Cell[659928, 17454, 1829, 50, 167, "Code",ExpressionUUID->"91d3ea7e-b367-4d8f-a2e1-b86f413fad70"],
Cell[661760, 17506, 2507, 71, 205, "Code",ExpressionUUID->"83cf1a8f-e72b-4988-9fbc-31a4ee901dc2"]
}, Closed]],
Cell[CellGroupData[{
Cell[664304, 17582, 100, 0, 38, "Subsection",ExpressionUUID->"4ad8f35c-0c6e-432e-92bd-045a2058c437"],
Cell[664407, 17584, 4320, 115, 376, "Code",ExpressionUUID->"aac3bd51-98d4-4ee4-9066-cb36ede9eb5c"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[668776, 17705, 98, 0, 67, "Section",ExpressionUUID->"a179735a-0e92-4be5-8c11-2f14787a7022"],
Cell[CellGroupData[{
Cell[668899, 17709, 87, 0, 54, "Subsection",ExpressionUUID->"9f7f7300-e093-4608-bdc0-515eb88529f0"],
Cell[668989, 17711, 10887, 268, 1174, "Code",ExpressionUUID->"b8878c3c-97d6-4b85-9234-4ded19c9f3fd"]
}, Closed]],
Cell[CellGroupData[{
Cell[679913, 17984, 95, 0, 38, "Subsection",ExpressionUUID->"cc530052-f836-4fca-b7ce-fe5da13a5e96"],
Cell[680011, 17986, 2447, 61, 205, "Code",ExpressionUUID->"669b7e87-e2af-43e9-8628-280eb9053ab1"]
}, Closed]],
Cell[CellGroupData[{
Cell[682495, 18052, 98, 0, 38, "Subsection",ExpressionUUID->"b7156b33-cb6c-4b74-aacf-f98656168e47"],
Cell[682596, 18054, 4676, 119, 568, "Code",ExpressionUUID->"b0b15184-d1a1-457a-8b95-c43845ad02d9"],
Cell[687275, 18175, 3008, 67, 415, "Code",ExpressionUUID->"1541376a-e966-4f59-8e04-b3265424a372"],
Cell[CellGroupData[{
Cell[690308, 18246, 104, 0, 45, "Subsubsection",ExpressionUUID->"8eb12589-13d0-4db1-8d82-5a7f3627cf24"],
Cell[690415, 18248, 4081, 108, 376, "Code",ExpressionUUID->"d23ba088-27d1-4486-af97-c5061397f6ff"],
Cell[694499, 18358, 224, 6, 52, "Code",ExpressionUUID->"49ff6c33-b326-4e81-9f7f-58b38ecac55a"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[694772, 18370, 94, 0, 38, "Subsection",ExpressionUUID->"534dfc5d-c63b-4c6e-ba63-758d27e8d0e1"],
Cell[694869, 18372, 5763, 157, 699, "Code",ExpressionUUID->"f995f568-5603-423b-b92c-73f086e5526e"],
Cell[700635, 18531, 7513, 200, 889, "Code",ExpressionUUID->"b05402af-776c-4acb-bfe9-c46f1bc36e1e"],
Cell[708151, 18733, 26367, 731, 112, "Code",ExpressionUUID->"2df2e8ac-6715-419b-b5cd-63a7ffa6face"]
}, Closed]],
Cell[CellGroupData[{
Cell[734555, 19469, 102, 0, 38, "Subsection",ExpressionUUID->"fdb08a27-d392-4708-8d7c-e22a50d18359"],
Cell[CellGroupData[{
Cell[734682, 19473, 120, 0, 45, "Subsubsection",ExpressionUUID->"043fba01-a9ed-4a37-9182-6e60ca559505"],
Cell[734805, 19475, 1248, 32, 243, "Code",ExpressionUUID->"066adf50-6828-4aea-a6bb-c6afb7d98a82"],
Cell[736056, 19509, 1977, 58, 205, "Code",ExpressionUUID->"ce6d6f2c-48d8-4ec7-ade0-2516669648a1"]
}, Closed]],
Cell[CellGroupData[{
Cell[738070, 19572, 151, 2, 37, "Subsubsection",ExpressionUUID->"60e19505-c58d-41b9-83e1-93382c6b5f0e"],
Cell[738224, 19576, 911, 24, 129, "Code",ExpressionUUID->"012050bf-af43-467f-8c4c-ab008faf4d1a"]
}, Closed]],
Cell[CellGroupData[{
Cell[739172, 19605, 105, 0, 37, "Subsubsection",ExpressionUUID->"bc228997-732f-4570-80d8-fa2b9bd50f25"],
Cell[739280, 19607, 437, 11, 52, "Code",ExpressionUUID->"b21c5234-5bbb-457a-92fc-46ee4c5f0e27"],
Cell[739720, 19620, 2101, 54, 224, "Code",ExpressionUUID->"7b32ddb1-db56-4cb0-9b8d-da5ec6e9a55b"],
Cell[741824, 19676, 1743, 42, 338, "Code",ExpressionUUID->"a5364f25-eff6-4acb-91ec-f48e03bebed9"],
Cell[743570, 19720, 2461, 64, 376, "Code",ExpressionUUID->"92ffeed0-c3d9-4161-bdf3-36b3e40fc494"],
Cell[746034, 19786, 2568, 67, 376, "Code",ExpressionUUID->"fc66d059-3816-4b04-a69b-80ebdc0fcb74"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[748663, 19860, 88, 0, 67, "Section",ExpressionUUID->"333eb685-a2c4-4c84-bd5e-8615e1631051"],
Cell[CellGroupData[{
Cell[748776, 19864, 95, 0, 54, "Subsection",ExpressionUUID->"7175c9bb-4b34-456a-961e-4df84c76e52c"],
Cell[748874, 19866, 8647, 211, 908, "Code",ExpressionUUID->"d218d248-ce20-48a5-af65-68e0c4272cc5"]
}, Closed]],
Cell[CellGroupData[{
Cell[757558, 20082, 104, 0, 38, "Subsection",ExpressionUUID->"5ea20f50-81a4-427a-bc68-378f73dcb50b"],
Cell[757665, 20084, 4202, 111, 376, "Code",ExpressionUUID->"ae1e713b-def1-4284-a80c-7c15c0aec447"],
Cell[761870, 20197, 3789, 98, 319, "Code",ExpressionUUID->"84c86739-b364-471a-beae-96cff8470e91"]
}, Closed]],
Cell[CellGroupData[{
Cell[765696, 20300, 91, 0, 38, "Subsection",ExpressionUUID->"3fdd0cdc-6a5f-4e8e-92b2-1a97ac4fb176"],
Cell[765790, 20302, 6064, 141, 737, "Code",ExpressionUUID->"bb3a7d49-4ce8-41fc-b235-752e697856ab"]
}, Closed]],
Cell[CellGroupData[{
Cell[771891, 20448, 99, 0, 38, "Subsection",ExpressionUUID->"4943eeb1-0a06-427a-8438-0fa94c25262d"],
Cell[771993, 20450, 495, 14, 52, "Code",ExpressionUUID->"b649267b-3eb7-488c-aa47-6711a6ebdcc9"],
Cell[772491, 20466, 2767, 70, 377, "Code",ExpressionUUID->"83a592c0-4483-4c46-8440-5e3cfc26f34a"],
Cell[775261, 20538, 821, 22, 110, "Code",ExpressionUUID->"52dcd2cd-c194-44c3-a973-37f1d0ee3ac9"],
Cell[776085, 20562, 4885, 117, 756, "Code",ExpressionUUID->"b327d84b-f6fd-4e10-a64a-483813cf0a29"],
Cell[780973, 20681, 6483, 165, 623, "Code",ExpressionUUID->"acf53775-617a-4c64-abce-1ca8d0a00a98"],
Cell[787459, 20848, 1225, 31, 224, "Code",ExpressionUUID->"cc158a20-c3f3-4d03-9644-fc087c2118ee"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[788733, 20885, 114, 0, 67, "Section",ExpressionUUID->"d6a44126-9792-4309-a17f-48bcc9564428"],
Cell[CellGroupData[{
Cell[788872, 20889, 103, 0, 54, "Subsection",ExpressionUUID->"5e57b61a-d219-4934-a890-cd59956902d1"],
Cell[788978, 20891, 6141, 149, 680, "Code",ExpressionUUID->"b8f6c0e1-9575-4565-94e8-3146faa40eae"]
}, Closed]],
Cell[CellGroupData[{
Cell[795156, 21045, 102, 0, 38, "Subsection",ExpressionUUID->"bc938ce6-3992-448f-acc2-17a2ed40c182"],
Cell[795261, 21047, 1595, 43, 262, "Code",ExpressionUUID->"dad8f07f-6e82-4d90-82ad-f6ac6a36ef22"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[796905, 21096, 93, 0, 67, "Section",ExpressionUUID->"3a07a406-3a93-4f1d-9018-62647c8f04a2"],
Cell[CellGroupData[{
Cell[797023, 21100, 93, 0, 54, "Subsection",ExpressionUUID->"73422a9f-f78f-40d0-b5cf-0b9ca1818700"],
Cell[797119, 21102, 1105, 31, 148, "Code",ExpressionUUID->"3e97a0de-a970-4d5c-ab00-d0691ecf3e87"],
Cell[798227, 21135, 2511, 61, 357, "Code",ExpressionUUID->"cad7656e-ac79-4b74-bd8a-9e72c0644b19"],
Cell[CellGroupData[{
Cell[800763, 21200, 151, 2, 45, "Subsubsection",ExpressionUUID->"ce099429-1333-43b9-b495-fa2b90f21605"],
Cell[800917, 21204, 3697, 93, 357, "Code",ExpressionUUID->"9357dc4e-c4b9-4298-9e85-37d87e5d3ebc"]
}, Closed]],
Cell[CellGroupData[{
Cell[804651, 21302, 104, 0, 37, "Subsubsection",ExpressionUUID->"603d4498-8b6c-4503-933d-b4a9c97b5661"],
Cell[804758, 21304, 12872, 298, 1725, "Code",ExpressionUUID->"9c6a83e3-770d-4c96-b30e-1d9e09063824"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[817679, 21608, 122, 0, 38, "Subsection",ExpressionUUID->"f771deb2-a4a2-400f-b0c2-7680cc5b00ac"],
Cell[817804, 21610, 1109, 28, 243, "Code",ExpressionUUID->"4315eb56-9425-419f-b071-2e2f797f402d"],
Cell[818916, 21640, 706, 19, 110, "Code",ExpressionUUID->"f36975ed-8d9f-4ec4-babc-cce78e40b1a9"],
Cell[819625, 21661, 3681, 101, 358, "Code",ExpressionUUID->"bd2ebe0c-ce7f-45f7-bfc1-49aa1aec9a95"],
Cell[823309, 21764, 3420, 79, 300, "Code",ExpressionUUID->"1b30499b-3dd1-4129-8c80-b3664c73ca01"],
Cell[826732, 21845, 651, 16, 91, "Code",ExpressionUUID->"e01b2e15-065d-44be-a333-3bb058054274"],
Cell[827386, 21863, 2771, 76, 263, "Code",ExpressionUUID->"a850dc3b-621f-4bd6-aaee-873395b1bb45"],
Cell[830160, 21941, 2453, 68, 226, "Code",ExpressionUUID->"d0b96612-939a-4fb2-8f6e-a03a87c8f541"],
Cell[832616, 22011, 3539, 84, 300, "Code",ExpressionUUID->"d9dde884-5ff3-466a-b915-739df74cc11a"],
Cell[836158, 22097, 4276, 102, 300, "Code",ExpressionUUID->"78b2f67f-dc48-44fe-9713-fc2cd8b3ffff"],
Cell[840437, 22201, 5961, 142, 566, "Code",ExpressionUUID->"e09521af-e51f-454e-acee-9ae42f06aee1"]
}, Closed]],
Cell[CellGroupData[{
Cell[846435, 22348, 92, 0, 38, "Subsection",ExpressionUUID->"70fa9bc8-0774-4c9e-b67f-9bd9be81f808"],
Cell[846530, 22350, 9184, 240, 1079, "Code",ExpressionUUID->"0b3e82e1-9782-44ba-a8ab-6a1e680d3561"],
Cell[855717, 22592, 1940, 45, 281, "Code",ExpressionUUID->"908b3a1d-a33f-4549-ac93-a0bb0355f103"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[857706, 22643, 89, 0, 67, "Section",ExpressionUUID->"10b53468-301a-456a-9396-7a1b3738e486"],
Cell[CellGroupData[{
Cell[857820, 22647, 98, 0, 54, "Subsection",ExpressionUUID->"b2ee595b-130d-48ce-a5ad-4e7ffb538f90"],
Cell[857921, 22649, 265, 6, 35, "Text",ExpressionUUID->"4a653e1c-eeb8-4064-b854-41501624a19e"],
Cell[858189, 22657, 1005, 24, 167, "Code",ExpressionUUID->"0667504c-8c02-4916-b24b-3bb7bdc2cf26"],
Cell[859197, 22683, 5254, 136, 604, "Code",ExpressionUUID->"c18d8317-ae43-4b7f-9da1-c3475f665d7f"],
Cell[864454, 22821, 3443, 77, 414, "Code",ExpressionUUID->"f0a82410-c535-47a8-948b-b21f94c95228"],
Cell[867900, 22900, 368, 9, 52, "Code",ExpressionUUID->"431662f0-2ecf-4999-bdfc-bca5f77db73b"],
Cell[868271, 22911, 5281, 131, 832, "Code",ExpressionUUID->"d4e68e5a-9602-4a4a-b440-17bbf19734d3"],
Cell[873555, 23044, 2211, 52, 357, "Code",ExpressionUUID->"d0c74681-d7be-4943-bdb3-e78c2132a41c"],
Cell[875769, 23098, 2059, 50, 376, "Code",ExpressionUUID->"486130dd-c91f-4635-9d83-1f3bd0aa6d73"],
Cell[877831, 23150, 542, 13, 72, "Code",ExpressionUUID->"2ef881ff-eeb2-4d0c-9acd-87ee573cc4ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[878410, 23168, 100, 0, 38, "Subsection",ExpressionUUID->"f701af98-4573-44ce-bac9-9fc083472d2e"],
Cell[878513, 23170, 764, 19, 129, "Code",ExpressionUUID->"c0491458-47ed-4612-a97b-234998126d75"],
Cell[879280, 23191, 2682, 69, 338, "Code",ExpressionUUID->"258d98b1-596a-4353-9b32-6afddc286af6"],
Cell[881965, 23262, 9536, 237, 1041, "Code",ExpressionUUID->"709fcb9c-08e6-4684-8f67-e39cfa498891"]
}, Closed]],
Cell[CellGroupData[{
Cell[891538, 23504, 100, 0, 38, "Subsection",ExpressionUUID->"4db4413b-f7dc-4706-99a3-cf121de60a27"],
Cell[891641, 23506, 1521, 40, 186, "Code",ExpressionUUID->"2e74c90e-7216-4c80-a620-b44fa8b68c06"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[893211, 23552, 78, 0, 67, "Section",ExpressionUUID->"a9b198e2-0767-48ac-b046-37bfd6084753"],
Cell[893292, 23554, 234, 7, 91, "Code",ExpressionUUID->"6ac1cc87-b8a2-416f-a747-62b9785cc946"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[893575, 23567, 115, 0, 69, "Chapter",ExpressionUUID->"5a8b7cb0-9767-43dc-919a-1b0b391815a1"],
Cell[893693, 23569, 195, 5, 52, "Code",ExpressionUUID->"98df5a5e-b331-47c0-a64d-450182746a38"],
Cell[CellGroupData[{
Cell[893913, 23578, 79, 0, 67, "Section",ExpressionUUID->"16e15631-03bf-4f3b-84e8-5ce1094fae6f"],
Cell[893995, 23580, 285, 7, 52, "Code",ExpressionUUID->"1b53aab2-8ab9-4869-815e-f8ca47d5626d"],
Cell[894283, 23589, 505, 10, 91, "Code",ExpressionUUID->"1fefdd08-ab81-4b03-aab1-7eb192b442a9"],
Cell[894791, 23601, 459, 9, 72, "Code",ExpressionUUID->"01f2dfa2-986a-4b95-b411-c600af854f43"],
Cell[895253, 23612, 823, 17, 129, "Code",ExpressionUUID->"1628f146-b3f2-4871-bccb-7a246f33a144"],
Cell[896079, 23631, 606, 14, 110, "Code",ExpressionUUID->"3583d2b8-2386-46fa-a348-7dcfe3f512df"],
Cell[896688, 23647, 1500, 30, 262, "Code",ExpressionUUID->"3ff9fc51-09cf-453d-a299-be49bcf9329b"],
Cell[898191, 23679, 434, 9, 91, "Code",ExpressionUUID->"d62e8121-9030-4117-ab10-ad253752b5f3"],
Cell[898628, 23690, 1109, 20, 72, "Code",ExpressionUUID->"1326e1f2-3d36-452d-b09e-f5500f477896"],
Cell[899740, 23712, 718, 16, 110, "Code",ExpressionUUID->"e202e950-0e01-4ee2-b0a7-7987cb7e108a"],
Cell[900461, 23730, 667, 14, 72, "Code",ExpressionUUID->"a41bca8b-ac3e-4dd2-80ef-a0645cc5e5ce"],
Cell[901131, 23746, 705, 14, 72, "Code",ExpressionUUID->"e799e302-d427-4098-ae4e-27d9b8a64416"],
Cell[901839, 23762, 732, 16, 129, "Code",ExpressionUUID->"83f8a726-efe7-4110-956b-bca1ea384930"],
Cell[902574, 23780, 333, 8, 52, "Code",ExpressionUUID->"b00e700d-c96f-4280-83fe-545c8730966e"],
Cell[902910, 23790, 307, 7, 52, "Code",ExpressionUUID->"b96f0aa2-0ec5-4585-8f0e-6182e0b65a44"]
}, Closed]],
Cell[CellGroupData[{
Cell[903254, 23802, 80, 0, 53, "Section",ExpressionUUID->"56132169-b503-4fec-ac0f-c8748f365dff"],
Cell[903337, 23804, 451, 12, 129, "Code",ExpressionUUID->"894e1c8a-8944-40bb-90d1-36044a26fac1"]
}, Closed]],
Cell[CellGroupData[{
Cell[903825, 23821, 96, 0, 53, "Section",ExpressionUUID->"8f3272e9-4365-46de-a73d-baaa4bf6be97"],
Cell[CellGroupData[{
Cell[903946, 23825, 87, 0, 54, "Subsection",ExpressionUUID->"8042e1d7-58bf-4a7b-a670-9ef09527dcb3"],
Cell[904036, 23827, 1893, 52, 319, "Code",ExpressionUUID->"5cbe27db-29f9-4589-9b2f-70c34eebdd51"]
}, Closed]],
Cell[CellGroupData[{
Cell[905966, 23884, 88, 0, 38, "Subsection",ExpressionUUID->"d7afa0ea-aedd-4d0b-a732-2a15366b9ce5"],
Cell[906057, 23886, 425, 11, 72, "Code",ExpressionUUID->"a12658c6-fc84-44c7-9c81-b4290ef02c78"],
Cell[906485, 23899, 3149, 83, 452, "Code",ExpressionUUID->"1387a64e-cae7-4ce2-bf6a-8bfc02903e70"],
Cell[909637, 23984, 295, 7, 52, "Code",ExpressionUUID->"e14ea647-8b7f-4eae-a125-7e43a795f52c"]
}, Closed]],
Cell[CellGroupData[{
Cell[909969, 23996, 91, 0, 38, "Subsection",ExpressionUUID->"f78cb6e6-e17d-4401-b894-51df89a02adc"],
Cell[910063, 23998, 237, 6, 52, "Code",ExpressionUUID->"baf9e747-4ee8-4def-a102-84008b907460"],
Cell[910303, 24006, 4413, 118, 471, "Code",ExpressionUUID->"3ada8627-442a-43cd-ad7d-0325bd932b0d"],
Cell[914719, 24126, 6210, 159, 870, "Code",ExpressionUUID->"086f898d-2364-4076-b6fb-a0b39bc483dd"]
}, Closed]],
Cell[CellGroupData[{
Cell[920966, 24290, 87, 0, 38, "Subsection",ExpressionUUID->"b01f488c-40c8-4d7f-bcc9-c39f7a7d7b49"],
Cell[921056, 24292, 7106, 186, 680, "Code",ExpressionUUID->"df661cfd-ae0b-44c1-87df-b4da3007a4a3"]
}, Closed]],
Cell[CellGroupData[{
Cell[928199, 24483, 87, 0, 38, "Subsection",ExpressionUUID->"6510e159-2aac-4e44-9dbd-d54c70d36be2"],
Cell[928289, 24485, 233, 6, 52, "Code",ExpressionUUID->"74c13a49-d78f-409b-8cae-4ac581199fcd"],
Cell[928525, 24493, 7757, 190, 661, "Code",ExpressionUUID->"6e9c878d-02b2-4132-96ce-e8e66b822e4d"],
Cell[CellGroupData[{
Cell[936307, 24687, 340, 9, 30, "Input",ExpressionUUID->"f325d84e-8b1c-4353-a4a7-917cc61544f8"],
Cell[936650, 24698, 12411, 234, 371, "Output",ExpressionUUID->"1f728f58-b5cf-4dcd-9c96-a958c65cdd0a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[949110, 24938, 92, 0, 38, "Subsection",ExpressionUUID->"fd1f8c0d-8cd5-461d-a1bd-d14c472d45ea"],
Cell[949205, 24940, 694, 16, 205, "Code",ExpressionUUID->"cc6d6793-71d5-4e73-a480-e2ed6df579d6"],
Cell[949902, 24958, 6216, 155, 680, "Code",ExpressionUUID->"66b5c38e-1661-4fc1-b3bb-2fc79ff6c3b9"],
Cell[956121, 25115, 4808, 121, 529, "Code",ExpressionUUID->"2869981c-2b14-4190-aed6-de2de17b05d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[960966, 25241, 101, 0, 38, "Subsection",ExpressionUUID->"cb5c27e0-90ba-44a2-b621-549bf08cb232"],
Cell[961070, 25243, 2174, 54, 281, "Code",ExpressionUUID->"57ab66e2-d535-4e5f-873b-1254aa74d5b1"],
Cell[963247, 25299, 17817, 472, 330, "Code",ExpressionUUID->"cd236665-00fe-4e3a-9fdf-305558993417"],
Cell[981067, 25773, 636, 17, 52, "Code",ExpressionUUID->"95b63ef6-b4a3-43c9-b577-8fb55e64adf9"]
}, Closed]],
Cell[CellGroupData[{
Cell[981740, 25795, 96, 0, 38, "Subsection",ExpressionUUID->"998277f7-e77f-481f-8d03-2b6fa89387fe"],
Cell[981839, 25797, 5327, 133, 661, "Code",ExpressionUUID->"6d9f25cf-a57b-4e21-b29e-24805f43aeb2"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[987215, 25936, 89, 0, 67, "Section",ExpressionUUID->"8d4f30a8-a409-44fe-b780-83c10cec7e9b"],
Cell[CellGroupData[{
Cell[987329, 25940, 95, 0, 54, "Subsection",ExpressionUUID->"6f76eeb7-891c-4cae-a5ac-4d64373ec68b"],
Cell[987427, 25942, 6510, 175, 699, "Code",ExpressionUUID->"8b6d2599-7eb7-438a-b947-9bbf95f936df"]
}, Closed]],
Cell[CellGroupData[{
Cell[993974, 26122, 91, 0, 38, "Subsection",ExpressionUUID->"dec2368f-a749-4c44-a564-d70303dc01af"],
Cell[994068, 26124, 361, 10, 110, "Code",ExpressionUUID->"e213c25d-86fb-46a8-bed2-db9cf4e00176"],
Cell[994432, 26136, 411, 11, 72, "Code",ExpressionUUID->"27d9771e-c049-4d42-a05c-24f8aa65a359"],
Cell[994846, 26149, 700, 19, 91, "Code",ExpressionUUID->"66c6af84-bc13-4556-a25c-ac0eee18a80e"],
Cell[995549, 26170, 794, 23, 91, "Code",ExpressionUUID->"47d6ebf0-41ed-4fd2-a121-92c8d4158186"],
Cell[996346, 26195, 1902, 45, 357, "Code",ExpressionUUID->"e3d20717-cfab-4fd4-94cc-77bbf18c68a2"],
Cell[998251, 26242, 886, 24, 73, "Code",ExpressionUUID->"05eabc87-f7ca-4d0e-a158-8006e36d6e80"]
}, Closed]],
Cell[CellGroupData[{
Cell[999174, 26271, 88, 0, 38, "Subsection",ExpressionUUID->"008e53a8-5623-407a-9675-c744ce0ab295"],
Cell[999265, 26273, 370, 10, 110, "Code",ExpressionUUID->"a68525df-606e-4297-940a-d09936ce44be"],
Cell[999638, 26285, 1858, 52, 319, "Code",ExpressionUUID->"a41842bb-7ef0-4b81-9c7f-a828a6df6b23"],
Cell[1001499, 26339, 1213, 34, 224, "Code",ExpressionUUID->"7e7cf3b5-db57-47e6-b6f1-c9d792881662"],
Cell[1002715, 26375, 1691, 47, 262, "Code",ExpressionUUID->"32dba077-af38-4697-a75e-e017261a5468"]
}, Closed]],
Cell[CellGroupData[{
Cell[1004443, 26427, 94, 0, 38, "Subsection",ExpressionUUID->"6f211a16-7cb3-4d11-8722-57c01e19ff28"],
Cell[1004540, 26429, 5137, 140, 452, "Code",ExpressionUUID->"e0bb26a5-0f3a-4748-bdb8-8c1e259c4ad9"]
}, Closed]],
Cell[CellGroupData[{
Cell[1009714, 26574, 92, 0, 38, "Subsection",ExpressionUUID->"5e6046c4-fd4b-49b0-b1c7-87f237226e76"],
Cell[1009809, 26576, 6313, 172, 452, "Code",ExpressionUUID->"e7f3cc07-671b-468a-9786-71394929206f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1016171, 26754, 86, 0, 67, "Section",ExpressionUUID->"98b2155f-f47a-45bb-8fb7-4b6980d727fb"],
Cell[CellGroupData[{
Cell[1016282, 26758, 89, 0, 54, "Subsection",ExpressionUUID->"1a122a28-32d1-4a27-90a9-a1528906c8c0"],
Cell[1016374, 26760, 1093, 27, 91, "Code",ExpressionUUID->"5a272a8d-b37b-477f-a024-ee728ce8ca49"],
Cell[1017470, 26789, 1053, 31, 110, "Code",ExpressionUUID->"436752b5-19a3-4653-b22e-045e8ecc949c"],
Cell[1018526, 26822, 2267, 59, 338, "Code",ExpressionUUID->"0f22cd14-f2c6-414f-9ee6-3d896ed5cfcc"]
}, Closed]],
Cell[CellGroupData[{
Cell[1020830, 26886, 96, 0, 38, "Subsection",ExpressionUUID->"1b1feca1-c8a4-423e-ae6b-4d0242a1bd3f"],
Cell[1020929, 26888, 2740, 73, 224, "Code",ExpressionUUID->"9464b0a7-e384-4ae5-9af9-43a3e239bf92"],
Cell[1023672, 26963, 1840, 48, 243, "Code",ExpressionUUID->"abf836c2-0f64-4bef-a1a6-0c0029eb66ae"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1025561, 27017, 95, 0, 67, "Section",ExpressionUUID->"3a223d20-fd00-4681-bb34-d0d67287ba5a"],
Cell[CellGroupData[{
Cell[1025681, 27021, 127, 0, 54, "Subsection",ExpressionUUID->"cdb85ba4-fcc4-4d47-bebf-3f42f4284e57"],
Cell[1025811, 27023, 6678, 177, 718, "Code",ExpressionUUID->"86475d85-9a3f-4989-ab14-6a6455a4d8d0"]
}, Closed]],
Cell[CellGroupData[{
Cell[1032526, 27205, 93, 0, 38, "Subsection",ExpressionUUID->"1d7082d6-fe88-456f-bbee-ec48dcda4795"],
Cell[1032622, 27207, 1767, 45, 243, "Code",ExpressionUUID->"ca0f7ad4-e8c5-4fea-9b64-31539691bedf"],
Cell[1034392, 27254, 582, 16, 52, "Code",ExpressionUUID->"cfb7c4f0-3b35-4092-90e4-9984e62ee69e"],
Cell[1034977, 27272, 3307, 85, 357, "Code",ExpressionUUID->"e70b599e-0dc7-4b77-90cb-c44e0bd5f445"],
Cell[1038287, 27359, 4780, 124, 452, "Code",ExpressionUUID->"259c06f9-b5bb-48b2-afaf-c7bb31292e07"]
}, Closed]],
Cell[CellGroupData[{
Cell[1043104, 27488, 91, 0, 38, "Subsection",ExpressionUUID->"dd9e02cb-40b4-433d-a473-cad5e51bf190"],
Cell[1043198, 27490, 3045, 79, 414, "Code",ExpressionUUID->"3a4da837-219c-420b-a290-9b7db76205bb"]
}, Closed]],
Cell[CellGroupData[{
Cell[1046280, 27574, 86, 0, 38, "Subsection",ExpressionUUID->"db3d8342-8d8e-4752-845f-f3b764a796fb"],
Cell[1046369, 27576, 1553, 42, 186, "Code",ExpressionUUID->"63f61e01-74fc-40c9-934b-7d2c34da1f73"]
}, Closed]],
Cell[CellGroupData[{
Cell[1047959, 27623, 123, 0, 38, "Subsection",ExpressionUUID->"f1b04111-e3f7-4385-ae18-0bacd274da7e"],
Cell[1048085, 27625, 842, 23, 91, "Code",ExpressionUUID->"5d8708fa-cf07-414f-8126-ace947a8f0e8"]
}, Closed]],
Cell[CellGroupData[{
Cell[1048964, 27653, 96, 0, 38, "Subsection",ExpressionUUID->"e536bc67-8dac-439c-9b64-663526d4bf1d"],
Cell[1049063, 27655, 5866, 155, 566, "Code",ExpressionUUID->"a2cd35af-dbac-415c-ae7f-35b450b3699e"],
Cell[1054932, 27812, 3445, 89, 357, "Code",ExpressionUUID->"26dfeae0-7a2f-41aa-bacf-11526f181415"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1058426, 27907, 78, 0, 67, "Section",ExpressionUUID->"6ab0f874-d874-4315-8392-aaaebc7a8913"],
Cell[1058507, 27909, 234, 7, 91, "Code",ExpressionUUID->"4519db25-af3d-4f88-99eb-7a5b387934cb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1058790, 27922, 93, 0, 58, "Chapter",ExpressionUUID->"4e117d75-efd0-4fbb-9ab5-54303adb6974"],
Cell[1058886, 27924, 196, 5, 52, "Code",ExpressionUUID->"e14f7419-89e3-4783-9198-ab1d0a95c1b9"],
Cell[CellGroupData[{
Cell[1059107, 27933, 79, 0, 67, "Section",ExpressionUUID->"6034899b-68aa-4037-b918-fc414503a490"],
Cell[1059189, 27935, 1211, 30, 186, "Code",ExpressionUUID->"2cf6321a-3523-4f5a-99bf-84c1ba3196fa"],
Cell[1060403, 27967, 1201, 35, 167, "Code",ExpressionUUID->"3cf79f62-832f-451c-8e21-d75c262e0170"],
Cell[1061607, 28004, 398, 8, 91, "Code",ExpressionUUID->"fec2b29f-ac6a-4f61-b198-9ada7c9935e9"],
Cell[1062008, 28014, 278, 7, 52, "Code",ExpressionUUID->"e7452ff7-4a1b-486f-843f-361c8ea558a0"],
Cell[1062289, 28023, 214, 6, 52, "Code",ExpressionUUID->"cf1d931e-3134-4092-81f5-c5441756f7b2"]
}, Closed]],
Cell[CellGroupData[{
Cell[1062540, 28034, 80, 0, 53, "Section",ExpressionUUID->"0f8e42dc-5f2f-405a-b230-3b1f2fd2dc43"],
Cell[1062623, 28036, 537, 14, 148, "Code",ExpressionUUID->"3298ad3f-9fe1-4719-b9e0-a54361a0a019"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1063197, 28055, 148, 2, 67, "Section",ExpressionUUID->"264055aa-257e-4658-8e88-c7a82054dd0f"],
Cell[CellGroupData[{
Cell[1063370, 28061, 127, 0, 54, "Subsection",ExpressionUUID->"7e843407-88e6-42e6-a7fb-0d90b64f932d"],
Cell[1063500, 28063, 248, 5, 104, "Text",ExpressionUUID->"3c8f0d77-a834-4ff0-a98b-0ccc57bb7626"],
Cell[CellGroupData[{
Cell[1063773, 28072, 106, 0, 45, "Subsubsection",ExpressionUUID->"8f2974af-9693-44a6-a41d-17072b63e33a"],
Cell[1063882, 28074, 771, 19, 92, "Code",ExpressionUUID->"6387c029-df63-4edd-b7e3-3056df6c830d"]
}, Closed]],
Cell[CellGroupData[{
Cell[1064690, 28098, 104, 0, 37, "Subsubsection",ExpressionUUID->"47b141fa-f895-4edc-9dc0-60d87ba3481f"],
Cell[1064797, 28100, 1334, 38, 149, "Code",ExpressionUUID->"55d9b51b-8c8e-45e9-80b1-d9728ad7b809"],
Cell[1066134, 28140, 757, 19, 73, "Code",ExpressionUUID->"bedb12a1-7d57-4b9c-bb71-022f3622a323"]
}, Closed]],
Cell[CellGroupData[{
Cell[1066928, 28164, 104, 0, 37, "Subsubsection",ExpressionUUID->"471a8712-097f-4fd1-9518-c829ff43a184"],
Cell[1067035, 28166, 1165, 30, 148, "Code",ExpressionUUID->"7bef82e9-a442-4fc9-9df7-6bb3f6419724"],
Cell[1068203, 28198, 991, 26, 93, "Code",ExpressionUUID->"9f080a33-4031-4746-8c35-5a48091cda2e"],
Cell[1069197, 28226, 1575, 42, 167, "Code",ExpressionUUID->"b683f485-8aa7-4d61-89c2-98979f63c150"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070821, 28274, 96, 0, 54, "Subsection",ExpressionUUID->"7263b898-abdd-4b74-bf48-8401d5363cb9"],
Cell[1070920, 28276, 3570, 101, 262, "Code",ExpressionUUID->"987031ba-a53c-4f11-a7e4-bcab36c04d09"],
Cell[1074493, 28379, 4116, 101, 586, "Code",ExpressionUUID->"4df19566-3b22-4178-9883-43f4afe6f65f"],
Cell[1078612, 28482, 434, 11, 72, "Code",ExpressionUUID->"de3fa5c5-4fe7-44c1-9fce-7504364314cd"]
}, Closed]],
Cell[CellGroupData[{
Cell[1079083, 28498, 98, 0, 38, "Subsection",ExpressionUUID->"180e9407-b203-4d4a-b001-0e9302edeaaf"],
Cell[1079184, 28500, 1717, 50, 167, "Code",ExpressionUUID->"585395bf-edd0-4922-be90-cf3dd9378903"],
Cell[1080904, 28552, 4581, 112, 456, "Code",ExpressionUUID->"475af5c7-e1c8-4503-81f4-44acaf834316"],
Cell[1085488, 28666, 6700, 166, 832, "Code",ExpressionUUID->"36d192d4-81bd-4706-ab71-98a7e1bbfd1e"],
Cell[1092191, 28834, 1424, 40, 227, "Code",ExpressionUUID->"511a5fd5-e74f-4419-bf75-8c444440d319"]
}, Closed]],
Cell[CellGroupData[{
Cell[1093652, 28879, 96, 0, 38, "Subsection",ExpressionUUID->"999e6f09-3bf2-414c-b3fc-0ebce2164f6e"],
Cell[1093751, 28881, 3019, 72, 321, "Code",ExpressionUUID->"4527b9b8-c59b-40fe-ac46-8b880e1d29af"],
Cell[1096773, 28955, 2925, 74, 321, "Code",ExpressionUUID->"f4924735-3c86-45f4-9002-8e27c84aebac"],
Cell[1099701, 29031, 3780, 90, 452, "Code",ExpressionUUID->"e79c1415-df48-46af-8022-f0d3c2db1b85"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1103530, 29127, 91, 0, 67, "Section",ExpressionUUID->"efa38391-2c04-4250-a9ce-7f700dc2e797"],
Cell[1103624, 29129, 739, 22, 111, "Code",ExpressionUUID->"c7b53360-ca73-4d43-a302-859f8055c0aa"],
Cell[CellGroupData[{
Cell[1104388, 29155, 92, 0, 54, "Subsection",ExpressionUUID->"30beb824-411a-4da9-84d9-c2ad57b065a2"],
Cell[1104483, 29157, 773, 19, 205, "Code",ExpressionUUID->"00471e94-dc32-4777-a8a8-0f8d241e12c6"],
Cell[1105259, 29178, 2949, 79, 206, "Code",ExpressionUUID->"f7ed61a7-d5b6-4982-aed2-6305ff1b8542"],
Cell[1108211, 29259, 4443, 115, 300, "Code",ExpressionUUID->"29f39365-7b52-4650-bc5f-963e58ea8fee"]
}, Closed]],
Cell[CellGroupData[{
Cell[1112691, 29379, 93, 0, 38, "Subsection",ExpressionUUID->"df9a98e6-583c-4e1c-9c5e-9329e90e0833"],
Cell[1112787, 29381, 427, 11, 129, "Code",ExpressionUUID->"3198f40c-a3af-4947-b0c8-cbc49f1ca5e1"],
Cell[1113217, 29394, 661, 18, 72, "Code",ExpressionUUID->"d5b36931-6876-4fc2-b980-03428a6a3ff4"],
Cell[1113881, 29414, 2688, 78, 205, "Code",ExpressionUUID->"cdcda5f5-532c-463b-899d-7293e5112f81"]
}, Closed]],
Cell[CellGroupData[{
Cell[1116606, 29497, 95, 0, 38, "Subsection",ExpressionUUID->"530308ab-a7d1-4a5c-86d3-f3a59af21d94"],
Cell[1116704, 29499, 499, 12, 148, "Code",ExpressionUUID->"3a0274b7-99dd-44b8-a623-57f7847ae21b"],
Cell[1117206, 29513, 3833, 101, 281, "Code",ExpressionUUID->"a0387762-529b-4db0-94ff-175060d25b6c"],
Cell[1121042, 29616, 2945, 80, 245, "Code",ExpressionUUID->"7d80a007-6464-43b3-9ff2-00f8fc73da18"]
}, Closed]],
Cell[CellGroupData[{
Cell[1124024, 29701, 89, 0, 38, "Subsection",ExpressionUUID->"616abae0-499a-42ac-9be1-54c477240393"],
Cell[1124116, 29703, 4780, 131, 323, "Code",ExpressionUUID->"f42eb97c-a4fa-4783-8190-ace6cf11e7a8"]
}, Closed]],
Cell[CellGroupData[{
Cell[1128933, 29839, 90, 0, 38, "Subsection",ExpressionUUID->"21ae16eb-fe33-4b07-a637-3a56dfc61929"],
Cell[1129026, 29841, 486, 11, 148, "Code",ExpressionUUID->"0523084d-4d4b-4a9e-8f47-5ce789825232"],
Cell[1129515, 29854, 3254, 81, 414, "Code",ExpressionUUID->"deeff8cc-8a0f-4967-8ab0-c5317f85b6a6"],
Cell[1132772, 29937, 3175, 78, 376, "Code",ExpressionUUID->"b0a2f514-7a30-4fc7-9f56-23c511b2ec1b"]
}, Closed]],
Cell[CellGroupData[{
Cell[1135984, 30020, 97, 0, 38, "Subsection",ExpressionUUID->"97403945-b908-4eb2-a9b5-f7ad77935592"],
Cell[1136084, 30022, 894, 21, 224, "Code",ExpressionUUID->"fa2a1883-8f1a-41a0-8fcd-0125b96b94cb"],
Cell[1136981, 30045, 11700, 303, 911, "Code",ExpressionUUID->"9fdcc750-d6d7-4c7a-9b64-f69b9f25c428"]
}, Closed]],
Cell[CellGroupData[{
Cell[1148718, 30353, 88, 0, 38, "Subsection",ExpressionUUID->"a7a35632-47d0-4342-be07-daf07f198317"],
Cell[1148809, 30355, 305, 8, 91, "Code",ExpressionUUID->"e55e08fa-9d58-42bc-abfc-669219f4ba55"],
Cell[1149117, 30365, 1909, 53, 206, "Code",ExpressionUUID->"7befbc49-c359-459d-b8be-4c03a3cd4cbc"]
}, Closed]],
Cell[CellGroupData[{
Cell[1151063, 30423, 103, 0, 38, "Subsection",ExpressionUUID->"a4787621-3d48-4ae3-bf4b-6c35d714056b"],
Cell[1151169, 30425, 1774, 49, 167, "Code",ExpressionUUID->"321114ce-c1c2-4259-8f91-54d2a33d7886"],
Cell[1152946, 30476, 3422, 96, 243, "Code",ExpressionUUID->"521bc9c5-de42-41dd-9770-013f3407e73d"],
Cell[1156371, 30574, 13937, 342, 984, "Code",ExpressionUUID->"8a094d13-8b63-400b-b159-c54a5fd2ee60"],
Cell[1170311, 30918, 2788, 77, 186, "Code",ExpressionUUID->"bd7f0e33-5f80-428a-989f-41e32909c8eb"],
Cell[1173102, 30997, 1320, 37, 110, "Code",ExpressionUUID->"6430d36e-973c-44ca-a619-b4932b524083"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1174471, 31040, 89, 0, 67, "Section",ExpressionUUID->"39bcb497-250e-4ccc-b5cc-cc185dc1e82d"],
Cell[1174563, 31042, 2283, 54, 395, "Code",ExpressionUUID->"47c05290-a89e-4761-b409-233504c8abb9"],
Cell[1176849, 31098, 5008, 118, 491, "Code",ExpressionUUID->"d0c0ab08-9f98-424a-87df-306817a5ca19"],
Cell[1181860, 31218, 1013, 25, 91, "Code",ExpressionUUID->"e7b9a2a5-9af3-4abb-88e6-2d4aac3f3e98"],
Cell[1182876, 31245, 1495, 41, 205, "Code",ExpressionUUID->"c147ed39-8949-4292-be7f-d71a91d02de6"],
Cell[CellGroupData[{
Cell[1184396, 31290, 91, 0, 45, "Subsubsection",ExpressionUUID->"41036322-b489-45d6-a4a8-c4b2fc22031e"],
Cell[1184490, 31292, 2245, 62, 338, "Code",ExpressionUUID->"1e65c65e-c390-4436-963f-5839fb0f2d6f"]
}, Closed]],
Cell[CellGroupData[{
Cell[1186772, 31359, 139, 1, 37, "Subsubsection",ExpressionUUID->"3158cbe2-8da5-435f-9855-4818c97962d4"],
Cell[1186914, 31362, 3556, 92, 528, "Code",ExpressionUUID->"274ece50-9947-4d40-9f3e-6f0f5cb59add"]
}, Closed]],
Cell[CellGroupData[{
Cell[1190507, 31459, 102, 0, 37, "Subsubsection",ExpressionUUID->"6db47837-09f4-490d-be89-995898f5d632"],
Cell[1190612, 31461, 466, 11, 53, "Code",ExpressionUUID->"d0e19af4-16c0-4707-b689-be8f8be442e5"],
Cell[1191081, 31474, 3437, 91, 319, "Code",ExpressionUUID->"6e3dd12b-7fe5-467b-932c-23f1811752d3"],
Cell[1194521, 31567, 2064, 53, 338, "Code",ExpressionUUID->"911928c9-1776-49d7-bdc1-00a706563c2f"]
}, Closed]],
Cell[CellGroupData[{
Cell[1196622, 31625, 108, 0, 37, "Subsubsection",ExpressionUUID->"b5eb9bb4-86b7-4453-beb7-26e0f999bb46"],
Cell[1196733, 31627, 460, 12, 53, "Code",ExpressionUUID->"fe4484fa-0682-4b65-83b1-f4a7594958f2"],
Cell[1197196, 31641, 3459, 94, 262, "Code",ExpressionUUID->"2cc02ac0-f0e0-44be-9b08-7afececde616"],
Cell[1200658, 31737, 1459, 35, 338, "Code",ExpressionUUID->"55774fc6-ee2b-44c0-b416-d3132ebf9238"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1202166, 31778, 87, 0, 53, "Section",ExpressionUUID->"22a76298-877b-4f82-9647-137ccd36f0ff"],
Cell[CellGroupData[{
Cell[1202278, 31782, 86, 0, 54, "Subsection",ExpressionUUID->"9b4913e6-0b4a-4a08-b7bd-200f6bcf7b03"],
Cell[1202367, 31784, 2455, 66, 224, "Code",ExpressionUUID->"9c7cd542-6131-452b-a5de-cf7d5aa66e54"]
}, Closed]],
Cell[CellGroupData[{
Cell[1204859, 31855, 90, 0, 38, "Subsection",ExpressionUUID->"1fce4c2a-3ad9-4a55-ae6b-d262e817dc47"],
Cell[1204952, 31857, 10043, 251, 946, "Code",ExpressionUUID->"d9f2b206-4c71-4b1c-8742-4ad30c3dcdbb"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1215044, 32114, 91, 0, 53, "Section",ExpressionUUID->"3efe547a-f1ac-4ffb-8444-d2b58598608b"],
Cell[CellGroupData[{
Cell[1215160, 32118, 91, 0, 54, "Subsection",ExpressionUUID->"030fa22e-305a-45e4-b6b6-74f92db2e39b"],
Cell[1215254, 32120, 936, 24, 167, "Code",ExpressionUUID->"580bd134-fe46-489b-be75-aa685f0fcd22"]
}, Closed]],
Cell[CellGroupData[{
Cell[1216227, 32149, 94, 0, 38, "Subsection",ExpressionUUID->"50641957-a476-4037-b81c-36b8b7785b1b"],
Cell[1216324, 32151, 8643, 212, 965, "Code",ExpressionUUID->"da7e70de-e1ad-47c1-a2cd-4e867b497a28"]
}, Closed]],
Cell[CellGroupData[{
Cell[1225004, 32368, 92, 0, 38, "Subsection",ExpressionUUID->"5b510d4d-6e9e-491c-94a7-2f5adbe7cbe3"],
Cell[1225099, 32370, 3445, 89, 357, "Code",ExpressionUUID->"ae3899bf-8cac-4133-92d1-6bd45cffea08"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1228593, 32465, 78, 0, 67, "Section",ExpressionUUID->"a1375d4f-d82f-42cf-9eb3-c76f31ebb81e"],
Cell[1228674, 32467, 234, 7, 91, "Code",ExpressionUUID->"0f6f47a1-2047-4f40-a070-b68748d33cb4"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

